/*
 * Teamwork Projects API
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * API version: 
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package pmv1

import (
	"encoding/json"
)

// InlineResponse200120Workload struct for InlineResponse200120Workload
type InlineResponse200120Workload struct {
	AvatarUrl *string `json:"avatar-url,omitempty"`
	CompanyId *string `json:"companyId,omitempty"`
	CompanyName *string `json:"companyName,omitempty"`
	NumberOfActiveTasks *string `json:"numberOfActiveTasks,omitempty"`
	NumberOfCompletedTasks *string `json:"numberOfCompletedTasks,omitempty"`
	NumberOfProjects *string `json:"numberOfProjects,omitempty"`
	NumberOfTasks *string `json:"numberOfTasks,omitempty"`
	NumberOfUsers *string `json:"numberOfUsers,omitempty"`
	PercentageLoggedTime *string `json:"percentageLoggedTime,omitempty"`
	PercentageMarkedComplete *string `json:"percentageMarkedComplete,omitempty"`
	PercentageStillActive *string `json:"percentageStillActive,omitempty"`
	ProjectId *string `json:"projectId,omitempty"`
	ProjectName *string `json:"projectName,omitempty"`
	TotalEstimatedTime *string `json:"totalEstimatedTime,omitempty"`
	TotalLoggedTime *string `json:"totalLoggedTime,omitempty"`
	TotalMarkedComplete *string `json:"totalMarkedComplete,omitempty"`
	TotalStillActive *string `json:"totalStillActive,omitempty"`
	UserCompanyId *string `json:"userCompanyId,omitempty"`
	UserCompanyName *string `json:"userCompanyName,omitempty"`
	UserFirstName *string `json:"userFirstName,omitempty"`
	UserId *string `json:"userId,omitempty"`
	UserLastName *string `json:"userLastName,omitempty"`
}

// NewInlineResponse200120Workload instantiates a new InlineResponse200120Workload object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewInlineResponse200120Workload() *InlineResponse200120Workload {
	this := InlineResponse200120Workload{}
	return &this
}

// NewInlineResponse200120WorkloadWithDefaults instantiates a new InlineResponse200120Workload object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewInlineResponse200120WorkloadWithDefaults() *InlineResponse200120Workload {
	this := InlineResponse200120Workload{}
	return &this
}

// GetAvatarUrl returns the AvatarUrl field value if set, zero value otherwise.
func (o *InlineResponse200120Workload) GetAvatarUrl() string {
	if o == nil || o.AvatarUrl == nil {
		var ret string
		return ret
	}
	return *o.AvatarUrl
}

// GetAvatarUrlOk returns a tuple with the AvatarUrl field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InlineResponse200120Workload) GetAvatarUrlOk() (*string, bool) {
	if o == nil || o.AvatarUrl == nil {
		return nil, false
	}
	return o.AvatarUrl, true
}

// HasAvatarUrl returns a boolean if a field has been set.
func (o *InlineResponse200120Workload) HasAvatarUrl() bool {
	if o != nil && o.AvatarUrl != nil {
		return true
	}

	return false
}

// SetAvatarUrl gets a reference to the given string and assigns it to the AvatarUrl field.
func (o *InlineResponse200120Workload) SetAvatarUrl(v string) {
	o.AvatarUrl = &v
}

// GetCompanyId returns the CompanyId field value if set, zero value otherwise.
func (o *InlineResponse200120Workload) GetCompanyId() string {
	if o == nil || o.CompanyId == nil {
		var ret string
		return ret
	}
	return *o.CompanyId
}

// GetCompanyIdOk returns a tuple with the CompanyId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InlineResponse200120Workload) GetCompanyIdOk() (*string, bool) {
	if o == nil || o.CompanyId == nil {
		return nil, false
	}
	return o.CompanyId, true
}

// HasCompanyId returns a boolean if a field has been set.
func (o *InlineResponse200120Workload) HasCompanyId() bool {
	if o != nil && o.CompanyId != nil {
		return true
	}

	return false
}

// SetCompanyId gets a reference to the given string and assigns it to the CompanyId field.
func (o *InlineResponse200120Workload) SetCompanyId(v string) {
	o.CompanyId = &v
}

// GetCompanyName returns the CompanyName field value if set, zero value otherwise.
func (o *InlineResponse200120Workload) GetCompanyName() string {
	if o == nil || o.CompanyName == nil {
		var ret string
		return ret
	}
	return *o.CompanyName
}

// GetCompanyNameOk returns a tuple with the CompanyName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InlineResponse200120Workload) GetCompanyNameOk() (*string, bool) {
	if o == nil || o.CompanyName == nil {
		return nil, false
	}
	return o.CompanyName, true
}

// HasCompanyName returns a boolean if a field has been set.
func (o *InlineResponse200120Workload) HasCompanyName() bool {
	if o != nil && o.CompanyName != nil {
		return true
	}

	return false
}

// SetCompanyName gets a reference to the given string and assigns it to the CompanyName field.
func (o *InlineResponse200120Workload) SetCompanyName(v string) {
	o.CompanyName = &v
}

// GetNumberOfActiveTasks returns the NumberOfActiveTasks field value if set, zero value otherwise.
func (o *InlineResponse200120Workload) GetNumberOfActiveTasks() string {
	if o == nil || o.NumberOfActiveTasks == nil {
		var ret string
		return ret
	}
	return *o.NumberOfActiveTasks
}

// GetNumberOfActiveTasksOk returns a tuple with the NumberOfActiveTasks field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InlineResponse200120Workload) GetNumberOfActiveTasksOk() (*string, bool) {
	if o == nil || o.NumberOfActiveTasks == nil {
		return nil, false
	}
	return o.NumberOfActiveTasks, true
}

// HasNumberOfActiveTasks returns a boolean if a field has been set.
func (o *InlineResponse200120Workload) HasNumberOfActiveTasks() bool {
	if o != nil && o.NumberOfActiveTasks != nil {
		return true
	}

	return false
}

// SetNumberOfActiveTasks gets a reference to the given string and assigns it to the NumberOfActiveTasks field.
func (o *InlineResponse200120Workload) SetNumberOfActiveTasks(v string) {
	o.NumberOfActiveTasks = &v
}

// GetNumberOfCompletedTasks returns the NumberOfCompletedTasks field value if set, zero value otherwise.
func (o *InlineResponse200120Workload) GetNumberOfCompletedTasks() string {
	if o == nil || o.NumberOfCompletedTasks == nil {
		var ret string
		return ret
	}
	return *o.NumberOfCompletedTasks
}

// GetNumberOfCompletedTasksOk returns a tuple with the NumberOfCompletedTasks field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InlineResponse200120Workload) GetNumberOfCompletedTasksOk() (*string, bool) {
	if o == nil || o.NumberOfCompletedTasks == nil {
		return nil, false
	}
	return o.NumberOfCompletedTasks, true
}

// HasNumberOfCompletedTasks returns a boolean if a field has been set.
func (o *InlineResponse200120Workload) HasNumberOfCompletedTasks() bool {
	if o != nil && o.NumberOfCompletedTasks != nil {
		return true
	}

	return false
}

// SetNumberOfCompletedTasks gets a reference to the given string and assigns it to the NumberOfCompletedTasks field.
func (o *InlineResponse200120Workload) SetNumberOfCompletedTasks(v string) {
	o.NumberOfCompletedTasks = &v
}

// GetNumberOfProjects returns the NumberOfProjects field value if set, zero value otherwise.
func (o *InlineResponse200120Workload) GetNumberOfProjects() string {
	if o == nil || o.NumberOfProjects == nil {
		var ret string
		return ret
	}
	return *o.NumberOfProjects
}

// GetNumberOfProjectsOk returns a tuple with the NumberOfProjects field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InlineResponse200120Workload) GetNumberOfProjectsOk() (*string, bool) {
	if o == nil || o.NumberOfProjects == nil {
		return nil, false
	}
	return o.NumberOfProjects, true
}

// HasNumberOfProjects returns a boolean if a field has been set.
func (o *InlineResponse200120Workload) HasNumberOfProjects() bool {
	if o != nil && o.NumberOfProjects != nil {
		return true
	}

	return false
}

// SetNumberOfProjects gets a reference to the given string and assigns it to the NumberOfProjects field.
func (o *InlineResponse200120Workload) SetNumberOfProjects(v string) {
	o.NumberOfProjects = &v
}

// GetNumberOfTasks returns the NumberOfTasks field value if set, zero value otherwise.
func (o *InlineResponse200120Workload) GetNumberOfTasks() string {
	if o == nil || o.NumberOfTasks == nil {
		var ret string
		return ret
	}
	return *o.NumberOfTasks
}

// GetNumberOfTasksOk returns a tuple with the NumberOfTasks field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InlineResponse200120Workload) GetNumberOfTasksOk() (*string, bool) {
	if o == nil || o.NumberOfTasks == nil {
		return nil, false
	}
	return o.NumberOfTasks, true
}

// HasNumberOfTasks returns a boolean if a field has been set.
func (o *InlineResponse200120Workload) HasNumberOfTasks() bool {
	if o != nil && o.NumberOfTasks != nil {
		return true
	}

	return false
}

// SetNumberOfTasks gets a reference to the given string and assigns it to the NumberOfTasks field.
func (o *InlineResponse200120Workload) SetNumberOfTasks(v string) {
	o.NumberOfTasks = &v
}

// GetNumberOfUsers returns the NumberOfUsers field value if set, zero value otherwise.
func (o *InlineResponse200120Workload) GetNumberOfUsers() string {
	if o == nil || o.NumberOfUsers == nil {
		var ret string
		return ret
	}
	return *o.NumberOfUsers
}

// GetNumberOfUsersOk returns a tuple with the NumberOfUsers field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InlineResponse200120Workload) GetNumberOfUsersOk() (*string, bool) {
	if o == nil || o.NumberOfUsers == nil {
		return nil, false
	}
	return o.NumberOfUsers, true
}

// HasNumberOfUsers returns a boolean if a field has been set.
func (o *InlineResponse200120Workload) HasNumberOfUsers() bool {
	if o != nil && o.NumberOfUsers != nil {
		return true
	}

	return false
}

// SetNumberOfUsers gets a reference to the given string and assigns it to the NumberOfUsers field.
func (o *InlineResponse200120Workload) SetNumberOfUsers(v string) {
	o.NumberOfUsers = &v
}

// GetPercentageLoggedTime returns the PercentageLoggedTime field value if set, zero value otherwise.
func (o *InlineResponse200120Workload) GetPercentageLoggedTime() string {
	if o == nil || o.PercentageLoggedTime == nil {
		var ret string
		return ret
	}
	return *o.PercentageLoggedTime
}

// GetPercentageLoggedTimeOk returns a tuple with the PercentageLoggedTime field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InlineResponse200120Workload) GetPercentageLoggedTimeOk() (*string, bool) {
	if o == nil || o.PercentageLoggedTime == nil {
		return nil, false
	}
	return o.PercentageLoggedTime, true
}

// HasPercentageLoggedTime returns a boolean if a field has been set.
func (o *InlineResponse200120Workload) HasPercentageLoggedTime() bool {
	if o != nil && o.PercentageLoggedTime != nil {
		return true
	}

	return false
}

// SetPercentageLoggedTime gets a reference to the given string and assigns it to the PercentageLoggedTime field.
func (o *InlineResponse200120Workload) SetPercentageLoggedTime(v string) {
	o.PercentageLoggedTime = &v
}

// GetPercentageMarkedComplete returns the PercentageMarkedComplete field value if set, zero value otherwise.
func (o *InlineResponse200120Workload) GetPercentageMarkedComplete() string {
	if o == nil || o.PercentageMarkedComplete == nil {
		var ret string
		return ret
	}
	return *o.PercentageMarkedComplete
}

// GetPercentageMarkedCompleteOk returns a tuple with the PercentageMarkedComplete field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InlineResponse200120Workload) GetPercentageMarkedCompleteOk() (*string, bool) {
	if o == nil || o.PercentageMarkedComplete == nil {
		return nil, false
	}
	return o.PercentageMarkedComplete, true
}

// HasPercentageMarkedComplete returns a boolean if a field has been set.
func (o *InlineResponse200120Workload) HasPercentageMarkedComplete() bool {
	if o != nil && o.PercentageMarkedComplete != nil {
		return true
	}

	return false
}

// SetPercentageMarkedComplete gets a reference to the given string and assigns it to the PercentageMarkedComplete field.
func (o *InlineResponse200120Workload) SetPercentageMarkedComplete(v string) {
	o.PercentageMarkedComplete = &v
}

// GetPercentageStillActive returns the PercentageStillActive field value if set, zero value otherwise.
func (o *InlineResponse200120Workload) GetPercentageStillActive() string {
	if o == nil || o.PercentageStillActive == nil {
		var ret string
		return ret
	}
	return *o.PercentageStillActive
}

// GetPercentageStillActiveOk returns a tuple with the PercentageStillActive field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InlineResponse200120Workload) GetPercentageStillActiveOk() (*string, bool) {
	if o == nil || o.PercentageStillActive == nil {
		return nil, false
	}
	return o.PercentageStillActive, true
}

// HasPercentageStillActive returns a boolean if a field has been set.
func (o *InlineResponse200120Workload) HasPercentageStillActive() bool {
	if o != nil && o.PercentageStillActive != nil {
		return true
	}

	return false
}

// SetPercentageStillActive gets a reference to the given string and assigns it to the PercentageStillActive field.
func (o *InlineResponse200120Workload) SetPercentageStillActive(v string) {
	o.PercentageStillActive = &v
}

// GetProjectId returns the ProjectId field value if set, zero value otherwise.
func (o *InlineResponse200120Workload) GetProjectId() string {
	if o == nil || o.ProjectId == nil {
		var ret string
		return ret
	}
	return *o.ProjectId
}

// GetProjectIdOk returns a tuple with the ProjectId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InlineResponse200120Workload) GetProjectIdOk() (*string, bool) {
	if o == nil || o.ProjectId == nil {
		return nil, false
	}
	return o.ProjectId, true
}

// HasProjectId returns a boolean if a field has been set.
func (o *InlineResponse200120Workload) HasProjectId() bool {
	if o != nil && o.ProjectId != nil {
		return true
	}

	return false
}

// SetProjectId gets a reference to the given string and assigns it to the ProjectId field.
func (o *InlineResponse200120Workload) SetProjectId(v string) {
	o.ProjectId = &v
}

// GetProjectName returns the ProjectName field value if set, zero value otherwise.
func (o *InlineResponse200120Workload) GetProjectName() string {
	if o == nil || o.ProjectName == nil {
		var ret string
		return ret
	}
	return *o.ProjectName
}

// GetProjectNameOk returns a tuple with the ProjectName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InlineResponse200120Workload) GetProjectNameOk() (*string, bool) {
	if o == nil || o.ProjectName == nil {
		return nil, false
	}
	return o.ProjectName, true
}

// HasProjectName returns a boolean if a field has been set.
func (o *InlineResponse200120Workload) HasProjectName() bool {
	if o != nil && o.ProjectName != nil {
		return true
	}

	return false
}

// SetProjectName gets a reference to the given string and assigns it to the ProjectName field.
func (o *InlineResponse200120Workload) SetProjectName(v string) {
	o.ProjectName = &v
}

// GetTotalEstimatedTime returns the TotalEstimatedTime field value if set, zero value otherwise.
func (o *InlineResponse200120Workload) GetTotalEstimatedTime() string {
	if o == nil || o.TotalEstimatedTime == nil {
		var ret string
		return ret
	}
	return *o.TotalEstimatedTime
}

// GetTotalEstimatedTimeOk returns a tuple with the TotalEstimatedTime field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InlineResponse200120Workload) GetTotalEstimatedTimeOk() (*string, bool) {
	if o == nil || o.TotalEstimatedTime == nil {
		return nil, false
	}
	return o.TotalEstimatedTime, true
}

// HasTotalEstimatedTime returns a boolean if a field has been set.
func (o *InlineResponse200120Workload) HasTotalEstimatedTime() bool {
	if o != nil && o.TotalEstimatedTime != nil {
		return true
	}

	return false
}

// SetTotalEstimatedTime gets a reference to the given string and assigns it to the TotalEstimatedTime field.
func (o *InlineResponse200120Workload) SetTotalEstimatedTime(v string) {
	o.TotalEstimatedTime = &v
}

// GetTotalLoggedTime returns the TotalLoggedTime field value if set, zero value otherwise.
func (o *InlineResponse200120Workload) GetTotalLoggedTime() string {
	if o == nil || o.TotalLoggedTime == nil {
		var ret string
		return ret
	}
	return *o.TotalLoggedTime
}

// GetTotalLoggedTimeOk returns a tuple with the TotalLoggedTime field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InlineResponse200120Workload) GetTotalLoggedTimeOk() (*string, bool) {
	if o == nil || o.TotalLoggedTime == nil {
		return nil, false
	}
	return o.TotalLoggedTime, true
}

// HasTotalLoggedTime returns a boolean if a field has been set.
func (o *InlineResponse200120Workload) HasTotalLoggedTime() bool {
	if o != nil && o.TotalLoggedTime != nil {
		return true
	}

	return false
}

// SetTotalLoggedTime gets a reference to the given string and assigns it to the TotalLoggedTime field.
func (o *InlineResponse200120Workload) SetTotalLoggedTime(v string) {
	o.TotalLoggedTime = &v
}

// GetTotalMarkedComplete returns the TotalMarkedComplete field value if set, zero value otherwise.
func (o *InlineResponse200120Workload) GetTotalMarkedComplete() string {
	if o == nil || o.TotalMarkedComplete == nil {
		var ret string
		return ret
	}
	return *o.TotalMarkedComplete
}

// GetTotalMarkedCompleteOk returns a tuple with the TotalMarkedComplete field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InlineResponse200120Workload) GetTotalMarkedCompleteOk() (*string, bool) {
	if o == nil || o.TotalMarkedComplete == nil {
		return nil, false
	}
	return o.TotalMarkedComplete, true
}

// HasTotalMarkedComplete returns a boolean if a field has been set.
func (o *InlineResponse200120Workload) HasTotalMarkedComplete() bool {
	if o != nil && o.TotalMarkedComplete != nil {
		return true
	}

	return false
}

// SetTotalMarkedComplete gets a reference to the given string and assigns it to the TotalMarkedComplete field.
func (o *InlineResponse200120Workload) SetTotalMarkedComplete(v string) {
	o.TotalMarkedComplete = &v
}

// GetTotalStillActive returns the TotalStillActive field value if set, zero value otherwise.
func (o *InlineResponse200120Workload) GetTotalStillActive() string {
	if o == nil || o.TotalStillActive == nil {
		var ret string
		return ret
	}
	return *o.TotalStillActive
}

// GetTotalStillActiveOk returns a tuple with the TotalStillActive field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InlineResponse200120Workload) GetTotalStillActiveOk() (*string, bool) {
	if o == nil || o.TotalStillActive == nil {
		return nil, false
	}
	return o.TotalStillActive, true
}

// HasTotalStillActive returns a boolean if a field has been set.
func (o *InlineResponse200120Workload) HasTotalStillActive() bool {
	if o != nil && o.TotalStillActive != nil {
		return true
	}

	return false
}

// SetTotalStillActive gets a reference to the given string and assigns it to the TotalStillActive field.
func (o *InlineResponse200120Workload) SetTotalStillActive(v string) {
	o.TotalStillActive = &v
}

// GetUserCompanyId returns the UserCompanyId field value if set, zero value otherwise.
func (o *InlineResponse200120Workload) GetUserCompanyId() string {
	if o == nil || o.UserCompanyId == nil {
		var ret string
		return ret
	}
	return *o.UserCompanyId
}

// GetUserCompanyIdOk returns a tuple with the UserCompanyId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InlineResponse200120Workload) GetUserCompanyIdOk() (*string, bool) {
	if o == nil || o.UserCompanyId == nil {
		return nil, false
	}
	return o.UserCompanyId, true
}

// HasUserCompanyId returns a boolean if a field has been set.
func (o *InlineResponse200120Workload) HasUserCompanyId() bool {
	if o != nil && o.UserCompanyId != nil {
		return true
	}

	return false
}

// SetUserCompanyId gets a reference to the given string and assigns it to the UserCompanyId field.
func (o *InlineResponse200120Workload) SetUserCompanyId(v string) {
	o.UserCompanyId = &v
}

// GetUserCompanyName returns the UserCompanyName field value if set, zero value otherwise.
func (o *InlineResponse200120Workload) GetUserCompanyName() string {
	if o == nil || o.UserCompanyName == nil {
		var ret string
		return ret
	}
	return *o.UserCompanyName
}

// GetUserCompanyNameOk returns a tuple with the UserCompanyName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InlineResponse200120Workload) GetUserCompanyNameOk() (*string, bool) {
	if o == nil || o.UserCompanyName == nil {
		return nil, false
	}
	return o.UserCompanyName, true
}

// HasUserCompanyName returns a boolean if a field has been set.
func (o *InlineResponse200120Workload) HasUserCompanyName() bool {
	if o != nil && o.UserCompanyName != nil {
		return true
	}

	return false
}

// SetUserCompanyName gets a reference to the given string and assigns it to the UserCompanyName field.
func (o *InlineResponse200120Workload) SetUserCompanyName(v string) {
	o.UserCompanyName = &v
}

// GetUserFirstName returns the UserFirstName field value if set, zero value otherwise.
func (o *InlineResponse200120Workload) GetUserFirstName() string {
	if o == nil || o.UserFirstName == nil {
		var ret string
		return ret
	}
	return *o.UserFirstName
}

// GetUserFirstNameOk returns a tuple with the UserFirstName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InlineResponse200120Workload) GetUserFirstNameOk() (*string, bool) {
	if o == nil || o.UserFirstName == nil {
		return nil, false
	}
	return o.UserFirstName, true
}

// HasUserFirstName returns a boolean if a field has been set.
func (o *InlineResponse200120Workload) HasUserFirstName() bool {
	if o != nil && o.UserFirstName != nil {
		return true
	}

	return false
}

// SetUserFirstName gets a reference to the given string and assigns it to the UserFirstName field.
func (o *InlineResponse200120Workload) SetUserFirstName(v string) {
	o.UserFirstName = &v
}

// GetUserId returns the UserId field value if set, zero value otherwise.
func (o *InlineResponse200120Workload) GetUserId() string {
	if o == nil || o.UserId == nil {
		var ret string
		return ret
	}
	return *o.UserId
}

// GetUserIdOk returns a tuple with the UserId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InlineResponse200120Workload) GetUserIdOk() (*string, bool) {
	if o == nil || o.UserId == nil {
		return nil, false
	}
	return o.UserId, true
}

// HasUserId returns a boolean if a field has been set.
func (o *InlineResponse200120Workload) HasUserId() bool {
	if o != nil && o.UserId != nil {
		return true
	}

	return false
}

// SetUserId gets a reference to the given string and assigns it to the UserId field.
func (o *InlineResponse200120Workload) SetUserId(v string) {
	o.UserId = &v
}

// GetUserLastName returns the UserLastName field value if set, zero value otherwise.
func (o *InlineResponse200120Workload) GetUserLastName() string {
	if o == nil || o.UserLastName == nil {
		var ret string
		return ret
	}
	return *o.UserLastName
}

// GetUserLastNameOk returns a tuple with the UserLastName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InlineResponse200120Workload) GetUserLastNameOk() (*string, bool) {
	if o == nil || o.UserLastName == nil {
		return nil, false
	}
	return o.UserLastName, true
}

// HasUserLastName returns a boolean if a field has been set.
func (o *InlineResponse200120Workload) HasUserLastName() bool {
	if o != nil && o.UserLastName != nil {
		return true
	}

	return false
}

// SetUserLastName gets a reference to the given string and assigns it to the UserLastName field.
func (o *InlineResponse200120Workload) SetUserLastName(v string) {
	o.UserLastName = &v
}

func (o InlineResponse200120Workload) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.AvatarUrl != nil {
		toSerialize["avatar-url"] = o.AvatarUrl
	}
	if o.CompanyId != nil {
		toSerialize["companyId"] = o.CompanyId
	}
	if o.CompanyName != nil {
		toSerialize["companyName"] = o.CompanyName
	}
	if o.NumberOfActiveTasks != nil {
		toSerialize["numberOfActiveTasks"] = o.NumberOfActiveTasks
	}
	if o.NumberOfCompletedTasks != nil {
		toSerialize["numberOfCompletedTasks"] = o.NumberOfCompletedTasks
	}
	if o.NumberOfProjects != nil {
		toSerialize["numberOfProjects"] = o.NumberOfProjects
	}
	if o.NumberOfTasks != nil {
		toSerialize["numberOfTasks"] = o.NumberOfTasks
	}
	if o.NumberOfUsers != nil {
		toSerialize["numberOfUsers"] = o.NumberOfUsers
	}
	if o.PercentageLoggedTime != nil {
		toSerialize["percentageLoggedTime"] = o.PercentageLoggedTime
	}
	if o.PercentageMarkedComplete != nil {
		toSerialize["percentageMarkedComplete"] = o.PercentageMarkedComplete
	}
	if o.PercentageStillActive != nil {
		toSerialize["percentageStillActive"] = o.PercentageStillActive
	}
	if o.ProjectId != nil {
		toSerialize["projectId"] = o.ProjectId
	}
	if o.ProjectName != nil {
		toSerialize["projectName"] = o.ProjectName
	}
	if o.TotalEstimatedTime != nil {
		toSerialize["totalEstimatedTime"] = o.TotalEstimatedTime
	}
	if o.TotalLoggedTime != nil {
		toSerialize["totalLoggedTime"] = o.TotalLoggedTime
	}
	if o.TotalMarkedComplete != nil {
		toSerialize["totalMarkedComplete"] = o.TotalMarkedComplete
	}
	if o.TotalStillActive != nil {
		toSerialize["totalStillActive"] = o.TotalStillActive
	}
	if o.UserCompanyId != nil {
		toSerialize["userCompanyId"] = o.UserCompanyId
	}
	if o.UserCompanyName != nil {
		toSerialize["userCompanyName"] = o.UserCompanyName
	}
	if o.UserFirstName != nil {
		toSerialize["userFirstName"] = o.UserFirstName
	}
	if o.UserId != nil {
		toSerialize["userId"] = o.UserId
	}
	if o.UserLastName != nil {
		toSerialize["userLastName"] = o.UserLastName
	}
	return json.Marshal(toSerialize)
}

type NullableInlineResponse200120Workload struct {
	value *InlineResponse200120Workload
	isSet bool
}

func (v NullableInlineResponse200120Workload) Get() *InlineResponse200120Workload {
	return v.value
}

func (v *NullableInlineResponse200120Workload) Set(val *InlineResponse200120Workload) {
	v.value = val
	v.isSet = true
}

func (v NullableInlineResponse200120Workload) IsSet() bool {
	return v.isSet
}

func (v *NullableInlineResponse200120Workload) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableInlineResponse200120Workload(val *InlineResponse200120Workload) *NullableInlineResponse200120Workload {
	return &NullableInlineResponse200120Workload{value: val, isSet: true}
}

func (v NullableInlineResponse200120Workload) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableInlineResponse200120Workload) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


