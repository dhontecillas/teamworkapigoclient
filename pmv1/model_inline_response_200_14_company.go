/*
 * Teamwork Projects API
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * API version: 
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package pmv1

import (
	"encoding/json"
)

// InlineResponse20014Company struct for InlineResponse20014Company
type InlineResponse20014Company struct {
	Id *string `json:"id,omitempty"`
	IsOwner *string `json:"is-owner,omitempty"`
	Name *string `json:"name,omitempty"`
}

// NewInlineResponse20014Company instantiates a new InlineResponse20014Company object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewInlineResponse20014Company() *InlineResponse20014Company {
	this := InlineResponse20014Company{}
	return &this
}

// NewInlineResponse20014CompanyWithDefaults instantiates a new InlineResponse20014Company object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewInlineResponse20014CompanyWithDefaults() *InlineResponse20014Company {
	this := InlineResponse20014Company{}
	return &this
}

// GetId returns the Id field value if set, zero value otherwise.
func (o *InlineResponse20014Company) GetId() string {
	if o == nil || o.Id == nil {
		var ret string
		return ret
	}
	return *o.Id
}

// GetIdOk returns a tuple with the Id field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InlineResponse20014Company) GetIdOk() (*string, bool) {
	if o == nil || o.Id == nil {
		return nil, false
	}
	return o.Id, true
}

// HasId returns a boolean if a field has been set.
func (o *InlineResponse20014Company) HasId() bool {
	if o != nil && o.Id != nil {
		return true
	}

	return false
}

// SetId gets a reference to the given string and assigns it to the Id field.
func (o *InlineResponse20014Company) SetId(v string) {
	o.Id = &v
}

// GetIsOwner returns the IsOwner field value if set, zero value otherwise.
func (o *InlineResponse20014Company) GetIsOwner() string {
	if o == nil || o.IsOwner == nil {
		var ret string
		return ret
	}
	return *o.IsOwner
}

// GetIsOwnerOk returns a tuple with the IsOwner field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InlineResponse20014Company) GetIsOwnerOk() (*string, bool) {
	if o == nil || o.IsOwner == nil {
		return nil, false
	}
	return o.IsOwner, true
}

// HasIsOwner returns a boolean if a field has been set.
func (o *InlineResponse20014Company) HasIsOwner() bool {
	if o != nil && o.IsOwner != nil {
		return true
	}

	return false
}

// SetIsOwner gets a reference to the given string and assigns it to the IsOwner field.
func (o *InlineResponse20014Company) SetIsOwner(v string) {
	o.IsOwner = &v
}

// GetName returns the Name field value if set, zero value otherwise.
func (o *InlineResponse20014Company) GetName() string {
	if o == nil || o.Name == nil {
		var ret string
		return ret
	}
	return *o.Name
}

// GetNameOk returns a tuple with the Name field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InlineResponse20014Company) GetNameOk() (*string, bool) {
	if o == nil || o.Name == nil {
		return nil, false
	}
	return o.Name, true
}

// HasName returns a boolean if a field has been set.
func (o *InlineResponse20014Company) HasName() bool {
	if o != nil && o.Name != nil {
		return true
	}

	return false
}

// SetName gets a reference to the given string and assigns it to the Name field.
func (o *InlineResponse20014Company) SetName(v string) {
	o.Name = &v
}

func (o InlineResponse20014Company) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.Id != nil {
		toSerialize["id"] = o.Id
	}
	if o.IsOwner != nil {
		toSerialize["is-owner"] = o.IsOwner
	}
	if o.Name != nil {
		toSerialize["name"] = o.Name
	}
	return json.Marshal(toSerialize)
}

type NullableInlineResponse20014Company struct {
	value *InlineResponse20014Company
	isSet bool
}

func (v NullableInlineResponse20014Company) Get() *InlineResponse20014Company {
	return v.value
}

func (v *NullableInlineResponse20014Company) Set(val *InlineResponse20014Company) {
	v.value = val
	v.isSet = true
}

func (v NullableInlineResponse20014Company) IsSet() bool {
	return v.isSet
}

func (v *NullableInlineResponse20014Company) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableInlineResponse20014Company(val *InlineResponse20014Company) *NullableInlineResponse20014Company {
	return &NullableInlineResponse20014Company{value: val, isSet: true}
}

func (v NullableInlineResponse20014Company) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableInlineResponse20014Company) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


