/*
 * Teamwork Projects API
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * API version: 
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package pmv1

import (
	"encoding/json"
)

// InlineResponse2003Owner struct for InlineResponse2003Owner
type InlineResponse2003Owner struct {
	FirstName *string `json:"first-name,omitempty"`
	Id *string `json:"id,omitempty"`
	LastName *string `json:"last-name,omitempty"`
}

// NewInlineResponse2003Owner instantiates a new InlineResponse2003Owner object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewInlineResponse2003Owner() *InlineResponse2003Owner {
	this := InlineResponse2003Owner{}
	return &this
}

// NewInlineResponse2003OwnerWithDefaults instantiates a new InlineResponse2003Owner object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewInlineResponse2003OwnerWithDefaults() *InlineResponse2003Owner {
	this := InlineResponse2003Owner{}
	return &this
}

// GetFirstName returns the FirstName field value if set, zero value otherwise.
func (o *InlineResponse2003Owner) GetFirstName() string {
	if o == nil || o.FirstName == nil {
		var ret string
		return ret
	}
	return *o.FirstName
}

// GetFirstNameOk returns a tuple with the FirstName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InlineResponse2003Owner) GetFirstNameOk() (*string, bool) {
	if o == nil || o.FirstName == nil {
		return nil, false
	}
	return o.FirstName, true
}

// HasFirstName returns a boolean if a field has been set.
func (o *InlineResponse2003Owner) HasFirstName() bool {
	if o != nil && o.FirstName != nil {
		return true
	}

	return false
}

// SetFirstName gets a reference to the given string and assigns it to the FirstName field.
func (o *InlineResponse2003Owner) SetFirstName(v string) {
	o.FirstName = &v
}

// GetId returns the Id field value if set, zero value otherwise.
func (o *InlineResponse2003Owner) GetId() string {
	if o == nil || o.Id == nil {
		var ret string
		return ret
	}
	return *o.Id
}

// GetIdOk returns a tuple with the Id field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InlineResponse2003Owner) GetIdOk() (*string, bool) {
	if o == nil || o.Id == nil {
		return nil, false
	}
	return o.Id, true
}

// HasId returns a boolean if a field has been set.
func (o *InlineResponse2003Owner) HasId() bool {
	if o != nil && o.Id != nil {
		return true
	}

	return false
}

// SetId gets a reference to the given string and assigns it to the Id field.
func (o *InlineResponse2003Owner) SetId(v string) {
	o.Id = &v
}

// GetLastName returns the LastName field value if set, zero value otherwise.
func (o *InlineResponse2003Owner) GetLastName() string {
	if o == nil || o.LastName == nil {
		var ret string
		return ret
	}
	return *o.LastName
}

// GetLastNameOk returns a tuple with the LastName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InlineResponse2003Owner) GetLastNameOk() (*string, bool) {
	if o == nil || o.LastName == nil {
		return nil, false
	}
	return o.LastName, true
}

// HasLastName returns a boolean if a field has been set.
func (o *InlineResponse2003Owner) HasLastName() bool {
	if o != nil && o.LastName != nil {
		return true
	}

	return false
}

// SetLastName gets a reference to the given string and assigns it to the LastName field.
func (o *InlineResponse2003Owner) SetLastName(v string) {
	o.LastName = &v
}

func (o InlineResponse2003Owner) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.FirstName != nil {
		toSerialize["first-name"] = o.FirstName
	}
	if o.Id != nil {
		toSerialize["id"] = o.Id
	}
	if o.LastName != nil {
		toSerialize["last-name"] = o.LastName
	}
	return json.Marshal(toSerialize)
}

type NullableInlineResponse2003Owner struct {
	value *InlineResponse2003Owner
	isSet bool
}

func (v NullableInlineResponse2003Owner) Get() *InlineResponse2003Owner {
	return v.value
}

func (v *NullableInlineResponse2003Owner) Set(val *InlineResponse2003Owner) {
	v.value = val
	v.isSet = true
}

func (v NullableInlineResponse2003Owner) IsSet() bool {
	return v.isSet
}

func (v *NullableInlineResponse2003Owner) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableInlineResponse2003Owner(val *InlineResponse2003Owner) *NullableInlineResponse2003Owner {
	return &NullableInlineResponse2003Owner{value: val, isSet: true}
}

func (v NullableInlineResponse2003Owner) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableInlineResponse2003Owner) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


