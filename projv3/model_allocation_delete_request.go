/*
 * Teamwork.com Projects API
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * API version: 3.0
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package projv3

import (
	"encoding/json"
)

// AllocationDeleteRequest DeleteRequest contains some options while removing an allocation.
type AllocationDeleteRequest struct {
	HardDelete *bool `json:"hardDelete,omitempty"`
}

// NewAllocationDeleteRequest instantiates a new AllocationDeleteRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewAllocationDeleteRequest() *AllocationDeleteRequest {
	this := AllocationDeleteRequest{}
	return &this
}

// NewAllocationDeleteRequestWithDefaults instantiates a new AllocationDeleteRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewAllocationDeleteRequestWithDefaults() *AllocationDeleteRequest {
	this := AllocationDeleteRequest{}
	return &this
}

// GetHardDelete returns the HardDelete field value if set, zero value otherwise.
func (o *AllocationDeleteRequest) GetHardDelete() bool {
	if o == nil || o.HardDelete == nil {
		var ret bool
		return ret
	}
	return *o.HardDelete
}

// GetHardDeleteOk returns a tuple with the HardDelete field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AllocationDeleteRequest) GetHardDeleteOk() (*bool, bool) {
	if o == nil || o.HardDelete == nil {
		return nil, false
	}
	return o.HardDelete, true
}

// HasHardDelete returns a boolean if a field has been set.
func (o *AllocationDeleteRequest) HasHardDelete() bool {
	if o != nil && o.HardDelete != nil {
		return true
	}

	return false
}

// SetHardDelete gets a reference to the given bool and assigns it to the HardDelete field.
func (o *AllocationDeleteRequest) SetHardDelete(v bool) {
	o.HardDelete = &v
}

func (o AllocationDeleteRequest) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.HardDelete != nil {
		toSerialize["hardDelete"] = o.HardDelete
	}
	return json.Marshal(toSerialize)
}

type NullableAllocationDeleteRequest struct {
	value *AllocationDeleteRequest
	isSet bool
}

func (v NullableAllocationDeleteRequest) Get() *AllocationDeleteRequest {
	return v.value
}

func (v *NullableAllocationDeleteRequest) Set(val *AllocationDeleteRequest) {
	v.value = val
	v.isSet = true
}

func (v NullableAllocationDeleteRequest) IsSet() bool {
	return v.isSet
}

func (v *NullableAllocationDeleteRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableAllocationDeleteRequest(val *AllocationDeleteRequest) *NullableAllocationDeleteRequest {
	return &NullableAllocationDeleteRequest{value: val, isSet: true}
}

func (v NullableAllocationDeleteRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableAllocationDeleteRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


