/*
 * Teamwork Projects API
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * API version: 
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package pmv1

import (
	"encoding/json"
)

// InlineResponse2016 struct for InlineResponse2016
type InlineResponse2016 struct {
	STATUS *string `json:"STATUS,omitempty"`
	AffectedTaskIds *string `json:"affectedTaskIds,omitempty"`
	Id *string `json:"id,omitempty"`
}

// NewInlineResponse2016 instantiates a new InlineResponse2016 object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewInlineResponse2016() *InlineResponse2016 {
	this := InlineResponse2016{}
	return &this
}

// NewInlineResponse2016WithDefaults instantiates a new InlineResponse2016 object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewInlineResponse2016WithDefaults() *InlineResponse2016 {
	this := InlineResponse2016{}
	return &this
}

// GetSTATUS returns the STATUS field value if set, zero value otherwise.
func (o *InlineResponse2016) GetSTATUS() string {
	if o == nil || o.STATUS == nil {
		var ret string
		return ret
	}
	return *o.STATUS
}

// GetSTATUSOk returns a tuple with the STATUS field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InlineResponse2016) GetSTATUSOk() (*string, bool) {
	if o == nil || o.STATUS == nil {
		return nil, false
	}
	return o.STATUS, true
}

// HasSTATUS returns a boolean if a field has been set.
func (o *InlineResponse2016) HasSTATUS() bool {
	if o != nil && o.STATUS != nil {
		return true
	}

	return false
}

// SetSTATUS gets a reference to the given string and assigns it to the STATUS field.
func (o *InlineResponse2016) SetSTATUS(v string) {
	o.STATUS = &v
}

// GetAffectedTaskIds returns the AffectedTaskIds field value if set, zero value otherwise.
func (o *InlineResponse2016) GetAffectedTaskIds() string {
	if o == nil || o.AffectedTaskIds == nil {
		var ret string
		return ret
	}
	return *o.AffectedTaskIds
}

// GetAffectedTaskIdsOk returns a tuple with the AffectedTaskIds field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InlineResponse2016) GetAffectedTaskIdsOk() (*string, bool) {
	if o == nil || o.AffectedTaskIds == nil {
		return nil, false
	}
	return o.AffectedTaskIds, true
}

// HasAffectedTaskIds returns a boolean if a field has been set.
func (o *InlineResponse2016) HasAffectedTaskIds() bool {
	if o != nil && o.AffectedTaskIds != nil {
		return true
	}

	return false
}

// SetAffectedTaskIds gets a reference to the given string and assigns it to the AffectedTaskIds field.
func (o *InlineResponse2016) SetAffectedTaskIds(v string) {
	o.AffectedTaskIds = &v
}

// GetId returns the Id field value if set, zero value otherwise.
func (o *InlineResponse2016) GetId() string {
	if o == nil || o.Id == nil {
		var ret string
		return ret
	}
	return *o.Id
}

// GetIdOk returns a tuple with the Id field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InlineResponse2016) GetIdOk() (*string, bool) {
	if o == nil || o.Id == nil {
		return nil, false
	}
	return o.Id, true
}

// HasId returns a boolean if a field has been set.
func (o *InlineResponse2016) HasId() bool {
	if o != nil && o.Id != nil {
		return true
	}

	return false
}

// SetId gets a reference to the given string and assigns it to the Id field.
func (o *InlineResponse2016) SetId(v string) {
	o.Id = &v
}

func (o InlineResponse2016) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.STATUS != nil {
		toSerialize["STATUS"] = o.STATUS
	}
	if o.AffectedTaskIds != nil {
		toSerialize["affectedTaskIds"] = o.AffectedTaskIds
	}
	if o.Id != nil {
		toSerialize["id"] = o.Id
	}
	return json.Marshal(toSerialize)
}

type NullableInlineResponse2016 struct {
	value *InlineResponse2016
	isSet bool
}

func (v NullableInlineResponse2016) Get() *InlineResponse2016 {
	return v.value
}

func (v *NullableInlineResponse2016) Set(val *InlineResponse2016) {
	v.value = val
	v.isSet = true
}

func (v NullableInlineResponse2016) IsSet() bool {
	return v.isSet
}

func (v *NullableInlineResponse2016) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableInlineResponse2016(val *InlineResponse2016) *NullableInlineResponse2016 {
	return &NullableInlineResponse2016{value: val, isSet: true}
}

func (v NullableInlineResponse2016) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableInlineResponse2016) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


