/*
 * Teamwork.com Projects API
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * API version: 3.0
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package projv3

import (
	"encoding/json"
)

// PayloadUserGroups UserGroups are common lists for storing users, companies and teams ids together.
type PayloadUserGroups struct {
	CompanyIds *PayloadNullableInt64Slice `json:"companyIds,omitempty"`
	TeamIds *PayloadNullableInt64Slice `json:"teamIds,omitempty"`
	UserIds *PayloadNullableInt64Slice `json:"userIds,omitempty"`
}

// NewPayloadUserGroups instantiates a new PayloadUserGroups object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewPayloadUserGroups() *PayloadUserGroups {
	this := PayloadUserGroups{}
	return &this
}

// NewPayloadUserGroupsWithDefaults instantiates a new PayloadUserGroups object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewPayloadUserGroupsWithDefaults() *PayloadUserGroups {
	this := PayloadUserGroups{}
	return &this
}

// GetCompanyIds returns the CompanyIds field value if set, zero value otherwise.
func (o *PayloadUserGroups) GetCompanyIds() PayloadNullableInt64Slice {
	if o == nil || o.CompanyIds == nil {
		var ret PayloadNullableInt64Slice
		return ret
	}
	return *o.CompanyIds
}

// GetCompanyIdsOk returns a tuple with the CompanyIds field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PayloadUserGroups) GetCompanyIdsOk() (*PayloadNullableInt64Slice, bool) {
	if o == nil || o.CompanyIds == nil {
		return nil, false
	}
	return o.CompanyIds, true
}

// HasCompanyIds returns a boolean if a field has been set.
func (o *PayloadUserGroups) HasCompanyIds() bool {
	if o != nil && o.CompanyIds != nil {
		return true
	}

	return false
}

// SetCompanyIds gets a reference to the given PayloadNullableInt64Slice and assigns it to the CompanyIds field.
func (o *PayloadUserGroups) SetCompanyIds(v PayloadNullableInt64Slice) {
	o.CompanyIds = &v
}

// GetTeamIds returns the TeamIds field value if set, zero value otherwise.
func (o *PayloadUserGroups) GetTeamIds() PayloadNullableInt64Slice {
	if o == nil || o.TeamIds == nil {
		var ret PayloadNullableInt64Slice
		return ret
	}
	return *o.TeamIds
}

// GetTeamIdsOk returns a tuple with the TeamIds field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PayloadUserGroups) GetTeamIdsOk() (*PayloadNullableInt64Slice, bool) {
	if o == nil || o.TeamIds == nil {
		return nil, false
	}
	return o.TeamIds, true
}

// HasTeamIds returns a boolean if a field has been set.
func (o *PayloadUserGroups) HasTeamIds() bool {
	if o != nil && o.TeamIds != nil {
		return true
	}

	return false
}

// SetTeamIds gets a reference to the given PayloadNullableInt64Slice and assigns it to the TeamIds field.
func (o *PayloadUserGroups) SetTeamIds(v PayloadNullableInt64Slice) {
	o.TeamIds = &v
}

// GetUserIds returns the UserIds field value if set, zero value otherwise.
func (o *PayloadUserGroups) GetUserIds() PayloadNullableInt64Slice {
	if o == nil || o.UserIds == nil {
		var ret PayloadNullableInt64Slice
		return ret
	}
	return *o.UserIds
}

// GetUserIdsOk returns a tuple with the UserIds field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PayloadUserGroups) GetUserIdsOk() (*PayloadNullableInt64Slice, bool) {
	if o == nil || o.UserIds == nil {
		return nil, false
	}
	return o.UserIds, true
}

// HasUserIds returns a boolean if a field has been set.
func (o *PayloadUserGroups) HasUserIds() bool {
	if o != nil && o.UserIds != nil {
		return true
	}

	return false
}

// SetUserIds gets a reference to the given PayloadNullableInt64Slice and assigns it to the UserIds field.
func (o *PayloadUserGroups) SetUserIds(v PayloadNullableInt64Slice) {
	o.UserIds = &v
}

func (o PayloadUserGroups) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.CompanyIds != nil {
		toSerialize["companyIds"] = o.CompanyIds
	}
	if o.TeamIds != nil {
		toSerialize["teamIds"] = o.TeamIds
	}
	if o.UserIds != nil {
		toSerialize["userIds"] = o.UserIds
	}
	return json.Marshal(toSerialize)
}

type NullablePayloadUserGroups struct {
	value *PayloadUserGroups
	isSet bool
}

func (v NullablePayloadUserGroups) Get() *PayloadUserGroups {
	return v.value
}

func (v *NullablePayloadUserGroups) Set(val *PayloadUserGroups) {
	v.value = val
	v.isSet = true
}

func (v NullablePayloadUserGroups) IsSet() bool {
	return v.isSet
}

func (v *NullablePayloadUserGroups) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullablePayloadUserGroups(val *PayloadUserGroups) *NullablePayloadUserGroups {
	return &NullablePayloadUserGroups{value: val, isSet: true}
}

func (v NullablePayloadUserGroups) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullablePayloadUserGroups) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


