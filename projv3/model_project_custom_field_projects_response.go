/*
 * Teamwork.com Projects API
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * API version: 3.0
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package projv3

import (
	"encoding/json"
)

// ProjectCustomFieldProjectsResponse CustomFieldProjectsResponse contains information about a group of project custom field values.
type ProjectCustomFieldProjectsResponse struct {
	CustomfieldProjects *[]ViewCustomFieldProject `json:"customfieldProjects,omitempty"`
	Included *ProjectCustomFieldProjectsResponseIncluded `json:"included,omitempty"`
	Meta *ViewMeta `json:"meta,omitempty"`
}

// NewProjectCustomFieldProjectsResponse instantiates a new ProjectCustomFieldProjectsResponse object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewProjectCustomFieldProjectsResponse() *ProjectCustomFieldProjectsResponse {
	this := ProjectCustomFieldProjectsResponse{}
	return &this
}

// NewProjectCustomFieldProjectsResponseWithDefaults instantiates a new ProjectCustomFieldProjectsResponse object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewProjectCustomFieldProjectsResponseWithDefaults() *ProjectCustomFieldProjectsResponse {
	this := ProjectCustomFieldProjectsResponse{}
	return &this
}

// GetCustomfieldProjects returns the CustomfieldProjects field value if set, zero value otherwise.
func (o *ProjectCustomFieldProjectsResponse) GetCustomfieldProjects() []ViewCustomFieldProject {
	if o == nil || o.CustomfieldProjects == nil {
		var ret []ViewCustomFieldProject
		return ret
	}
	return *o.CustomfieldProjects
}

// GetCustomfieldProjectsOk returns a tuple with the CustomfieldProjects field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ProjectCustomFieldProjectsResponse) GetCustomfieldProjectsOk() (*[]ViewCustomFieldProject, bool) {
	if o == nil || o.CustomfieldProjects == nil {
		return nil, false
	}
	return o.CustomfieldProjects, true
}

// HasCustomfieldProjects returns a boolean if a field has been set.
func (o *ProjectCustomFieldProjectsResponse) HasCustomfieldProjects() bool {
	if o != nil && o.CustomfieldProjects != nil {
		return true
	}

	return false
}

// SetCustomfieldProjects gets a reference to the given []ViewCustomFieldProject and assigns it to the CustomfieldProjects field.
func (o *ProjectCustomFieldProjectsResponse) SetCustomfieldProjects(v []ViewCustomFieldProject) {
	o.CustomfieldProjects = &v
}

// GetIncluded returns the Included field value if set, zero value otherwise.
func (o *ProjectCustomFieldProjectsResponse) GetIncluded() ProjectCustomFieldProjectsResponseIncluded {
	if o == nil || o.Included == nil {
		var ret ProjectCustomFieldProjectsResponseIncluded
		return ret
	}
	return *o.Included
}

// GetIncludedOk returns a tuple with the Included field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ProjectCustomFieldProjectsResponse) GetIncludedOk() (*ProjectCustomFieldProjectsResponseIncluded, bool) {
	if o == nil || o.Included == nil {
		return nil, false
	}
	return o.Included, true
}

// HasIncluded returns a boolean if a field has been set.
func (o *ProjectCustomFieldProjectsResponse) HasIncluded() bool {
	if o != nil && o.Included != nil {
		return true
	}

	return false
}

// SetIncluded gets a reference to the given ProjectCustomFieldProjectsResponseIncluded and assigns it to the Included field.
func (o *ProjectCustomFieldProjectsResponse) SetIncluded(v ProjectCustomFieldProjectsResponseIncluded) {
	o.Included = &v
}

// GetMeta returns the Meta field value if set, zero value otherwise.
func (o *ProjectCustomFieldProjectsResponse) GetMeta() ViewMeta {
	if o == nil || o.Meta == nil {
		var ret ViewMeta
		return ret
	}
	return *o.Meta
}

// GetMetaOk returns a tuple with the Meta field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ProjectCustomFieldProjectsResponse) GetMetaOk() (*ViewMeta, bool) {
	if o == nil || o.Meta == nil {
		return nil, false
	}
	return o.Meta, true
}

// HasMeta returns a boolean if a field has been set.
func (o *ProjectCustomFieldProjectsResponse) HasMeta() bool {
	if o != nil && o.Meta != nil {
		return true
	}

	return false
}

// SetMeta gets a reference to the given ViewMeta and assigns it to the Meta field.
func (o *ProjectCustomFieldProjectsResponse) SetMeta(v ViewMeta) {
	o.Meta = &v
}

func (o ProjectCustomFieldProjectsResponse) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.CustomfieldProjects != nil {
		toSerialize["customfieldProjects"] = o.CustomfieldProjects
	}
	if o.Included != nil {
		toSerialize["included"] = o.Included
	}
	if o.Meta != nil {
		toSerialize["meta"] = o.Meta
	}
	return json.Marshal(toSerialize)
}

type NullableProjectCustomFieldProjectsResponse struct {
	value *ProjectCustomFieldProjectsResponse
	isSet bool
}

func (v NullableProjectCustomFieldProjectsResponse) Get() *ProjectCustomFieldProjectsResponse {
	return v.value
}

func (v *NullableProjectCustomFieldProjectsResponse) Set(val *ProjectCustomFieldProjectsResponse) {
	v.value = val
	v.isSet = true
}

func (v NullableProjectCustomFieldProjectsResponse) IsSet() bool {
	return v.isSet
}

func (v *NullableProjectCustomFieldProjectsResponse) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableProjectCustomFieldProjectsResponse(val *ProjectCustomFieldProjectsResponse) *NullableProjectCustomFieldProjectsResponse {
	return &NullableProjectCustomFieldProjectsResponse{value: val, isSet: true}
}

func (v NullableProjectCustomFieldProjectsResponse) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableProjectCustomFieldProjectsResponse) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


