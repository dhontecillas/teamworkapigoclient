/*
 * Teamwork.com Projects API
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * API version: 3.0
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package projv3

import (
	"encoding/json"
)

// ProjectFeatureOrder FeatureOrder is the payload used to set the project features order as we want to appear in the UI tabs selection
type ProjectFeatureOrder struct {
	Billing *int32 `json:"billing,omitempty"`
	Board *int32 `json:"board,omitempty"`
	Comments *int32 `json:"comments,omitempty"`
	Dashboard *int32 `json:"dashboard,omitempty"`
	Files *int32 `json:"files,omitempty"`
	Gantt *int32 `json:"gantt,omitempty"`
	Links *int32 `json:"links,omitempty"`
	List *int32 `json:"list,omitempty"`
	Messages *int32 `json:"messages,omitempty"`
	Milestones *int32 `json:"milestones,omitempty"`
	Notebooks *int32 `json:"notebooks,omitempty"`
	NumVisibleTabs *int32 `json:"numVisibleTabs,omitempty"`
	People *int32 `json:"people,omitempty"`
	Risks *int32 `json:"risks,omitempty"`
	Settings *int32 `json:"settings,omitempty"`
	Table *int32 `json:"table,omitempty"`
	Time *int32 `json:"time,omitempty"`
}

// NewProjectFeatureOrder instantiates a new ProjectFeatureOrder object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewProjectFeatureOrder() *ProjectFeatureOrder {
	this := ProjectFeatureOrder{}
	return &this
}

// NewProjectFeatureOrderWithDefaults instantiates a new ProjectFeatureOrder object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewProjectFeatureOrderWithDefaults() *ProjectFeatureOrder {
	this := ProjectFeatureOrder{}
	return &this
}

// GetBilling returns the Billing field value if set, zero value otherwise.
func (o *ProjectFeatureOrder) GetBilling() int32 {
	if o == nil || o.Billing == nil {
		var ret int32
		return ret
	}
	return *o.Billing
}

// GetBillingOk returns a tuple with the Billing field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ProjectFeatureOrder) GetBillingOk() (*int32, bool) {
	if o == nil || o.Billing == nil {
		return nil, false
	}
	return o.Billing, true
}

// HasBilling returns a boolean if a field has been set.
func (o *ProjectFeatureOrder) HasBilling() bool {
	if o != nil && o.Billing != nil {
		return true
	}

	return false
}

// SetBilling gets a reference to the given int32 and assigns it to the Billing field.
func (o *ProjectFeatureOrder) SetBilling(v int32) {
	o.Billing = &v
}

// GetBoard returns the Board field value if set, zero value otherwise.
func (o *ProjectFeatureOrder) GetBoard() int32 {
	if o == nil || o.Board == nil {
		var ret int32
		return ret
	}
	return *o.Board
}

// GetBoardOk returns a tuple with the Board field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ProjectFeatureOrder) GetBoardOk() (*int32, bool) {
	if o == nil || o.Board == nil {
		return nil, false
	}
	return o.Board, true
}

// HasBoard returns a boolean if a field has been set.
func (o *ProjectFeatureOrder) HasBoard() bool {
	if o != nil && o.Board != nil {
		return true
	}

	return false
}

// SetBoard gets a reference to the given int32 and assigns it to the Board field.
func (o *ProjectFeatureOrder) SetBoard(v int32) {
	o.Board = &v
}

// GetComments returns the Comments field value if set, zero value otherwise.
func (o *ProjectFeatureOrder) GetComments() int32 {
	if o == nil || o.Comments == nil {
		var ret int32
		return ret
	}
	return *o.Comments
}

// GetCommentsOk returns a tuple with the Comments field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ProjectFeatureOrder) GetCommentsOk() (*int32, bool) {
	if o == nil || o.Comments == nil {
		return nil, false
	}
	return o.Comments, true
}

// HasComments returns a boolean if a field has been set.
func (o *ProjectFeatureOrder) HasComments() bool {
	if o != nil && o.Comments != nil {
		return true
	}

	return false
}

// SetComments gets a reference to the given int32 and assigns it to the Comments field.
func (o *ProjectFeatureOrder) SetComments(v int32) {
	o.Comments = &v
}

// GetDashboard returns the Dashboard field value if set, zero value otherwise.
func (o *ProjectFeatureOrder) GetDashboard() int32 {
	if o == nil || o.Dashboard == nil {
		var ret int32
		return ret
	}
	return *o.Dashboard
}

// GetDashboardOk returns a tuple with the Dashboard field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ProjectFeatureOrder) GetDashboardOk() (*int32, bool) {
	if o == nil || o.Dashboard == nil {
		return nil, false
	}
	return o.Dashboard, true
}

// HasDashboard returns a boolean if a field has been set.
func (o *ProjectFeatureOrder) HasDashboard() bool {
	if o != nil && o.Dashboard != nil {
		return true
	}

	return false
}

// SetDashboard gets a reference to the given int32 and assigns it to the Dashboard field.
func (o *ProjectFeatureOrder) SetDashboard(v int32) {
	o.Dashboard = &v
}

// GetFiles returns the Files field value if set, zero value otherwise.
func (o *ProjectFeatureOrder) GetFiles() int32 {
	if o == nil || o.Files == nil {
		var ret int32
		return ret
	}
	return *o.Files
}

// GetFilesOk returns a tuple with the Files field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ProjectFeatureOrder) GetFilesOk() (*int32, bool) {
	if o == nil || o.Files == nil {
		return nil, false
	}
	return o.Files, true
}

// HasFiles returns a boolean if a field has been set.
func (o *ProjectFeatureOrder) HasFiles() bool {
	if o != nil && o.Files != nil {
		return true
	}

	return false
}

// SetFiles gets a reference to the given int32 and assigns it to the Files field.
func (o *ProjectFeatureOrder) SetFiles(v int32) {
	o.Files = &v
}

// GetGantt returns the Gantt field value if set, zero value otherwise.
func (o *ProjectFeatureOrder) GetGantt() int32 {
	if o == nil || o.Gantt == nil {
		var ret int32
		return ret
	}
	return *o.Gantt
}

// GetGanttOk returns a tuple with the Gantt field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ProjectFeatureOrder) GetGanttOk() (*int32, bool) {
	if o == nil || o.Gantt == nil {
		return nil, false
	}
	return o.Gantt, true
}

// HasGantt returns a boolean if a field has been set.
func (o *ProjectFeatureOrder) HasGantt() bool {
	if o != nil && o.Gantt != nil {
		return true
	}

	return false
}

// SetGantt gets a reference to the given int32 and assigns it to the Gantt field.
func (o *ProjectFeatureOrder) SetGantt(v int32) {
	o.Gantt = &v
}

// GetLinks returns the Links field value if set, zero value otherwise.
func (o *ProjectFeatureOrder) GetLinks() int32 {
	if o == nil || o.Links == nil {
		var ret int32
		return ret
	}
	return *o.Links
}

// GetLinksOk returns a tuple with the Links field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ProjectFeatureOrder) GetLinksOk() (*int32, bool) {
	if o == nil || o.Links == nil {
		return nil, false
	}
	return o.Links, true
}

// HasLinks returns a boolean if a field has been set.
func (o *ProjectFeatureOrder) HasLinks() bool {
	if o != nil && o.Links != nil {
		return true
	}

	return false
}

// SetLinks gets a reference to the given int32 and assigns it to the Links field.
func (o *ProjectFeatureOrder) SetLinks(v int32) {
	o.Links = &v
}

// GetList returns the List field value if set, zero value otherwise.
func (o *ProjectFeatureOrder) GetList() int32 {
	if o == nil || o.List == nil {
		var ret int32
		return ret
	}
	return *o.List
}

// GetListOk returns a tuple with the List field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ProjectFeatureOrder) GetListOk() (*int32, bool) {
	if o == nil || o.List == nil {
		return nil, false
	}
	return o.List, true
}

// HasList returns a boolean if a field has been set.
func (o *ProjectFeatureOrder) HasList() bool {
	if o != nil && o.List != nil {
		return true
	}

	return false
}

// SetList gets a reference to the given int32 and assigns it to the List field.
func (o *ProjectFeatureOrder) SetList(v int32) {
	o.List = &v
}

// GetMessages returns the Messages field value if set, zero value otherwise.
func (o *ProjectFeatureOrder) GetMessages() int32 {
	if o == nil || o.Messages == nil {
		var ret int32
		return ret
	}
	return *o.Messages
}

// GetMessagesOk returns a tuple with the Messages field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ProjectFeatureOrder) GetMessagesOk() (*int32, bool) {
	if o == nil || o.Messages == nil {
		return nil, false
	}
	return o.Messages, true
}

// HasMessages returns a boolean if a field has been set.
func (o *ProjectFeatureOrder) HasMessages() bool {
	if o != nil && o.Messages != nil {
		return true
	}

	return false
}

// SetMessages gets a reference to the given int32 and assigns it to the Messages field.
func (o *ProjectFeatureOrder) SetMessages(v int32) {
	o.Messages = &v
}

// GetMilestones returns the Milestones field value if set, zero value otherwise.
func (o *ProjectFeatureOrder) GetMilestones() int32 {
	if o == nil || o.Milestones == nil {
		var ret int32
		return ret
	}
	return *o.Milestones
}

// GetMilestonesOk returns a tuple with the Milestones field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ProjectFeatureOrder) GetMilestonesOk() (*int32, bool) {
	if o == nil || o.Milestones == nil {
		return nil, false
	}
	return o.Milestones, true
}

// HasMilestones returns a boolean if a field has been set.
func (o *ProjectFeatureOrder) HasMilestones() bool {
	if o != nil && o.Milestones != nil {
		return true
	}

	return false
}

// SetMilestones gets a reference to the given int32 and assigns it to the Milestones field.
func (o *ProjectFeatureOrder) SetMilestones(v int32) {
	o.Milestones = &v
}

// GetNotebooks returns the Notebooks field value if set, zero value otherwise.
func (o *ProjectFeatureOrder) GetNotebooks() int32 {
	if o == nil || o.Notebooks == nil {
		var ret int32
		return ret
	}
	return *o.Notebooks
}

// GetNotebooksOk returns a tuple with the Notebooks field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ProjectFeatureOrder) GetNotebooksOk() (*int32, bool) {
	if o == nil || o.Notebooks == nil {
		return nil, false
	}
	return o.Notebooks, true
}

// HasNotebooks returns a boolean if a field has been set.
func (o *ProjectFeatureOrder) HasNotebooks() bool {
	if o != nil && o.Notebooks != nil {
		return true
	}

	return false
}

// SetNotebooks gets a reference to the given int32 and assigns it to the Notebooks field.
func (o *ProjectFeatureOrder) SetNotebooks(v int32) {
	o.Notebooks = &v
}

// GetNumVisibleTabs returns the NumVisibleTabs field value if set, zero value otherwise.
func (o *ProjectFeatureOrder) GetNumVisibleTabs() int32 {
	if o == nil || o.NumVisibleTabs == nil {
		var ret int32
		return ret
	}
	return *o.NumVisibleTabs
}

// GetNumVisibleTabsOk returns a tuple with the NumVisibleTabs field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ProjectFeatureOrder) GetNumVisibleTabsOk() (*int32, bool) {
	if o == nil || o.NumVisibleTabs == nil {
		return nil, false
	}
	return o.NumVisibleTabs, true
}

// HasNumVisibleTabs returns a boolean if a field has been set.
func (o *ProjectFeatureOrder) HasNumVisibleTabs() bool {
	if o != nil && o.NumVisibleTabs != nil {
		return true
	}

	return false
}

// SetNumVisibleTabs gets a reference to the given int32 and assigns it to the NumVisibleTabs field.
func (o *ProjectFeatureOrder) SetNumVisibleTabs(v int32) {
	o.NumVisibleTabs = &v
}

// GetPeople returns the People field value if set, zero value otherwise.
func (o *ProjectFeatureOrder) GetPeople() int32 {
	if o == nil || o.People == nil {
		var ret int32
		return ret
	}
	return *o.People
}

// GetPeopleOk returns a tuple with the People field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ProjectFeatureOrder) GetPeopleOk() (*int32, bool) {
	if o == nil || o.People == nil {
		return nil, false
	}
	return o.People, true
}

// HasPeople returns a boolean if a field has been set.
func (o *ProjectFeatureOrder) HasPeople() bool {
	if o != nil && o.People != nil {
		return true
	}

	return false
}

// SetPeople gets a reference to the given int32 and assigns it to the People field.
func (o *ProjectFeatureOrder) SetPeople(v int32) {
	o.People = &v
}

// GetRisks returns the Risks field value if set, zero value otherwise.
func (o *ProjectFeatureOrder) GetRisks() int32 {
	if o == nil || o.Risks == nil {
		var ret int32
		return ret
	}
	return *o.Risks
}

// GetRisksOk returns a tuple with the Risks field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ProjectFeatureOrder) GetRisksOk() (*int32, bool) {
	if o == nil || o.Risks == nil {
		return nil, false
	}
	return o.Risks, true
}

// HasRisks returns a boolean if a field has been set.
func (o *ProjectFeatureOrder) HasRisks() bool {
	if o != nil && o.Risks != nil {
		return true
	}

	return false
}

// SetRisks gets a reference to the given int32 and assigns it to the Risks field.
func (o *ProjectFeatureOrder) SetRisks(v int32) {
	o.Risks = &v
}

// GetSettings returns the Settings field value if set, zero value otherwise.
func (o *ProjectFeatureOrder) GetSettings() int32 {
	if o == nil || o.Settings == nil {
		var ret int32
		return ret
	}
	return *o.Settings
}

// GetSettingsOk returns a tuple with the Settings field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ProjectFeatureOrder) GetSettingsOk() (*int32, bool) {
	if o == nil || o.Settings == nil {
		return nil, false
	}
	return o.Settings, true
}

// HasSettings returns a boolean if a field has been set.
func (o *ProjectFeatureOrder) HasSettings() bool {
	if o != nil && o.Settings != nil {
		return true
	}

	return false
}

// SetSettings gets a reference to the given int32 and assigns it to the Settings field.
func (o *ProjectFeatureOrder) SetSettings(v int32) {
	o.Settings = &v
}

// GetTable returns the Table field value if set, zero value otherwise.
func (o *ProjectFeatureOrder) GetTable() int32 {
	if o == nil || o.Table == nil {
		var ret int32
		return ret
	}
	return *o.Table
}

// GetTableOk returns a tuple with the Table field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ProjectFeatureOrder) GetTableOk() (*int32, bool) {
	if o == nil || o.Table == nil {
		return nil, false
	}
	return o.Table, true
}

// HasTable returns a boolean if a field has been set.
func (o *ProjectFeatureOrder) HasTable() bool {
	if o != nil && o.Table != nil {
		return true
	}

	return false
}

// SetTable gets a reference to the given int32 and assigns it to the Table field.
func (o *ProjectFeatureOrder) SetTable(v int32) {
	o.Table = &v
}

// GetTime returns the Time field value if set, zero value otherwise.
func (o *ProjectFeatureOrder) GetTime() int32 {
	if o == nil || o.Time == nil {
		var ret int32
		return ret
	}
	return *o.Time
}

// GetTimeOk returns a tuple with the Time field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ProjectFeatureOrder) GetTimeOk() (*int32, bool) {
	if o == nil || o.Time == nil {
		return nil, false
	}
	return o.Time, true
}

// HasTime returns a boolean if a field has been set.
func (o *ProjectFeatureOrder) HasTime() bool {
	if o != nil && o.Time != nil {
		return true
	}

	return false
}

// SetTime gets a reference to the given int32 and assigns it to the Time field.
func (o *ProjectFeatureOrder) SetTime(v int32) {
	o.Time = &v
}

func (o ProjectFeatureOrder) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.Billing != nil {
		toSerialize["billing"] = o.Billing
	}
	if o.Board != nil {
		toSerialize["board"] = o.Board
	}
	if o.Comments != nil {
		toSerialize["comments"] = o.Comments
	}
	if o.Dashboard != nil {
		toSerialize["dashboard"] = o.Dashboard
	}
	if o.Files != nil {
		toSerialize["files"] = o.Files
	}
	if o.Gantt != nil {
		toSerialize["gantt"] = o.Gantt
	}
	if o.Links != nil {
		toSerialize["links"] = o.Links
	}
	if o.List != nil {
		toSerialize["list"] = o.List
	}
	if o.Messages != nil {
		toSerialize["messages"] = o.Messages
	}
	if o.Milestones != nil {
		toSerialize["milestones"] = o.Milestones
	}
	if o.Notebooks != nil {
		toSerialize["notebooks"] = o.Notebooks
	}
	if o.NumVisibleTabs != nil {
		toSerialize["numVisibleTabs"] = o.NumVisibleTabs
	}
	if o.People != nil {
		toSerialize["people"] = o.People
	}
	if o.Risks != nil {
		toSerialize["risks"] = o.Risks
	}
	if o.Settings != nil {
		toSerialize["settings"] = o.Settings
	}
	if o.Table != nil {
		toSerialize["table"] = o.Table
	}
	if o.Time != nil {
		toSerialize["time"] = o.Time
	}
	return json.Marshal(toSerialize)
}

type NullableProjectFeatureOrder struct {
	value *ProjectFeatureOrder
	isSet bool
}

func (v NullableProjectFeatureOrder) Get() *ProjectFeatureOrder {
	return v.value
}

func (v *NullableProjectFeatureOrder) Set(val *ProjectFeatureOrder) {
	v.value = val
	v.isSet = true
}

func (v NullableProjectFeatureOrder) IsSet() bool {
	return v.isSet
}

func (v *NullableProjectFeatureOrder) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableProjectFeatureOrder(val *ProjectFeatureOrder) *NullableProjectFeatureOrder {
	return &NullableProjectFeatureOrder{value: val, isSet: true}
}

func (v NullableProjectFeatureOrder) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableProjectFeatureOrder) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


