/*
 * Teamwork Projects API
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * API version: 
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package pmv1

import (
	"encoding/json"
)

// InlineObject80 struct for InlineObject80
type InlineObject80 struct {
	GetReactions *bool `json:"getReactions,omitempty"`
}

// NewInlineObject80 instantiates a new InlineObject80 object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewInlineObject80() *InlineObject80 {
	this := InlineObject80{}
	return &this
}

// NewInlineObject80WithDefaults instantiates a new InlineObject80 object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewInlineObject80WithDefaults() *InlineObject80 {
	this := InlineObject80{}
	return &this
}

// GetGetReactions returns the GetReactions field value if set, zero value otherwise.
func (o *InlineObject80) GetGetReactions() bool {
	if o == nil || o.GetReactions == nil {
		var ret bool
		return ret
	}
	return *o.GetReactions
}

// GetGetReactionsOk returns a tuple with the GetReactions field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InlineObject80) GetGetReactionsOk() (*bool, bool) {
	if o == nil || o.GetReactions == nil {
		return nil, false
	}
	return o.GetReactions, true
}

// HasGetReactions returns a boolean if a field has been set.
func (o *InlineObject80) HasGetReactions() bool {
	if o != nil && o.GetReactions != nil {
		return true
	}

	return false
}

// SetGetReactions gets a reference to the given bool and assigns it to the GetReactions field.
func (o *InlineObject80) SetGetReactions(v bool) {
	o.GetReactions = &v
}

func (o InlineObject80) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.GetReactions != nil {
		toSerialize["getReactions"] = o.GetReactions
	}
	return json.Marshal(toSerialize)
}

type NullableInlineObject80 struct {
	value *InlineObject80
	isSet bool
}

func (v NullableInlineObject80) Get() *InlineObject80 {
	return v.value
}

func (v *NullableInlineObject80) Set(val *InlineObject80) {
	v.value = val
	v.isSet = true
}

func (v NullableInlineObject80) IsSet() bool {
	return v.isSet
}

func (v *NullableInlineObject80) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableInlineObject80(val *InlineObject80) *NullableInlineObject80 {
	return &NullableInlineObject80{value: val, isSet: true}
}

func (v NullableInlineObject80) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableInlineObject80) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


