/*
 * Teamwork.com Projects API
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * API version: 3.0
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package projv3

import (
	"encoding/json"
)

// ActivityActivitiesResponse ActivitiesResponse contains all the information returned when sending a GET request to the activity endpoint.
type ActivityActivitiesResponse struct {
	Activities *[]ActivityActivity `json:"activities,omitempty"`
	Included *ActivityActivitiesResponseIncluded `json:"included,omitempty"`
	Meta *ViewMeta `json:"meta,omitempty"`
}

// NewActivityActivitiesResponse instantiates a new ActivityActivitiesResponse object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewActivityActivitiesResponse() *ActivityActivitiesResponse {
	this := ActivityActivitiesResponse{}
	return &this
}

// NewActivityActivitiesResponseWithDefaults instantiates a new ActivityActivitiesResponse object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewActivityActivitiesResponseWithDefaults() *ActivityActivitiesResponse {
	this := ActivityActivitiesResponse{}
	return &this
}

// GetActivities returns the Activities field value if set, zero value otherwise.
func (o *ActivityActivitiesResponse) GetActivities() []ActivityActivity {
	if o == nil || o.Activities == nil {
		var ret []ActivityActivity
		return ret
	}
	return *o.Activities
}

// GetActivitiesOk returns a tuple with the Activities field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ActivityActivitiesResponse) GetActivitiesOk() (*[]ActivityActivity, bool) {
	if o == nil || o.Activities == nil {
		return nil, false
	}
	return o.Activities, true
}

// HasActivities returns a boolean if a field has been set.
func (o *ActivityActivitiesResponse) HasActivities() bool {
	if o != nil && o.Activities != nil {
		return true
	}

	return false
}

// SetActivities gets a reference to the given []ActivityActivity and assigns it to the Activities field.
func (o *ActivityActivitiesResponse) SetActivities(v []ActivityActivity) {
	o.Activities = &v
}

// GetIncluded returns the Included field value if set, zero value otherwise.
func (o *ActivityActivitiesResponse) GetIncluded() ActivityActivitiesResponseIncluded {
	if o == nil || o.Included == nil {
		var ret ActivityActivitiesResponseIncluded
		return ret
	}
	return *o.Included
}

// GetIncludedOk returns a tuple with the Included field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ActivityActivitiesResponse) GetIncludedOk() (*ActivityActivitiesResponseIncluded, bool) {
	if o == nil || o.Included == nil {
		return nil, false
	}
	return o.Included, true
}

// HasIncluded returns a boolean if a field has been set.
func (o *ActivityActivitiesResponse) HasIncluded() bool {
	if o != nil && o.Included != nil {
		return true
	}

	return false
}

// SetIncluded gets a reference to the given ActivityActivitiesResponseIncluded and assigns it to the Included field.
func (o *ActivityActivitiesResponse) SetIncluded(v ActivityActivitiesResponseIncluded) {
	o.Included = &v
}

// GetMeta returns the Meta field value if set, zero value otherwise.
func (o *ActivityActivitiesResponse) GetMeta() ViewMeta {
	if o == nil || o.Meta == nil {
		var ret ViewMeta
		return ret
	}
	return *o.Meta
}

// GetMetaOk returns a tuple with the Meta field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ActivityActivitiesResponse) GetMetaOk() (*ViewMeta, bool) {
	if o == nil || o.Meta == nil {
		return nil, false
	}
	return o.Meta, true
}

// HasMeta returns a boolean if a field has been set.
func (o *ActivityActivitiesResponse) HasMeta() bool {
	if o != nil && o.Meta != nil {
		return true
	}

	return false
}

// SetMeta gets a reference to the given ViewMeta and assigns it to the Meta field.
func (o *ActivityActivitiesResponse) SetMeta(v ViewMeta) {
	o.Meta = &v
}

func (o ActivityActivitiesResponse) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.Activities != nil {
		toSerialize["activities"] = o.Activities
	}
	if o.Included != nil {
		toSerialize["included"] = o.Included
	}
	if o.Meta != nil {
		toSerialize["meta"] = o.Meta
	}
	return json.Marshal(toSerialize)
}

type NullableActivityActivitiesResponse struct {
	value *ActivityActivitiesResponse
	isSet bool
}

func (v NullableActivityActivitiesResponse) Get() *ActivityActivitiesResponse {
	return v.value
}

func (v *NullableActivityActivitiesResponse) Set(val *ActivityActivitiesResponse) {
	v.value = val
	v.isSet = true
}

func (v NullableActivityActivitiesResponse) IsSet() bool {
	return v.isSet
}

func (v *NullableActivityActivitiesResponse) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableActivityActivitiesResponse(val *ActivityActivitiesResponse) *NullableActivityActivitiesResponse {
	return &NullableActivityActivitiesResponse{value: val, isSet: true}
}

func (v NullableActivityActivitiesResponse) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableActivityActivitiesResponse) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


