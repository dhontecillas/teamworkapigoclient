/*
 * Teamwork.com Projects API
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * API version: 3.0
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package projv3

import (
	"encoding/json"
)

// TimerResponse Response contains the information returned when sending a PUT/POST request to the timers endpoint, or GET request for a single item by ID
type TimerResponse struct {
	Included *TimerResponseIncluded `json:"included,omitempty"`
	Timer *ViewTimer `json:"timer,omitempty"`
}

// NewTimerResponse instantiates a new TimerResponse object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewTimerResponse() *TimerResponse {
	this := TimerResponse{}
	return &this
}

// NewTimerResponseWithDefaults instantiates a new TimerResponse object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewTimerResponseWithDefaults() *TimerResponse {
	this := TimerResponse{}
	return &this
}

// GetIncluded returns the Included field value if set, zero value otherwise.
func (o *TimerResponse) GetIncluded() TimerResponseIncluded {
	if o == nil || o.Included == nil {
		var ret TimerResponseIncluded
		return ret
	}
	return *o.Included
}

// GetIncludedOk returns a tuple with the Included field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TimerResponse) GetIncludedOk() (*TimerResponseIncluded, bool) {
	if o == nil || o.Included == nil {
		return nil, false
	}
	return o.Included, true
}

// HasIncluded returns a boolean if a field has been set.
func (o *TimerResponse) HasIncluded() bool {
	if o != nil && o.Included != nil {
		return true
	}

	return false
}

// SetIncluded gets a reference to the given TimerResponseIncluded and assigns it to the Included field.
func (o *TimerResponse) SetIncluded(v TimerResponseIncluded) {
	o.Included = &v
}

// GetTimer returns the Timer field value if set, zero value otherwise.
func (o *TimerResponse) GetTimer() ViewTimer {
	if o == nil || o.Timer == nil {
		var ret ViewTimer
		return ret
	}
	return *o.Timer
}

// GetTimerOk returns a tuple with the Timer field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TimerResponse) GetTimerOk() (*ViewTimer, bool) {
	if o == nil || o.Timer == nil {
		return nil, false
	}
	return o.Timer, true
}

// HasTimer returns a boolean if a field has been set.
func (o *TimerResponse) HasTimer() bool {
	if o != nil && o.Timer != nil {
		return true
	}

	return false
}

// SetTimer gets a reference to the given ViewTimer and assigns it to the Timer field.
func (o *TimerResponse) SetTimer(v ViewTimer) {
	o.Timer = &v
}

func (o TimerResponse) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.Included != nil {
		toSerialize["included"] = o.Included
	}
	if o.Timer != nil {
		toSerialize["timer"] = o.Timer
	}
	return json.Marshal(toSerialize)
}

type NullableTimerResponse struct {
	value *TimerResponse
	isSet bool
}

func (v NullableTimerResponse) Get() *TimerResponse {
	return v.value
}

func (v *NullableTimerResponse) Set(val *TimerResponse) {
	v.value = val
	v.isSet = true
}

func (v NullableTimerResponse) IsSet() bool {
	return v.isSet
}

func (v *NullableTimerResponse) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableTimerResponse(val *TimerResponse) *NullableTimerResponse {
	return &NullableTimerResponse{value: val, isSet: true}
}

func (v NullableTimerResponse) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableTimerResponse) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


