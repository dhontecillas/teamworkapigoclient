/*
 * Teamwork Projects API
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * API version: 
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package pmv1

import (
	"encoding/json"
)

// InlineObject53 struct for InlineObject53
type InlineObject53 struct {
	// Id of people to notify
	NotifyIds *string `json:"notifyIds,omitempty"`
	Update *ProjectsUpdatesUpdateIdJsonUpdate `json:"update,omitempty"`
}

// NewInlineObject53 instantiates a new InlineObject53 object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewInlineObject53() *InlineObject53 {
	this := InlineObject53{}
	return &this
}

// NewInlineObject53WithDefaults instantiates a new InlineObject53 object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewInlineObject53WithDefaults() *InlineObject53 {
	this := InlineObject53{}
	return &this
}

// GetNotifyIds returns the NotifyIds field value if set, zero value otherwise.
func (o *InlineObject53) GetNotifyIds() string {
	if o == nil || o.NotifyIds == nil {
		var ret string
		return ret
	}
	return *o.NotifyIds
}

// GetNotifyIdsOk returns a tuple with the NotifyIds field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InlineObject53) GetNotifyIdsOk() (*string, bool) {
	if o == nil || o.NotifyIds == nil {
		return nil, false
	}
	return o.NotifyIds, true
}

// HasNotifyIds returns a boolean if a field has been set.
func (o *InlineObject53) HasNotifyIds() bool {
	if o != nil && o.NotifyIds != nil {
		return true
	}

	return false
}

// SetNotifyIds gets a reference to the given string and assigns it to the NotifyIds field.
func (o *InlineObject53) SetNotifyIds(v string) {
	o.NotifyIds = &v
}

// GetUpdate returns the Update field value if set, zero value otherwise.
func (o *InlineObject53) GetUpdate() ProjectsUpdatesUpdateIdJsonUpdate {
	if o == nil || o.Update == nil {
		var ret ProjectsUpdatesUpdateIdJsonUpdate
		return ret
	}
	return *o.Update
}

// GetUpdateOk returns a tuple with the Update field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InlineObject53) GetUpdateOk() (*ProjectsUpdatesUpdateIdJsonUpdate, bool) {
	if o == nil || o.Update == nil {
		return nil, false
	}
	return o.Update, true
}

// HasUpdate returns a boolean if a field has been set.
func (o *InlineObject53) HasUpdate() bool {
	if o != nil && o.Update != nil {
		return true
	}

	return false
}

// SetUpdate gets a reference to the given ProjectsUpdatesUpdateIdJsonUpdate and assigns it to the Update field.
func (o *InlineObject53) SetUpdate(v ProjectsUpdatesUpdateIdJsonUpdate) {
	o.Update = &v
}

func (o InlineObject53) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.NotifyIds != nil {
		toSerialize["notifyIds"] = o.NotifyIds
	}
	if o.Update != nil {
		toSerialize["update"] = o.Update
	}
	return json.Marshal(toSerialize)
}

type NullableInlineObject53 struct {
	value *InlineObject53
	isSet bool
}

func (v NullableInlineObject53) Get() *InlineObject53 {
	return v.value
}

func (v *NullableInlineObject53) Set(val *InlineObject53) {
	v.value = val
	v.isSet = true
}

func (v NullableInlineObject53) IsSet() bool {
	return v.isSet
}

func (v *NullableInlineObject53) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableInlineObject53(val *InlineObject53) *NullableInlineObject53 {
	return &NullableInlineObject53{value: val, isSet: true}
}

func (v NullableInlineObject53) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableInlineObject53) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


