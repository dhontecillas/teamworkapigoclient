/*
 * Teamwork.com Projects API
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * API version: 3.0
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package projv3

import (
	"encoding/json"
)

// FileversionRequest Request contains information of a fileversion to be created or updated.
type FileversionRequest struct {
	Fileversion *FileversionFileversion `json:"fileversion,omitempty"`
}

// NewFileversionRequest instantiates a new FileversionRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewFileversionRequest() *FileversionRequest {
	this := FileversionRequest{}
	return &this
}

// NewFileversionRequestWithDefaults instantiates a new FileversionRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewFileversionRequestWithDefaults() *FileversionRequest {
	this := FileversionRequest{}
	return &this
}

// GetFileversion returns the Fileversion field value if set, zero value otherwise.
func (o *FileversionRequest) GetFileversion() FileversionFileversion {
	if o == nil || o.Fileversion == nil {
		var ret FileversionFileversion
		return ret
	}
	return *o.Fileversion
}

// GetFileversionOk returns a tuple with the Fileversion field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *FileversionRequest) GetFileversionOk() (*FileversionFileversion, bool) {
	if o == nil || o.Fileversion == nil {
		return nil, false
	}
	return o.Fileversion, true
}

// HasFileversion returns a boolean if a field has been set.
func (o *FileversionRequest) HasFileversion() bool {
	if o != nil && o.Fileversion != nil {
		return true
	}

	return false
}

// SetFileversion gets a reference to the given FileversionFileversion and assigns it to the Fileversion field.
func (o *FileversionRequest) SetFileversion(v FileversionFileversion) {
	o.Fileversion = &v
}

func (o FileversionRequest) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.Fileversion != nil {
		toSerialize["fileversion"] = o.Fileversion
	}
	return json.Marshal(toSerialize)
}

type NullableFileversionRequest struct {
	value *FileversionRequest
	isSet bool
}

func (v NullableFileversionRequest) Get() *FileversionRequest {
	return v.value
}

func (v *NullableFileversionRequest) Set(val *FileversionRequest) {
	v.value = val
	v.isSet = true
}

func (v NullableFileversionRequest) IsSet() bool {
	return v.isSet
}

func (v *NullableFileversionRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableFileversionRequest(val *FileversionRequest) *NullableFileversionRequest {
	return &NullableFileversionRequest{value: val, isSet: true}
}

func (v NullableFileversionRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableFileversionRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


