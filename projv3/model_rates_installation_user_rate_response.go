/*
 * Teamwork.com Projects API
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * API version: 3.0
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package projv3

import (
	"encoding/json"
)

// RatesInstallationUserRateResponse InstallationUserRateResponse contains info about a set of users installation rates
type RatesInstallationUserRateResponse struct {
	UserRates *[]ViewInstallationUserRate `json:"userRates,omitempty"`
}

// NewRatesInstallationUserRateResponse instantiates a new RatesInstallationUserRateResponse object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewRatesInstallationUserRateResponse() *RatesInstallationUserRateResponse {
	this := RatesInstallationUserRateResponse{}
	return &this
}

// NewRatesInstallationUserRateResponseWithDefaults instantiates a new RatesInstallationUserRateResponse object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewRatesInstallationUserRateResponseWithDefaults() *RatesInstallationUserRateResponse {
	this := RatesInstallationUserRateResponse{}
	return &this
}

// GetUserRates returns the UserRates field value if set, zero value otherwise.
func (o *RatesInstallationUserRateResponse) GetUserRates() []ViewInstallationUserRate {
	if o == nil || o.UserRates == nil {
		var ret []ViewInstallationUserRate
		return ret
	}
	return *o.UserRates
}

// GetUserRatesOk returns a tuple with the UserRates field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RatesInstallationUserRateResponse) GetUserRatesOk() (*[]ViewInstallationUserRate, bool) {
	if o == nil || o.UserRates == nil {
		return nil, false
	}
	return o.UserRates, true
}

// HasUserRates returns a boolean if a field has been set.
func (o *RatesInstallationUserRateResponse) HasUserRates() bool {
	if o != nil && o.UserRates != nil {
		return true
	}

	return false
}

// SetUserRates gets a reference to the given []ViewInstallationUserRate and assigns it to the UserRates field.
func (o *RatesInstallationUserRateResponse) SetUserRates(v []ViewInstallationUserRate) {
	o.UserRates = &v
}

func (o RatesInstallationUserRateResponse) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.UserRates != nil {
		toSerialize["userRates"] = o.UserRates
	}
	return json.Marshal(toSerialize)
}

type NullableRatesInstallationUserRateResponse struct {
	value *RatesInstallationUserRateResponse
	isSet bool
}

func (v NullableRatesInstallationUserRateResponse) Get() *RatesInstallationUserRateResponse {
	return v.value
}

func (v *NullableRatesInstallationUserRateResponse) Set(val *RatesInstallationUserRateResponse) {
	v.value = val
	v.isSet = true
}

func (v NullableRatesInstallationUserRateResponse) IsSet() bool {
	return v.isSet
}

func (v *NullableRatesInstallationUserRateResponse) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableRatesInstallationUserRateResponse(val *RatesInstallationUserRateResponse) *NullableRatesInstallationUserRateResponse {
	return &NullableRatesInstallationUserRateResponse{value: val, isSet: true}
}

func (v NullableRatesInstallationUserRateResponse) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableRatesInstallationUserRateResponse) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


