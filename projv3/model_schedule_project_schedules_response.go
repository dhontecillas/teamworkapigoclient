/*
 * Teamwork.com Projects API
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * API version: 3.0
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package projv3

import (
	"encoding/json"
)

// ScheduleProjectSchedulesResponse ProjectSchedulesResponse contains information about a group of schedules.
type ScheduleProjectSchedulesResponse struct {
	Included *ScheduleProjectSchedulesResponseIncluded `json:"included,omitempty"`
	Meta *ViewMeta `json:"meta,omitempty"`
	ProjectSchedules *[]ViewProjectSchedule `json:"projectSchedules,omitempty"`
}

// NewScheduleProjectSchedulesResponse instantiates a new ScheduleProjectSchedulesResponse object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewScheduleProjectSchedulesResponse() *ScheduleProjectSchedulesResponse {
	this := ScheduleProjectSchedulesResponse{}
	return &this
}

// NewScheduleProjectSchedulesResponseWithDefaults instantiates a new ScheduleProjectSchedulesResponse object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewScheduleProjectSchedulesResponseWithDefaults() *ScheduleProjectSchedulesResponse {
	this := ScheduleProjectSchedulesResponse{}
	return &this
}

// GetIncluded returns the Included field value if set, zero value otherwise.
func (o *ScheduleProjectSchedulesResponse) GetIncluded() ScheduleProjectSchedulesResponseIncluded {
	if o == nil || o.Included == nil {
		var ret ScheduleProjectSchedulesResponseIncluded
		return ret
	}
	return *o.Included
}

// GetIncludedOk returns a tuple with the Included field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ScheduleProjectSchedulesResponse) GetIncludedOk() (*ScheduleProjectSchedulesResponseIncluded, bool) {
	if o == nil || o.Included == nil {
		return nil, false
	}
	return o.Included, true
}

// HasIncluded returns a boolean if a field has been set.
func (o *ScheduleProjectSchedulesResponse) HasIncluded() bool {
	if o != nil && o.Included != nil {
		return true
	}

	return false
}

// SetIncluded gets a reference to the given ScheduleProjectSchedulesResponseIncluded and assigns it to the Included field.
func (o *ScheduleProjectSchedulesResponse) SetIncluded(v ScheduleProjectSchedulesResponseIncluded) {
	o.Included = &v
}

// GetMeta returns the Meta field value if set, zero value otherwise.
func (o *ScheduleProjectSchedulesResponse) GetMeta() ViewMeta {
	if o == nil || o.Meta == nil {
		var ret ViewMeta
		return ret
	}
	return *o.Meta
}

// GetMetaOk returns a tuple with the Meta field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ScheduleProjectSchedulesResponse) GetMetaOk() (*ViewMeta, bool) {
	if o == nil || o.Meta == nil {
		return nil, false
	}
	return o.Meta, true
}

// HasMeta returns a boolean if a field has been set.
func (o *ScheduleProjectSchedulesResponse) HasMeta() bool {
	if o != nil && o.Meta != nil {
		return true
	}

	return false
}

// SetMeta gets a reference to the given ViewMeta and assigns it to the Meta field.
func (o *ScheduleProjectSchedulesResponse) SetMeta(v ViewMeta) {
	o.Meta = &v
}

// GetProjectSchedules returns the ProjectSchedules field value if set, zero value otherwise.
func (o *ScheduleProjectSchedulesResponse) GetProjectSchedules() []ViewProjectSchedule {
	if o == nil || o.ProjectSchedules == nil {
		var ret []ViewProjectSchedule
		return ret
	}
	return *o.ProjectSchedules
}

// GetProjectSchedulesOk returns a tuple with the ProjectSchedules field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ScheduleProjectSchedulesResponse) GetProjectSchedulesOk() (*[]ViewProjectSchedule, bool) {
	if o == nil || o.ProjectSchedules == nil {
		return nil, false
	}
	return o.ProjectSchedules, true
}

// HasProjectSchedules returns a boolean if a field has been set.
func (o *ScheduleProjectSchedulesResponse) HasProjectSchedules() bool {
	if o != nil && o.ProjectSchedules != nil {
		return true
	}

	return false
}

// SetProjectSchedules gets a reference to the given []ViewProjectSchedule and assigns it to the ProjectSchedules field.
func (o *ScheduleProjectSchedulesResponse) SetProjectSchedules(v []ViewProjectSchedule) {
	o.ProjectSchedules = &v
}

func (o ScheduleProjectSchedulesResponse) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.Included != nil {
		toSerialize["included"] = o.Included
	}
	if o.Meta != nil {
		toSerialize["meta"] = o.Meta
	}
	if o.ProjectSchedules != nil {
		toSerialize["projectSchedules"] = o.ProjectSchedules
	}
	return json.Marshal(toSerialize)
}

type NullableScheduleProjectSchedulesResponse struct {
	value *ScheduleProjectSchedulesResponse
	isSet bool
}

func (v NullableScheduleProjectSchedulesResponse) Get() *ScheduleProjectSchedulesResponse {
	return v.value
}

func (v *NullableScheduleProjectSchedulesResponse) Set(val *ScheduleProjectSchedulesResponse) {
	v.value = val
	v.isSet = true
}

func (v NullableScheduleProjectSchedulesResponse) IsSet() bool {
	return v.isSet
}

func (v *NullableScheduleProjectSchedulesResponse) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableScheduleProjectSchedulesResponse(val *ScheduleProjectSchedulesResponse) *NullableScheduleProjectSchedulesResponse {
	return &NullableScheduleProjectSchedulesResponse{value: val, isSet: true}
}

func (v NullableScheduleProjectSchedulesResponse) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableScheduleProjectSchedulesResponse) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


