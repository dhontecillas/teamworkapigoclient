/*
 * Teamwork.com Projects API
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * API version: 3.0
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package projv2

import (
	"encoding/json"
)

// TwdatausersFilterResponse struct for TwdatausersFilterResponse
type TwdatausersFilterResponse struct {
	DateCreated *string `json:"dateCreated,omitempty"`
	DateDeleted *string `json:"dateDeleted,omitempty"`
	DateUpdated *string `json:"dateUpdated,omitempty"`
	Deleted *bool `json:"deleted,omitempty"`
	Description *string `json:"description,omitempty"`
	DisplayOrder *int32 `json:"displayOrder,omitempty"`
	Fulldata *map[string]interface{} `json:"fulldata,omitempty"`
	Id *int32 `json:"id,omitempty"`
	IncludesSort *bool `json:"includesSort,omitempty"`
	IsProjectSpecific *bool `json:"isProjectSpecific,omitempty"`
	IsTemporary *bool `json:"isTemporary,omitempty"`
	Parameters *map[string]string `json:"parameters,omitempty"`
	ProjectId *int32 `json:"projectId,omitempty"`
	Section *string `json:"section,omitempty"`
	ShareLink *string `json:"shareLink,omitempty"`
	Shared *bool `json:"shared,omitempty"`
	Title *string `json:"title,omitempty"`
	UserId *int32 `json:"userId,omitempty"`
}

// NewTwdatausersFilterResponse instantiates a new TwdatausersFilterResponse object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewTwdatausersFilterResponse() *TwdatausersFilterResponse {
	this := TwdatausersFilterResponse{}
	return &this
}

// NewTwdatausersFilterResponseWithDefaults instantiates a new TwdatausersFilterResponse object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewTwdatausersFilterResponseWithDefaults() *TwdatausersFilterResponse {
	this := TwdatausersFilterResponse{}
	return &this
}

// GetDateCreated returns the DateCreated field value if set, zero value otherwise.
func (o *TwdatausersFilterResponse) GetDateCreated() string {
	if o == nil || o.DateCreated == nil {
		var ret string
		return ret
	}
	return *o.DateCreated
}

// GetDateCreatedOk returns a tuple with the DateCreated field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TwdatausersFilterResponse) GetDateCreatedOk() (*string, bool) {
	if o == nil || o.DateCreated == nil {
		return nil, false
	}
	return o.DateCreated, true
}

// HasDateCreated returns a boolean if a field has been set.
func (o *TwdatausersFilterResponse) HasDateCreated() bool {
	if o != nil && o.DateCreated != nil {
		return true
	}

	return false
}

// SetDateCreated gets a reference to the given string and assigns it to the DateCreated field.
func (o *TwdatausersFilterResponse) SetDateCreated(v string) {
	o.DateCreated = &v
}

// GetDateDeleted returns the DateDeleted field value if set, zero value otherwise.
func (o *TwdatausersFilterResponse) GetDateDeleted() string {
	if o == nil || o.DateDeleted == nil {
		var ret string
		return ret
	}
	return *o.DateDeleted
}

// GetDateDeletedOk returns a tuple with the DateDeleted field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TwdatausersFilterResponse) GetDateDeletedOk() (*string, bool) {
	if o == nil || o.DateDeleted == nil {
		return nil, false
	}
	return o.DateDeleted, true
}

// HasDateDeleted returns a boolean if a field has been set.
func (o *TwdatausersFilterResponse) HasDateDeleted() bool {
	if o != nil && o.DateDeleted != nil {
		return true
	}

	return false
}

// SetDateDeleted gets a reference to the given string and assigns it to the DateDeleted field.
func (o *TwdatausersFilterResponse) SetDateDeleted(v string) {
	o.DateDeleted = &v
}

// GetDateUpdated returns the DateUpdated field value if set, zero value otherwise.
func (o *TwdatausersFilterResponse) GetDateUpdated() string {
	if o == nil || o.DateUpdated == nil {
		var ret string
		return ret
	}
	return *o.DateUpdated
}

// GetDateUpdatedOk returns a tuple with the DateUpdated field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TwdatausersFilterResponse) GetDateUpdatedOk() (*string, bool) {
	if o == nil || o.DateUpdated == nil {
		return nil, false
	}
	return o.DateUpdated, true
}

// HasDateUpdated returns a boolean if a field has been set.
func (o *TwdatausersFilterResponse) HasDateUpdated() bool {
	if o != nil && o.DateUpdated != nil {
		return true
	}

	return false
}

// SetDateUpdated gets a reference to the given string and assigns it to the DateUpdated field.
func (o *TwdatausersFilterResponse) SetDateUpdated(v string) {
	o.DateUpdated = &v
}

// GetDeleted returns the Deleted field value if set, zero value otherwise.
func (o *TwdatausersFilterResponse) GetDeleted() bool {
	if o == nil || o.Deleted == nil {
		var ret bool
		return ret
	}
	return *o.Deleted
}

// GetDeletedOk returns a tuple with the Deleted field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TwdatausersFilterResponse) GetDeletedOk() (*bool, bool) {
	if o == nil || o.Deleted == nil {
		return nil, false
	}
	return o.Deleted, true
}

// HasDeleted returns a boolean if a field has been set.
func (o *TwdatausersFilterResponse) HasDeleted() bool {
	if o != nil && o.Deleted != nil {
		return true
	}

	return false
}

// SetDeleted gets a reference to the given bool and assigns it to the Deleted field.
func (o *TwdatausersFilterResponse) SetDeleted(v bool) {
	o.Deleted = &v
}

// GetDescription returns the Description field value if set, zero value otherwise.
func (o *TwdatausersFilterResponse) GetDescription() string {
	if o == nil || o.Description == nil {
		var ret string
		return ret
	}
	return *o.Description
}

// GetDescriptionOk returns a tuple with the Description field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TwdatausersFilterResponse) GetDescriptionOk() (*string, bool) {
	if o == nil || o.Description == nil {
		return nil, false
	}
	return o.Description, true
}

// HasDescription returns a boolean if a field has been set.
func (o *TwdatausersFilterResponse) HasDescription() bool {
	if o != nil && o.Description != nil {
		return true
	}

	return false
}

// SetDescription gets a reference to the given string and assigns it to the Description field.
func (o *TwdatausersFilterResponse) SetDescription(v string) {
	o.Description = &v
}

// GetDisplayOrder returns the DisplayOrder field value if set, zero value otherwise.
func (o *TwdatausersFilterResponse) GetDisplayOrder() int32 {
	if o == nil || o.DisplayOrder == nil {
		var ret int32
		return ret
	}
	return *o.DisplayOrder
}

// GetDisplayOrderOk returns a tuple with the DisplayOrder field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TwdatausersFilterResponse) GetDisplayOrderOk() (*int32, bool) {
	if o == nil || o.DisplayOrder == nil {
		return nil, false
	}
	return o.DisplayOrder, true
}

// HasDisplayOrder returns a boolean if a field has been set.
func (o *TwdatausersFilterResponse) HasDisplayOrder() bool {
	if o != nil && o.DisplayOrder != nil {
		return true
	}

	return false
}

// SetDisplayOrder gets a reference to the given int32 and assigns it to the DisplayOrder field.
func (o *TwdatausersFilterResponse) SetDisplayOrder(v int32) {
	o.DisplayOrder = &v
}

// GetFulldata returns the Fulldata field value if set, zero value otherwise.
func (o *TwdatausersFilterResponse) GetFulldata() map[string]interface{} {
	if o == nil || o.Fulldata == nil {
		var ret map[string]interface{}
		return ret
	}
	return *o.Fulldata
}

// GetFulldataOk returns a tuple with the Fulldata field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TwdatausersFilterResponse) GetFulldataOk() (*map[string]interface{}, bool) {
	if o == nil || o.Fulldata == nil {
		return nil, false
	}
	return o.Fulldata, true
}

// HasFulldata returns a boolean if a field has been set.
func (o *TwdatausersFilterResponse) HasFulldata() bool {
	if o != nil && o.Fulldata != nil {
		return true
	}

	return false
}

// SetFulldata gets a reference to the given map[string]interface{} and assigns it to the Fulldata field.
func (o *TwdatausersFilterResponse) SetFulldata(v map[string]interface{}) {
	o.Fulldata = &v
}

// GetId returns the Id field value if set, zero value otherwise.
func (o *TwdatausersFilterResponse) GetId() int32 {
	if o == nil || o.Id == nil {
		var ret int32
		return ret
	}
	return *o.Id
}

// GetIdOk returns a tuple with the Id field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TwdatausersFilterResponse) GetIdOk() (*int32, bool) {
	if o == nil || o.Id == nil {
		return nil, false
	}
	return o.Id, true
}

// HasId returns a boolean if a field has been set.
func (o *TwdatausersFilterResponse) HasId() bool {
	if o != nil && o.Id != nil {
		return true
	}

	return false
}

// SetId gets a reference to the given int32 and assigns it to the Id field.
func (o *TwdatausersFilterResponse) SetId(v int32) {
	o.Id = &v
}

// GetIncludesSort returns the IncludesSort field value if set, zero value otherwise.
func (o *TwdatausersFilterResponse) GetIncludesSort() bool {
	if o == nil || o.IncludesSort == nil {
		var ret bool
		return ret
	}
	return *o.IncludesSort
}

// GetIncludesSortOk returns a tuple with the IncludesSort field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TwdatausersFilterResponse) GetIncludesSortOk() (*bool, bool) {
	if o == nil || o.IncludesSort == nil {
		return nil, false
	}
	return o.IncludesSort, true
}

// HasIncludesSort returns a boolean if a field has been set.
func (o *TwdatausersFilterResponse) HasIncludesSort() bool {
	if o != nil && o.IncludesSort != nil {
		return true
	}

	return false
}

// SetIncludesSort gets a reference to the given bool and assigns it to the IncludesSort field.
func (o *TwdatausersFilterResponse) SetIncludesSort(v bool) {
	o.IncludesSort = &v
}

// GetIsProjectSpecific returns the IsProjectSpecific field value if set, zero value otherwise.
func (o *TwdatausersFilterResponse) GetIsProjectSpecific() bool {
	if o == nil || o.IsProjectSpecific == nil {
		var ret bool
		return ret
	}
	return *o.IsProjectSpecific
}

// GetIsProjectSpecificOk returns a tuple with the IsProjectSpecific field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TwdatausersFilterResponse) GetIsProjectSpecificOk() (*bool, bool) {
	if o == nil || o.IsProjectSpecific == nil {
		return nil, false
	}
	return o.IsProjectSpecific, true
}

// HasIsProjectSpecific returns a boolean if a field has been set.
func (o *TwdatausersFilterResponse) HasIsProjectSpecific() bool {
	if o != nil && o.IsProjectSpecific != nil {
		return true
	}

	return false
}

// SetIsProjectSpecific gets a reference to the given bool and assigns it to the IsProjectSpecific field.
func (o *TwdatausersFilterResponse) SetIsProjectSpecific(v bool) {
	o.IsProjectSpecific = &v
}

// GetIsTemporary returns the IsTemporary field value if set, zero value otherwise.
func (o *TwdatausersFilterResponse) GetIsTemporary() bool {
	if o == nil || o.IsTemporary == nil {
		var ret bool
		return ret
	}
	return *o.IsTemporary
}

// GetIsTemporaryOk returns a tuple with the IsTemporary field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TwdatausersFilterResponse) GetIsTemporaryOk() (*bool, bool) {
	if o == nil || o.IsTemporary == nil {
		return nil, false
	}
	return o.IsTemporary, true
}

// HasIsTemporary returns a boolean if a field has been set.
func (o *TwdatausersFilterResponse) HasIsTemporary() bool {
	if o != nil && o.IsTemporary != nil {
		return true
	}

	return false
}

// SetIsTemporary gets a reference to the given bool and assigns it to the IsTemporary field.
func (o *TwdatausersFilterResponse) SetIsTemporary(v bool) {
	o.IsTemporary = &v
}

// GetParameters returns the Parameters field value if set, zero value otherwise.
func (o *TwdatausersFilterResponse) GetParameters() map[string]string {
	if o == nil || o.Parameters == nil {
		var ret map[string]string
		return ret
	}
	return *o.Parameters
}

// GetParametersOk returns a tuple with the Parameters field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TwdatausersFilterResponse) GetParametersOk() (*map[string]string, bool) {
	if o == nil || o.Parameters == nil {
		return nil, false
	}
	return o.Parameters, true
}

// HasParameters returns a boolean if a field has been set.
func (o *TwdatausersFilterResponse) HasParameters() bool {
	if o != nil && o.Parameters != nil {
		return true
	}

	return false
}

// SetParameters gets a reference to the given map[string]string and assigns it to the Parameters field.
func (o *TwdatausersFilterResponse) SetParameters(v map[string]string) {
	o.Parameters = &v
}

// GetProjectId returns the ProjectId field value if set, zero value otherwise.
func (o *TwdatausersFilterResponse) GetProjectId() int32 {
	if o == nil || o.ProjectId == nil {
		var ret int32
		return ret
	}
	return *o.ProjectId
}

// GetProjectIdOk returns a tuple with the ProjectId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TwdatausersFilterResponse) GetProjectIdOk() (*int32, bool) {
	if o == nil || o.ProjectId == nil {
		return nil, false
	}
	return o.ProjectId, true
}

// HasProjectId returns a boolean if a field has been set.
func (o *TwdatausersFilterResponse) HasProjectId() bool {
	if o != nil && o.ProjectId != nil {
		return true
	}

	return false
}

// SetProjectId gets a reference to the given int32 and assigns it to the ProjectId field.
func (o *TwdatausersFilterResponse) SetProjectId(v int32) {
	o.ProjectId = &v
}

// GetSection returns the Section field value if set, zero value otherwise.
func (o *TwdatausersFilterResponse) GetSection() string {
	if o == nil || o.Section == nil {
		var ret string
		return ret
	}
	return *o.Section
}

// GetSectionOk returns a tuple with the Section field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TwdatausersFilterResponse) GetSectionOk() (*string, bool) {
	if o == nil || o.Section == nil {
		return nil, false
	}
	return o.Section, true
}

// HasSection returns a boolean if a field has been set.
func (o *TwdatausersFilterResponse) HasSection() bool {
	if o != nil && o.Section != nil {
		return true
	}

	return false
}

// SetSection gets a reference to the given string and assigns it to the Section field.
func (o *TwdatausersFilterResponse) SetSection(v string) {
	o.Section = &v
}

// GetShareLink returns the ShareLink field value if set, zero value otherwise.
func (o *TwdatausersFilterResponse) GetShareLink() string {
	if o == nil || o.ShareLink == nil {
		var ret string
		return ret
	}
	return *o.ShareLink
}

// GetShareLinkOk returns a tuple with the ShareLink field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TwdatausersFilterResponse) GetShareLinkOk() (*string, bool) {
	if o == nil || o.ShareLink == nil {
		return nil, false
	}
	return o.ShareLink, true
}

// HasShareLink returns a boolean if a field has been set.
func (o *TwdatausersFilterResponse) HasShareLink() bool {
	if o != nil && o.ShareLink != nil {
		return true
	}

	return false
}

// SetShareLink gets a reference to the given string and assigns it to the ShareLink field.
func (o *TwdatausersFilterResponse) SetShareLink(v string) {
	o.ShareLink = &v
}

// GetShared returns the Shared field value if set, zero value otherwise.
func (o *TwdatausersFilterResponse) GetShared() bool {
	if o == nil || o.Shared == nil {
		var ret bool
		return ret
	}
	return *o.Shared
}

// GetSharedOk returns a tuple with the Shared field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TwdatausersFilterResponse) GetSharedOk() (*bool, bool) {
	if o == nil || o.Shared == nil {
		return nil, false
	}
	return o.Shared, true
}

// HasShared returns a boolean if a field has been set.
func (o *TwdatausersFilterResponse) HasShared() bool {
	if o != nil && o.Shared != nil {
		return true
	}

	return false
}

// SetShared gets a reference to the given bool and assigns it to the Shared field.
func (o *TwdatausersFilterResponse) SetShared(v bool) {
	o.Shared = &v
}

// GetTitle returns the Title field value if set, zero value otherwise.
func (o *TwdatausersFilterResponse) GetTitle() string {
	if o == nil || o.Title == nil {
		var ret string
		return ret
	}
	return *o.Title
}

// GetTitleOk returns a tuple with the Title field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TwdatausersFilterResponse) GetTitleOk() (*string, bool) {
	if o == nil || o.Title == nil {
		return nil, false
	}
	return o.Title, true
}

// HasTitle returns a boolean if a field has been set.
func (o *TwdatausersFilterResponse) HasTitle() bool {
	if o != nil && o.Title != nil {
		return true
	}

	return false
}

// SetTitle gets a reference to the given string and assigns it to the Title field.
func (o *TwdatausersFilterResponse) SetTitle(v string) {
	o.Title = &v
}

// GetUserId returns the UserId field value if set, zero value otherwise.
func (o *TwdatausersFilterResponse) GetUserId() int32 {
	if o == nil || o.UserId == nil {
		var ret int32
		return ret
	}
	return *o.UserId
}

// GetUserIdOk returns a tuple with the UserId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TwdatausersFilterResponse) GetUserIdOk() (*int32, bool) {
	if o == nil || o.UserId == nil {
		return nil, false
	}
	return o.UserId, true
}

// HasUserId returns a boolean if a field has been set.
func (o *TwdatausersFilterResponse) HasUserId() bool {
	if o != nil && o.UserId != nil {
		return true
	}

	return false
}

// SetUserId gets a reference to the given int32 and assigns it to the UserId field.
func (o *TwdatausersFilterResponse) SetUserId(v int32) {
	o.UserId = &v
}

func (o TwdatausersFilterResponse) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.DateCreated != nil {
		toSerialize["dateCreated"] = o.DateCreated
	}
	if o.DateDeleted != nil {
		toSerialize["dateDeleted"] = o.DateDeleted
	}
	if o.DateUpdated != nil {
		toSerialize["dateUpdated"] = o.DateUpdated
	}
	if o.Deleted != nil {
		toSerialize["deleted"] = o.Deleted
	}
	if o.Description != nil {
		toSerialize["description"] = o.Description
	}
	if o.DisplayOrder != nil {
		toSerialize["displayOrder"] = o.DisplayOrder
	}
	if o.Fulldata != nil {
		toSerialize["fulldata"] = o.Fulldata
	}
	if o.Id != nil {
		toSerialize["id"] = o.Id
	}
	if o.IncludesSort != nil {
		toSerialize["includesSort"] = o.IncludesSort
	}
	if o.IsProjectSpecific != nil {
		toSerialize["isProjectSpecific"] = o.IsProjectSpecific
	}
	if o.IsTemporary != nil {
		toSerialize["isTemporary"] = o.IsTemporary
	}
	if o.Parameters != nil {
		toSerialize["parameters"] = o.Parameters
	}
	if o.ProjectId != nil {
		toSerialize["projectId"] = o.ProjectId
	}
	if o.Section != nil {
		toSerialize["section"] = o.Section
	}
	if o.ShareLink != nil {
		toSerialize["shareLink"] = o.ShareLink
	}
	if o.Shared != nil {
		toSerialize["shared"] = o.Shared
	}
	if o.Title != nil {
		toSerialize["title"] = o.Title
	}
	if o.UserId != nil {
		toSerialize["userId"] = o.UserId
	}
	return json.Marshal(toSerialize)
}

type NullableTwdatausersFilterResponse struct {
	value *TwdatausersFilterResponse
	isSet bool
}

func (v NullableTwdatausersFilterResponse) Get() *TwdatausersFilterResponse {
	return v.value
}

func (v *NullableTwdatausersFilterResponse) Set(val *TwdatausersFilterResponse) {
	v.value = val
	v.isSet = true
}

func (v NullableTwdatausersFilterResponse) IsSet() bool {
	return v.isSet
}

func (v *NullableTwdatausersFilterResponse) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableTwdatausersFilterResponse(val *TwdatausersFilterResponse) *NullableTwdatausersFilterResponse {
	return &NullableTwdatausersFilterResponse{value: val, isSet: true}
}

func (v NullableTwdatausersFilterResponse) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableTwdatausersFilterResponse) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


