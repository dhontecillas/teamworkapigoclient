/*
 * Teamwork.com Projects API
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * API version: 3.0
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package projv3

import (
	"encoding/json"
)

// ViewProjectIntegrations struct for ViewProjectIntegrations
type ViewProjectIntegrations struct {
	OneDriveBusiness *ViewProjectIntegrationsOneDriveBusiness `json:"oneDriveBusiness,omitempty"`
	Sharepoint *ViewProjectIntegrationsOneDriveBusiness `json:"sharepoint,omitempty"`
	Xero *ViewProjectIntegrationsXero `json:"xero,omitempty"`
}

// NewViewProjectIntegrations instantiates a new ViewProjectIntegrations object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewViewProjectIntegrations() *ViewProjectIntegrations {
	this := ViewProjectIntegrations{}
	return &this
}

// NewViewProjectIntegrationsWithDefaults instantiates a new ViewProjectIntegrations object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewViewProjectIntegrationsWithDefaults() *ViewProjectIntegrations {
	this := ViewProjectIntegrations{}
	return &this
}

// GetOneDriveBusiness returns the OneDriveBusiness field value if set, zero value otherwise.
func (o *ViewProjectIntegrations) GetOneDriveBusiness() ViewProjectIntegrationsOneDriveBusiness {
	if o == nil || o.OneDriveBusiness == nil {
		var ret ViewProjectIntegrationsOneDriveBusiness
		return ret
	}
	return *o.OneDriveBusiness
}

// GetOneDriveBusinessOk returns a tuple with the OneDriveBusiness field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ViewProjectIntegrations) GetOneDriveBusinessOk() (*ViewProjectIntegrationsOneDriveBusiness, bool) {
	if o == nil || o.OneDriveBusiness == nil {
		return nil, false
	}
	return o.OneDriveBusiness, true
}

// HasOneDriveBusiness returns a boolean if a field has been set.
func (o *ViewProjectIntegrations) HasOneDriveBusiness() bool {
	if o != nil && o.OneDriveBusiness != nil {
		return true
	}

	return false
}

// SetOneDriveBusiness gets a reference to the given ViewProjectIntegrationsOneDriveBusiness and assigns it to the OneDriveBusiness field.
func (o *ViewProjectIntegrations) SetOneDriveBusiness(v ViewProjectIntegrationsOneDriveBusiness) {
	o.OneDriveBusiness = &v
}

// GetSharepoint returns the Sharepoint field value if set, zero value otherwise.
func (o *ViewProjectIntegrations) GetSharepoint() ViewProjectIntegrationsOneDriveBusiness {
	if o == nil || o.Sharepoint == nil {
		var ret ViewProjectIntegrationsOneDriveBusiness
		return ret
	}
	return *o.Sharepoint
}

// GetSharepointOk returns a tuple with the Sharepoint field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ViewProjectIntegrations) GetSharepointOk() (*ViewProjectIntegrationsOneDriveBusiness, bool) {
	if o == nil || o.Sharepoint == nil {
		return nil, false
	}
	return o.Sharepoint, true
}

// HasSharepoint returns a boolean if a field has been set.
func (o *ViewProjectIntegrations) HasSharepoint() bool {
	if o != nil && o.Sharepoint != nil {
		return true
	}

	return false
}

// SetSharepoint gets a reference to the given ViewProjectIntegrationsOneDriveBusiness and assigns it to the Sharepoint field.
func (o *ViewProjectIntegrations) SetSharepoint(v ViewProjectIntegrationsOneDriveBusiness) {
	o.Sharepoint = &v
}

// GetXero returns the Xero field value if set, zero value otherwise.
func (o *ViewProjectIntegrations) GetXero() ViewProjectIntegrationsXero {
	if o == nil || o.Xero == nil {
		var ret ViewProjectIntegrationsXero
		return ret
	}
	return *o.Xero
}

// GetXeroOk returns a tuple with the Xero field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ViewProjectIntegrations) GetXeroOk() (*ViewProjectIntegrationsXero, bool) {
	if o == nil || o.Xero == nil {
		return nil, false
	}
	return o.Xero, true
}

// HasXero returns a boolean if a field has been set.
func (o *ViewProjectIntegrations) HasXero() bool {
	if o != nil && o.Xero != nil {
		return true
	}

	return false
}

// SetXero gets a reference to the given ViewProjectIntegrationsXero and assigns it to the Xero field.
func (o *ViewProjectIntegrations) SetXero(v ViewProjectIntegrationsXero) {
	o.Xero = &v
}

func (o ViewProjectIntegrations) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.OneDriveBusiness != nil {
		toSerialize["oneDriveBusiness"] = o.OneDriveBusiness
	}
	if o.Sharepoint != nil {
		toSerialize["sharepoint"] = o.Sharepoint
	}
	if o.Xero != nil {
		toSerialize["xero"] = o.Xero
	}
	return json.Marshal(toSerialize)
}

type NullableViewProjectIntegrations struct {
	value *ViewProjectIntegrations
	isSet bool
}

func (v NullableViewProjectIntegrations) Get() *ViewProjectIntegrations {
	return v.value
}

func (v *NullableViewProjectIntegrations) Set(val *ViewProjectIntegrations) {
	v.value = val
	v.isSet = true
}

func (v NullableViewProjectIntegrations) IsSet() bool {
	return v.isSet
}

func (v *NullableViewProjectIntegrations) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableViewProjectIntegrations(val *ViewProjectIntegrations) *NullableViewProjectIntegrations {
	return &NullableViewProjectIntegrations{value: val, isSet: true}
}

func (v NullableViewProjectIntegrations) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableViewProjectIntegrations) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


