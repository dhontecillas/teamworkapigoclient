/*
 * Teamwork.com Projects API
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * API version: 3.0
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package projv3

import (
	"encoding/json"
)

// SummaryTimeCounterResponse TimeCounterResponse contains counters for times.
type SummaryTimeCounterResponse struct {
	Estimates *SummaryTimeCounterEstimateResponse `json:"estimates,omitempty"`
	Totals *SummaryTimeCounterTotalResponse `json:"totals,omitempty"`
}

// NewSummaryTimeCounterResponse instantiates a new SummaryTimeCounterResponse object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewSummaryTimeCounterResponse() *SummaryTimeCounterResponse {
	this := SummaryTimeCounterResponse{}
	return &this
}

// NewSummaryTimeCounterResponseWithDefaults instantiates a new SummaryTimeCounterResponse object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewSummaryTimeCounterResponseWithDefaults() *SummaryTimeCounterResponse {
	this := SummaryTimeCounterResponse{}
	return &this
}

// GetEstimates returns the Estimates field value if set, zero value otherwise.
func (o *SummaryTimeCounterResponse) GetEstimates() SummaryTimeCounterEstimateResponse {
	if o == nil || o.Estimates == nil {
		var ret SummaryTimeCounterEstimateResponse
		return ret
	}
	return *o.Estimates
}

// GetEstimatesOk returns a tuple with the Estimates field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SummaryTimeCounterResponse) GetEstimatesOk() (*SummaryTimeCounterEstimateResponse, bool) {
	if o == nil || o.Estimates == nil {
		return nil, false
	}
	return o.Estimates, true
}

// HasEstimates returns a boolean if a field has been set.
func (o *SummaryTimeCounterResponse) HasEstimates() bool {
	if o != nil && o.Estimates != nil {
		return true
	}

	return false
}

// SetEstimates gets a reference to the given SummaryTimeCounterEstimateResponse and assigns it to the Estimates field.
func (o *SummaryTimeCounterResponse) SetEstimates(v SummaryTimeCounterEstimateResponse) {
	o.Estimates = &v
}

// GetTotals returns the Totals field value if set, zero value otherwise.
func (o *SummaryTimeCounterResponse) GetTotals() SummaryTimeCounterTotalResponse {
	if o == nil || o.Totals == nil {
		var ret SummaryTimeCounterTotalResponse
		return ret
	}
	return *o.Totals
}

// GetTotalsOk returns a tuple with the Totals field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SummaryTimeCounterResponse) GetTotalsOk() (*SummaryTimeCounterTotalResponse, bool) {
	if o == nil || o.Totals == nil {
		return nil, false
	}
	return o.Totals, true
}

// HasTotals returns a boolean if a field has been set.
func (o *SummaryTimeCounterResponse) HasTotals() bool {
	if o != nil && o.Totals != nil {
		return true
	}

	return false
}

// SetTotals gets a reference to the given SummaryTimeCounterTotalResponse and assigns it to the Totals field.
func (o *SummaryTimeCounterResponse) SetTotals(v SummaryTimeCounterTotalResponse) {
	o.Totals = &v
}

func (o SummaryTimeCounterResponse) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.Estimates != nil {
		toSerialize["estimates"] = o.Estimates
	}
	if o.Totals != nil {
		toSerialize["totals"] = o.Totals
	}
	return json.Marshal(toSerialize)
}

type NullableSummaryTimeCounterResponse struct {
	value *SummaryTimeCounterResponse
	isSet bool
}

func (v NullableSummaryTimeCounterResponse) Get() *SummaryTimeCounterResponse {
	return v.value
}

func (v *NullableSummaryTimeCounterResponse) Set(val *SummaryTimeCounterResponse) {
	v.value = val
	v.isSet = true
}

func (v NullableSummaryTimeCounterResponse) IsSet() bool {
	return v.isSet
}

func (v *NullableSummaryTimeCounterResponse) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableSummaryTimeCounterResponse(val *SummaryTimeCounterResponse) *NullableSummaryTimeCounterResponse {
	return &NullableSummaryTimeCounterResponse{value: val, isSet: true}
}

func (v NullableSummaryTimeCounterResponse) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableSummaryTimeCounterResponse) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


