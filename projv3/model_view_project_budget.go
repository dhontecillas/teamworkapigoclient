/*
 * Teamwork.com Projects API
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * API version: 3.0
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package projv3

import (
	"encoding/json"
)

// ViewProjectBudget ProjectBudget contains all the information returned from a budget.
type ViewProjectBudget struct {
	Capacity *int32 `json:"capacity,omitempty"`
	CapacityUsed *int32 `json:"capacityUsed,omitempty"`
	CompletedAt *string `json:"completedAt,omitempty"`
	CompletedBy *int32 `json:"completedBy,omitempty"`
	CompletedByUserId *int32 `json:"completedByUserId,omitempty"`
	CreatedAt *string `json:"createdAt,omitempty"`
	CreatedBy *int32 `json:"createdBy,omitempty"`
	CreatedByUserId *int32 `json:"createdByUserId,omitempty"`
	CurrencyCode *string `json:"currencyCode,omitempty"`
	DateCompleted *string `json:"dateCompleted,omitempty"`
	DateCreated *string `json:"dateCreated,omitempty"`
	DateDeleted *string `json:"dateDeleted,omitempty"`
	DateUpdated *string `json:"dateUpdated,omitempty"`
	DefaultRate *float32 `json:"defaultRate,omitempty"`
	DeletedAt *string `json:"deletedAt,omitempty"`
	DeletedBy *int32 `json:"deletedBy,omitempty"`
	DeletedByUserId *int32 `json:"deletedByUserId,omitempty"`
	EndDateTime *string `json:"endDateTime,omitempty"`
	ExpenseType *string `json:"expenseType,omitempty"`
	Id *int32 `json:"id,omitempty"`
	IsRepeating *bool `json:"isRepeating,omitempty"`
	NotificationIds *[]int32 `json:"notificationIds,omitempty"`
	Notifications *[]ViewRelationship `json:"notifications,omitempty"`
	OriginatorBudget *ViewRelationship `json:"originatorBudget,omitempty"`
	OriginatorBudgetId *int32 `json:"originatorBudgetId,omitempty"`
	Project *ViewRelationship `json:"project,omitempty"`
	ProjectId *int32 `json:"projectId,omitempty"`
	RepeatPeriod *int32 `json:"repeatPeriod,omitempty"`
	RepeatUnit *string `json:"repeatUnit,omitempty"`
	RepeatsRemaining *int32 `json:"repeatsRemaining,omitempty"`
	SequenceNumber *int32 `json:"sequenceNumber,omitempty"`
	StartDateTime *string `json:"startDateTime,omitempty"`
	Status *string `json:"status,omitempty"`
	TimelogType *string `json:"timelogType,omitempty"`
	Type *string `json:"type,omitempty"`
	UpdatedAt *string `json:"updatedAt,omitempty"`
	UpdatedBy *int32 `json:"updatedBy,omitempty"`
	UpdatedByUserId *int32 `json:"updatedByUserId,omitempty"`
}

// NewViewProjectBudget instantiates a new ViewProjectBudget object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewViewProjectBudget() *ViewProjectBudget {
	this := ViewProjectBudget{}
	return &this
}

// NewViewProjectBudgetWithDefaults instantiates a new ViewProjectBudget object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewViewProjectBudgetWithDefaults() *ViewProjectBudget {
	this := ViewProjectBudget{}
	return &this
}

// GetCapacity returns the Capacity field value if set, zero value otherwise.
func (o *ViewProjectBudget) GetCapacity() int32 {
	if o == nil || o.Capacity == nil {
		var ret int32
		return ret
	}
	return *o.Capacity
}

// GetCapacityOk returns a tuple with the Capacity field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ViewProjectBudget) GetCapacityOk() (*int32, bool) {
	if o == nil || o.Capacity == nil {
		return nil, false
	}
	return o.Capacity, true
}

// HasCapacity returns a boolean if a field has been set.
func (o *ViewProjectBudget) HasCapacity() bool {
	if o != nil && o.Capacity != nil {
		return true
	}

	return false
}

// SetCapacity gets a reference to the given int32 and assigns it to the Capacity field.
func (o *ViewProjectBudget) SetCapacity(v int32) {
	o.Capacity = &v
}

// GetCapacityUsed returns the CapacityUsed field value if set, zero value otherwise.
func (o *ViewProjectBudget) GetCapacityUsed() int32 {
	if o == nil || o.CapacityUsed == nil {
		var ret int32
		return ret
	}
	return *o.CapacityUsed
}

// GetCapacityUsedOk returns a tuple with the CapacityUsed field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ViewProjectBudget) GetCapacityUsedOk() (*int32, bool) {
	if o == nil || o.CapacityUsed == nil {
		return nil, false
	}
	return o.CapacityUsed, true
}

// HasCapacityUsed returns a boolean if a field has been set.
func (o *ViewProjectBudget) HasCapacityUsed() bool {
	if o != nil && o.CapacityUsed != nil {
		return true
	}

	return false
}

// SetCapacityUsed gets a reference to the given int32 and assigns it to the CapacityUsed field.
func (o *ViewProjectBudget) SetCapacityUsed(v int32) {
	o.CapacityUsed = &v
}

// GetCompletedAt returns the CompletedAt field value if set, zero value otherwise.
func (o *ViewProjectBudget) GetCompletedAt() string {
	if o == nil || o.CompletedAt == nil {
		var ret string
		return ret
	}
	return *o.CompletedAt
}

// GetCompletedAtOk returns a tuple with the CompletedAt field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ViewProjectBudget) GetCompletedAtOk() (*string, bool) {
	if o == nil || o.CompletedAt == nil {
		return nil, false
	}
	return o.CompletedAt, true
}

// HasCompletedAt returns a boolean if a field has been set.
func (o *ViewProjectBudget) HasCompletedAt() bool {
	if o != nil && o.CompletedAt != nil {
		return true
	}

	return false
}

// SetCompletedAt gets a reference to the given string and assigns it to the CompletedAt field.
func (o *ViewProjectBudget) SetCompletedAt(v string) {
	o.CompletedAt = &v
}

// GetCompletedBy returns the CompletedBy field value if set, zero value otherwise.
func (o *ViewProjectBudget) GetCompletedBy() int32 {
	if o == nil || o.CompletedBy == nil {
		var ret int32
		return ret
	}
	return *o.CompletedBy
}

// GetCompletedByOk returns a tuple with the CompletedBy field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ViewProjectBudget) GetCompletedByOk() (*int32, bool) {
	if o == nil || o.CompletedBy == nil {
		return nil, false
	}
	return o.CompletedBy, true
}

// HasCompletedBy returns a boolean if a field has been set.
func (o *ViewProjectBudget) HasCompletedBy() bool {
	if o != nil && o.CompletedBy != nil {
		return true
	}

	return false
}

// SetCompletedBy gets a reference to the given int32 and assigns it to the CompletedBy field.
func (o *ViewProjectBudget) SetCompletedBy(v int32) {
	o.CompletedBy = &v
}

// GetCompletedByUserId returns the CompletedByUserId field value if set, zero value otherwise.
func (o *ViewProjectBudget) GetCompletedByUserId() int32 {
	if o == nil || o.CompletedByUserId == nil {
		var ret int32
		return ret
	}
	return *o.CompletedByUserId
}

// GetCompletedByUserIdOk returns a tuple with the CompletedByUserId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ViewProjectBudget) GetCompletedByUserIdOk() (*int32, bool) {
	if o == nil || o.CompletedByUserId == nil {
		return nil, false
	}
	return o.CompletedByUserId, true
}

// HasCompletedByUserId returns a boolean if a field has been set.
func (o *ViewProjectBudget) HasCompletedByUserId() bool {
	if o != nil && o.CompletedByUserId != nil {
		return true
	}

	return false
}

// SetCompletedByUserId gets a reference to the given int32 and assigns it to the CompletedByUserId field.
func (o *ViewProjectBudget) SetCompletedByUserId(v int32) {
	o.CompletedByUserId = &v
}

// GetCreatedAt returns the CreatedAt field value if set, zero value otherwise.
func (o *ViewProjectBudget) GetCreatedAt() string {
	if o == nil || o.CreatedAt == nil {
		var ret string
		return ret
	}
	return *o.CreatedAt
}

// GetCreatedAtOk returns a tuple with the CreatedAt field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ViewProjectBudget) GetCreatedAtOk() (*string, bool) {
	if o == nil || o.CreatedAt == nil {
		return nil, false
	}
	return o.CreatedAt, true
}

// HasCreatedAt returns a boolean if a field has been set.
func (o *ViewProjectBudget) HasCreatedAt() bool {
	if o != nil && o.CreatedAt != nil {
		return true
	}

	return false
}

// SetCreatedAt gets a reference to the given string and assigns it to the CreatedAt field.
func (o *ViewProjectBudget) SetCreatedAt(v string) {
	o.CreatedAt = &v
}

// GetCreatedBy returns the CreatedBy field value if set, zero value otherwise.
func (o *ViewProjectBudget) GetCreatedBy() int32 {
	if o == nil || o.CreatedBy == nil {
		var ret int32
		return ret
	}
	return *o.CreatedBy
}

// GetCreatedByOk returns a tuple with the CreatedBy field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ViewProjectBudget) GetCreatedByOk() (*int32, bool) {
	if o == nil || o.CreatedBy == nil {
		return nil, false
	}
	return o.CreatedBy, true
}

// HasCreatedBy returns a boolean if a field has been set.
func (o *ViewProjectBudget) HasCreatedBy() bool {
	if o != nil && o.CreatedBy != nil {
		return true
	}

	return false
}

// SetCreatedBy gets a reference to the given int32 and assigns it to the CreatedBy field.
func (o *ViewProjectBudget) SetCreatedBy(v int32) {
	o.CreatedBy = &v
}

// GetCreatedByUserId returns the CreatedByUserId field value if set, zero value otherwise.
func (o *ViewProjectBudget) GetCreatedByUserId() int32 {
	if o == nil || o.CreatedByUserId == nil {
		var ret int32
		return ret
	}
	return *o.CreatedByUserId
}

// GetCreatedByUserIdOk returns a tuple with the CreatedByUserId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ViewProjectBudget) GetCreatedByUserIdOk() (*int32, bool) {
	if o == nil || o.CreatedByUserId == nil {
		return nil, false
	}
	return o.CreatedByUserId, true
}

// HasCreatedByUserId returns a boolean if a field has been set.
func (o *ViewProjectBudget) HasCreatedByUserId() bool {
	if o != nil && o.CreatedByUserId != nil {
		return true
	}

	return false
}

// SetCreatedByUserId gets a reference to the given int32 and assigns it to the CreatedByUserId field.
func (o *ViewProjectBudget) SetCreatedByUserId(v int32) {
	o.CreatedByUserId = &v
}

// GetCurrencyCode returns the CurrencyCode field value if set, zero value otherwise.
func (o *ViewProjectBudget) GetCurrencyCode() string {
	if o == nil || o.CurrencyCode == nil {
		var ret string
		return ret
	}
	return *o.CurrencyCode
}

// GetCurrencyCodeOk returns a tuple with the CurrencyCode field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ViewProjectBudget) GetCurrencyCodeOk() (*string, bool) {
	if o == nil || o.CurrencyCode == nil {
		return nil, false
	}
	return o.CurrencyCode, true
}

// HasCurrencyCode returns a boolean if a field has been set.
func (o *ViewProjectBudget) HasCurrencyCode() bool {
	if o != nil && o.CurrencyCode != nil {
		return true
	}

	return false
}

// SetCurrencyCode gets a reference to the given string and assigns it to the CurrencyCode field.
func (o *ViewProjectBudget) SetCurrencyCode(v string) {
	o.CurrencyCode = &v
}

// GetDateCompleted returns the DateCompleted field value if set, zero value otherwise.
func (o *ViewProjectBudget) GetDateCompleted() string {
	if o == nil || o.DateCompleted == nil {
		var ret string
		return ret
	}
	return *o.DateCompleted
}

// GetDateCompletedOk returns a tuple with the DateCompleted field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ViewProjectBudget) GetDateCompletedOk() (*string, bool) {
	if o == nil || o.DateCompleted == nil {
		return nil, false
	}
	return o.DateCompleted, true
}

// HasDateCompleted returns a boolean if a field has been set.
func (o *ViewProjectBudget) HasDateCompleted() bool {
	if o != nil && o.DateCompleted != nil {
		return true
	}

	return false
}

// SetDateCompleted gets a reference to the given string and assigns it to the DateCompleted field.
func (o *ViewProjectBudget) SetDateCompleted(v string) {
	o.DateCompleted = &v
}

// GetDateCreated returns the DateCreated field value if set, zero value otherwise.
func (o *ViewProjectBudget) GetDateCreated() string {
	if o == nil || o.DateCreated == nil {
		var ret string
		return ret
	}
	return *o.DateCreated
}

// GetDateCreatedOk returns a tuple with the DateCreated field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ViewProjectBudget) GetDateCreatedOk() (*string, bool) {
	if o == nil || o.DateCreated == nil {
		return nil, false
	}
	return o.DateCreated, true
}

// HasDateCreated returns a boolean if a field has been set.
func (o *ViewProjectBudget) HasDateCreated() bool {
	if o != nil && o.DateCreated != nil {
		return true
	}

	return false
}

// SetDateCreated gets a reference to the given string and assigns it to the DateCreated field.
func (o *ViewProjectBudget) SetDateCreated(v string) {
	o.DateCreated = &v
}

// GetDateDeleted returns the DateDeleted field value if set, zero value otherwise.
func (o *ViewProjectBudget) GetDateDeleted() string {
	if o == nil || o.DateDeleted == nil {
		var ret string
		return ret
	}
	return *o.DateDeleted
}

// GetDateDeletedOk returns a tuple with the DateDeleted field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ViewProjectBudget) GetDateDeletedOk() (*string, bool) {
	if o == nil || o.DateDeleted == nil {
		return nil, false
	}
	return o.DateDeleted, true
}

// HasDateDeleted returns a boolean if a field has been set.
func (o *ViewProjectBudget) HasDateDeleted() bool {
	if o != nil && o.DateDeleted != nil {
		return true
	}

	return false
}

// SetDateDeleted gets a reference to the given string and assigns it to the DateDeleted field.
func (o *ViewProjectBudget) SetDateDeleted(v string) {
	o.DateDeleted = &v
}

// GetDateUpdated returns the DateUpdated field value if set, zero value otherwise.
func (o *ViewProjectBudget) GetDateUpdated() string {
	if o == nil || o.DateUpdated == nil {
		var ret string
		return ret
	}
	return *o.DateUpdated
}

// GetDateUpdatedOk returns a tuple with the DateUpdated field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ViewProjectBudget) GetDateUpdatedOk() (*string, bool) {
	if o == nil || o.DateUpdated == nil {
		return nil, false
	}
	return o.DateUpdated, true
}

// HasDateUpdated returns a boolean if a field has been set.
func (o *ViewProjectBudget) HasDateUpdated() bool {
	if o != nil && o.DateUpdated != nil {
		return true
	}

	return false
}

// SetDateUpdated gets a reference to the given string and assigns it to the DateUpdated field.
func (o *ViewProjectBudget) SetDateUpdated(v string) {
	o.DateUpdated = &v
}

// GetDefaultRate returns the DefaultRate field value if set, zero value otherwise.
func (o *ViewProjectBudget) GetDefaultRate() float32 {
	if o == nil || o.DefaultRate == nil {
		var ret float32
		return ret
	}
	return *o.DefaultRate
}

// GetDefaultRateOk returns a tuple with the DefaultRate field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ViewProjectBudget) GetDefaultRateOk() (*float32, bool) {
	if o == nil || o.DefaultRate == nil {
		return nil, false
	}
	return o.DefaultRate, true
}

// HasDefaultRate returns a boolean if a field has been set.
func (o *ViewProjectBudget) HasDefaultRate() bool {
	if o != nil && o.DefaultRate != nil {
		return true
	}

	return false
}

// SetDefaultRate gets a reference to the given float32 and assigns it to the DefaultRate field.
func (o *ViewProjectBudget) SetDefaultRate(v float32) {
	o.DefaultRate = &v
}

// GetDeletedAt returns the DeletedAt field value if set, zero value otherwise.
func (o *ViewProjectBudget) GetDeletedAt() string {
	if o == nil || o.DeletedAt == nil {
		var ret string
		return ret
	}
	return *o.DeletedAt
}

// GetDeletedAtOk returns a tuple with the DeletedAt field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ViewProjectBudget) GetDeletedAtOk() (*string, bool) {
	if o == nil || o.DeletedAt == nil {
		return nil, false
	}
	return o.DeletedAt, true
}

// HasDeletedAt returns a boolean if a field has been set.
func (o *ViewProjectBudget) HasDeletedAt() bool {
	if o != nil && o.DeletedAt != nil {
		return true
	}

	return false
}

// SetDeletedAt gets a reference to the given string and assigns it to the DeletedAt field.
func (o *ViewProjectBudget) SetDeletedAt(v string) {
	o.DeletedAt = &v
}

// GetDeletedBy returns the DeletedBy field value if set, zero value otherwise.
func (o *ViewProjectBudget) GetDeletedBy() int32 {
	if o == nil || o.DeletedBy == nil {
		var ret int32
		return ret
	}
	return *o.DeletedBy
}

// GetDeletedByOk returns a tuple with the DeletedBy field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ViewProjectBudget) GetDeletedByOk() (*int32, bool) {
	if o == nil || o.DeletedBy == nil {
		return nil, false
	}
	return o.DeletedBy, true
}

// HasDeletedBy returns a boolean if a field has been set.
func (o *ViewProjectBudget) HasDeletedBy() bool {
	if o != nil && o.DeletedBy != nil {
		return true
	}

	return false
}

// SetDeletedBy gets a reference to the given int32 and assigns it to the DeletedBy field.
func (o *ViewProjectBudget) SetDeletedBy(v int32) {
	o.DeletedBy = &v
}

// GetDeletedByUserId returns the DeletedByUserId field value if set, zero value otherwise.
func (o *ViewProjectBudget) GetDeletedByUserId() int32 {
	if o == nil || o.DeletedByUserId == nil {
		var ret int32
		return ret
	}
	return *o.DeletedByUserId
}

// GetDeletedByUserIdOk returns a tuple with the DeletedByUserId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ViewProjectBudget) GetDeletedByUserIdOk() (*int32, bool) {
	if o == nil || o.DeletedByUserId == nil {
		return nil, false
	}
	return o.DeletedByUserId, true
}

// HasDeletedByUserId returns a boolean if a field has been set.
func (o *ViewProjectBudget) HasDeletedByUserId() bool {
	if o != nil && o.DeletedByUserId != nil {
		return true
	}

	return false
}

// SetDeletedByUserId gets a reference to the given int32 and assigns it to the DeletedByUserId field.
func (o *ViewProjectBudget) SetDeletedByUserId(v int32) {
	o.DeletedByUserId = &v
}

// GetEndDateTime returns the EndDateTime field value if set, zero value otherwise.
func (o *ViewProjectBudget) GetEndDateTime() string {
	if o == nil || o.EndDateTime == nil {
		var ret string
		return ret
	}
	return *o.EndDateTime
}

// GetEndDateTimeOk returns a tuple with the EndDateTime field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ViewProjectBudget) GetEndDateTimeOk() (*string, bool) {
	if o == nil || o.EndDateTime == nil {
		return nil, false
	}
	return o.EndDateTime, true
}

// HasEndDateTime returns a boolean if a field has been set.
func (o *ViewProjectBudget) HasEndDateTime() bool {
	if o != nil && o.EndDateTime != nil {
		return true
	}

	return false
}

// SetEndDateTime gets a reference to the given string and assigns it to the EndDateTime field.
func (o *ViewProjectBudget) SetEndDateTime(v string) {
	o.EndDateTime = &v
}

// GetExpenseType returns the ExpenseType field value if set, zero value otherwise.
func (o *ViewProjectBudget) GetExpenseType() string {
	if o == nil || o.ExpenseType == nil {
		var ret string
		return ret
	}
	return *o.ExpenseType
}

// GetExpenseTypeOk returns a tuple with the ExpenseType field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ViewProjectBudget) GetExpenseTypeOk() (*string, bool) {
	if o == nil || o.ExpenseType == nil {
		return nil, false
	}
	return o.ExpenseType, true
}

// HasExpenseType returns a boolean if a field has been set.
func (o *ViewProjectBudget) HasExpenseType() bool {
	if o != nil && o.ExpenseType != nil {
		return true
	}

	return false
}

// SetExpenseType gets a reference to the given string and assigns it to the ExpenseType field.
func (o *ViewProjectBudget) SetExpenseType(v string) {
	o.ExpenseType = &v
}

// GetId returns the Id field value if set, zero value otherwise.
func (o *ViewProjectBudget) GetId() int32 {
	if o == nil || o.Id == nil {
		var ret int32
		return ret
	}
	return *o.Id
}

// GetIdOk returns a tuple with the Id field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ViewProjectBudget) GetIdOk() (*int32, bool) {
	if o == nil || o.Id == nil {
		return nil, false
	}
	return o.Id, true
}

// HasId returns a boolean if a field has been set.
func (o *ViewProjectBudget) HasId() bool {
	if o != nil && o.Id != nil {
		return true
	}

	return false
}

// SetId gets a reference to the given int32 and assigns it to the Id field.
func (o *ViewProjectBudget) SetId(v int32) {
	o.Id = &v
}

// GetIsRepeating returns the IsRepeating field value if set, zero value otherwise.
func (o *ViewProjectBudget) GetIsRepeating() bool {
	if o == nil || o.IsRepeating == nil {
		var ret bool
		return ret
	}
	return *o.IsRepeating
}

// GetIsRepeatingOk returns a tuple with the IsRepeating field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ViewProjectBudget) GetIsRepeatingOk() (*bool, bool) {
	if o == nil || o.IsRepeating == nil {
		return nil, false
	}
	return o.IsRepeating, true
}

// HasIsRepeating returns a boolean if a field has been set.
func (o *ViewProjectBudget) HasIsRepeating() bool {
	if o != nil && o.IsRepeating != nil {
		return true
	}

	return false
}

// SetIsRepeating gets a reference to the given bool and assigns it to the IsRepeating field.
func (o *ViewProjectBudget) SetIsRepeating(v bool) {
	o.IsRepeating = &v
}

// GetNotificationIds returns the NotificationIds field value if set, zero value otherwise.
func (o *ViewProjectBudget) GetNotificationIds() []int32 {
	if o == nil || o.NotificationIds == nil {
		var ret []int32
		return ret
	}
	return *o.NotificationIds
}

// GetNotificationIdsOk returns a tuple with the NotificationIds field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ViewProjectBudget) GetNotificationIdsOk() (*[]int32, bool) {
	if o == nil || o.NotificationIds == nil {
		return nil, false
	}
	return o.NotificationIds, true
}

// HasNotificationIds returns a boolean if a field has been set.
func (o *ViewProjectBudget) HasNotificationIds() bool {
	if o != nil && o.NotificationIds != nil {
		return true
	}

	return false
}

// SetNotificationIds gets a reference to the given []int32 and assigns it to the NotificationIds field.
func (o *ViewProjectBudget) SetNotificationIds(v []int32) {
	o.NotificationIds = &v
}

// GetNotifications returns the Notifications field value if set, zero value otherwise.
func (o *ViewProjectBudget) GetNotifications() []ViewRelationship {
	if o == nil || o.Notifications == nil {
		var ret []ViewRelationship
		return ret
	}
	return *o.Notifications
}

// GetNotificationsOk returns a tuple with the Notifications field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ViewProjectBudget) GetNotificationsOk() (*[]ViewRelationship, bool) {
	if o == nil || o.Notifications == nil {
		return nil, false
	}
	return o.Notifications, true
}

// HasNotifications returns a boolean if a field has been set.
func (o *ViewProjectBudget) HasNotifications() bool {
	if o != nil && o.Notifications != nil {
		return true
	}

	return false
}

// SetNotifications gets a reference to the given []ViewRelationship and assigns it to the Notifications field.
func (o *ViewProjectBudget) SetNotifications(v []ViewRelationship) {
	o.Notifications = &v
}

// GetOriginatorBudget returns the OriginatorBudget field value if set, zero value otherwise.
func (o *ViewProjectBudget) GetOriginatorBudget() ViewRelationship {
	if o == nil || o.OriginatorBudget == nil {
		var ret ViewRelationship
		return ret
	}
	return *o.OriginatorBudget
}

// GetOriginatorBudgetOk returns a tuple with the OriginatorBudget field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ViewProjectBudget) GetOriginatorBudgetOk() (*ViewRelationship, bool) {
	if o == nil || o.OriginatorBudget == nil {
		return nil, false
	}
	return o.OriginatorBudget, true
}

// HasOriginatorBudget returns a boolean if a field has been set.
func (o *ViewProjectBudget) HasOriginatorBudget() bool {
	if o != nil && o.OriginatorBudget != nil {
		return true
	}

	return false
}

// SetOriginatorBudget gets a reference to the given ViewRelationship and assigns it to the OriginatorBudget field.
func (o *ViewProjectBudget) SetOriginatorBudget(v ViewRelationship) {
	o.OriginatorBudget = &v
}

// GetOriginatorBudgetId returns the OriginatorBudgetId field value if set, zero value otherwise.
func (o *ViewProjectBudget) GetOriginatorBudgetId() int32 {
	if o == nil || o.OriginatorBudgetId == nil {
		var ret int32
		return ret
	}
	return *o.OriginatorBudgetId
}

// GetOriginatorBudgetIdOk returns a tuple with the OriginatorBudgetId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ViewProjectBudget) GetOriginatorBudgetIdOk() (*int32, bool) {
	if o == nil || o.OriginatorBudgetId == nil {
		return nil, false
	}
	return o.OriginatorBudgetId, true
}

// HasOriginatorBudgetId returns a boolean if a field has been set.
func (o *ViewProjectBudget) HasOriginatorBudgetId() bool {
	if o != nil && o.OriginatorBudgetId != nil {
		return true
	}

	return false
}

// SetOriginatorBudgetId gets a reference to the given int32 and assigns it to the OriginatorBudgetId field.
func (o *ViewProjectBudget) SetOriginatorBudgetId(v int32) {
	o.OriginatorBudgetId = &v
}

// GetProject returns the Project field value if set, zero value otherwise.
func (o *ViewProjectBudget) GetProject() ViewRelationship {
	if o == nil || o.Project == nil {
		var ret ViewRelationship
		return ret
	}
	return *o.Project
}

// GetProjectOk returns a tuple with the Project field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ViewProjectBudget) GetProjectOk() (*ViewRelationship, bool) {
	if o == nil || o.Project == nil {
		return nil, false
	}
	return o.Project, true
}

// HasProject returns a boolean if a field has been set.
func (o *ViewProjectBudget) HasProject() bool {
	if o != nil && o.Project != nil {
		return true
	}

	return false
}

// SetProject gets a reference to the given ViewRelationship and assigns it to the Project field.
func (o *ViewProjectBudget) SetProject(v ViewRelationship) {
	o.Project = &v
}

// GetProjectId returns the ProjectId field value if set, zero value otherwise.
func (o *ViewProjectBudget) GetProjectId() int32 {
	if o == nil || o.ProjectId == nil {
		var ret int32
		return ret
	}
	return *o.ProjectId
}

// GetProjectIdOk returns a tuple with the ProjectId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ViewProjectBudget) GetProjectIdOk() (*int32, bool) {
	if o == nil || o.ProjectId == nil {
		return nil, false
	}
	return o.ProjectId, true
}

// HasProjectId returns a boolean if a field has been set.
func (o *ViewProjectBudget) HasProjectId() bool {
	if o != nil && o.ProjectId != nil {
		return true
	}

	return false
}

// SetProjectId gets a reference to the given int32 and assigns it to the ProjectId field.
func (o *ViewProjectBudget) SetProjectId(v int32) {
	o.ProjectId = &v
}

// GetRepeatPeriod returns the RepeatPeriod field value if set, zero value otherwise.
func (o *ViewProjectBudget) GetRepeatPeriod() int32 {
	if o == nil || o.RepeatPeriod == nil {
		var ret int32
		return ret
	}
	return *o.RepeatPeriod
}

// GetRepeatPeriodOk returns a tuple with the RepeatPeriod field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ViewProjectBudget) GetRepeatPeriodOk() (*int32, bool) {
	if o == nil || o.RepeatPeriod == nil {
		return nil, false
	}
	return o.RepeatPeriod, true
}

// HasRepeatPeriod returns a boolean if a field has been set.
func (o *ViewProjectBudget) HasRepeatPeriod() bool {
	if o != nil && o.RepeatPeriod != nil {
		return true
	}

	return false
}

// SetRepeatPeriod gets a reference to the given int32 and assigns it to the RepeatPeriod field.
func (o *ViewProjectBudget) SetRepeatPeriod(v int32) {
	o.RepeatPeriod = &v
}

// GetRepeatUnit returns the RepeatUnit field value if set, zero value otherwise.
func (o *ViewProjectBudget) GetRepeatUnit() string {
	if o == nil || o.RepeatUnit == nil {
		var ret string
		return ret
	}
	return *o.RepeatUnit
}

// GetRepeatUnitOk returns a tuple with the RepeatUnit field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ViewProjectBudget) GetRepeatUnitOk() (*string, bool) {
	if o == nil || o.RepeatUnit == nil {
		return nil, false
	}
	return o.RepeatUnit, true
}

// HasRepeatUnit returns a boolean if a field has been set.
func (o *ViewProjectBudget) HasRepeatUnit() bool {
	if o != nil && o.RepeatUnit != nil {
		return true
	}

	return false
}

// SetRepeatUnit gets a reference to the given string and assigns it to the RepeatUnit field.
func (o *ViewProjectBudget) SetRepeatUnit(v string) {
	o.RepeatUnit = &v
}

// GetRepeatsRemaining returns the RepeatsRemaining field value if set, zero value otherwise.
func (o *ViewProjectBudget) GetRepeatsRemaining() int32 {
	if o == nil || o.RepeatsRemaining == nil {
		var ret int32
		return ret
	}
	return *o.RepeatsRemaining
}

// GetRepeatsRemainingOk returns a tuple with the RepeatsRemaining field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ViewProjectBudget) GetRepeatsRemainingOk() (*int32, bool) {
	if o == nil || o.RepeatsRemaining == nil {
		return nil, false
	}
	return o.RepeatsRemaining, true
}

// HasRepeatsRemaining returns a boolean if a field has been set.
func (o *ViewProjectBudget) HasRepeatsRemaining() bool {
	if o != nil && o.RepeatsRemaining != nil {
		return true
	}

	return false
}

// SetRepeatsRemaining gets a reference to the given int32 and assigns it to the RepeatsRemaining field.
func (o *ViewProjectBudget) SetRepeatsRemaining(v int32) {
	o.RepeatsRemaining = &v
}

// GetSequenceNumber returns the SequenceNumber field value if set, zero value otherwise.
func (o *ViewProjectBudget) GetSequenceNumber() int32 {
	if o == nil || o.SequenceNumber == nil {
		var ret int32
		return ret
	}
	return *o.SequenceNumber
}

// GetSequenceNumberOk returns a tuple with the SequenceNumber field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ViewProjectBudget) GetSequenceNumberOk() (*int32, bool) {
	if o == nil || o.SequenceNumber == nil {
		return nil, false
	}
	return o.SequenceNumber, true
}

// HasSequenceNumber returns a boolean if a field has been set.
func (o *ViewProjectBudget) HasSequenceNumber() bool {
	if o != nil && o.SequenceNumber != nil {
		return true
	}

	return false
}

// SetSequenceNumber gets a reference to the given int32 and assigns it to the SequenceNumber field.
func (o *ViewProjectBudget) SetSequenceNumber(v int32) {
	o.SequenceNumber = &v
}

// GetStartDateTime returns the StartDateTime field value if set, zero value otherwise.
func (o *ViewProjectBudget) GetStartDateTime() string {
	if o == nil || o.StartDateTime == nil {
		var ret string
		return ret
	}
	return *o.StartDateTime
}

// GetStartDateTimeOk returns a tuple with the StartDateTime field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ViewProjectBudget) GetStartDateTimeOk() (*string, bool) {
	if o == nil || o.StartDateTime == nil {
		return nil, false
	}
	return o.StartDateTime, true
}

// HasStartDateTime returns a boolean if a field has been set.
func (o *ViewProjectBudget) HasStartDateTime() bool {
	if o != nil && o.StartDateTime != nil {
		return true
	}

	return false
}

// SetStartDateTime gets a reference to the given string and assigns it to the StartDateTime field.
func (o *ViewProjectBudget) SetStartDateTime(v string) {
	o.StartDateTime = &v
}

// GetStatus returns the Status field value if set, zero value otherwise.
func (o *ViewProjectBudget) GetStatus() string {
	if o == nil || o.Status == nil {
		var ret string
		return ret
	}
	return *o.Status
}

// GetStatusOk returns a tuple with the Status field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ViewProjectBudget) GetStatusOk() (*string, bool) {
	if o == nil || o.Status == nil {
		return nil, false
	}
	return o.Status, true
}

// HasStatus returns a boolean if a field has been set.
func (o *ViewProjectBudget) HasStatus() bool {
	if o != nil && o.Status != nil {
		return true
	}

	return false
}

// SetStatus gets a reference to the given string and assigns it to the Status field.
func (o *ViewProjectBudget) SetStatus(v string) {
	o.Status = &v
}

// GetTimelogType returns the TimelogType field value if set, zero value otherwise.
func (o *ViewProjectBudget) GetTimelogType() string {
	if o == nil || o.TimelogType == nil {
		var ret string
		return ret
	}
	return *o.TimelogType
}

// GetTimelogTypeOk returns a tuple with the TimelogType field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ViewProjectBudget) GetTimelogTypeOk() (*string, bool) {
	if o == nil || o.TimelogType == nil {
		return nil, false
	}
	return o.TimelogType, true
}

// HasTimelogType returns a boolean if a field has been set.
func (o *ViewProjectBudget) HasTimelogType() bool {
	if o != nil && o.TimelogType != nil {
		return true
	}

	return false
}

// SetTimelogType gets a reference to the given string and assigns it to the TimelogType field.
func (o *ViewProjectBudget) SetTimelogType(v string) {
	o.TimelogType = &v
}

// GetType returns the Type field value if set, zero value otherwise.
func (o *ViewProjectBudget) GetType() string {
	if o == nil || o.Type == nil {
		var ret string
		return ret
	}
	return *o.Type
}

// GetTypeOk returns a tuple with the Type field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ViewProjectBudget) GetTypeOk() (*string, bool) {
	if o == nil || o.Type == nil {
		return nil, false
	}
	return o.Type, true
}

// HasType returns a boolean if a field has been set.
func (o *ViewProjectBudget) HasType() bool {
	if o != nil && o.Type != nil {
		return true
	}

	return false
}

// SetType gets a reference to the given string and assigns it to the Type field.
func (o *ViewProjectBudget) SetType(v string) {
	o.Type = &v
}

// GetUpdatedAt returns the UpdatedAt field value if set, zero value otherwise.
func (o *ViewProjectBudget) GetUpdatedAt() string {
	if o == nil || o.UpdatedAt == nil {
		var ret string
		return ret
	}
	return *o.UpdatedAt
}

// GetUpdatedAtOk returns a tuple with the UpdatedAt field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ViewProjectBudget) GetUpdatedAtOk() (*string, bool) {
	if o == nil || o.UpdatedAt == nil {
		return nil, false
	}
	return o.UpdatedAt, true
}

// HasUpdatedAt returns a boolean if a field has been set.
func (o *ViewProjectBudget) HasUpdatedAt() bool {
	if o != nil && o.UpdatedAt != nil {
		return true
	}

	return false
}

// SetUpdatedAt gets a reference to the given string and assigns it to the UpdatedAt field.
func (o *ViewProjectBudget) SetUpdatedAt(v string) {
	o.UpdatedAt = &v
}

// GetUpdatedBy returns the UpdatedBy field value if set, zero value otherwise.
func (o *ViewProjectBudget) GetUpdatedBy() int32 {
	if o == nil || o.UpdatedBy == nil {
		var ret int32
		return ret
	}
	return *o.UpdatedBy
}

// GetUpdatedByOk returns a tuple with the UpdatedBy field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ViewProjectBudget) GetUpdatedByOk() (*int32, bool) {
	if o == nil || o.UpdatedBy == nil {
		return nil, false
	}
	return o.UpdatedBy, true
}

// HasUpdatedBy returns a boolean if a field has been set.
func (o *ViewProjectBudget) HasUpdatedBy() bool {
	if o != nil && o.UpdatedBy != nil {
		return true
	}

	return false
}

// SetUpdatedBy gets a reference to the given int32 and assigns it to the UpdatedBy field.
func (o *ViewProjectBudget) SetUpdatedBy(v int32) {
	o.UpdatedBy = &v
}

// GetUpdatedByUserId returns the UpdatedByUserId field value if set, zero value otherwise.
func (o *ViewProjectBudget) GetUpdatedByUserId() int32 {
	if o == nil || o.UpdatedByUserId == nil {
		var ret int32
		return ret
	}
	return *o.UpdatedByUserId
}

// GetUpdatedByUserIdOk returns a tuple with the UpdatedByUserId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ViewProjectBudget) GetUpdatedByUserIdOk() (*int32, bool) {
	if o == nil || o.UpdatedByUserId == nil {
		return nil, false
	}
	return o.UpdatedByUserId, true
}

// HasUpdatedByUserId returns a boolean if a field has been set.
func (o *ViewProjectBudget) HasUpdatedByUserId() bool {
	if o != nil && o.UpdatedByUserId != nil {
		return true
	}

	return false
}

// SetUpdatedByUserId gets a reference to the given int32 and assigns it to the UpdatedByUserId field.
func (o *ViewProjectBudget) SetUpdatedByUserId(v int32) {
	o.UpdatedByUserId = &v
}

func (o ViewProjectBudget) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.Capacity != nil {
		toSerialize["capacity"] = o.Capacity
	}
	if o.CapacityUsed != nil {
		toSerialize["capacityUsed"] = o.CapacityUsed
	}
	if o.CompletedAt != nil {
		toSerialize["completedAt"] = o.CompletedAt
	}
	if o.CompletedBy != nil {
		toSerialize["completedBy"] = o.CompletedBy
	}
	if o.CompletedByUserId != nil {
		toSerialize["completedByUserId"] = o.CompletedByUserId
	}
	if o.CreatedAt != nil {
		toSerialize["createdAt"] = o.CreatedAt
	}
	if o.CreatedBy != nil {
		toSerialize["createdBy"] = o.CreatedBy
	}
	if o.CreatedByUserId != nil {
		toSerialize["createdByUserId"] = o.CreatedByUserId
	}
	if o.CurrencyCode != nil {
		toSerialize["currencyCode"] = o.CurrencyCode
	}
	if o.DateCompleted != nil {
		toSerialize["dateCompleted"] = o.DateCompleted
	}
	if o.DateCreated != nil {
		toSerialize["dateCreated"] = o.DateCreated
	}
	if o.DateDeleted != nil {
		toSerialize["dateDeleted"] = o.DateDeleted
	}
	if o.DateUpdated != nil {
		toSerialize["dateUpdated"] = o.DateUpdated
	}
	if o.DefaultRate != nil {
		toSerialize["defaultRate"] = o.DefaultRate
	}
	if o.DeletedAt != nil {
		toSerialize["deletedAt"] = o.DeletedAt
	}
	if o.DeletedBy != nil {
		toSerialize["deletedBy"] = o.DeletedBy
	}
	if o.DeletedByUserId != nil {
		toSerialize["deletedByUserId"] = o.DeletedByUserId
	}
	if o.EndDateTime != nil {
		toSerialize["endDateTime"] = o.EndDateTime
	}
	if o.ExpenseType != nil {
		toSerialize["expenseType"] = o.ExpenseType
	}
	if o.Id != nil {
		toSerialize["id"] = o.Id
	}
	if o.IsRepeating != nil {
		toSerialize["isRepeating"] = o.IsRepeating
	}
	if o.NotificationIds != nil {
		toSerialize["notificationIds"] = o.NotificationIds
	}
	if o.Notifications != nil {
		toSerialize["notifications"] = o.Notifications
	}
	if o.OriginatorBudget != nil {
		toSerialize["originatorBudget"] = o.OriginatorBudget
	}
	if o.OriginatorBudgetId != nil {
		toSerialize["originatorBudgetId"] = o.OriginatorBudgetId
	}
	if o.Project != nil {
		toSerialize["project"] = o.Project
	}
	if o.ProjectId != nil {
		toSerialize["projectId"] = o.ProjectId
	}
	if o.RepeatPeriod != nil {
		toSerialize["repeatPeriod"] = o.RepeatPeriod
	}
	if o.RepeatUnit != nil {
		toSerialize["repeatUnit"] = o.RepeatUnit
	}
	if o.RepeatsRemaining != nil {
		toSerialize["repeatsRemaining"] = o.RepeatsRemaining
	}
	if o.SequenceNumber != nil {
		toSerialize["sequenceNumber"] = o.SequenceNumber
	}
	if o.StartDateTime != nil {
		toSerialize["startDateTime"] = o.StartDateTime
	}
	if o.Status != nil {
		toSerialize["status"] = o.Status
	}
	if o.TimelogType != nil {
		toSerialize["timelogType"] = o.TimelogType
	}
	if o.Type != nil {
		toSerialize["type"] = o.Type
	}
	if o.UpdatedAt != nil {
		toSerialize["updatedAt"] = o.UpdatedAt
	}
	if o.UpdatedBy != nil {
		toSerialize["updatedBy"] = o.UpdatedBy
	}
	if o.UpdatedByUserId != nil {
		toSerialize["updatedByUserId"] = o.UpdatedByUserId
	}
	return json.Marshal(toSerialize)
}

type NullableViewProjectBudget struct {
	value *ViewProjectBudget
	isSet bool
}

func (v NullableViewProjectBudget) Get() *ViewProjectBudget {
	return v.value
}

func (v *NullableViewProjectBudget) Set(val *ViewProjectBudget) {
	v.value = val
	v.isSet = true
}

func (v NullableViewProjectBudget) IsSet() bool {
	return v.isSet
}

func (v *NullableViewProjectBudget) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableViewProjectBudget(val *ViewProjectBudget) *NullableViewProjectBudget {
	return &NullableViewProjectBudget{value: val, isSet: true}
}

func (v NullableViewProjectBudget) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableViewProjectBudget) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


