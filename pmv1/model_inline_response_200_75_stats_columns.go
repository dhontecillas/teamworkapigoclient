/*
 * Teamwork Projects API
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * API version: 
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package pmv1

import (
	"encoding/json"
)

// InlineResponse20075StatsColumns struct for InlineResponse20075StatsColumns
type InlineResponse20075StatsColumns struct {
	Count *string `json:"count,omitempty"`
}

// NewInlineResponse20075StatsColumns instantiates a new InlineResponse20075StatsColumns object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewInlineResponse20075StatsColumns() *InlineResponse20075StatsColumns {
	this := InlineResponse20075StatsColumns{}
	return &this
}

// NewInlineResponse20075StatsColumnsWithDefaults instantiates a new InlineResponse20075StatsColumns object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewInlineResponse20075StatsColumnsWithDefaults() *InlineResponse20075StatsColumns {
	this := InlineResponse20075StatsColumns{}
	return &this
}

// GetCount returns the Count field value if set, zero value otherwise.
func (o *InlineResponse20075StatsColumns) GetCount() string {
	if o == nil || o.Count == nil {
		var ret string
		return ret
	}
	return *o.Count
}

// GetCountOk returns a tuple with the Count field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InlineResponse20075StatsColumns) GetCountOk() (*string, bool) {
	if o == nil || o.Count == nil {
		return nil, false
	}
	return o.Count, true
}

// HasCount returns a boolean if a field has been set.
func (o *InlineResponse20075StatsColumns) HasCount() bool {
	if o != nil && o.Count != nil {
		return true
	}

	return false
}

// SetCount gets a reference to the given string and assigns it to the Count field.
func (o *InlineResponse20075StatsColumns) SetCount(v string) {
	o.Count = &v
}

func (o InlineResponse20075StatsColumns) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.Count != nil {
		toSerialize["count"] = o.Count
	}
	return json.Marshal(toSerialize)
}

type NullableInlineResponse20075StatsColumns struct {
	value *InlineResponse20075StatsColumns
	isSet bool
}

func (v NullableInlineResponse20075StatsColumns) Get() *InlineResponse20075StatsColumns {
	return v.value
}

func (v *NullableInlineResponse20075StatsColumns) Set(val *InlineResponse20075StatsColumns) {
	v.value = val
	v.isSet = true
}

func (v NullableInlineResponse20075StatsColumns) IsSet() bool {
	return v.isSet
}

func (v *NullableInlineResponse20075StatsColumns) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableInlineResponse20075StatsColumns(val *InlineResponse20075StatsColumns) *NullableInlineResponse20075StatsColumns {
	return &NullableInlineResponse20075StatsColumns{value: val, isSet: true}
}

func (v NullableInlineResponse20075StatsColumns) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableInlineResponse20075StatsColumns) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


