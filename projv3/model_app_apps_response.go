/*
 * Teamwork.com Projects API
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * API version: 3.0
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package projv3

import (
	"encoding/json"
)

// AppAppsResponse AppsResponse contains information about a group of apps.
type AppAppsResponse struct {
	Apps *[]ViewApp `json:"apps,omitempty"`
	Included *AppAppsResponseIncluded `json:"included,omitempty"`
	Meta *ViewMeta `json:"meta,omitempty"`
}

// NewAppAppsResponse instantiates a new AppAppsResponse object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewAppAppsResponse() *AppAppsResponse {
	this := AppAppsResponse{}
	return &this
}

// NewAppAppsResponseWithDefaults instantiates a new AppAppsResponse object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewAppAppsResponseWithDefaults() *AppAppsResponse {
	this := AppAppsResponse{}
	return &this
}

// GetApps returns the Apps field value if set, zero value otherwise.
func (o *AppAppsResponse) GetApps() []ViewApp {
	if o == nil || o.Apps == nil {
		var ret []ViewApp
		return ret
	}
	return *o.Apps
}

// GetAppsOk returns a tuple with the Apps field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AppAppsResponse) GetAppsOk() (*[]ViewApp, bool) {
	if o == nil || o.Apps == nil {
		return nil, false
	}
	return o.Apps, true
}

// HasApps returns a boolean if a field has been set.
func (o *AppAppsResponse) HasApps() bool {
	if o != nil && o.Apps != nil {
		return true
	}

	return false
}

// SetApps gets a reference to the given []ViewApp and assigns it to the Apps field.
func (o *AppAppsResponse) SetApps(v []ViewApp) {
	o.Apps = &v
}

// GetIncluded returns the Included field value if set, zero value otherwise.
func (o *AppAppsResponse) GetIncluded() AppAppsResponseIncluded {
	if o == nil || o.Included == nil {
		var ret AppAppsResponseIncluded
		return ret
	}
	return *o.Included
}

// GetIncludedOk returns a tuple with the Included field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AppAppsResponse) GetIncludedOk() (*AppAppsResponseIncluded, bool) {
	if o == nil || o.Included == nil {
		return nil, false
	}
	return o.Included, true
}

// HasIncluded returns a boolean if a field has been set.
func (o *AppAppsResponse) HasIncluded() bool {
	if o != nil && o.Included != nil {
		return true
	}

	return false
}

// SetIncluded gets a reference to the given AppAppsResponseIncluded and assigns it to the Included field.
func (o *AppAppsResponse) SetIncluded(v AppAppsResponseIncluded) {
	o.Included = &v
}

// GetMeta returns the Meta field value if set, zero value otherwise.
func (o *AppAppsResponse) GetMeta() ViewMeta {
	if o == nil || o.Meta == nil {
		var ret ViewMeta
		return ret
	}
	return *o.Meta
}

// GetMetaOk returns a tuple with the Meta field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AppAppsResponse) GetMetaOk() (*ViewMeta, bool) {
	if o == nil || o.Meta == nil {
		return nil, false
	}
	return o.Meta, true
}

// HasMeta returns a boolean if a field has been set.
func (o *AppAppsResponse) HasMeta() bool {
	if o != nil && o.Meta != nil {
		return true
	}

	return false
}

// SetMeta gets a reference to the given ViewMeta and assigns it to the Meta field.
func (o *AppAppsResponse) SetMeta(v ViewMeta) {
	o.Meta = &v
}

func (o AppAppsResponse) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.Apps != nil {
		toSerialize["apps"] = o.Apps
	}
	if o.Included != nil {
		toSerialize["included"] = o.Included
	}
	if o.Meta != nil {
		toSerialize["meta"] = o.Meta
	}
	return json.Marshal(toSerialize)
}

type NullableAppAppsResponse struct {
	value *AppAppsResponse
	isSet bool
}

func (v NullableAppAppsResponse) Get() *AppAppsResponse {
	return v.value
}

func (v *NullableAppAppsResponse) Set(val *AppAppsResponse) {
	v.value = val
	v.isSet = true
}

func (v NullableAppAppsResponse) IsSet() bool {
	return v.isSet
}

func (v *NullableAppAppsResponse) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableAppAppsResponse(val *AppAppsResponse) *NullableAppAppsResponse {
	return &NullableAppAppsResponse{value: val, isSet: true}
}

func (v NullableAppAppsResponse) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableAppAppsResponse) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


