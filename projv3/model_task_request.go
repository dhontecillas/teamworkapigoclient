/*
 * Teamwork.com Projects API
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * API version: 3.0
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package projv3

import (
	"encoding/json"
)

// TaskRequest Request contains information of a task to be created or updated.
type TaskRequest struct {
	AttachmentOptions *TaskRequestAttachmentOptions `json:"attachmentOptions,omitempty"`
	Attachments *TaskRequestAttachments `json:"attachments,omitempty"`
	Card *TaskCard `json:"card,omitempty"`
	Predecessors *[]TaskPredecessor `json:"predecessors,omitempty"`
	Tags *[]TagTag `json:"tags,omitempty"`
	Task *TaskTask `json:"task,omitempty"`
	TaskOptions *TaskOptions `json:"taskOptions,omitempty"`
}

// NewTaskRequest instantiates a new TaskRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewTaskRequest() *TaskRequest {
	this := TaskRequest{}
	return &this
}

// NewTaskRequestWithDefaults instantiates a new TaskRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewTaskRequestWithDefaults() *TaskRequest {
	this := TaskRequest{}
	return &this
}

// GetAttachmentOptions returns the AttachmentOptions field value if set, zero value otherwise.
func (o *TaskRequest) GetAttachmentOptions() TaskRequestAttachmentOptions {
	if o == nil || o.AttachmentOptions == nil {
		var ret TaskRequestAttachmentOptions
		return ret
	}
	return *o.AttachmentOptions
}

// GetAttachmentOptionsOk returns a tuple with the AttachmentOptions field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TaskRequest) GetAttachmentOptionsOk() (*TaskRequestAttachmentOptions, bool) {
	if o == nil || o.AttachmentOptions == nil {
		return nil, false
	}
	return o.AttachmentOptions, true
}

// HasAttachmentOptions returns a boolean if a field has been set.
func (o *TaskRequest) HasAttachmentOptions() bool {
	if o != nil && o.AttachmentOptions != nil {
		return true
	}

	return false
}

// SetAttachmentOptions gets a reference to the given TaskRequestAttachmentOptions and assigns it to the AttachmentOptions field.
func (o *TaskRequest) SetAttachmentOptions(v TaskRequestAttachmentOptions) {
	o.AttachmentOptions = &v
}

// GetAttachments returns the Attachments field value if set, zero value otherwise.
func (o *TaskRequest) GetAttachments() TaskRequestAttachments {
	if o == nil || o.Attachments == nil {
		var ret TaskRequestAttachments
		return ret
	}
	return *o.Attachments
}

// GetAttachmentsOk returns a tuple with the Attachments field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TaskRequest) GetAttachmentsOk() (*TaskRequestAttachments, bool) {
	if o == nil || o.Attachments == nil {
		return nil, false
	}
	return o.Attachments, true
}

// HasAttachments returns a boolean if a field has been set.
func (o *TaskRequest) HasAttachments() bool {
	if o != nil && o.Attachments != nil {
		return true
	}

	return false
}

// SetAttachments gets a reference to the given TaskRequestAttachments and assigns it to the Attachments field.
func (o *TaskRequest) SetAttachments(v TaskRequestAttachments) {
	o.Attachments = &v
}

// GetCard returns the Card field value if set, zero value otherwise.
func (o *TaskRequest) GetCard() TaskCard {
	if o == nil || o.Card == nil {
		var ret TaskCard
		return ret
	}
	return *o.Card
}

// GetCardOk returns a tuple with the Card field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TaskRequest) GetCardOk() (*TaskCard, bool) {
	if o == nil || o.Card == nil {
		return nil, false
	}
	return o.Card, true
}

// HasCard returns a boolean if a field has been set.
func (o *TaskRequest) HasCard() bool {
	if o != nil && o.Card != nil {
		return true
	}

	return false
}

// SetCard gets a reference to the given TaskCard and assigns it to the Card field.
func (o *TaskRequest) SetCard(v TaskCard) {
	o.Card = &v
}

// GetPredecessors returns the Predecessors field value if set, zero value otherwise.
func (o *TaskRequest) GetPredecessors() []TaskPredecessor {
	if o == nil || o.Predecessors == nil {
		var ret []TaskPredecessor
		return ret
	}
	return *o.Predecessors
}

// GetPredecessorsOk returns a tuple with the Predecessors field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TaskRequest) GetPredecessorsOk() (*[]TaskPredecessor, bool) {
	if o == nil || o.Predecessors == nil {
		return nil, false
	}
	return o.Predecessors, true
}

// HasPredecessors returns a boolean if a field has been set.
func (o *TaskRequest) HasPredecessors() bool {
	if o != nil && o.Predecessors != nil {
		return true
	}

	return false
}

// SetPredecessors gets a reference to the given []TaskPredecessor and assigns it to the Predecessors field.
func (o *TaskRequest) SetPredecessors(v []TaskPredecessor) {
	o.Predecessors = &v
}

// GetTags returns the Tags field value if set, zero value otherwise.
func (o *TaskRequest) GetTags() []TagTag {
	if o == nil || o.Tags == nil {
		var ret []TagTag
		return ret
	}
	return *o.Tags
}

// GetTagsOk returns a tuple with the Tags field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TaskRequest) GetTagsOk() (*[]TagTag, bool) {
	if o == nil || o.Tags == nil {
		return nil, false
	}
	return o.Tags, true
}

// HasTags returns a boolean if a field has been set.
func (o *TaskRequest) HasTags() bool {
	if o != nil && o.Tags != nil {
		return true
	}

	return false
}

// SetTags gets a reference to the given []TagTag and assigns it to the Tags field.
func (o *TaskRequest) SetTags(v []TagTag) {
	o.Tags = &v
}

// GetTask returns the Task field value if set, zero value otherwise.
func (o *TaskRequest) GetTask() TaskTask {
	if o == nil || o.Task == nil {
		var ret TaskTask
		return ret
	}
	return *o.Task
}

// GetTaskOk returns a tuple with the Task field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TaskRequest) GetTaskOk() (*TaskTask, bool) {
	if o == nil || o.Task == nil {
		return nil, false
	}
	return o.Task, true
}

// HasTask returns a boolean if a field has been set.
func (o *TaskRequest) HasTask() bool {
	if o != nil && o.Task != nil {
		return true
	}

	return false
}

// SetTask gets a reference to the given TaskTask and assigns it to the Task field.
func (o *TaskRequest) SetTask(v TaskTask) {
	o.Task = &v
}

// GetTaskOptions returns the TaskOptions field value if set, zero value otherwise.
func (o *TaskRequest) GetTaskOptions() TaskOptions {
	if o == nil || o.TaskOptions == nil {
		var ret TaskOptions
		return ret
	}
	return *o.TaskOptions
}

// GetTaskOptionsOk returns a tuple with the TaskOptions field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TaskRequest) GetTaskOptionsOk() (*TaskOptions, bool) {
	if o == nil || o.TaskOptions == nil {
		return nil, false
	}
	return o.TaskOptions, true
}

// HasTaskOptions returns a boolean if a field has been set.
func (o *TaskRequest) HasTaskOptions() bool {
	if o != nil && o.TaskOptions != nil {
		return true
	}

	return false
}

// SetTaskOptions gets a reference to the given TaskOptions and assigns it to the TaskOptions field.
func (o *TaskRequest) SetTaskOptions(v TaskOptions) {
	o.TaskOptions = &v
}

func (o TaskRequest) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.AttachmentOptions != nil {
		toSerialize["attachmentOptions"] = o.AttachmentOptions
	}
	if o.Attachments != nil {
		toSerialize["attachments"] = o.Attachments
	}
	if o.Card != nil {
		toSerialize["card"] = o.Card
	}
	if o.Predecessors != nil {
		toSerialize["predecessors"] = o.Predecessors
	}
	if o.Tags != nil {
		toSerialize["tags"] = o.Tags
	}
	if o.Task != nil {
		toSerialize["task"] = o.Task
	}
	if o.TaskOptions != nil {
		toSerialize["taskOptions"] = o.TaskOptions
	}
	return json.Marshal(toSerialize)
}

type NullableTaskRequest struct {
	value *TaskRequest
	isSet bool
}

func (v NullableTaskRequest) Get() *TaskRequest {
	return v.value
}

func (v *NullableTaskRequest) Set(val *TaskRequest) {
	v.value = val
	v.isSet = true
}

func (v NullableTaskRequest) IsSet() bool {
	return v.isSet
}

func (v *NullableTaskRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableTaskRequest(val *TaskRequest) *NullableTaskRequest {
	return &NullableTaskRequest{value: val, isSet: true}
}

func (v NullableTaskRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableTaskRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


