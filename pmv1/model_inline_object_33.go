/*
 * Teamwork Projects API
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * API version: 
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package pmv1

import (
	"encoding/json"
)

// InlineObject33 struct for InlineObject33
type InlineObject33 struct {
	Notebook *NotebooksIdJsonNotebook `json:"notebook,omitempty"`
}

// NewInlineObject33 instantiates a new InlineObject33 object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewInlineObject33() *InlineObject33 {
	this := InlineObject33{}
	return &this
}

// NewInlineObject33WithDefaults instantiates a new InlineObject33 object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewInlineObject33WithDefaults() *InlineObject33 {
	this := InlineObject33{}
	return &this
}

// GetNotebook returns the Notebook field value if set, zero value otherwise.
func (o *InlineObject33) GetNotebook() NotebooksIdJsonNotebook {
	if o == nil || o.Notebook == nil {
		var ret NotebooksIdJsonNotebook
		return ret
	}
	return *o.Notebook
}

// GetNotebookOk returns a tuple with the Notebook field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InlineObject33) GetNotebookOk() (*NotebooksIdJsonNotebook, bool) {
	if o == nil || o.Notebook == nil {
		return nil, false
	}
	return o.Notebook, true
}

// HasNotebook returns a boolean if a field has been set.
func (o *InlineObject33) HasNotebook() bool {
	if o != nil && o.Notebook != nil {
		return true
	}

	return false
}

// SetNotebook gets a reference to the given NotebooksIdJsonNotebook and assigns it to the Notebook field.
func (o *InlineObject33) SetNotebook(v NotebooksIdJsonNotebook) {
	o.Notebook = &v
}

func (o InlineObject33) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.Notebook != nil {
		toSerialize["notebook"] = o.Notebook
	}
	return json.Marshal(toSerialize)
}

type NullableInlineObject33 struct {
	value *InlineObject33
	isSet bool
}

func (v NullableInlineObject33) Get() *InlineObject33 {
	return v.value
}

func (v *NullableInlineObject33) Set(val *InlineObject33) {
	v.value = val
	v.isSet = true
}

func (v NullableInlineObject33) IsSet() bool {
	return v.isSet
}

func (v *NullableInlineObject33) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableInlineObject33(val *InlineObject33) *NullableInlineObject33 {
	return &NullableInlineObject33{value: val, isSet: true}
}

func (v NullableInlineObject33) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableInlineObject33) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


