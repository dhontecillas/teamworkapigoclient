/*
 * Teamwork.com Projects API
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * API version: 3.0
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package projv3

import (
	"encoding/json"
)

// LockdownResponseIncluded struct for LockdownResponseIncluded
type LockdownResponseIncluded struct {
	Comments *map[string]ViewComment `json:"comments,omitempty"`
	Companies *map[string]ViewCompany `json:"companies,omitempty"`
	Files *map[string]ViewProjectFile `json:"files,omitempty"`
	Links *map[string]ViewLinkItem `json:"links,omitempty"`
	Messages *map[string]ViewProjectMessage `json:"messages,omitempty"`
	Milestones *map[string]ViewMilestone `json:"milestones,omitempty"`
	Notebooks *map[string]ViewNotebook `json:"notebooks,omitempty"`
	Tasklists *map[string]ViewTasklist `json:"tasklists,omitempty"`
	Tasks *map[string]ViewTask `json:"tasks,omitempty"`
	Teams *map[string]ViewTeam `json:"teams,omitempty"`
	Users *map[string]ViewUser `json:"users,omitempty"`
}

// NewLockdownResponseIncluded instantiates a new LockdownResponseIncluded object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewLockdownResponseIncluded() *LockdownResponseIncluded {
	this := LockdownResponseIncluded{}
	return &this
}

// NewLockdownResponseIncludedWithDefaults instantiates a new LockdownResponseIncluded object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewLockdownResponseIncludedWithDefaults() *LockdownResponseIncluded {
	this := LockdownResponseIncluded{}
	return &this
}

// GetComments returns the Comments field value if set, zero value otherwise.
func (o *LockdownResponseIncluded) GetComments() map[string]ViewComment {
	if o == nil || o.Comments == nil {
		var ret map[string]ViewComment
		return ret
	}
	return *o.Comments
}

// GetCommentsOk returns a tuple with the Comments field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *LockdownResponseIncluded) GetCommentsOk() (*map[string]ViewComment, bool) {
	if o == nil || o.Comments == nil {
		return nil, false
	}
	return o.Comments, true
}

// HasComments returns a boolean if a field has been set.
func (o *LockdownResponseIncluded) HasComments() bool {
	if o != nil && o.Comments != nil {
		return true
	}

	return false
}

// SetComments gets a reference to the given map[string]ViewComment and assigns it to the Comments field.
func (o *LockdownResponseIncluded) SetComments(v map[string]ViewComment) {
	o.Comments = &v
}

// GetCompanies returns the Companies field value if set, zero value otherwise.
func (o *LockdownResponseIncluded) GetCompanies() map[string]ViewCompany {
	if o == nil || o.Companies == nil {
		var ret map[string]ViewCompany
		return ret
	}
	return *o.Companies
}

// GetCompaniesOk returns a tuple with the Companies field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *LockdownResponseIncluded) GetCompaniesOk() (*map[string]ViewCompany, bool) {
	if o == nil || o.Companies == nil {
		return nil, false
	}
	return o.Companies, true
}

// HasCompanies returns a boolean if a field has been set.
func (o *LockdownResponseIncluded) HasCompanies() bool {
	if o != nil && o.Companies != nil {
		return true
	}

	return false
}

// SetCompanies gets a reference to the given map[string]ViewCompany and assigns it to the Companies field.
func (o *LockdownResponseIncluded) SetCompanies(v map[string]ViewCompany) {
	o.Companies = &v
}

// GetFiles returns the Files field value if set, zero value otherwise.
func (o *LockdownResponseIncluded) GetFiles() map[string]ViewProjectFile {
	if o == nil || o.Files == nil {
		var ret map[string]ViewProjectFile
		return ret
	}
	return *o.Files
}

// GetFilesOk returns a tuple with the Files field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *LockdownResponseIncluded) GetFilesOk() (*map[string]ViewProjectFile, bool) {
	if o == nil || o.Files == nil {
		return nil, false
	}
	return o.Files, true
}

// HasFiles returns a boolean if a field has been set.
func (o *LockdownResponseIncluded) HasFiles() bool {
	if o != nil && o.Files != nil {
		return true
	}

	return false
}

// SetFiles gets a reference to the given map[string]ViewProjectFile and assigns it to the Files field.
func (o *LockdownResponseIncluded) SetFiles(v map[string]ViewProjectFile) {
	o.Files = &v
}

// GetLinks returns the Links field value if set, zero value otherwise.
func (o *LockdownResponseIncluded) GetLinks() map[string]ViewLinkItem {
	if o == nil || o.Links == nil {
		var ret map[string]ViewLinkItem
		return ret
	}
	return *o.Links
}

// GetLinksOk returns a tuple with the Links field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *LockdownResponseIncluded) GetLinksOk() (*map[string]ViewLinkItem, bool) {
	if o == nil || o.Links == nil {
		return nil, false
	}
	return o.Links, true
}

// HasLinks returns a boolean if a field has been set.
func (o *LockdownResponseIncluded) HasLinks() bool {
	if o != nil && o.Links != nil {
		return true
	}

	return false
}

// SetLinks gets a reference to the given map[string]ViewLinkItem and assigns it to the Links field.
func (o *LockdownResponseIncluded) SetLinks(v map[string]ViewLinkItem) {
	o.Links = &v
}

// GetMessages returns the Messages field value if set, zero value otherwise.
func (o *LockdownResponseIncluded) GetMessages() map[string]ViewProjectMessage {
	if o == nil || o.Messages == nil {
		var ret map[string]ViewProjectMessage
		return ret
	}
	return *o.Messages
}

// GetMessagesOk returns a tuple with the Messages field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *LockdownResponseIncluded) GetMessagesOk() (*map[string]ViewProjectMessage, bool) {
	if o == nil || o.Messages == nil {
		return nil, false
	}
	return o.Messages, true
}

// HasMessages returns a boolean if a field has been set.
func (o *LockdownResponseIncluded) HasMessages() bool {
	if o != nil && o.Messages != nil {
		return true
	}

	return false
}

// SetMessages gets a reference to the given map[string]ViewProjectMessage and assigns it to the Messages field.
func (o *LockdownResponseIncluded) SetMessages(v map[string]ViewProjectMessage) {
	o.Messages = &v
}

// GetMilestones returns the Milestones field value if set, zero value otherwise.
func (o *LockdownResponseIncluded) GetMilestones() map[string]ViewMilestone {
	if o == nil || o.Milestones == nil {
		var ret map[string]ViewMilestone
		return ret
	}
	return *o.Milestones
}

// GetMilestonesOk returns a tuple with the Milestones field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *LockdownResponseIncluded) GetMilestonesOk() (*map[string]ViewMilestone, bool) {
	if o == nil || o.Milestones == nil {
		return nil, false
	}
	return o.Milestones, true
}

// HasMilestones returns a boolean if a field has been set.
func (o *LockdownResponseIncluded) HasMilestones() bool {
	if o != nil && o.Milestones != nil {
		return true
	}

	return false
}

// SetMilestones gets a reference to the given map[string]ViewMilestone and assigns it to the Milestones field.
func (o *LockdownResponseIncluded) SetMilestones(v map[string]ViewMilestone) {
	o.Milestones = &v
}

// GetNotebooks returns the Notebooks field value if set, zero value otherwise.
func (o *LockdownResponseIncluded) GetNotebooks() map[string]ViewNotebook {
	if o == nil || o.Notebooks == nil {
		var ret map[string]ViewNotebook
		return ret
	}
	return *o.Notebooks
}

// GetNotebooksOk returns a tuple with the Notebooks field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *LockdownResponseIncluded) GetNotebooksOk() (*map[string]ViewNotebook, bool) {
	if o == nil || o.Notebooks == nil {
		return nil, false
	}
	return o.Notebooks, true
}

// HasNotebooks returns a boolean if a field has been set.
func (o *LockdownResponseIncluded) HasNotebooks() bool {
	if o != nil && o.Notebooks != nil {
		return true
	}

	return false
}

// SetNotebooks gets a reference to the given map[string]ViewNotebook and assigns it to the Notebooks field.
func (o *LockdownResponseIncluded) SetNotebooks(v map[string]ViewNotebook) {
	o.Notebooks = &v
}

// GetTasklists returns the Tasklists field value if set, zero value otherwise.
func (o *LockdownResponseIncluded) GetTasklists() map[string]ViewTasklist {
	if o == nil || o.Tasklists == nil {
		var ret map[string]ViewTasklist
		return ret
	}
	return *o.Tasklists
}

// GetTasklistsOk returns a tuple with the Tasklists field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *LockdownResponseIncluded) GetTasklistsOk() (*map[string]ViewTasklist, bool) {
	if o == nil || o.Tasklists == nil {
		return nil, false
	}
	return o.Tasklists, true
}

// HasTasklists returns a boolean if a field has been set.
func (o *LockdownResponseIncluded) HasTasklists() bool {
	if o != nil && o.Tasklists != nil {
		return true
	}

	return false
}

// SetTasklists gets a reference to the given map[string]ViewTasklist and assigns it to the Tasklists field.
func (o *LockdownResponseIncluded) SetTasklists(v map[string]ViewTasklist) {
	o.Tasklists = &v
}

// GetTasks returns the Tasks field value if set, zero value otherwise.
func (o *LockdownResponseIncluded) GetTasks() map[string]ViewTask {
	if o == nil || o.Tasks == nil {
		var ret map[string]ViewTask
		return ret
	}
	return *o.Tasks
}

// GetTasksOk returns a tuple with the Tasks field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *LockdownResponseIncluded) GetTasksOk() (*map[string]ViewTask, bool) {
	if o == nil || o.Tasks == nil {
		return nil, false
	}
	return o.Tasks, true
}

// HasTasks returns a boolean if a field has been set.
func (o *LockdownResponseIncluded) HasTasks() bool {
	if o != nil && o.Tasks != nil {
		return true
	}

	return false
}

// SetTasks gets a reference to the given map[string]ViewTask and assigns it to the Tasks field.
func (o *LockdownResponseIncluded) SetTasks(v map[string]ViewTask) {
	o.Tasks = &v
}

// GetTeams returns the Teams field value if set, zero value otherwise.
func (o *LockdownResponseIncluded) GetTeams() map[string]ViewTeam {
	if o == nil || o.Teams == nil {
		var ret map[string]ViewTeam
		return ret
	}
	return *o.Teams
}

// GetTeamsOk returns a tuple with the Teams field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *LockdownResponseIncluded) GetTeamsOk() (*map[string]ViewTeam, bool) {
	if o == nil || o.Teams == nil {
		return nil, false
	}
	return o.Teams, true
}

// HasTeams returns a boolean if a field has been set.
func (o *LockdownResponseIncluded) HasTeams() bool {
	if o != nil && o.Teams != nil {
		return true
	}

	return false
}

// SetTeams gets a reference to the given map[string]ViewTeam and assigns it to the Teams field.
func (o *LockdownResponseIncluded) SetTeams(v map[string]ViewTeam) {
	o.Teams = &v
}

// GetUsers returns the Users field value if set, zero value otherwise.
func (o *LockdownResponseIncluded) GetUsers() map[string]ViewUser {
	if o == nil || o.Users == nil {
		var ret map[string]ViewUser
		return ret
	}
	return *o.Users
}

// GetUsersOk returns a tuple with the Users field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *LockdownResponseIncluded) GetUsersOk() (*map[string]ViewUser, bool) {
	if o == nil || o.Users == nil {
		return nil, false
	}
	return o.Users, true
}

// HasUsers returns a boolean if a field has been set.
func (o *LockdownResponseIncluded) HasUsers() bool {
	if o != nil && o.Users != nil {
		return true
	}

	return false
}

// SetUsers gets a reference to the given map[string]ViewUser and assigns it to the Users field.
func (o *LockdownResponseIncluded) SetUsers(v map[string]ViewUser) {
	o.Users = &v
}

func (o LockdownResponseIncluded) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.Comments != nil {
		toSerialize["comments"] = o.Comments
	}
	if o.Companies != nil {
		toSerialize["companies"] = o.Companies
	}
	if o.Files != nil {
		toSerialize["files"] = o.Files
	}
	if o.Links != nil {
		toSerialize["links"] = o.Links
	}
	if o.Messages != nil {
		toSerialize["messages"] = o.Messages
	}
	if o.Milestones != nil {
		toSerialize["milestones"] = o.Milestones
	}
	if o.Notebooks != nil {
		toSerialize["notebooks"] = o.Notebooks
	}
	if o.Tasklists != nil {
		toSerialize["tasklists"] = o.Tasklists
	}
	if o.Tasks != nil {
		toSerialize["tasks"] = o.Tasks
	}
	if o.Teams != nil {
		toSerialize["teams"] = o.Teams
	}
	if o.Users != nil {
		toSerialize["users"] = o.Users
	}
	return json.Marshal(toSerialize)
}

type NullableLockdownResponseIncluded struct {
	value *LockdownResponseIncluded
	isSet bool
}

func (v NullableLockdownResponseIncluded) Get() *LockdownResponseIncluded {
	return v.value
}

func (v *NullableLockdownResponseIncluded) Set(val *LockdownResponseIncluded) {
	v.value = val
	v.isSet = true
}

func (v NullableLockdownResponseIncluded) IsSet() bool {
	return v.isSet
}

func (v *NullableLockdownResponseIncluded) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableLockdownResponseIncluded(val *LockdownResponseIncluded) *NullableLockdownResponseIncluded {
	return &NullableLockdownResponseIncluded{value: val, isSet: true}
}

func (v NullableLockdownResponseIncluded) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableLockdownResponseIncluded) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


