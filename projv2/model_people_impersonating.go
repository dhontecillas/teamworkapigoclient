/*
 * Teamwork.com Projects API
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * API version: 3.0
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package projv2

import (
	"encoding/json"
)

// PeopleImpersonating struct for PeopleImpersonating
type PeopleImpersonating struct {
	FullName *string `json:"fullName,omitempty"`
	Id *int32 `json:"id,omitempty"`
}

// NewPeopleImpersonating instantiates a new PeopleImpersonating object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewPeopleImpersonating() *PeopleImpersonating {
	this := PeopleImpersonating{}
	return &this
}

// NewPeopleImpersonatingWithDefaults instantiates a new PeopleImpersonating object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewPeopleImpersonatingWithDefaults() *PeopleImpersonating {
	this := PeopleImpersonating{}
	return &this
}

// GetFullName returns the FullName field value if set, zero value otherwise.
func (o *PeopleImpersonating) GetFullName() string {
	if o == nil || o.FullName == nil {
		var ret string
		return ret
	}
	return *o.FullName
}

// GetFullNameOk returns a tuple with the FullName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PeopleImpersonating) GetFullNameOk() (*string, bool) {
	if o == nil || o.FullName == nil {
		return nil, false
	}
	return o.FullName, true
}

// HasFullName returns a boolean if a field has been set.
func (o *PeopleImpersonating) HasFullName() bool {
	if o != nil && o.FullName != nil {
		return true
	}

	return false
}

// SetFullName gets a reference to the given string and assigns it to the FullName field.
func (o *PeopleImpersonating) SetFullName(v string) {
	o.FullName = &v
}

// GetId returns the Id field value if set, zero value otherwise.
func (o *PeopleImpersonating) GetId() int32 {
	if o == nil || o.Id == nil {
		var ret int32
		return ret
	}
	return *o.Id
}

// GetIdOk returns a tuple with the Id field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PeopleImpersonating) GetIdOk() (*int32, bool) {
	if o == nil || o.Id == nil {
		return nil, false
	}
	return o.Id, true
}

// HasId returns a boolean if a field has been set.
func (o *PeopleImpersonating) HasId() bool {
	if o != nil && o.Id != nil {
		return true
	}

	return false
}

// SetId gets a reference to the given int32 and assigns it to the Id field.
func (o *PeopleImpersonating) SetId(v int32) {
	o.Id = &v
}

func (o PeopleImpersonating) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.FullName != nil {
		toSerialize["fullName"] = o.FullName
	}
	if o.Id != nil {
		toSerialize["id"] = o.Id
	}
	return json.Marshal(toSerialize)
}

type NullablePeopleImpersonating struct {
	value *PeopleImpersonating
	isSet bool
}

func (v NullablePeopleImpersonating) Get() *PeopleImpersonating {
	return v.value
}

func (v *NullablePeopleImpersonating) Set(val *PeopleImpersonating) {
	v.value = val
	v.isSet = true
}

func (v NullablePeopleImpersonating) IsSet() bool {
	return v.isSet
}

func (v *NullablePeopleImpersonating) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullablePeopleImpersonating(val *PeopleImpersonating) *NullablePeopleImpersonating {
	return &NullablePeopleImpersonating{value: val, isSet: true}
}

func (v NullablePeopleImpersonating) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullablePeopleImpersonating) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


