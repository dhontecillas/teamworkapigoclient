/*
 * Teamwork.com Projects API
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * API version: 3.0
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package projv3

import (
	"encoding/json"
)

// CommentFullComment FullComment contains the full information for a comment
type CommentFullComment struct {
	Body *string `json:"body,omitempty"`
	ContentType *string `json:"contentType,omitempty"`
	DateDeleted *string `json:"dateDeleted,omitempty"`
	DateLastEdited *string `json:"dateLastEdited,omitempty"`
	Deleted *bool `json:"deleted,omitempty"`
	DeletedBy *int32 `json:"deletedBy,omitempty"`
	DeletedByUserId *int32 `json:"deletedByUserId,omitempty"`
	FileIds *[]int32 `json:"fileIds,omitempty"`
	Files *[]ViewRelationship `json:"files,omitempty"`
	Id *int32 `json:"id,omitempty"`
	Installation *ViewRelationship `json:"installation,omitempty"`
	InstallationId *int32 `json:"installationId,omitempty"`
	LastEditedBy *int32 `json:"lastEditedBy,omitempty"`
	LastEditedByUserId *int32 `json:"lastEditedByUserId,omitempty"`
	Object *ViewRelationship `json:"object,omitempty"`
	ObjectId *int32 `json:"objectId,omitempty"`
	ObjectType *string `json:"objectType,omitempty"`
	PeopleNotifiedCount *int32 `json:"peopleNotifiedCount,omitempty"`
	PostedBy *int32 `json:"postedBy,omitempty"`
	PostedByUserId *int32 `json:"postedByUserId,omitempty"`
	PostedDateTime *string `json:"postedDateTime,omitempty"`
	Project *ViewRelationship `json:"project,omitempty"`
	ProjectId *int32 `json:"projectId,omitempty"`
	Reactions *[]ViewReaction `json:"reactions,omitempty"`
	ReactionsCount *int32 `json:"reactionsCount,omitempty"`
}

// NewCommentFullComment instantiates a new CommentFullComment object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewCommentFullComment() *CommentFullComment {
	this := CommentFullComment{}
	return &this
}

// NewCommentFullCommentWithDefaults instantiates a new CommentFullComment object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewCommentFullCommentWithDefaults() *CommentFullComment {
	this := CommentFullComment{}
	return &this
}

// GetBody returns the Body field value if set, zero value otherwise.
func (o *CommentFullComment) GetBody() string {
	if o == nil || o.Body == nil {
		var ret string
		return ret
	}
	return *o.Body
}

// GetBodyOk returns a tuple with the Body field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CommentFullComment) GetBodyOk() (*string, bool) {
	if o == nil || o.Body == nil {
		return nil, false
	}
	return o.Body, true
}

// HasBody returns a boolean if a field has been set.
func (o *CommentFullComment) HasBody() bool {
	if o != nil && o.Body != nil {
		return true
	}

	return false
}

// SetBody gets a reference to the given string and assigns it to the Body field.
func (o *CommentFullComment) SetBody(v string) {
	o.Body = &v
}

// GetContentType returns the ContentType field value if set, zero value otherwise.
func (o *CommentFullComment) GetContentType() string {
	if o == nil || o.ContentType == nil {
		var ret string
		return ret
	}
	return *o.ContentType
}

// GetContentTypeOk returns a tuple with the ContentType field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CommentFullComment) GetContentTypeOk() (*string, bool) {
	if o == nil || o.ContentType == nil {
		return nil, false
	}
	return o.ContentType, true
}

// HasContentType returns a boolean if a field has been set.
func (o *CommentFullComment) HasContentType() bool {
	if o != nil && o.ContentType != nil {
		return true
	}

	return false
}

// SetContentType gets a reference to the given string and assigns it to the ContentType field.
func (o *CommentFullComment) SetContentType(v string) {
	o.ContentType = &v
}

// GetDateDeleted returns the DateDeleted field value if set, zero value otherwise.
func (o *CommentFullComment) GetDateDeleted() string {
	if o == nil || o.DateDeleted == nil {
		var ret string
		return ret
	}
	return *o.DateDeleted
}

// GetDateDeletedOk returns a tuple with the DateDeleted field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CommentFullComment) GetDateDeletedOk() (*string, bool) {
	if o == nil || o.DateDeleted == nil {
		return nil, false
	}
	return o.DateDeleted, true
}

// HasDateDeleted returns a boolean if a field has been set.
func (o *CommentFullComment) HasDateDeleted() bool {
	if o != nil && o.DateDeleted != nil {
		return true
	}

	return false
}

// SetDateDeleted gets a reference to the given string and assigns it to the DateDeleted field.
func (o *CommentFullComment) SetDateDeleted(v string) {
	o.DateDeleted = &v
}

// GetDateLastEdited returns the DateLastEdited field value if set, zero value otherwise.
func (o *CommentFullComment) GetDateLastEdited() string {
	if o == nil || o.DateLastEdited == nil {
		var ret string
		return ret
	}
	return *o.DateLastEdited
}

// GetDateLastEditedOk returns a tuple with the DateLastEdited field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CommentFullComment) GetDateLastEditedOk() (*string, bool) {
	if o == nil || o.DateLastEdited == nil {
		return nil, false
	}
	return o.DateLastEdited, true
}

// HasDateLastEdited returns a boolean if a field has been set.
func (o *CommentFullComment) HasDateLastEdited() bool {
	if o != nil && o.DateLastEdited != nil {
		return true
	}

	return false
}

// SetDateLastEdited gets a reference to the given string and assigns it to the DateLastEdited field.
func (o *CommentFullComment) SetDateLastEdited(v string) {
	o.DateLastEdited = &v
}

// GetDeleted returns the Deleted field value if set, zero value otherwise.
func (o *CommentFullComment) GetDeleted() bool {
	if o == nil || o.Deleted == nil {
		var ret bool
		return ret
	}
	return *o.Deleted
}

// GetDeletedOk returns a tuple with the Deleted field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CommentFullComment) GetDeletedOk() (*bool, bool) {
	if o == nil || o.Deleted == nil {
		return nil, false
	}
	return o.Deleted, true
}

// HasDeleted returns a boolean if a field has been set.
func (o *CommentFullComment) HasDeleted() bool {
	if o != nil && o.Deleted != nil {
		return true
	}

	return false
}

// SetDeleted gets a reference to the given bool and assigns it to the Deleted field.
func (o *CommentFullComment) SetDeleted(v bool) {
	o.Deleted = &v
}

// GetDeletedBy returns the DeletedBy field value if set, zero value otherwise.
func (o *CommentFullComment) GetDeletedBy() int32 {
	if o == nil || o.DeletedBy == nil {
		var ret int32
		return ret
	}
	return *o.DeletedBy
}

// GetDeletedByOk returns a tuple with the DeletedBy field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CommentFullComment) GetDeletedByOk() (*int32, bool) {
	if o == nil || o.DeletedBy == nil {
		return nil, false
	}
	return o.DeletedBy, true
}

// HasDeletedBy returns a boolean if a field has been set.
func (o *CommentFullComment) HasDeletedBy() bool {
	if o != nil && o.DeletedBy != nil {
		return true
	}

	return false
}

// SetDeletedBy gets a reference to the given int32 and assigns it to the DeletedBy field.
func (o *CommentFullComment) SetDeletedBy(v int32) {
	o.DeletedBy = &v
}

// GetDeletedByUserId returns the DeletedByUserId field value if set, zero value otherwise.
func (o *CommentFullComment) GetDeletedByUserId() int32 {
	if o == nil || o.DeletedByUserId == nil {
		var ret int32
		return ret
	}
	return *o.DeletedByUserId
}

// GetDeletedByUserIdOk returns a tuple with the DeletedByUserId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CommentFullComment) GetDeletedByUserIdOk() (*int32, bool) {
	if o == nil || o.DeletedByUserId == nil {
		return nil, false
	}
	return o.DeletedByUserId, true
}

// HasDeletedByUserId returns a boolean if a field has been set.
func (o *CommentFullComment) HasDeletedByUserId() bool {
	if o != nil && o.DeletedByUserId != nil {
		return true
	}

	return false
}

// SetDeletedByUserId gets a reference to the given int32 and assigns it to the DeletedByUserId field.
func (o *CommentFullComment) SetDeletedByUserId(v int32) {
	o.DeletedByUserId = &v
}

// GetFileIds returns the FileIds field value if set, zero value otherwise.
func (o *CommentFullComment) GetFileIds() []int32 {
	if o == nil || o.FileIds == nil {
		var ret []int32
		return ret
	}
	return *o.FileIds
}

// GetFileIdsOk returns a tuple with the FileIds field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CommentFullComment) GetFileIdsOk() (*[]int32, bool) {
	if o == nil || o.FileIds == nil {
		return nil, false
	}
	return o.FileIds, true
}

// HasFileIds returns a boolean if a field has been set.
func (o *CommentFullComment) HasFileIds() bool {
	if o != nil && o.FileIds != nil {
		return true
	}

	return false
}

// SetFileIds gets a reference to the given []int32 and assigns it to the FileIds field.
func (o *CommentFullComment) SetFileIds(v []int32) {
	o.FileIds = &v
}

// GetFiles returns the Files field value if set, zero value otherwise.
func (o *CommentFullComment) GetFiles() []ViewRelationship {
	if o == nil || o.Files == nil {
		var ret []ViewRelationship
		return ret
	}
	return *o.Files
}

// GetFilesOk returns a tuple with the Files field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CommentFullComment) GetFilesOk() (*[]ViewRelationship, bool) {
	if o == nil || o.Files == nil {
		return nil, false
	}
	return o.Files, true
}

// HasFiles returns a boolean if a field has been set.
func (o *CommentFullComment) HasFiles() bool {
	if o != nil && o.Files != nil {
		return true
	}

	return false
}

// SetFiles gets a reference to the given []ViewRelationship and assigns it to the Files field.
func (o *CommentFullComment) SetFiles(v []ViewRelationship) {
	o.Files = &v
}

// GetId returns the Id field value if set, zero value otherwise.
func (o *CommentFullComment) GetId() int32 {
	if o == nil || o.Id == nil {
		var ret int32
		return ret
	}
	return *o.Id
}

// GetIdOk returns a tuple with the Id field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CommentFullComment) GetIdOk() (*int32, bool) {
	if o == nil || o.Id == nil {
		return nil, false
	}
	return o.Id, true
}

// HasId returns a boolean if a field has been set.
func (o *CommentFullComment) HasId() bool {
	if o != nil && o.Id != nil {
		return true
	}

	return false
}

// SetId gets a reference to the given int32 and assigns it to the Id field.
func (o *CommentFullComment) SetId(v int32) {
	o.Id = &v
}

// GetInstallation returns the Installation field value if set, zero value otherwise.
func (o *CommentFullComment) GetInstallation() ViewRelationship {
	if o == nil || o.Installation == nil {
		var ret ViewRelationship
		return ret
	}
	return *o.Installation
}

// GetInstallationOk returns a tuple with the Installation field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CommentFullComment) GetInstallationOk() (*ViewRelationship, bool) {
	if o == nil || o.Installation == nil {
		return nil, false
	}
	return o.Installation, true
}

// HasInstallation returns a boolean if a field has been set.
func (o *CommentFullComment) HasInstallation() bool {
	if o != nil && o.Installation != nil {
		return true
	}

	return false
}

// SetInstallation gets a reference to the given ViewRelationship and assigns it to the Installation field.
func (o *CommentFullComment) SetInstallation(v ViewRelationship) {
	o.Installation = &v
}

// GetInstallationId returns the InstallationId field value if set, zero value otherwise.
func (o *CommentFullComment) GetInstallationId() int32 {
	if o == nil || o.InstallationId == nil {
		var ret int32
		return ret
	}
	return *o.InstallationId
}

// GetInstallationIdOk returns a tuple with the InstallationId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CommentFullComment) GetInstallationIdOk() (*int32, bool) {
	if o == nil || o.InstallationId == nil {
		return nil, false
	}
	return o.InstallationId, true
}

// HasInstallationId returns a boolean if a field has been set.
func (o *CommentFullComment) HasInstallationId() bool {
	if o != nil && o.InstallationId != nil {
		return true
	}

	return false
}

// SetInstallationId gets a reference to the given int32 and assigns it to the InstallationId field.
func (o *CommentFullComment) SetInstallationId(v int32) {
	o.InstallationId = &v
}

// GetLastEditedBy returns the LastEditedBy field value if set, zero value otherwise.
func (o *CommentFullComment) GetLastEditedBy() int32 {
	if o == nil || o.LastEditedBy == nil {
		var ret int32
		return ret
	}
	return *o.LastEditedBy
}

// GetLastEditedByOk returns a tuple with the LastEditedBy field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CommentFullComment) GetLastEditedByOk() (*int32, bool) {
	if o == nil || o.LastEditedBy == nil {
		return nil, false
	}
	return o.LastEditedBy, true
}

// HasLastEditedBy returns a boolean if a field has been set.
func (o *CommentFullComment) HasLastEditedBy() bool {
	if o != nil && o.LastEditedBy != nil {
		return true
	}

	return false
}

// SetLastEditedBy gets a reference to the given int32 and assigns it to the LastEditedBy field.
func (o *CommentFullComment) SetLastEditedBy(v int32) {
	o.LastEditedBy = &v
}

// GetLastEditedByUserId returns the LastEditedByUserId field value if set, zero value otherwise.
func (o *CommentFullComment) GetLastEditedByUserId() int32 {
	if o == nil || o.LastEditedByUserId == nil {
		var ret int32
		return ret
	}
	return *o.LastEditedByUserId
}

// GetLastEditedByUserIdOk returns a tuple with the LastEditedByUserId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CommentFullComment) GetLastEditedByUserIdOk() (*int32, bool) {
	if o == nil || o.LastEditedByUserId == nil {
		return nil, false
	}
	return o.LastEditedByUserId, true
}

// HasLastEditedByUserId returns a boolean if a field has been set.
func (o *CommentFullComment) HasLastEditedByUserId() bool {
	if o != nil && o.LastEditedByUserId != nil {
		return true
	}

	return false
}

// SetLastEditedByUserId gets a reference to the given int32 and assigns it to the LastEditedByUserId field.
func (o *CommentFullComment) SetLastEditedByUserId(v int32) {
	o.LastEditedByUserId = &v
}

// GetObject returns the Object field value if set, zero value otherwise.
func (o *CommentFullComment) GetObject() ViewRelationship {
	if o == nil || o.Object == nil {
		var ret ViewRelationship
		return ret
	}
	return *o.Object
}

// GetObjectOk returns a tuple with the Object field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CommentFullComment) GetObjectOk() (*ViewRelationship, bool) {
	if o == nil || o.Object == nil {
		return nil, false
	}
	return o.Object, true
}

// HasObject returns a boolean if a field has been set.
func (o *CommentFullComment) HasObject() bool {
	if o != nil && o.Object != nil {
		return true
	}

	return false
}

// SetObject gets a reference to the given ViewRelationship and assigns it to the Object field.
func (o *CommentFullComment) SetObject(v ViewRelationship) {
	o.Object = &v
}

// GetObjectId returns the ObjectId field value if set, zero value otherwise.
func (o *CommentFullComment) GetObjectId() int32 {
	if o == nil || o.ObjectId == nil {
		var ret int32
		return ret
	}
	return *o.ObjectId
}

// GetObjectIdOk returns a tuple with the ObjectId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CommentFullComment) GetObjectIdOk() (*int32, bool) {
	if o == nil || o.ObjectId == nil {
		return nil, false
	}
	return o.ObjectId, true
}

// HasObjectId returns a boolean if a field has been set.
func (o *CommentFullComment) HasObjectId() bool {
	if o != nil && o.ObjectId != nil {
		return true
	}

	return false
}

// SetObjectId gets a reference to the given int32 and assigns it to the ObjectId field.
func (o *CommentFullComment) SetObjectId(v int32) {
	o.ObjectId = &v
}

// GetObjectType returns the ObjectType field value if set, zero value otherwise.
func (o *CommentFullComment) GetObjectType() string {
	if o == nil || o.ObjectType == nil {
		var ret string
		return ret
	}
	return *o.ObjectType
}

// GetObjectTypeOk returns a tuple with the ObjectType field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CommentFullComment) GetObjectTypeOk() (*string, bool) {
	if o == nil || o.ObjectType == nil {
		return nil, false
	}
	return o.ObjectType, true
}

// HasObjectType returns a boolean if a field has been set.
func (o *CommentFullComment) HasObjectType() bool {
	if o != nil && o.ObjectType != nil {
		return true
	}

	return false
}

// SetObjectType gets a reference to the given string and assigns it to the ObjectType field.
func (o *CommentFullComment) SetObjectType(v string) {
	o.ObjectType = &v
}

// GetPeopleNotifiedCount returns the PeopleNotifiedCount field value if set, zero value otherwise.
func (o *CommentFullComment) GetPeopleNotifiedCount() int32 {
	if o == nil || o.PeopleNotifiedCount == nil {
		var ret int32
		return ret
	}
	return *o.PeopleNotifiedCount
}

// GetPeopleNotifiedCountOk returns a tuple with the PeopleNotifiedCount field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CommentFullComment) GetPeopleNotifiedCountOk() (*int32, bool) {
	if o == nil || o.PeopleNotifiedCount == nil {
		return nil, false
	}
	return o.PeopleNotifiedCount, true
}

// HasPeopleNotifiedCount returns a boolean if a field has been set.
func (o *CommentFullComment) HasPeopleNotifiedCount() bool {
	if o != nil && o.PeopleNotifiedCount != nil {
		return true
	}

	return false
}

// SetPeopleNotifiedCount gets a reference to the given int32 and assigns it to the PeopleNotifiedCount field.
func (o *CommentFullComment) SetPeopleNotifiedCount(v int32) {
	o.PeopleNotifiedCount = &v
}

// GetPostedBy returns the PostedBy field value if set, zero value otherwise.
func (o *CommentFullComment) GetPostedBy() int32 {
	if o == nil || o.PostedBy == nil {
		var ret int32
		return ret
	}
	return *o.PostedBy
}

// GetPostedByOk returns a tuple with the PostedBy field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CommentFullComment) GetPostedByOk() (*int32, bool) {
	if o == nil || o.PostedBy == nil {
		return nil, false
	}
	return o.PostedBy, true
}

// HasPostedBy returns a boolean if a field has been set.
func (o *CommentFullComment) HasPostedBy() bool {
	if o != nil && o.PostedBy != nil {
		return true
	}

	return false
}

// SetPostedBy gets a reference to the given int32 and assigns it to the PostedBy field.
func (o *CommentFullComment) SetPostedBy(v int32) {
	o.PostedBy = &v
}

// GetPostedByUserId returns the PostedByUserId field value if set, zero value otherwise.
func (o *CommentFullComment) GetPostedByUserId() int32 {
	if o == nil || o.PostedByUserId == nil {
		var ret int32
		return ret
	}
	return *o.PostedByUserId
}

// GetPostedByUserIdOk returns a tuple with the PostedByUserId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CommentFullComment) GetPostedByUserIdOk() (*int32, bool) {
	if o == nil || o.PostedByUserId == nil {
		return nil, false
	}
	return o.PostedByUserId, true
}

// HasPostedByUserId returns a boolean if a field has been set.
func (o *CommentFullComment) HasPostedByUserId() bool {
	if o != nil && o.PostedByUserId != nil {
		return true
	}

	return false
}

// SetPostedByUserId gets a reference to the given int32 and assigns it to the PostedByUserId field.
func (o *CommentFullComment) SetPostedByUserId(v int32) {
	o.PostedByUserId = &v
}

// GetPostedDateTime returns the PostedDateTime field value if set, zero value otherwise.
func (o *CommentFullComment) GetPostedDateTime() string {
	if o == nil || o.PostedDateTime == nil {
		var ret string
		return ret
	}
	return *o.PostedDateTime
}

// GetPostedDateTimeOk returns a tuple with the PostedDateTime field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CommentFullComment) GetPostedDateTimeOk() (*string, bool) {
	if o == nil || o.PostedDateTime == nil {
		return nil, false
	}
	return o.PostedDateTime, true
}

// HasPostedDateTime returns a boolean if a field has been set.
func (o *CommentFullComment) HasPostedDateTime() bool {
	if o != nil && o.PostedDateTime != nil {
		return true
	}

	return false
}

// SetPostedDateTime gets a reference to the given string and assigns it to the PostedDateTime field.
func (o *CommentFullComment) SetPostedDateTime(v string) {
	o.PostedDateTime = &v
}

// GetProject returns the Project field value if set, zero value otherwise.
func (o *CommentFullComment) GetProject() ViewRelationship {
	if o == nil || o.Project == nil {
		var ret ViewRelationship
		return ret
	}
	return *o.Project
}

// GetProjectOk returns a tuple with the Project field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CommentFullComment) GetProjectOk() (*ViewRelationship, bool) {
	if o == nil || o.Project == nil {
		return nil, false
	}
	return o.Project, true
}

// HasProject returns a boolean if a field has been set.
func (o *CommentFullComment) HasProject() bool {
	if o != nil && o.Project != nil {
		return true
	}

	return false
}

// SetProject gets a reference to the given ViewRelationship and assigns it to the Project field.
func (o *CommentFullComment) SetProject(v ViewRelationship) {
	o.Project = &v
}

// GetProjectId returns the ProjectId field value if set, zero value otherwise.
func (o *CommentFullComment) GetProjectId() int32 {
	if o == nil || o.ProjectId == nil {
		var ret int32
		return ret
	}
	return *o.ProjectId
}

// GetProjectIdOk returns a tuple with the ProjectId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CommentFullComment) GetProjectIdOk() (*int32, bool) {
	if o == nil || o.ProjectId == nil {
		return nil, false
	}
	return o.ProjectId, true
}

// HasProjectId returns a boolean if a field has been set.
func (o *CommentFullComment) HasProjectId() bool {
	if o != nil && o.ProjectId != nil {
		return true
	}

	return false
}

// SetProjectId gets a reference to the given int32 and assigns it to the ProjectId field.
func (o *CommentFullComment) SetProjectId(v int32) {
	o.ProjectId = &v
}

// GetReactions returns the Reactions field value if set, zero value otherwise.
func (o *CommentFullComment) GetReactions() []ViewReaction {
	if o == nil || o.Reactions == nil {
		var ret []ViewReaction
		return ret
	}
	return *o.Reactions
}

// GetReactionsOk returns a tuple with the Reactions field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CommentFullComment) GetReactionsOk() (*[]ViewReaction, bool) {
	if o == nil || o.Reactions == nil {
		return nil, false
	}
	return o.Reactions, true
}

// HasReactions returns a boolean if a field has been set.
func (o *CommentFullComment) HasReactions() bool {
	if o != nil && o.Reactions != nil {
		return true
	}

	return false
}

// SetReactions gets a reference to the given []ViewReaction and assigns it to the Reactions field.
func (o *CommentFullComment) SetReactions(v []ViewReaction) {
	o.Reactions = &v
}

// GetReactionsCount returns the ReactionsCount field value if set, zero value otherwise.
func (o *CommentFullComment) GetReactionsCount() int32 {
	if o == nil || o.ReactionsCount == nil {
		var ret int32
		return ret
	}
	return *o.ReactionsCount
}

// GetReactionsCountOk returns a tuple with the ReactionsCount field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CommentFullComment) GetReactionsCountOk() (*int32, bool) {
	if o == nil || o.ReactionsCount == nil {
		return nil, false
	}
	return o.ReactionsCount, true
}

// HasReactionsCount returns a boolean if a field has been set.
func (o *CommentFullComment) HasReactionsCount() bool {
	if o != nil && o.ReactionsCount != nil {
		return true
	}

	return false
}

// SetReactionsCount gets a reference to the given int32 and assigns it to the ReactionsCount field.
func (o *CommentFullComment) SetReactionsCount(v int32) {
	o.ReactionsCount = &v
}

func (o CommentFullComment) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.Body != nil {
		toSerialize["body"] = o.Body
	}
	if o.ContentType != nil {
		toSerialize["contentType"] = o.ContentType
	}
	if o.DateDeleted != nil {
		toSerialize["dateDeleted"] = o.DateDeleted
	}
	if o.DateLastEdited != nil {
		toSerialize["dateLastEdited"] = o.DateLastEdited
	}
	if o.Deleted != nil {
		toSerialize["deleted"] = o.Deleted
	}
	if o.DeletedBy != nil {
		toSerialize["deletedBy"] = o.DeletedBy
	}
	if o.DeletedByUserId != nil {
		toSerialize["deletedByUserId"] = o.DeletedByUserId
	}
	if o.FileIds != nil {
		toSerialize["fileIds"] = o.FileIds
	}
	if o.Files != nil {
		toSerialize["files"] = o.Files
	}
	if o.Id != nil {
		toSerialize["id"] = o.Id
	}
	if o.Installation != nil {
		toSerialize["installation"] = o.Installation
	}
	if o.InstallationId != nil {
		toSerialize["installationId"] = o.InstallationId
	}
	if o.LastEditedBy != nil {
		toSerialize["lastEditedBy"] = o.LastEditedBy
	}
	if o.LastEditedByUserId != nil {
		toSerialize["lastEditedByUserId"] = o.LastEditedByUserId
	}
	if o.Object != nil {
		toSerialize["object"] = o.Object
	}
	if o.ObjectId != nil {
		toSerialize["objectId"] = o.ObjectId
	}
	if o.ObjectType != nil {
		toSerialize["objectType"] = o.ObjectType
	}
	if o.PeopleNotifiedCount != nil {
		toSerialize["peopleNotifiedCount"] = o.PeopleNotifiedCount
	}
	if o.PostedBy != nil {
		toSerialize["postedBy"] = o.PostedBy
	}
	if o.PostedByUserId != nil {
		toSerialize["postedByUserId"] = o.PostedByUserId
	}
	if o.PostedDateTime != nil {
		toSerialize["postedDateTime"] = o.PostedDateTime
	}
	if o.Project != nil {
		toSerialize["project"] = o.Project
	}
	if o.ProjectId != nil {
		toSerialize["projectId"] = o.ProjectId
	}
	if o.Reactions != nil {
		toSerialize["reactions"] = o.Reactions
	}
	if o.ReactionsCount != nil {
		toSerialize["reactionsCount"] = o.ReactionsCount
	}
	return json.Marshal(toSerialize)
}

type NullableCommentFullComment struct {
	value *CommentFullComment
	isSet bool
}

func (v NullableCommentFullComment) Get() *CommentFullComment {
	return v.value
}

func (v *NullableCommentFullComment) Set(val *CommentFullComment) {
	v.value = val
	v.isSet = true
}

func (v NullableCommentFullComment) IsSet() bool {
	return v.isSet
}

func (v *NullableCommentFullComment) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableCommentFullComment(val *CommentFullComment) *NullableCommentFullComment {
	return &NullableCommentFullComment{value: val, isSet: true}
}

func (v NullableCommentFullComment) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableCommentFullComment) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


