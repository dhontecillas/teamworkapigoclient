/*
 * Teamwork.com Projects API
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * API version: 3.0
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package projv3

import (
	"encoding/json"
)

// PerformancePeopleMetricPerformancesResponse PeopleMetricPerformancesResponse contains information about a group of performances.
type PerformancePeopleMetricPerformancesResponse struct {
	Data *[]PerformancePeopleMetricPerformance `json:"data,omitempty"`
}

// NewPerformancePeopleMetricPerformancesResponse instantiates a new PerformancePeopleMetricPerformancesResponse object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewPerformancePeopleMetricPerformancesResponse() *PerformancePeopleMetricPerformancesResponse {
	this := PerformancePeopleMetricPerformancesResponse{}
	return &this
}

// NewPerformancePeopleMetricPerformancesResponseWithDefaults instantiates a new PerformancePeopleMetricPerformancesResponse object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewPerformancePeopleMetricPerformancesResponseWithDefaults() *PerformancePeopleMetricPerformancesResponse {
	this := PerformancePeopleMetricPerformancesResponse{}
	return &this
}

// GetData returns the Data field value if set, zero value otherwise.
func (o *PerformancePeopleMetricPerformancesResponse) GetData() []PerformancePeopleMetricPerformance {
	if o == nil || o.Data == nil {
		var ret []PerformancePeopleMetricPerformance
		return ret
	}
	return *o.Data
}

// GetDataOk returns a tuple with the Data field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PerformancePeopleMetricPerformancesResponse) GetDataOk() (*[]PerformancePeopleMetricPerformance, bool) {
	if o == nil || o.Data == nil {
		return nil, false
	}
	return o.Data, true
}

// HasData returns a boolean if a field has been set.
func (o *PerformancePeopleMetricPerformancesResponse) HasData() bool {
	if o != nil && o.Data != nil {
		return true
	}

	return false
}

// SetData gets a reference to the given []PerformancePeopleMetricPerformance and assigns it to the Data field.
func (o *PerformancePeopleMetricPerformancesResponse) SetData(v []PerformancePeopleMetricPerformance) {
	o.Data = &v
}

func (o PerformancePeopleMetricPerformancesResponse) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.Data != nil {
		toSerialize["data"] = o.Data
	}
	return json.Marshal(toSerialize)
}

type NullablePerformancePeopleMetricPerformancesResponse struct {
	value *PerformancePeopleMetricPerformancesResponse
	isSet bool
}

func (v NullablePerformancePeopleMetricPerformancesResponse) Get() *PerformancePeopleMetricPerformancesResponse {
	return v.value
}

func (v *NullablePerformancePeopleMetricPerformancesResponse) Set(val *PerformancePeopleMetricPerformancesResponse) {
	v.value = val
	v.isSet = true
}

func (v NullablePerformancePeopleMetricPerformancesResponse) IsSet() bool {
	return v.isSet
}

func (v *NullablePerformancePeopleMetricPerformancesResponse) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullablePerformancePeopleMetricPerformancesResponse(val *PerformancePeopleMetricPerformancesResponse) *NullablePerformancePeopleMetricPerformancesResponse {
	return &NullablePerformancePeopleMetricPerformancesResponse{value: val, isSet: true}
}

func (v NullablePerformancePeopleMetricPerformancesResponse) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullablePerformancePeopleMetricPerformancesResponse) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


