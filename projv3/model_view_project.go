/*
 * Teamwork.com Projects API
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * API version: 3.0
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package projv3

import (
	"encoding/json"
)

// ViewProject Project contains all the information returned from a project.
type ViewProject struct {
	ActivePages *ViewProjectActivePages `json:"activePages,omitempty"`
	Category *ViewRelationship `json:"category,omitempty"`
	CategoryId *int32 `json:"categoryId,omitempty"`
	Company *ViewRelationship `json:"company,omitempty"`
	CompanyId *int32 `json:"companyId,omitempty"`
	CreatedAt *string `json:"createdAt,omitempty"`
	CreatedBy *int32 `json:"createdBy,omitempty"`
	CustomFieldValueIds *[]int32 `json:"customFieldValueIds,omitempty"`
	CustomFieldValues *[]ViewRelationship `json:"customFieldValues,omitempty"`
	DefaultPrivacy *string `json:"defaultPrivacy,omitempty"`
	Description *string `json:"description,omitempty"`
	DirectFileUploadsEnabled *bool `json:"directFileUploadsEnabled,omitempty"`
	EndDate *string `json:"endDate,omitempty"`
	FinancialBudget *ViewRelationship `json:"financialBudget,omitempty"`
	FinancialBudgetId *int32 `json:"financialBudgetId,omitempty"`
	HarvestTimersEnabled *bool `json:"harvestTimersEnabled,omitempty"`
	Id *int32 `json:"id,omitempty"`
	Integrations *ViewProjectIntegrations `json:"integrations,omitempty"`
	IsOnBoardingProject *bool `json:"isOnBoardingProject,omitempty"`
	IsSampleProject *bool `json:"isSampleProject,omitempty"`
	IsStarred *bool `json:"isStarred,omitempty"`
	Logo *string `json:"logo,omitempty"`
	MinMaxAvailableDates *ViewProjectMinMaxAvailableDates `json:"minMaxAvailableDates,omitempty"`
	Name *string `json:"name,omitempty"`
	NotifyCommentIncludeCreator *bool `json:"notifyCommentIncludeCreator,omitempty"`
	NotifyEveryone *bool `json:"notifyEveryone,omitempty"`
	OverviewStartPage *string `json:"overviewStartPage,omitempty"`
	OwnedBy *int32 `json:"ownedBy,omitempty"`
	OwnerId *int32 `json:"ownerId,omitempty"`
	PrivacyEnabled *bool `json:"privacyEnabled,omitempty"`
	ProjectOwnerId *int32 `json:"projectOwnerId,omitempty"`
	ReplyByEmailEnabled *bool `json:"replyByEmailEnabled,omitempty"`
	ShowAnnouncement *bool `json:"showAnnouncement,omitempty"`
	SkipWeekends *bool `json:"skipWeekends,omitempty"`
	StartDate *string `json:"startDate,omitempty"`
	StartPage *string `json:"startPage,omitempty"`
	Status *string `json:"status,omitempty"`
	SubStatus *string `json:"subStatus,omitempty"`
	TagIds *[]int32 `json:"tagIds,omitempty"`
	Tags *[]ViewRelationship `json:"tags,omitempty"`
	TasksStartPage *string `json:"tasksStartPage,omitempty"`
	TimeBudget *ViewRelationship `json:"timeBudget,omitempty"`
	TimeBudgetId *int32 `json:"timeBudgetId,omitempty"`
	Type *string `json:"type,omitempty"`
	UpdateId *int32 `json:"updateId,omitempty"`
	UpdatedAt *string `json:"updatedAt,omitempty"`
	UpdatedBy *int32 `json:"updatedBy,omitempty"`
}

// NewViewProject instantiates a new ViewProject object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewViewProject() *ViewProject {
	this := ViewProject{}
	return &this
}

// NewViewProjectWithDefaults instantiates a new ViewProject object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewViewProjectWithDefaults() *ViewProject {
	this := ViewProject{}
	return &this
}

// GetActivePages returns the ActivePages field value if set, zero value otherwise.
func (o *ViewProject) GetActivePages() ViewProjectActivePages {
	if o == nil || o.ActivePages == nil {
		var ret ViewProjectActivePages
		return ret
	}
	return *o.ActivePages
}

// GetActivePagesOk returns a tuple with the ActivePages field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ViewProject) GetActivePagesOk() (*ViewProjectActivePages, bool) {
	if o == nil || o.ActivePages == nil {
		return nil, false
	}
	return o.ActivePages, true
}

// HasActivePages returns a boolean if a field has been set.
func (o *ViewProject) HasActivePages() bool {
	if o != nil && o.ActivePages != nil {
		return true
	}

	return false
}

// SetActivePages gets a reference to the given ViewProjectActivePages and assigns it to the ActivePages field.
func (o *ViewProject) SetActivePages(v ViewProjectActivePages) {
	o.ActivePages = &v
}

// GetCategory returns the Category field value if set, zero value otherwise.
func (o *ViewProject) GetCategory() ViewRelationship {
	if o == nil || o.Category == nil {
		var ret ViewRelationship
		return ret
	}
	return *o.Category
}

// GetCategoryOk returns a tuple with the Category field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ViewProject) GetCategoryOk() (*ViewRelationship, bool) {
	if o == nil || o.Category == nil {
		return nil, false
	}
	return o.Category, true
}

// HasCategory returns a boolean if a field has been set.
func (o *ViewProject) HasCategory() bool {
	if o != nil && o.Category != nil {
		return true
	}

	return false
}

// SetCategory gets a reference to the given ViewRelationship and assigns it to the Category field.
func (o *ViewProject) SetCategory(v ViewRelationship) {
	o.Category = &v
}

// GetCategoryId returns the CategoryId field value if set, zero value otherwise.
func (o *ViewProject) GetCategoryId() int32 {
	if o == nil || o.CategoryId == nil {
		var ret int32
		return ret
	}
	return *o.CategoryId
}

// GetCategoryIdOk returns a tuple with the CategoryId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ViewProject) GetCategoryIdOk() (*int32, bool) {
	if o == nil || o.CategoryId == nil {
		return nil, false
	}
	return o.CategoryId, true
}

// HasCategoryId returns a boolean if a field has been set.
func (o *ViewProject) HasCategoryId() bool {
	if o != nil && o.CategoryId != nil {
		return true
	}

	return false
}

// SetCategoryId gets a reference to the given int32 and assigns it to the CategoryId field.
func (o *ViewProject) SetCategoryId(v int32) {
	o.CategoryId = &v
}

// GetCompany returns the Company field value if set, zero value otherwise.
func (o *ViewProject) GetCompany() ViewRelationship {
	if o == nil || o.Company == nil {
		var ret ViewRelationship
		return ret
	}
	return *o.Company
}

// GetCompanyOk returns a tuple with the Company field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ViewProject) GetCompanyOk() (*ViewRelationship, bool) {
	if o == nil || o.Company == nil {
		return nil, false
	}
	return o.Company, true
}

// HasCompany returns a boolean if a field has been set.
func (o *ViewProject) HasCompany() bool {
	if o != nil && o.Company != nil {
		return true
	}

	return false
}

// SetCompany gets a reference to the given ViewRelationship and assigns it to the Company field.
func (o *ViewProject) SetCompany(v ViewRelationship) {
	o.Company = &v
}

// GetCompanyId returns the CompanyId field value if set, zero value otherwise.
func (o *ViewProject) GetCompanyId() int32 {
	if o == nil || o.CompanyId == nil {
		var ret int32
		return ret
	}
	return *o.CompanyId
}

// GetCompanyIdOk returns a tuple with the CompanyId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ViewProject) GetCompanyIdOk() (*int32, bool) {
	if o == nil || o.CompanyId == nil {
		return nil, false
	}
	return o.CompanyId, true
}

// HasCompanyId returns a boolean if a field has been set.
func (o *ViewProject) HasCompanyId() bool {
	if o != nil && o.CompanyId != nil {
		return true
	}

	return false
}

// SetCompanyId gets a reference to the given int32 and assigns it to the CompanyId field.
func (o *ViewProject) SetCompanyId(v int32) {
	o.CompanyId = &v
}

// GetCreatedAt returns the CreatedAt field value if set, zero value otherwise.
func (o *ViewProject) GetCreatedAt() string {
	if o == nil || o.CreatedAt == nil {
		var ret string
		return ret
	}
	return *o.CreatedAt
}

// GetCreatedAtOk returns a tuple with the CreatedAt field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ViewProject) GetCreatedAtOk() (*string, bool) {
	if o == nil || o.CreatedAt == nil {
		return nil, false
	}
	return o.CreatedAt, true
}

// HasCreatedAt returns a boolean if a field has been set.
func (o *ViewProject) HasCreatedAt() bool {
	if o != nil && o.CreatedAt != nil {
		return true
	}

	return false
}

// SetCreatedAt gets a reference to the given string and assigns it to the CreatedAt field.
func (o *ViewProject) SetCreatedAt(v string) {
	o.CreatedAt = &v
}

// GetCreatedBy returns the CreatedBy field value if set, zero value otherwise.
func (o *ViewProject) GetCreatedBy() int32 {
	if o == nil || o.CreatedBy == nil {
		var ret int32
		return ret
	}
	return *o.CreatedBy
}

// GetCreatedByOk returns a tuple with the CreatedBy field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ViewProject) GetCreatedByOk() (*int32, bool) {
	if o == nil || o.CreatedBy == nil {
		return nil, false
	}
	return o.CreatedBy, true
}

// HasCreatedBy returns a boolean if a field has been set.
func (o *ViewProject) HasCreatedBy() bool {
	if o != nil && o.CreatedBy != nil {
		return true
	}

	return false
}

// SetCreatedBy gets a reference to the given int32 and assigns it to the CreatedBy field.
func (o *ViewProject) SetCreatedBy(v int32) {
	o.CreatedBy = &v
}

// GetCustomFieldValueIds returns the CustomFieldValueIds field value if set, zero value otherwise.
func (o *ViewProject) GetCustomFieldValueIds() []int32 {
	if o == nil || o.CustomFieldValueIds == nil {
		var ret []int32
		return ret
	}
	return *o.CustomFieldValueIds
}

// GetCustomFieldValueIdsOk returns a tuple with the CustomFieldValueIds field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ViewProject) GetCustomFieldValueIdsOk() (*[]int32, bool) {
	if o == nil || o.CustomFieldValueIds == nil {
		return nil, false
	}
	return o.CustomFieldValueIds, true
}

// HasCustomFieldValueIds returns a boolean if a field has been set.
func (o *ViewProject) HasCustomFieldValueIds() bool {
	if o != nil && o.CustomFieldValueIds != nil {
		return true
	}

	return false
}

// SetCustomFieldValueIds gets a reference to the given []int32 and assigns it to the CustomFieldValueIds field.
func (o *ViewProject) SetCustomFieldValueIds(v []int32) {
	o.CustomFieldValueIds = &v
}

// GetCustomFieldValues returns the CustomFieldValues field value if set, zero value otherwise.
func (o *ViewProject) GetCustomFieldValues() []ViewRelationship {
	if o == nil || o.CustomFieldValues == nil {
		var ret []ViewRelationship
		return ret
	}
	return *o.CustomFieldValues
}

// GetCustomFieldValuesOk returns a tuple with the CustomFieldValues field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ViewProject) GetCustomFieldValuesOk() (*[]ViewRelationship, bool) {
	if o == nil || o.CustomFieldValues == nil {
		return nil, false
	}
	return o.CustomFieldValues, true
}

// HasCustomFieldValues returns a boolean if a field has been set.
func (o *ViewProject) HasCustomFieldValues() bool {
	if o != nil && o.CustomFieldValues != nil {
		return true
	}

	return false
}

// SetCustomFieldValues gets a reference to the given []ViewRelationship and assigns it to the CustomFieldValues field.
func (o *ViewProject) SetCustomFieldValues(v []ViewRelationship) {
	o.CustomFieldValues = &v
}

// GetDefaultPrivacy returns the DefaultPrivacy field value if set, zero value otherwise.
func (o *ViewProject) GetDefaultPrivacy() string {
	if o == nil || o.DefaultPrivacy == nil {
		var ret string
		return ret
	}
	return *o.DefaultPrivacy
}

// GetDefaultPrivacyOk returns a tuple with the DefaultPrivacy field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ViewProject) GetDefaultPrivacyOk() (*string, bool) {
	if o == nil || o.DefaultPrivacy == nil {
		return nil, false
	}
	return o.DefaultPrivacy, true
}

// HasDefaultPrivacy returns a boolean if a field has been set.
func (o *ViewProject) HasDefaultPrivacy() bool {
	if o != nil && o.DefaultPrivacy != nil {
		return true
	}

	return false
}

// SetDefaultPrivacy gets a reference to the given string and assigns it to the DefaultPrivacy field.
func (o *ViewProject) SetDefaultPrivacy(v string) {
	o.DefaultPrivacy = &v
}

// GetDescription returns the Description field value if set, zero value otherwise.
func (o *ViewProject) GetDescription() string {
	if o == nil || o.Description == nil {
		var ret string
		return ret
	}
	return *o.Description
}

// GetDescriptionOk returns a tuple with the Description field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ViewProject) GetDescriptionOk() (*string, bool) {
	if o == nil || o.Description == nil {
		return nil, false
	}
	return o.Description, true
}

// HasDescription returns a boolean if a field has been set.
func (o *ViewProject) HasDescription() bool {
	if o != nil && o.Description != nil {
		return true
	}

	return false
}

// SetDescription gets a reference to the given string and assigns it to the Description field.
func (o *ViewProject) SetDescription(v string) {
	o.Description = &v
}

// GetDirectFileUploadsEnabled returns the DirectFileUploadsEnabled field value if set, zero value otherwise.
func (o *ViewProject) GetDirectFileUploadsEnabled() bool {
	if o == nil || o.DirectFileUploadsEnabled == nil {
		var ret bool
		return ret
	}
	return *o.DirectFileUploadsEnabled
}

// GetDirectFileUploadsEnabledOk returns a tuple with the DirectFileUploadsEnabled field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ViewProject) GetDirectFileUploadsEnabledOk() (*bool, bool) {
	if o == nil || o.DirectFileUploadsEnabled == nil {
		return nil, false
	}
	return o.DirectFileUploadsEnabled, true
}

// HasDirectFileUploadsEnabled returns a boolean if a field has been set.
func (o *ViewProject) HasDirectFileUploadsEnabled() bool {
	if o != nil && o.DirectFileUploadsEnabled != nil {
		return true
	}

	return false
}

// SetDirectFileUploadsEnabled gets a reference to the given bool and assigns it to the DirectFileUploadsEnabled field.
func (o *ViewProject) SetDirectFileUploadsEnabled(v bool) {
	o.DirectFileUploadsEnabled = &v
}

// GetEndDate returns the EndDate field value if set, zero value otherwise.
func (o *ViewProject) GetEndDate() string {
	if o == nil || o.EndDate == nil {
		var ret string
		return ret
	}
	return *o.EndDate
}

// GetEndDateOk returns a tuple with the EndDate field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ViewProject) GetEndDateOk() (*string, bool) {
	if o == nil || o.EndDate == nil {
		return nil, false
	}
	return o.EndDate, true
}

// HasEndDate returns a boolean if a field has been set.
func (o *ViewProject) HasEndDate() bool {
	if o != nil && o.EndDate != nil {
		return true
	}

	return false
}

// SetEndDate gets a reference to the given string and assigns it to the EndDate field.
func (o *ViewProject) SetEndDate(v string) {
	o.EndDate = &v
}

// GetFinancialBudget returns the FinancialBudget field value if set, zero value otherwise.
func (o *ViewProject) GetFinancialBudget() ViewRelationship {
	if o == nil || o.FinancialBudget == nil {
		var ret ViewRelationship
		return ret
	}
	return *o.FinancialBudget
}

// GetFinancialBudgetOk returns a tuple with the FinancialBudget field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ViewProject) GetFinancialBudgetOk() (*ViewRelationship, bool) {
	if o == nil || o.FinancialBudget == nil {
		return nil, false
	}
	return o.FinancialBudget, true
}

// HasFinancialBudget returns a boolean if a field has been set.
func (o *ViewProject) HasFinancialBudget() bool {
	if o != nil && o.FinancialBudget != nil {
		return true
	}

	return false
}

// SetFinancialBudget gets a reference to the given ViewRelationship and assigns it to the FinancialBudget field.
func (o *ViewProject) SetFinancialBudget(v ViewRelationship) {
	o.FinancialBudget = &v
}

// GetFinancialBudgetId returns the FinancialBudgetId field value if set, zero value otherwise.
func (o *ViewProject) GetFinancialBudgetId() int32 {
	if o == nil || o.FinancialBudgetId == nil {
		var ret int32
		return ret
	}
	return *o.FinancialBudgetId
}

// GetFinancialBudgetIdOk returns a tuple with the FinancialBudgetId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ViewProject) GetFinancialBudgetIdOk() (*int32, bool) {
	if o == nil || o.FinancialBudgetId == nil {
		return nil, false
	}
	return o.FinancialBudgetId, true
}

// HasFinancialBudgetId returns a boolean if a field has been set.
func (o *ViewProject) HasFinancialBudgetId() bool {
	if o != nil && o.FinancialBudgetId != nil {
		return true
	}

	return false
}

// SetFinancialBudgetId gets a reference to the given int32 and assigns it to the FinancialBudgetId field.
func (o *ViewProject) SetFinancialBudgetId(v int32) {
	o.FinancialBudgetId = &v
}

// GetHarvestTimersEnabled returns the HarvestTimersEnabled field value if set, zero value otherwise.
func (o *ViewProject) GetHarvestTimersEnabled() bool {
	if o == nil || o.HarvestTimersEnabled == nil {
		var ret bool
		return ret
	}
	return *o.HarvestTimersEnabled
}

// GetHarvestTimersEnabledOk returns a tuple with the HarvestTimersEnabled field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ViewProject) GetHarvestTimersEnabledOk() (*bool, bool) {
	if o == nil || o.HarvestTimersEnabled == nil {
		return nil, false
	}
	return o.HarvestTimersEnabled, true
}

// HasHarvestTimersEnabled returns a boolean if a field has been set.
func (o *ViewProject) HasHarvestTimersEnabled() bool {
	if o != nil && o.HarvestTimersEnabled != nil {
		return true
	}

	return false
}

// SetHarvestTimersEnabled gets a reference to the given bool and assigns it to the HarvestTimersEnabled field.
func (o *ViewProject) SetHarvestTimersEnabled(v bool) {
	o.HarvestTimersEnabled = &v
}

// GetId returns the Id field value if set, zero value otherwise.
func (o *ViewProject) GetId() int32 {
	if o == nil || o.Id == nil {
		var ret int32
		return ret
	}
	return *o.Id
}

// GetIdOk returns a tuple with the Id field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ViewProject) GetIdOk() (*int32, bool) {
	if o == nil || o.Id == nil {
		return nil, false
	}
	return o.Id, true
}

// HasId returns a boolean if a field has been set.
func (o *ViewProject) HasId() bool {
	if o != nil && o.Id != nil {
		return true
	}

	return false
}

// SetId gets a reference to the given int32 and assigns it to the Id field.
func (o *ViewProject) SetId(v int32) {
	o.Id = &v
}

// GetIntegrations returns the Integrations field value if set, zero value otherwise.
func (o *ViewProject) GetIntegrations() ViewProjectIntegrations {
	if o == nil || o.Integrations == nil {
		var ret ViewProjectIntegrations
		return ret
	}
	return *o.Integrations
}

// GetIntegrationsOk returns a tuple with the Integrations field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ViewProject) GetIntegrationsOk() (*ViewProjectIntegrations, bool) {
	if o == nil || o.Integrations == nil {
		return nil, false
	}
	return o.Integrations, true
}

// HasIntegrations returns a boolean if a field has been set.
func (o *ViewProject) HasIntegrations() bool {
	if o != nil && o.Integrations != nil {
		return true
	}

	return false
}

// SetIntegrations gets a reference to the given ViewProjectIntegrations and assigns it to the Integrations field.
func (o *ViewProject) SetIntegrations(v ViewProjectIntegrations) {
	o.Integrations = &v
}

// GetIsOnBoardingProject returns the IsOnBoardingProject field value if set, zero value otherwise.
func (o *ViewProject) GetIsOnBoardingProject() bool {
	if o == nil || o.IsOnBoardingProject == nil {
		var ret bool
		return ret
	}
	return *o.IsOnBoardingProject
}

// GetIsOnBoardingProjectOk returns a tuple with the IsOnBoardingProject field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ViewProject) GetIsOnBoardingProjectOk() (*bool, bool) {
	if o == nil || o.IsOnBoardingProject == nil {
		return nil, false
	}
	return o.IsOnBoardingProject, true
}

// HasIsOnBoardingProject returns a boolean if a field has been set.
func (o *ViewProject) HasIsOnBoardingProject() bool {
	if o != nil && o.IsOnBoardingProject != nil {
		return true
	}

	return false
}

// SetIsOnBoardingProject gets a reference to the given bool and assigns it to the IsOnBoardingProject field.
func (o *ViewProject) SetIsOnBoardingProject(v bool) {
	o.IsOnBoardingProject = &v
}

// GetIsSampleProject returns the IsSampleProject field value if set, zero value otherwise.
func (o *ViewProject) GetIsSampleProject() bool {
	if o == nil || o.IsSampleProject == nil {
		var ret bool
		return ret
	}
	return *o.IsSampleProject
}

// GetIsSampleProjectOk returns a tuple with the IsSampleProject field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ViewProject) GetIsSampleProjectOk() (*bool, bool) {
	if o == nil || o.IsSampleProject == nil {
		return nil, false
	}
	return o.IsSampleProject, true
}

// HasIsSampleProject returns a boolean if a field has been set.
func (o *ViewProject) HasIsSampleProject() bool {
	if o != nil && o.IsSampleProject != nil {
		return true
	}

	return false
}

// SetIsSampleProject gets a reference to the given bool and assigns it to the IsSampleProject field.
func (o *ViewProject) SetIsSampleProject(v bool) {
	o.IsSampleProject = &v
}

// GetIsStarred returns the IsStarred field value if set, zero value otherwise.
func (o *ViewProject) GetIsStarred() bool {
	if o == nil || o.IsStarred == nil {
		var ret bool
		return ret
	}
	return *o.IsStarred
}

// GetIsStarredOk returns a tuple with the IsStarred field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ViewProject) GetIsStarredOk() (*bool, bool) {
	if o == nil || o.IsStarred == nil {
		return nil, false
	}
	return o.IsStarred, true
}

// HasIsStarred returns a boolean if a field has been set.
func (o *ViewProject) HasIsStarred() bool {
	if o != nil && o.IsStarred != nil {
		return true
	}

	return false
}

// SetIsStarred gets a reference to the given bool and assigns it to the IsStarred field.
func (o *ViewProject) SetIsStarred(v bool) {
	o.IsStarred = &v
}

// GetLogo returns the Logo field value if set, zero value otherwise.
func (o *ViewProject) GetLogo() string {
	if o == nil || o.Logo == nil {
		var ret string
		return ret
	}
	return *o.Logo
}

// GetLogoOk returns a tuple with the Logo field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ViewProject) GetLogoOk() (*string, bool) {
	if o == nil || o.Logo == nil {
		return nil, false
	}
	return o.Logo, true
}

// HasLogo returns a boolean if a field has been set.
func (o *ViewProject) HasLogo() bool {
	if o != nil && o.Logo != nil {
		return true
	}

	return false
}

// SetLogo gets a reference to the given string and assigns it to the Logo field.
func (o *ViewProject) SetLogo(v string) {
	o.Logo = &v
}

// GetMinMaxAvailableDates returns the MinMaxAvailableDates field value if set, zero value otherwise.
func (o *ViewProject) GetMinMaxAvailableDates() ViewProjectMinMaxAvailableDates {
	if o == nil || o.MinMaxAvailableDates == nil {
		var ret ViewProjectMinMaxAvailableDates
		return ret
	}
	return *o.MinMaxAvailableDates
}

// GetMinMaxAvailableDatesOk returns a tuple with the MinMaxAvailableDates field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ViewProject) GetMinMaxAvailableDatesOk() (*ViewProjectMinMaxAvailableDates, bool) {
	if o == nil || o.MinMaxAvailableDates == nil {
		return nil, false
	}
	return o.MinMaxAvailableDates, true
}

// HasMinMaxAvailableDates returns a boolean if a field has been set.
func (o *ViewProject) HasMinMaxAvailableDates() bool {
	if o != nil && o.MinMaxAvailableDates != nil {
		return true
	}

	return false
}

// SetMinMaxAvailableDates gets a reference to the given ViewProjectMinMaxAvailableDates and assigns it to the MinMaxAvailableDates field.
func (o *ViewProject) SetMinMaxAvailableDates(v ViewProjectMinMaxAvailableDates) {
	o.MinMaxAvailableDates = &v
}

// GetName returns the Name field value if set, zero value otherwise.
func (o *ViewProject) GetName() string {
	if o == nil || o.Name == nil {
		var ret string
		return ret
	}
	return *o.Name
}

// GetNameOk returns a tuple with the Name field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ViewProject) GetNameOk() (*string, bool) {
	if o == nil || o.Name == nil {
		return nil, false
	}
	return o.Name, true
}

// HasName returns a boolean if a field has been set.
func (o *ViewProject) HasName() bool {
	if o != nil && o.Name != nil {
		return true
	}

	return false
}

// SetName gets a reference to the given string and assigns it to the Name field.
func (o *ViewProject) SetName(v string) {
	o.Name = &v
}

// GetNotifyCommentIncludeCreator returns the NotifyCommentIncludeCreator field value if set, zero value otherwise.
func (o *ViewProject) GetNotifyCommentIncludeCreator() bool {
	if o == nil || o.NotifyCommentIncludeCreator == nil {
		var ret bool
		return ret
	}
	return *o.NotifyCommentIncludeCreator
}

// GetNotifyCommentIncludeCreatorOk returns a tuple with the NotifyCommentIncludeCreator field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ViewProject) GetNotifyCommentIncludeCreatorOk() (*bool, bool) {
	if o == nil || o.NotifyCommentIncludeCreator == nil {
		return nil, false
	}
	return o.NotifyCommentIncludeCreator, true
}

// HasNotifyCommentIncludeCreator returns a boolean if a field has been set.
func (o *ViewProject) HasNotifyCommentIncludeCreator() bool {
	if o != nil && o.NotifyCommentIncludeCreator != nil {
		return true
	}

	return false
}

// SetNotifyCommentIncludeCreator gets a reference to the given bool and assigns it to the NotifyCommentIncludeCreator field.
func (o *ViewProject) SetNotifyCommentIncludeCreator(v bool) {
	o.NotifyCommentIncludeCreator = &v
}

// GetNotifyEveryone returns the NotifyEveryone field value if set, zero value otherwise.
func (o *ViewProject) GetNotifyEveryone() bool {
	if o == nil || o.NotifyEveryone == nil {
		var ret bool
		return ret
	}
	return *o.NotifyEveryone
}

// GetNotifyEveryoneOk returns a tuple with the NotifyEveryone field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ViewProject) GetNotifyEveryoneOk() (*bool, bool) {
	if o == nil || o.NotifyEveryone == nil {
		return nil, false
	}
	return o.NotifyEveryone, true
}

// HasNotifyEveryone returns a boolean if a field has been set.
func (o *ViewProject) HasNotifyEveryone() bool {
	if o != nil && o.NotifyEveryone != nil {
		return true
	}

	return false
}

// SetNotifyEveryone gets a reference to the given bool and assigns it to the NotifyEveryone field.
func (o *ViewProject) SetNotifyEveryone(v bool) {
	o.NotifyEveryone = &v
}

// GetOverviewStartPage returns the OverviewStartPage field value if set, zero value otherwise.
func (o *ViewProject) GetOverviewStartPage() string {
	if o == nil || o.OverviewStartPage == nil {
		var ret string
		return ret
	}
	return *o.OverviewStartPage
}

// GetOverviewStartPageOk returns a tuple with the OverviewStartPage field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ViewProject) GetOverviewStartPageOk() (*string, bool) {
	if o == nil || o.OverviewStartPage == nil {
		return nil, false
	}
	return o.OverviewStartPage, true
}

// HasOverviewStartPage returns a boolean if a field has been set.
func (o *ViewProject) HasOverviewStartPage() bool {
	if o != nil && o.OverviewStartPage != nil {
		return true
	}

	return false
}

// SetOverviewStartPage gets a reference to the given string and assigns it to the OverviewStartPage field.
func (o *ViewProject) SetOverviewStartPage(v string) {
	o.OverviewStartPage = &v
}

// GetOwnedBy returns the OwnedBy field value if set, zero value otherwise.
func (o *ViewProject) GetOwnedBy() int32 {
	if o == nil || o.OwnedBy == nil {
		var ret int32
		return ret
	}
	return *o.OwnedBy
}

// GetOwnedByOk returns a tuple with the OwnedBy field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ViewProject) GetOwnedByOk() (*int32, bool) {
	if o == nil || o.OwnedBy == nil {
		return nil, false
	}
	return o.OwnedBy, true
}

// HasOwnedBy returns a boolean if a field has been set.
func (o *ViewProject) HasOwnedBy() bool {
	if o != nil && o.OwnedBy != nil {
		return true
	}

	return false
}

// SetOwnedBy gets a reference to the given int32 and assigns it to the OwnedBy field.
func (o *ViewProject) SetOwnedBy(v int32) {
	o.OwnedBy = &v
}

// GetOwnerId returns the OwnerId field value if set, zero value otherwise.
func (o *ViewProject) GetOwnerId() int32 {
	if o == nil || o.OwnerId == nil {
		var ret int32
		return ret
	}
	return *o.OwnerId
}

// GetOwnerIdOk returns a tuple with the OwnerId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ViewProject) GetOwnerIdOk() (*int32, bool) {
	if o == nil || o.OwnerId == nil {
		return nil, false
	}
	return o.OwnerId, true
}

// HasOwnerId returns a boolean if a field has been set.
func (o *ViewProject) HasOwnerId() bool {
	if o != nil && o.OwnerId != nil {
		return true
	}

	return false
}

// SetOwnerId gets a reference to the given int32 and assigns it to the OwnerId field.
func (o *ViewProject) SetOwnerId(v int32) {
	o.OwnerId = &v
}

// GetPrivacyEnabled returns the PrivacyEnabled field value if set, zero value otherwise.
func (o *ViewProject) GetPrivacyEnabled() bool {
	if o == nil || o.PrivacyEnabled == nil {
		var ret bool
		return ret
	}
	return *o.PrivacyEnabled
}

// GetPrivacyEnabledOk returns a tuple with the PrivacyEnabled field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ViewProject) GetPrivacyEnabledOk() (*bool, bool) {
	if o == nil || o.PrivacyEnabled == nil {
		return nil, false
	}
	return o.PrivacyEnabled, true
}

// HasPrivacyEnabled returns a boolean if a field has been set.
func (o *ViewProject) HasPrivacyEnabled() bool {
	if o != nil && o.PrivacyEnabled != nil {
		return true
	}

	return false
}

// SetPrivacyEnabled gets a reference to the given bool and assigns it to the PrivacyEnabled field.
func (o *ViewProject) SetPrivacyEnabled(v bool) {
	o.PrivacyEnabled = &v
}

// GetProjectOwnerId returns the ProjectOwnerId field value if set, zero value otherwise.
func (o *ViewProject) GetProjectOwnerId() int32 {
	if o == nil || o.ProjectOwnerId == nil {
		var ret int32
		return ret
	}
	return *o.ProjectOwnerId
}

// GetProjectOwnerIdOk returns a tuple with the ProjectOwnerId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ViewProject) GetProjectOwnerIdOk() (*int32, bool) {
	if o == nil || o.ProjectOwnerId == nil {
		return nil, false
	}
	return o.ProjectOwnerId, true
}

// HasProjectOwnerId returns a boolean if a field has been set.
func (o *ViewProject) HasProjectOwnerId() bool {
	if o != nil && o.ProjectOwnerId != nil {
		return true
	}

	return false
}

// SetProjectOwnerId gets a reference to the given int32 and assigns it to the ProjectOwnerId field.
func (o *ViewProject) SetProjectOwnerId(v int32) {
	o.ProjectOwnerId = &v
}

// GetReplyByEmailEnabled returns the ReplyByEmailEnabled field value if set, zero value otherwise.
func (o *ViewProject) GetReplyByEmailEnabled() bool {
	if o == nil || o.ReplyByEmailEnabled == nil {
		var ret bool
		return ret
	}
	return *o.ReplyByEmailEnabled
}

// GetReplyByEmailEnabledOk returns a tuple with the ReplyByEmailEnabled field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ViewProject) GetReplyByEmailEnabledOk() (*bool, bool) {
	if o == nil || o.ReplyByEmailEnabled == nil {
		return nil, false
	}
	return o.ReplyByEmailEnabled, true
}

// HasReplyByEmailEnabled returns a boolean if a field has been set.
func (o *ViewProject) HasReplyByEmailEnabled() bool {
	if o != nil && o.ReplyByEmailEnabled != nil {
		return true
	}

	return false
}

// SetReplyByEmailEnabled gets a reference to the given bool and assigns it to the ReplyByEmailEnabled field.
func (o *ViewProject) SetReplyByEmailEnabled(v bool) {
	o.ReplyByEmailEnabled = &v
}

// GetShowAnnouncement returns the ShowAnnouncement field value if set, zero value otherwise.
func (o *ViewProject) GetShowAnnouncement() bool {
	if o == nil || o.ShowAnnouncement == nil {
		var ret bool
		return ret
	}
	return *o.ShowAnnouncement
}

// GetShowAnnouncementOk returns a tuple with the ShowAnnouncement field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ViewProject) GetShowAnnouncementOk() (*bool, bool) {
	if o == nil || o.ShowAnnouncement == nil {
		return nil, false
	}
	return o.ShowAnnouncement, true
}

// HasShowAnnouncement returns a boolean if a field has been set.
func (o *ViewProject) HasShowAnnouncement() bool {
	if o != nil && o.ShowAnnouncement != nil {
		return true
	}

	return false
}

// SetShowAnnouncement gets a reference to the given bool and assigns it to the ShowAnnouncement field.
func (o *ViewProject) SetShowAnnouncement(v bool) {
	o.ShowAnnouncement = &v
}

// GetSkipWeekends returns the SkipWeekends field value if set, zero value otherwise.
func (o *ViewProject) GetSkipWeekends() bool {
	if o == nil || o.SkipWeekends == nil {
		var ret bool
		return ret
	}
	return *o.SkipWeekends
}

// GetSkipWeekendsOk returns a tuple with the SkipWeekends field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ViewProject) GetSkipWeekendsOk() (*bool, bool) {
	if o == nil || o.SkipWeekends == nil {
		return nil, false
	}
	return o.SkipWeekends, true
}

// HasSkipWeekends returns a boolean if a field has been set.
func (o *ViewProject) HasSkipWeekends() bool {
	if o != nil && o.SkipWeekends != nil {
		return true
	}

	return false
}

// SetSkipWeekends gets a reference to the given bool and assigns it to the SkipWeekends field.
func (o *ViewProject) SetSkipWeekends(v bool) {
	o.SkipWeekends = &v
}

// GetStartDate returns the StartDate field value if set, zero value otherwise.
func (o *ViewProject) GetStartDate() string {
	if o == nil || o.StartDate == nil {
		var ret string
		return ret
	}
	return *o.StartDate
}

// GetStartDateOk returns a tuple with the StartDate field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ViewProject) GetStartDateOk() (*string, bool) {
	if o == nil || o.StartDate == nil {
		return nil, false
	}
	return o.StartDate, true
}

// HasStartDate returns a boolean if a field has been set.
func (o *ViewProject) HasStartDate() bool {
	if o != nil && o.StartDate != nil {
		return true
	}

	return false
}

// SetStartDate gets a reference to the given string and assigns it to the StartDate field.
func (o *ViewProject) SetStartDate(v string) {
	o.StartDate = &v
}

// GetStartPage returns the StartPage field value if set, zero value otherwise.
func (o *ViewProject) GetStartPage() string {
	if o == nil || o.StartPage == nil {
		var ret string
		return ret
	}
	return *o.StartPage
}

// GetStartPageOk returns a tuple with the StartPage field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ViewProject) GetStartPageOk() (*string, bool) {
	if o == nil || o.StartPage == nil {
		return nil, false
	}
	return o.StartPage, true
}

// HasStartPage returns a boolean if a field has been set.
func (o *ViewProject) HasStartPage() bool {
	if o != nil && o.StartPage != nil {
		return true
	}

	return false
}

// SetStartPage gets a reference to the given string and assigns it to the StartPage field.
func (o *ViewProject) SetStartPage(v string) {
	o.StartPage = &v
}

// GetStatus returns the Status field value if set, zero value otherwise.
func (o *ViewProject) GetStatus() string {
	if o == nil || o.Status == nil {
		var ret string
		return ret
	}
	return *o.Status
}

// GetStatusOk returns a tuple with the Status field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ViewProject) GetStatusOk() (*string, bool) {
	if o == nil || o.Status == nil {
		return nil, false
	}
	return o.Status, true
}

// HasStatus returns a boolean if a field has been set.
func (o *ViewProject) HasStatus() bool {
	if o != nil && o.Status != nil {
		return true
	}

	return false
}

// SetStatus gets a reference to the given string and assigns it to the Status field.
func (o *ViewProject) SetStatus(v string) {
	o.Status = &v
}

// GetSubStatus returns the SubStatus field value if set, zero value otherwise.
func (o *ViewProject) GetSubStatus() string {
	if o == nil || o.SubStatus == nil {
		var ret string
		return ret
	}
	return *o.SubStatus
}

// GetSubStatusOk returns a tuple with the SubStatus field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ViewProject) GetSubStatusOk() (*string, bool) {
	if o == nil || o.SubStatus == nil {
		return nil, false
	}
	return o.SubStatus, true
}

// HasSubStatus returns a boolean if a field has been set.
func (o *ViewProject) HasSubStatus() bool {
	if o != nil && o.SubStatus != nil {
		return true
	}

	return false
}

// SetSubStatus gets a reference to the given string and assigns it to the SubStatus field.
func (o *ViewProject) SetSubStatus(v string) {
	o.SubStatus = &v
}

// GetTagIds returns the TagIds field value if set, zero value otherwise.
func (o *ViewProject) GetTagIds() []int32 {
	if o == nil || o.TagIds == nil {
		var ret []int32
		return ret
	}
	return *o.TagIds
}

// GetTagIdsOk returns a tuple with the TagIds field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ViewProject) GetTagIdsOk() (*[]int32, bool) {
	if o == nil || o.TagIds == nil {
		return nil, false
	}
	return o.TagIds, true
}

// HasTagIds returns a boolean if a field has been set.
func (o *ViewProject) HasTagIds() bool {
	if o != nil && o.TagIds != nil {
		return true
	}

	return false
}

// SetTagIds gets a reference to the given []int32 and assigns it to the TagIds field.
func (o *ViewProject) SetTagIds(v []int32) {
	o.TagIds = &v
}

// GetTags returns the Tags field value if set, zero value otherwise.
func (o *ViewProject) GetTags() []ViewRelationship {
	if o == nil || o.Tags == nil {
		var ret []ViewRelationship
		return ret
	}
	return *o.Tags
}

// GetTagsOk returns a tuple with the Tags field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ViewProject) GetTagsOk() (*[]ViewRelationship, bool) {
	if o == nil || o.Tags == nil {
		return nil, false
	}
	return o.Tags, true
}

// HasTags returns a boolean if a field has been set.
func (o *ViewProject) HasTags() bool {
	if o != nil && o.Tags != nil {
		return true
	}

	return false
}

// SetTags gets a reference to the given []ViewRelationship and assigns it to the Tags field.
func (o *ViewProject) SetTags(v []ViewRelationship) {
	o.Tags = &v
}

// GetTasksStartPage returns the TasksStartPage field value if set, zero value otherwise.
func (o *ViewProject) GetTasksStartPage() string {
	if o == nil || o.TasksStartPage == nil {
		var ret string
		return ret
	}
	return *o.TasksStartPage
}

// GetTasksStartPageOk returns a tuple with the TasksStartPage field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ViewProject) GetTasksStartPageOk() (*string, bool) {
	if o == nil || o.TasksStartPage == nil {
		return nil, false
	}
	return o.TasksStartPage, true
}

// HasTasksStartPage returns a boolean if a field has been set.
func (o *ViewProject) HasTasksStartPage() bool {
	if o != nil && o.TasksStartPage != nil {
		return true
	}

	return false
}

// SetTasksStartPage gets a reference to the given string and assigns it to the TasksStartPage field.
func (o *ViewProject) SetTasksStartPage(v string) {
	o.TasksStartPage = &v
}

// GetTimeBudget returns the TimeBudget field value if set, zero value otherwise.
func (o *ViewProject) GetTimeBudget() ViewRelationship {
	if o == nil || o.TimeBudget == nil {
		var ret ViewRelationship
		return ret
	}
	return *o.TimeBudget
}

// GetTimeBudgetOk returns a tuple with the TimeBudget field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ViewProject) GetTimeBudgetOk() (*ViewRelationship, bool) {
	if o == nil || o.TimeBudget == nil {
		return nil, false
	}
	return o.TimeBudget, true
}

// HasTimeBudget returns a boolean if a field has been set.
func (o *ViewProject) HasTimeBudget() bool {
	if o != nil && o.TimeBudget != nil {
		return true
	}

	return false
}

// SetTimeBudget gets a reference to the given ViewRelationship and assigns it to the TimeBudget field.
func (o *ViewProject) SetTimeBudget(v ViewRelationship) {
	o.TimeBudget = &v
}

// GetTimeBudgetId returns the TimeBudgetId field value if set, zero value otherwise.
func (o *ViewProject) GetTimeBudgetId() int32 {
	if o == nil || o.TimeBudgetId == nil {
		var ret int32
		return ret
	}
	return *o.TimeBudgetId
}

// GetTimeBudgetIdOk returns a tuple with the TimeBudgetId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ViewProject) GetTimeBudgetIdOk() (*int32, bool) {
	if o == nil || o.TimeBudgetId == nil {
		return nil, false
	}
	return o.TimeBudgetId, true
}

// HasTimeBudgetId returns a boolean if a field has been set.
func (o *ViewProject) HasTimeBudgetId() bool {
	if o != nil && o.TimeBudgetId != nil {
		return true
	}

	return false
}

// SetTimeBudgetId gets a reference to the given int32 and assigns it to the TimeBudgetId field.
func (o *ViewProject) SetTimeBudgetId(v int32) {
	o.TimeBudgetId = &v
}

// GetType returns the Type field value if set, zero value otherwise.
func (o *ViewProject) GetType() string {
	if o == nil || o.Type == nil {
		var ret string
		return ret
	}
	return *o.Type
}

// GetTypeOk returns a tuple with the Type field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ViewProject) GetTypeOk() (*string, bool) {
	if o == nil || o.Type == nil {
		return nil, false
	}
	return o.Type, true
}

// HasType returns a boolean if a field has been set.
func (o *ViewProject) HasType() bool {
	if o != nil && o.Type != nil {
		return true
	}

	return false
}

// SetType gets a reference to the given string and assigns it to the Type field.
func (o *ViewProject) SetType(v string) {
	o.Type = &v
}

// GetUpdateId returns the UpdateId field value if set, zero value otherwise.
func (o *ViewProject) GetUpdateId() int32 {
	if o == nil || o.UpdateId == nil {
		var ret int32
		return ret
	}
	return *o.UpdateId
}

// GetUpdateIdOk returns a tuple with the UpdateId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ViewProject) GetUpdateIdOk() (*int32, bool) {
	if o == nil || o.UpdateId == nil {
		return nil, false
	}
	return o.UpdateId, true
}

// HasUpdateId returns a boolean if a field has been set.
func (o *ViewProject) HasUpdateId() bool {
	if o != nil && o.UpdateId != nil {
		return true
	}

	return false
}

// SetUpdateId gets a reference to the given int32 and assigns it to the UpdateId field.
func (o *ViewProject) SetUpdateId(v int32) {
	o.UpdateId = &v
}

// GetUpdatedAt returns the UpdatedAt field value if set, zero value otherwise.
func (o *ViewProject) GetUpdatedAt() string {
	if o == nil || o.UpdatedAt == nil {
		var ret string
		return ret
	}
	return *o.UpdatedAt
}

// GetUpdatedAtOk returns a tuple with the UpdatedAt field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ViewProject) GetUpdatedAtOk() (*string, bool) {
	if o == nil || o.UpdatedAt == nil {
		return nil, false
	}
	return o.UpdatedAt, true
}

// HasUpdatedAt returns a boolean if a field has been set.
func (o *ViewProject) HasUpdatedAt() bool {
	if o != nil && o.UpdatedAt != nil {
		return true
	}

	return false
}

// SetUpdatedAt gets a reference to the given string and assigns it to the UpdatedAt field.
func (o *ViewProject) SetUpdatedAt(v string) {
	o.UpdatedAt = &v
}

// GetUpdatedBy returns the UpdatedBy field value if set, zero value otherwise.
func (o *ViewProject) GetUpdatedBy() int32 {
	if o == nil || o.UpdatedBy == nil {
		var ret int32
		return ret
	}
	return *o.UpdatedBy
}

// GetUpdatedByOk returns a tuple with the UpdatedBy field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ViewProject) GetUpdatedByOk() (*int32, bool) {
	if o == nil || o.UpdatedBy == nil {
		return nil, false
	}
	return o.UpdatedBy, true
}

// HasUpdatedBy returns a boolean if a field has been set.
func (o *ViewProject) HasUpdatedBy() bool {
	if o != nil && o.UpdatedBy != nil {
		return true
	}

	return false
}

// SetUpdatedBy gets a reference to the given int32 and assigns it to the UpdatedBy field.
func (o *ViewProject) SetUpdatedBy(v int32) {
	o.UpdatedBy = &v
}

func (o ViewProject) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.ActivePages != nil {
		toSerialize["activePages"] = o.ActivePages
	}
	if o.Category != nil {
		toSerialize["category"] = o.Category
	}
	if o.CategoryId != nil {
		toSerialize["categoryId"] = o.CategoryId
	}
	if o.Company != nil {
		toSerialize["company"] = o.Company
	}
	if o.CompanyId != nil {
		toSerialize["companyId"] = o.CompanyId
	}
	if o.CreatedAt != nil {
		toSerialize["createdAt"] = o.CreatedAt
	}
	if o.CreatedBy != nil {
		toSerialize["createdBy"] = o.CreatedBy
	}
	if o.CustomFieldValueIds != nil {
		toSerialize["customFieldValueIds"] = o.CustomFieldValueIds
	}
	if o.CustomFieldValues != nil {
		toSerialize["customFieldValues"] = o.CustomFieldValues
	}
	if o.DefaultPrivacy != nil {
		toSerialize["defaultPrivacy"] = o.DefaultPrivacy
	}
	if o.Description != nil {
		toSerialize["description"] = o.Description
	}
	if o.DirectFileUploadsEnabled != nil {
		toSerialize["directFileUploadsEnabled"] = o.DirectFileUploadsEnabled
	}
	if o.EndDate != nil {
		toSerialize["endDate"] = o.EndDate
	}
	if o.FinancialBudget != nil {
		toSerialize["financialBudget"] = o.FinancialBudget
	}
	if o.FinancialBudgetId != nil {
		toSerialize["financialBudgetId"] = o.FinancialBudgetId
	}
	if o.HarvestTimersEnabled != nil {
		toSerialize["harvestTimersEnabled"] = o.HarvestTimersEnabled
	}
	if o.Id != nil {
		toSerialize["id"] = o.Id
	}
	if o.Integrations != nil {
		toSerialize["integrations"] = o.Integrations
	}
	if o.IsOnBoardingProject != nil {
		toSerialize["isOnBoardingProject"] = o.IsOnBoardingProject
	}
	if o.IsSampleProject != nil {
		toSerialize["isSampleProject"] = o.IsSampleProject
	}
	if o.IsStarred != nil {
		toSerialize["isStarred"] = o.IsStarred
	}
	if o.Logo != nil {
		toSerialize["logo"] = o.Logo
	}
	if o.MinMaxAvailableDates != nil {
		toSerialize["minMaxAvailableDates"] = o.MinMaxAvailableDates
	}
	if o.Name != nil {
		toSerialize["name"] = o.Name
	}
	if o.NotifyCommentIncludeCreator != nil {
		toSerialize["notifyCommentIncludeCreator"] = o.NotifyCommentIncludeCreator
	}
	if o.NotifyEveryone != nil {
		toSerialize["notifyEveryone"] = o.NotifyEveryone
	}
	if o.OverviewStartPage != nil {
		toSerialize["overviewStartPage"] = o.OverviewStartPage
	}
	if o.OwnedBy != nil {
		toSerialize["ownedBy"] = o.OwnedBy
	}
	if o.OwnerId != nil {
		toSerialize["ownerId"] = o.OwnerId
	}
	if o.PrivacyEnabled != nil {
		toSerialize["privacyEnabled"] = o.PrivacyEnabled
	}
	if o.ProjectOwnerId != nil {
		toSerialize["projectOwnerId"] = o.ProjectOwnerId
	}
	if o.ReplyByEmailEnabled != nil {
		toSerialize["replyByEmailEnabled"] = o.ReplyByEmailEnabled
	}
	if o.ShowAnnouncement != nil {
		toSerialize["showAnnouncement"] = o.ShowAnnouncement
	}
	if o.SkipWeekends != nil {
		toSerialize["skipWeekends"] = o.SkipWeekends
	}
	if o.StartDate != nil {
		toSerialize["startDate"] = o.StartDate
	}
	if o.StartPage != nil {
		toSerialize["startPage"] = o.StartPage
	}
	if o.Status != nil {
		toSerialize["status"] = o.Status
	}
	if o.SubStatus != nil {
		toSerialize["subStatus"] = o.SubStatus
	}
	if o.TagIds != nil {
		toSerialize["tagIds"] = o.TagIds
	}
	if o.Tags != nil {
		toSerialize["tags"] = o.Tags
	}
	if o.TasksStartPage != nil {
		toSerialize["tasksStartPage"] = o.TasksStartPage
	}
	if o.TimeBudget != nil {
		toSerialize["timeBudget"] = o.TimeBudget
	}
	if o.TimeBudgetId != nil {
		toSerialize["timeBudgetId"] = o.TimeBudgetId
	}
	if o.Type != nil {
		toSerialize["type"] = o.Type
	}
	if o.UpdateId != nil {
		toSerialize["updateId"] = o.UpdateId
	}
	if o.UpdatedAt != nil {
		toSerialize["updatedAt"] = o.UpdatedAt
	}
	if o.UpdatedBy != nil {
		toSerialize["updatedBy"] = o.UpdatedBy
	}
	return json.Marshal(toSerialize)
}

type NullableViewProject struct {
	value *ViewProject
	isSet bool
}

func (v NullableViewProject) Get() *ViewProject {
	return v.value
}

func (v *NullableViewProject) Set(val *ViewProject) {
	v.value = val
	v.isSet = true
}

func (v NullableViewProject) IsSet() bool {
	return v.isSet
}

func (v *NullableViewProject) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableViewProject(val *ViewProject) *NullableViewProject {
	return &NullableViewProject{value: val, isSet: true}
}

func (v NullableViewProject) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableViewProject) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


