/*
 * Teamwork.com Projects API
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * API version: 3.0
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package projv3

import (
	"encoding/json"
)

// NotebookNotebooksResponse NotebooksResponse contains information about a group of notebooks.
type NotebookNotebooksResponse struct {
	Included *NotebookNotebooksResponseIncluded `json:"included,omitempty"`
	Meta *ViewMeta `json:"meta,omitempty"`
	Notebooks *[]ViewNotebook `json:"notebooks,omitempty"`
}

// NewNotebookNotebooksResponse instantiates a new NotebookNotebooksResponse object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewNotebookNotebooksResponse() *NotebookNotebooksResponse {
	this := NotebookNotebooksResponse{}
	return &this
}

// NewNotebookNotebooksResponseWithDefaults instantiates a new NotebookNotebooksResponse object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewNotebookNotebooksResponseWithDefaults() *NotebookNotebooksResponse {
	this := NotebookNotebooksResponse{}
	return &this
}

// GetIncluded returns the Included field value if set, zero value otherwise.
func (o *NotebookNotebooksResponse) GetIncluded() NotebookNotebooksResponseIncluded {
	if o == nil || o.Included == nil {
		var ret NotebookNotebooksResponseIncluded
		return ret
	}
	return *o.Included
}

// GetIncludedOk returns a tuple with the Included field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *NotebookNotebooksResponse) GetIncludedOk() (*NotebookNotebooksResponseIncluded, bool) {
	if o == nil || o.Included == nil {
		return nil, false
	}
	return o.Included, true
}

// HasIncluded returns a boolean if a field has been set.
func (o *NotebookNotebooksResponse) HasIncluded() bool {
	if o != nil && o.Included != nil {
		return true
	}

	return false
}

// SetIncluded gets a reference to the given NotebookNotebooksResponseIncluded and assigns it to the Included field.
func (o *NotebookNotebooksResponse) SetIncluded(v NotebookNotebooksResponseIncluded) {
	o.Included = &v
}

// GetMeta returns the Meta field value if set, zero value otherwise.
func (o *NotebookNotebooksResponse) GetMeta() ViewMeta {
	if o == nil || o.Meta == nil {
		var ret ViewMeta
		return ret
	}
	return *o.Meta
}

// GetMetaOk returns a tuple with the Meta field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *NotebookNotebooksResponse) GetMetaOk() (*ViewMeta, bool) {
	if o == nil || o.Meta == nil {
		return nil, false
	}
	return o.Meta, true
}

// HasMeta returns a boolean if a field has been set.
func (o *NotebookNotebooksResponse) HasMeta() bool {
	if o != nil && o.Meta != nil {
		return true
	}

	return false
}

// SetMeta gets a reference to the given ViewMeta and assigns it to the Meta field.
func (o *NotebookNotebooksResponse) SetMeta(v ViewMeta) {
	o.Meta = &v
}

// GetNotebooks returns the Notebooks field value if set, zero value otherwise.
func (o *NotebookNotebooksResponse) GetNotebooks() []ViewNotebook {
	if o == nil || o.Notebooks == nil {
		var ret []ViewNotebook
		return ret
	}
	return *o.Notebooks
}

// GetNotebooksOk returns a tuple with the Notebooks field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *NotebookNotebooksResponse) GetNotebooksOk() (*[]ViewNotebook, bool) {
	if o == nil || o.Notebooks == nil {
		return nil, false
	}
	return o.Notebooks, true
}

// HasNotebooks returns a boolean if a field has been set.
func (o *NotebookNotebooksResponse) HasNotebooks() bool {
	if o != nil && o.Notebooks != nil {
		return true
	}

	return false
}

// SetNotebooks gets a reference to the given []ViewNotebook and assigns it to the Notebooks field.
func (o *NotebookNotebooksResponse) SetNotebooks(v []ViewNotebook) {
	o.Notebooks = &v
}

func (o NotebookNotebooksResponse) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.Included != nil {
		toSerialize["included"] = o.Included
	}
	if o.Meta != nil {
		toSerialize["meta"] = o.Meta
	}
	if o.Notebooks != nil {
		toSerialize["notebooks"] = o.Notebooks
	}
	return json.Marshal(toSerialize)
}

type NullableNotebookNotebooksResponse struct {
	value *NotebookNotebooksResponse
	isSet bool
}

func (v NullableNotebookNotebooksResponse) Get() *NotebookNotebooksResponse {
	return v.value
}

func (v *NullableNotebookNotebooksResponse) Set(val *NotebookNotebooksResponse) {
	v.value = val
	v.isSet = true
}

func (v NullableNotebookNotebooksResponse) IsSet() bool {
	return v.isSet
}

func (v *NullableNotebookNotebooksResponse) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableNotebookNotebooksResponse(val *NotebookNotebooksResponse) *NullableNotebookNotebooksResponse {
	return &NullableNotebookNotebooksResponse{value: val, isSet: true}
}

func (v NullableNotebookNotebooksResponse) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableNotebookNotebooksResponse) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


