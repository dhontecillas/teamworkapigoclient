/*
 * Teamwork.com Projects API
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * API version: 3.0
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package projv3

import (
	"encoding/json"
)

// RatesRequest Request contains information of a rates to be created or updated.
type RatesRequest struct {
	Rate *int32 `json:"rate,omitempty"`
}

// NewRatesRequest instantiates a new RatesRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewRatesRequest() *RatesRequest {
	this := RatesRequest{}
	return &this
}

// NewRatesRequestWithDefaults instantiates a new RatesRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewRatesRequestWithDefaults() *RatesRequest {
	this := RatesRequest{}
	return &this
}

// GetRate returns the Rate field value if set, zero value otherwise.
func (o *RatesRequest) GetRate() int32 {
	if o == nil || o.Rate == nil {
		var ret int32
		return ret
	}
	return *o.Rate
}

// GetRateOk returns a tuple with the Rate field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RatesRequest) GetRateOk() (*int32, bool) {
	if o == nil || o.Rate == nil {
		return nil, false
	}
	return o.Rate, true
}

// HasRate returns a boolean if a field has been set.
func (o *RatesRequest) HasRate() bool {
	if o != nil && o.Rate != nil {
		return true
	}

	return false
}

// SetRate gets a reference to the given int32 and assigns it to the Rate field.
func (o *RatesRequest) SetRate(v int32) {
	o.Rate = &v
}

func (o RatesRequest) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.Rate != nil {
		toSerialize["rate"] = o.Rate
	}
	return json.Marshal(toSerialize)
}

type NullableRatesRequest struct {
	value *RatesRequest
	isSet bool
}

func (v NullableRatesRequest) Get() *RatesRequest {
	return v.value
}

func (v *NullableRatesRequest) Set(val *RatesRequest) {
	v.value = val
	v.isSet = true
}

func (v NullableRatesRequest) IsSet() bool {
	return v.isSet
}

func (v *NullableRatesRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableRatesRequest(val *RatesRequest) *NullableRatesRequest {
	return &NullableRatesRequest{value: val, isSet: true}
}

func (v NullableRatesRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableRatesRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


