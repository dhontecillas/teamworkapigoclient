openapi: 3.0.1
info:
  title: Teamwork.com Projects API
  version: "3.0"
servers:
- url: /
tags:
- name: Activity
- name: Allocations
- name: Apps
- name: AppsSettings
- name: BETA
- name: Budgets
- name: CalendarEvents
- name: Categories
- name: Comments
- name: Company
- name: CustomFields
- name: Dashboards
- name: FileComments
- name: Files
- name: Forms
- name: FormsAssignees
- name: FormsPublic
- name: FormsToken
- name: Importers
- name: Lockdowns
- name: Messages
- name: MilestoneComments
- name: Milestones
- name: NotebookComments
- name: Notebooks
- name: People
- name: PeopleStatus
- name: Person
- name: Project
- name: ProjectUpdates
- name: Projects
- name: ResourceScheduling
- name: Risks
- name: Sample
- name: Summary
- name: Tags
- name: TaskLists
- name: Tasks
- name: TimeTracking
- name: Workload
paths:
  /projects/api/v3/allocations.json:
    get:
      description: |-
        Return all allocations that matches with the provided filters.


        On this endpoint you can filter by project custom fields. The syntax for the
        query parameter is the following:

            projectCustomField[id][op]=value

        Where:
          - [id] is the custom field ID
          - [op] is the operator to apply when filtering, different operators are
            allowed according to the custom field type
          - [value] is the value to apply when filtering

        For example, if I want to filter a dropdown custom field with ID 10 to only
        return entries that have the value "Option1" we would do the following:

            projectCustomField[10][eq]=Option1

        The allowed operators are:
          - like
          - not-like
          - eq
          - not
          - lt
          - gt
          - any
      operationId: GET_projects_api_v3_allocations.json
      parameters:
      - description: filter by start date
        in: query
        name: startDate
        schema:
          format: date
          type: string
      - description: filter by search term
        in: query
        name: searchTerm
        schema:
          type: string
      - description: filter by project status
        in: query
        name: projectStatus
        schema:
          enum:
          - active
          - current
          - late
          - upcoming
          - completed
          - deleted
          type: string
      - description: order mode
        in: query
        name: orderMode
        schema:
          default: asc
          enum:
          - asc
          - desc
          type: string
      - description: order by
        in: query
        name: orderBy
        schema:
          default: project
          enum:
          - startdate
          - enddate
          - project
          - assigneduser
          type: string
      - description: filter by end date
        in: query
        name: endDate
        schema:
          format: date
          type: string
      - description: |-
          filter by project healths

          0: not set
          1: bad
          2: ok
          3: good
        in: query
        name: projectHealths
        schema:
          enum:
          - 0
          - 1
          - 2
          - 3
          type: integer
      - description: number of items in a page
        in: query
        name: pageSize
        schema:
          default: 50
          type: integer
      - description: page number
        in: query
        name: page
        schema:
          default: 1
          type: integer
      - description: filter by starred projects only
        in: query
        name: onlyStarredProjects
        schema:
          type: boolean
      - description: only show projects with explicit membership
        in: query
        name: onlyProjectsWithExplicitMembership
        schema:
          default: false
          type: boolean
      - description: match all project tags
        in: query
        name: matchAllProjectTags
        schema:
          type: boolean
      - description: hide projects where the logged-in user is just an observer
        in: query
        name: hideObservedProjects
        schema:
          default: false
          type: boolean
      - description: filter by project tag ids
        explode: false
        in: query
        name: projectTagIds
        schema:
          items:
            type: integer
          type: array
        style: form
      - description: filter by project owner ids
        explode: false
        in: query
        name: projectOwnerIds
        schema:
          items:
            type: integer
          type: array
        style: form
      - description: filter by project ids
        explode: false
        in: query
        name: projectIds
        schema:
          items:
            type: integer
          type: array
        style: form
      - description: filter by company ids
        explode: false
        in: query
        name: projectCompanyIds
        schema:
          items:
            type: integer
          type: array
        style: form
      - description: filter by project category ids
        explode: false
        in: query
        name: projectCategoryIds
        schema:
          items:
            type: integer
          type: array
        style: form
      - description: include
        explode: false
        in: query
        name: include
        schema:
          enum:
          - projects
          - projects.companies
          - assignee
          items:
            type: string
          type: array
        style: form
      - explode: false
        in: query
        name: fields[users]
        schema:
          enum:
          - id
          - firstName
          - lastName
          - email
          - companyId
          - isAdmin
          - type
          items:
            type: string
          type: array
        style: form
      - explode: false
        in: query
        name: fields[projects]
        schema:
          enum:
          - id
          - name
          items:
            type: string
          type: array
        style: form
      - explode: false
        in: query
        name: fields[companies]
        schema:
          enum:
          - id
          - name
          - logoUploadedToServer
          - logoImage
          items:
            type: string
          type: array
        style: form
      - explode: false
        in: query
        name: fields[allocations]
        schema:
          enum:
          - id
          - installationId
          - projectId
          - title
          - description
          - startedAt
          - endedAt
          - duration
          - color
          - status
          - distributeType
          - createdAt
          - createdByUser
          - updatedAt
          - updatedByUser
          - deletedAt
          - deletedByUser
          - assignedUserID
          items:
            type: string
          type: array
        style: form
      - description: filter by assigned user ids
        explode: false
        in: query
        name: assignedUserIds
        schema:
          items:
            type: integer
          type: array
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/allocation.AllocationsResponse'
          description: 200 OK
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/view.ErrorResponse'
          description: 400 Bad Request
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/view.ErrorResponse'
          description: 403 Forbidden
      summary: Get all allocations.
      tags:
      - Allocations
      x-private: true
    post:
      description: |-
        Creates a new allocation for resource scheduling. If the allocation start/end
        date conflicts with another allocation on the same project an error will be
        returned. You can bypass this error with the "ignoreCollisions" field.
      operationId: POST_projects_api_v3_allocations.json
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/allocation.Request'
        required: true
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/allocation.Response'
          description: 201 Created
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/view.ErrorResponse'
          description: 400 Bad Request
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/view.ErrorResponse'
          description: 403 Forbidden
      summary: Create a new allocation.
      tags:
      - Allocations
      x-private: true
      x-codegen-request-body-name: allocation.Request
  /projects/api/v3/allocations/:allocationId/time.json:
    get:
      description: |-
        Return logged time entries for a specific allocation. Only the time entries that
        the logged-in user can access will be returned.
      operationId: GET_projects_api_v3_allocations_:allocationId_time.json
      parameters:
      - description: filter by updated after date
        in: query
        name: updatedAfter
        schema:
          format: date-time
          type: string
      - description: filter by a starting date
        in: query
        name: startDate
        schema:
          format: date
          type: string
      - description: customise the report by selecting columns
        in: query
        name: selectedColumns
        schema:
          type: string
      - description: define the format of the report
        in: query
        name: reportFormat
        schema:
          type: string
      - description: filter by project statuses
        in: query
        name: projectStatuses
        schema:
          enum:
          - active
          - current
          - late
          - upcoming
          - completed
          - deleted
          type: string
      - description: filter by project status
        in: query
        name: projectStatus
        schema:
          enum:
          - active
          - current
          - late
          - upcoming
          - completed
          - deleted
          type: string
      - description: order mode
        in: query
        name: orderMode
        schema:
          default: asc
          enum:
          - asc
          - desc
          type: string
      - description: sort order
        in: query
        name: orderBy
        schema:
          default: date
          enum:
          - company
          - date
          - dateupdated
          - project
          - task
          - tasklist
          - user
          type: string
      - description: filter by invoiced type
        in: query
        name: invoicedType
        schema:
          default: all
          enum:
          - all
          - invoiced
          - not-invoiced
          type: string
      - description: filter by an ending date
        in: query
        name: endDate
        schema:
          format: date
          type: string
      - description: filter by billable type
        in: query
        name: billableType
        schema:
          default: all
          enum:
          - all
          - billable
          - non-billable
          type: string
      - description: filter by ticket id
        in: query
        name: ticketId
        schema:
          type: integer
      - description: filter by tasklist id
        in: query
        name: tasklistId
        schema:
          type: integer
      - description: filter by project id
        in: query
        name: projectId
        schema:
          type: integer
      - description: |-
          filter by project healths

          0: not set
          1: bad
          2: ok
          3: good
        in: query
        name: projectHealths
        schema:
          enum:
          - 0
          - 1
          - 2
          - 3
          type: integer
      - description: number of items in a page
        in: query
        name: pageSize
        schema:
          default: 50
          type: integer
      - description: page number
        in: query
        name: page
        schema:
          default: 1
          type: integer
      - description: filter by allocation id
        in: query
        name: allocationId
        schema:
          type: integer
      - description: include deleted items
        in: query
        name: showDeleted
        schema:
          default: false
          type: boolean
      - description: filter by starred projects only
        in: query
        name: onlyStarredProjects
        schema:
          type: boolean
      - description: match all tags
        in: query
        name: matchAllTags
        schema:
          type: boolean
      - description: generate a report document
        in: query
        name: isReportDownload
        schema:
          type: boolean
      - description: include archived projects
        in: query
        name: includeArchivedProjects
        schema:
          default: false
          type: boolean
      - description: filter by task tag ids
        explode: false
        in: query
        name: taskTagIds
        schema:
          items:
            type: integer
          type: array
        style: form
      - description: filter by tag ids
        explode: false
        in: query
        name: tagIds
        schema:
          items:
            type: integer
          type: array
        style: form
      - description: filter by project company ids
        explode: false
        in: query
        name: projectsFromCompanyId
        schema:
          items:
            type: integer
          type: array
        style: form
      - description: filter by project tag ids
        explode: false
        in: query
        name: projectTagIds
        schema:
          items:
            type: integer
          type: array
        style: form
      - description: filter by project owner ids
        explode: false
        in: query
        name: projectOwnerIds
        schema:
          items:
            type: integer
          type: array
        style: form
      - description: filter by project ids
        explode: false
        in: query
        name: projectIds
        schema:
          items:
            type: integer
          type: array
        style: form
      - description: filter by project category ids
        explode: false
        in: query
        name: projectCategoryIds
        schema:
          items:
            type: integer
          type: array
        style: form
      - description: include
        explode: false
        in: query
        name: include
        schema:
          enum:
          - projects
          - tags
          - tasks
          - tasks.parentTasks
          - tasks.tasklists
          - users
          items:
            type: string
          type: array
        style: form
      - explode: false
        in: query
        name: fields[users]
        schema:
          enum:
          - id
          - firstName
          - lastName
          - email
          - companyId
          - isAdmin
          - type
          items:
            type: string
          type: array
        style: form
      - explode: false
        in: query
        name: fields[timelogs]
        schema:
          enum:
          - id
          - dateCreated
          - minutes
          - description
          - timeLogged
          - billable
          - deleted
          - dateDeleted
          - hasStartTime
          - dateEdited
          - deskTicketId
          - invoiceNumber
          - userId
          - taskId
          - projectId
          - loggedByUserId
          - deletedByUserId
          - editedByUserId
          - taskIdPreMove
          - projectBillingInvoiceId
          items:
            type: string
          type: array
        style: form
      - explode: false
        in: query
        name: fields[tasks]
        schema:
          enum:
          - id
          - name
          - dateUpdated
          - parentTaskId
          - isPrivate
          - status
          - tasklistId
          - startDate
          - dueDate
          items:
            type: string
          type: array
        style: form
      - explode: false
        in: query
        name: fields[tasklists]
        schema:
          enum:
          - id
          - name
          - projectId
          - milestoneId
          items:
            type: string
          type: array
        style: form
      - explode: false
        in: query
        name: fields[tags]
        schema:
          enum:
          - id
          - name
          - color
          - count
          items:
            type: string
          type: array
        style: form
      - explode: false
        in: query
        name: fields[projects]
        schema:
          enum:
          - id
          - name
          items:
            type: string
          type: array
        style: form
      - description: filter by company ids
        explode: false
        in: query
        name: companyIds
        schema:
          items:
            type: integer
          type: array
        style: form
      - description: filter by assigned user ids
        explode: false
        in: query
        name: assignedToUserIds
        schema:
          items:
            type: integer
          type: array
        style: form
      - description: filter by assigned team ids
        explode: false
        in: query
        name: assignedToTeamIds
        schema:
          items:
            type: integer
          type: array
        style: form
      - description: filter by assigned company ids
        explode: false
        in: query
        name: assignedToCompanyIds
        schema:
          items:
            type: integer
          type: array
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/timelog.TimelogsResponse'
          description: 200 OK
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/view.ErrorResponse'
          description: 400 Bad Request
      summary: Get time entries for a specific allocation
      tags:
      - TimeTracking
  /projects/api/v3/allocations/:id.json:
    delete:
      description: |-
        Removes an allocation. It's still possible to recover the allocation. To
        remove a allocation definitely provide the "hardDelete" flag.
      operationId: DELETE_projects_api_v3_allocations_:id.json
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/allocation.DeleteRequest'
        required: true
      responses:
        "204":
          content: {}
          description: 204 No Content (no data)
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/view.ErrorResponse'
          description: 400 Bad Request
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/view.ErrorResponse'
          description: 403 Forbidden
        "404":
          content: {}
          description: 404 Not Found (no data)
      summary: Delete an existing allocation.
      tags:
      - Allocations
      x-private: true
      x-codegen-request-body-name: allocation.DeleteRequest
    get:
      description: Retrieve an allocation by the identifier.
      operationId: GET_projects_api_v3_allocations_:id.json
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/allocation.Response'
          description: 200 OK
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/view.ErrorResponse'
          description: 400 Bad Request
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/view.ErrorResponse'
          description: 403 Forbidden
        "404":
          content: {}
          description: 404 Not Found (no data)
      summary: Get a specific allocation.
      tags:
      - Allocations
      x-private: true
    patch:
      description: |-
        Updates an existing allocation for resource scheduling. If the allocation
        start/end date conflicts with another allocation on the same project an error
        will be returned. You can bypass this error with the "ignoreCollisions"
        field.
      operationId: PATCH_projects_api_v3_allocations_:id.json
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/allocation.Request'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/allocation.Response'
          description: 200 OK
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/view.ErrorResponse'
          description: 400 Bad Request
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/view.ErrorResponse'
          description: 403 Forbidden
        "404":
          content: {}
          description: 404 Not Found (no data)
        "409":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/view.ErrorResponse'
          description: 409 Conflict
      summary: Update an existing allocation.
      tags:
      - Allocations
      x-private: true
      x-codegen-request-body-name: allocation.Request
    put:
      description: |-
        Updates an existing allocation for resource scheduling. If the allocation
        start/end date conflicts with another allocation on the same project an error
        will be returned. You can bypass this error with the "ignoreCollisions"
        field.
      operationId: PUT_projects_api_v3_allocations_:id.json
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/allocation.Request'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/allocation.Response'
          description: 200 OK
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/view.ErrorResponse'
          description: 400 Bad Request
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/view.ErrorResponse'
          description: 403 Forbidden
        "404":
          content: {}
          description: 404 Not Found (no data)
        "409":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/view.ErrorResponse'
          description: 409 Conflict
      summary: Update an existing allocation.
      tags:
      - Allocations
      x-private: true
      x-codegen-request-body-name: allocation.Request
  /projects/api/v3/allocations/:id/restore.json:
    put:
      description: Restore an allocation by the identifier.
      operationId: PUT_projects_api_v3_allocations_:id_restore.json
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/allocation.Response'
          description: 200 OK
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/view.ErrorResponse'
          description: 400 Bad Request
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/view.ErrorResponse'
          description: 403 Forbidden
        "404":
          content: {}
          description: 404 Not Found (no data)
      summary: Restore a soft deleted allocation.
      tags:
      - Allocations
      x-private: true
  /projects/api/v3/allocations/:id/split.json:
    put:
      description: Split an allocation by the identifier.
      operationId: PUT_projects_api_v3_allocations_:id_split.json
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/allocation.SplitRequest'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/allocation.AllocationsResponse'
          description: 200 OK
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/view.ErrorResponse'
          description: 400 Bad Request
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/view.ErrorResponse'
          description: 403 Forbidden
        "404":
          content: {}
          description: 404 Not Found (no data)
      summary: Split an allocation in two
      tags:
      - Allocations
      x-private: true
      x-codegen-request-body-name: allocation.SplitRequest
  /projects/api/v3/allocations/bulk/delete.json:
    post:
      description: |-
        Remove multiple allocations at once. It's still possible to recover those
        allocations. To remove all allocations definitely provide the "hardDelete"
        flag.
      operationId: POST_projects_api_v3_allocations_bulk_delete.json
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/allocation.BulkDeleteRequest'
        required: true
      responses:
        "204":
          content: {}
          description: 204 No Content (no data)
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/view.ErrorResponse'
          description: 400 Bad Request
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/view.ErrorResponse'
          description: 403 Forbidden
        "404":
          content: {}
          description: 404 Not Found (no data)
      summary: Delete many allocations at once.
      tags:
      - Allocations
      x-private: true
      x-codegen-request-body-name: allocation.BulkDeleteRequest
  /projects/api/v3/apps.json:
    get:
      operationId: GET_projects_api_v3_apps.json
      parameters:
      - description: number of items in a page
        in: query
        name: pageSize
        schema:
          default: 50
          type: integer
      - description: page number
        in: query
        name: page
        schema:
          default: 1
          type: integer
      - description: include
        explode: false
        in: query
        name: include
        schema:
          enum:
          - appsettings
          items:
            type: string
          type: array
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/app.AppsResponse'
          description: 200 OK
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/view.ErrorResponse'
          description: 400 Bad Request
      summary: Get all apps.
      tags:
      - Apps
      x-private: true
  /projects/api/v3/apps/:appid/install.json:
    post:
      operationId: POST_projects_api_v3_apps_:appid_install.json
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/app.Response'
          description: 201 Created
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/view.ErrorResponse'
          description: 400 Bad Request
        "404":
          content: {}
          description: 404 Not Found (no data)
      summary: Install an app onto an installation
      tags:
      - Apps
      x-private: true
  /projects/api/v3/apps/:appid/settings/:settingid.json:
    put:
      operationId: PUT_projects_api_v3_apps_:appid_settings_:settingid.json
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/setting.Request'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/setting.Response'
          description: 200 OK
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/view.ErrorResponse'
          description: 400 Bad Request
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/view.ErrorResponse'
          description: 403 Forbidden
        "404":
          content: {}
          description: 404 Not Found (no data)
      summary: Update an existing setting.
      tags:
      - AppsSettings
      x-private: true
      x-codegen-request-body-name: setting.Request
  /projects/api/v3/apps/:id.json:
    get:
      operationId: GET_projects_api_v3_apps_:id.json
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/app.Response'
          description: 200 OK
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/view.ErrorResponse'
          description: 400 Bad Request
        "404":
          content: {}
          description: 404 Not Found (no data)
      summary: Get a specific app.
      tags:
      - Apps
      x-private: true
  /projects/api/v3/apps/:id/uninstall.json:
    post:
      operationId: POST_projects_api_v3_apps_:id_uninstall.json
      responses:
        "204":
          content: {}
          description: 204 No Content (no data)
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/view.ErrorResponse'
          description: 400 Bad Request
        "404":
          content: {}
          description: 404 Not Found (no data)
      summary: Uninstall an app from an installation
      tags:
      - Apps
      x-private: true
  /projects/api/v3/budget/notifications/:id.json:
    delete:
      operationId: DELETE_projects_api_v3_budget_notifications_:id.json
      responses:
        "204":
          content: {}
          description: 204 No Content (no data)
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/view.ErrorResponse'
          description: 400 Bad Request
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/view.ErrorResponse'
          description: 403 Forbidden
        "404":
          content: {}
          description: 404 Not Found (no data)
      summary: Delete an existing notification.
      tags:
      - Budgets
    patch:
      operationId: PATCH_projects_api_v3_budget_notifications_:id.json
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/notification.Request'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/notification.Response'
          description: 200 OK
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/view.ErrorResponse'
          description: 400 Bad Request
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/view.ErrorResponse'
          description: 403 Forbidden
        "404":
          content: {}
          description: 404 Not Found (no data)
        "409":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/view.ErrorResponse'
          description: 409 Conflict
      summary: Update an existing notification.
      tags:
      - Budgets
      x-codegen-request-body-name: notification.Request
  /projects/api/v3/budgets.json:
    get:
      description: Get a list of budgets information.
      operationId: GET_projects_api_v3_budgets.json
      parameters:
      - description: filter by updated after date (deprecated, use updatedAfter)
        in: query
        name: updatedAfterDate
        schema:
          format: date-time
          type: string
      - description: filter by updated after date
        in: query
        name: updatedAfter
        schema:
          format: date-time
          type: string
      - description: filter by budget type
        in: query
        name: type
        schema:
          enum:
          - all
          - financial
          - time
          type: string
      - description: filter by budget status
        in: query
        name: status
        schema:
          enum:
          - all
          - active
          - archived
          - deleted
          type: string
      - description: project status
        in: query
        name: projectStatuses
        schema:
          enum:
          - active
          - current
          - late
          - upcoming
          - completed
          - deleted
          type: string
      - description: order mode
        in: query
        name: orderMode
        schema:
          default: asc
          enum:
          - asc
          - desc
          type: string
      - description: order by
        in: query
        name: orderBy
        schema:
          default: dateCreated
          enum:
          - dateCreated
          type: string
      - description: |-
          project healths
          []
          0: not set
          1: bad
          2: ok
          3: good
        in: query
        name: projectHealths
        schema:
          enum:
          - 0
          - 1
          - 2
          - 3
          type: integer
      - description: number of items in a page
        in: query
        name: pageSize
        schema:
          default: 50
          type: integer
      - description: page number
        in: query
        name: page
        schema:
          default: 1
          type: integer
      - description: include deleted items
        in: query
        name: showDeleted
        schema:
          default: false
          type: boolean
      - description: include archived items. usually in conjunction with one provided
          projectId for a project's budget history.
        in: query
        name: showArchived
        schema:
          default: false
          type: boolean
      - description: filter by starred projects only
        in: query
        name: onlyStarredProjects
        schema:
          type: boolean
      - description: only archived items
        in: query
        name: onlyArchived
        schema:
          type: boolean
      - description: match all project tags
        in: query
        name: matchAllProjectTags
        schema:
          type: boolean
      - description: include archived projects
        in: query
        name: includeArchivedProjects
        schema:
          type: boolean
      - description: filter by project tag ids
        explode: false
        in: query
        name: projectTagIds
        schema:
          items:
            type: integer
          type: array
        style: form
      - description: filter by project owner ids
        explode: false
        in: query
        name: projectOwnerIds
        schema:
          items:
            type: integer
          type: array
        style: form
      - description: filter by project ids
        explode: false
        in: query
        name: projectIds
        schema:
          items:
            type: integer
          type: array
        style: form
      - description: filter by company ids
        explode: false
        in: query
        name: projectCompanyIds
        schema:
          items:
            type: integer
          type: array
        style: form
      - description: filter by project category ids
        explode: false
        in: query
        name: projectCategoryIds
        schema:
          items:
            type: integer
          type: array
        style: form
      - description: include
        explode: false
        in: query
        name: include
        schema:
          enum:
          - projects
          - notifications
          - notifications.users
          - notifications.companies
          - notifications.teams
          - createdBy
          - updatedBy
          - deletedBy
          items:
            type: string
          type: array
        style: form
      - description: filter by budget ids
        explode: false
        in: query
        name: ids
        schema:
          items:
            type: integer
          type: array
        style: form
      - explode: false
        in: query
        name: fields[users]
        schema:
          enum:
          - id
          - firstName
          - lastName
          - email
          - companyId
          - isAdmin
          - type
          items:
            type: string
          type: array
        style: form
      - explode: false
        in: query
        name: fields[teams]
        schema:
          enum:
          - id
          - name
          - teamLogo
          - teamLogoIcon
          - teamLogoColor
          items:
            type: string
          type: array
        style: form
      - explode: false
        in: query
        name: fields[projects]
        schema:
          enum:
          - id
          - name
          items:
            type: string
          type: array
        style: form
      - explode: false
        in: query
        name: fields[projectBudgetNotifications]
        schema:
          enum:
          - id
          - userIds
          - teamIds
          - companyIds
          - notificationMedium
          - capacityThreshold
          items:
            type: string
          type: array
        style: form
      - explode: false
        in: query
        name: fields[companies]
        schema:
          enum:
          - id
          - name
          - logoUploadedToServer
          - logoImage
          items:
            type: string
          type: array
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/budget.ProjectBudgetsResponse'
          description: 200 OK
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/view.ErrorResponse'
          description: 400 Bad Request
      summary: Get all budgets.
      tags:
      - Budgets
    post:
      description: Creates a new budget.
      operationId: POST_projects_api_v3_budgets.json
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/budget.Request'
        required: true
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/budget.Response'
          description: 201 Created
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/view.ErrorResponse'
          description: 400 Bad Request
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/view.ErrorResponse'
          description: 403 Forbidden
        "409":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/view.ErrorResponse'
          description: 409 Conflict
      summary: Create a new budget.
      tags:
      - Budgets
      x-codegen-request-body-name: budget.Request
  /projects/api/v3/budgets/{id}.json:
    delete:
      description: Delete the budget with the provided budget id.
      operationId: DELETE_projects_api_v3_budgets_{id}.json
      parameters:
      - in: path
        name: id
        required: true
        schema:
          type: integer
      responses:
        "204":
          content: {}
          description: 204 No Content (no data)
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/view.ErrorResponse'
          description: 400 Bad Request
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/view.ErrorResponse'
          description: 403 Forbidden
        "404":
          content: {}
          description: 404 Not Found (no data)
      summary: Delete an existing budget.
      tags:
      - Budgets
    get:
      description: Gets the budget information for the provided budget id.
      operationId: GET_projects_api_v3_budgets_{id}.json
      parameters:
      - in: path
        name: id
        required: true
        schema:
          type: integer
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/budget.Response'
          description: 200 OK
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/view.ErrorResponse'
          description: 400 Bad Request
        "404":
          content: {}
          description: 404 Not Found (no data)
      summary: Get a specific budget.
      tags:
      - Budgets
    patch:
      operationId: PATCH_projects_api_v3_budgets_{id}.json
      parameters:
      - in: path
        name: id
        required: true
        schema:
          type: integer
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/budget.Request'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/budget.Response'
          description: 200 OK
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/view.ErrorResponse'
          description: 400 Bad Request
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/view.ErrorResponse'
          description: 403 Forbidden
        "404":
          content: {}
          description: 404 Not Found (no data)
        "409":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/view.ErrorResponse'
          description: 409 Conflict
      summary: Update an existing budget.
      tags:
      - Budgets
      x-codegen-request-body-name: budget.Request
  /projects/api/v3/budgets/{id}/usages.json:
    get:
      description: |-
        Gets the budget used capacity for the provided budget id,
        with the daily timeline of capacity usage.
      operationId: GET_projects_api_v3_budgets_{id}_usages.json
      parameters:
      - in: path
        name: id
        required: true
        schema:
          type: integer
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/budget.ProjectBudgetUsageResponse'
          description: 200 OK
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/view.ErrorResponse'
          description: 400 Bad Request
        "404":
          content: {}
          description: 404 Not Found (no data)
      summary: Get daily budget capacity used.
      tags:
      - Budgets
  /projects/api/v3/budgets/bulk/delete.json:
    post:
      description: Delete several budgets in a bulk.
      operationId: POST_projects_api_v3_budgets_bulk_delete.json
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/budget.BulkDeleteRequest'
        required: true
      responses:
        "204":
          content: {}
          description: 204 No Content (no data)
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/view.ErrorResponse'
          description: 400 Bad Request
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/view.ErrorResponse'
          description: 403 Forbidden
        "404":
          content: {}
          description: 404 Not Found (no data)
      summary: Delete many budgets at once.
      tags:
      - Budgets
      x-codegen-request-body-name: budget.BulkDeleteRequest
  /projects/api/v3/calendar/events.csv:
    get:
      description: |-
        Generates an agenda report in CSV format containing all the events for the
        provided filters.
      operationId: GET_projects_api_v3_calendar_events.csv
      parameters:
      - description: events that happen after this date
        in: query
        name: startDate
        schema:
          format: date
          type: string
      - description: define the format of the report
        in: query
        name: reportFormat
        schema:
          type: string
      - description: events that happen before this date
        in: query
        name: endDate
        schema:
          format: date
          type: string
      - description: include tasks
        in: query
        name: withTasks
        schema:
          default: false
          type: boolean
      - description: include milestones
        in: query
        name: withMilestones
        schema:
          default: false
          type: boolean
      - description: include events
        in: query
        name: withEvents
        schema:
          default: true
          type: boolean
      - description: generate a report document
        in: query
        name: isReportDownload
        schema:
          type: boolean
      - description: should include tags
        in: query
        name: includeTags
        schema:
          default: false
          type: boolean
      - description: when filtering events with targetUserIDs, display only when attending
          the event
        in: query
        name: attendingOnly
        schema:
          default: false
          type: boolean
      - description: filter calendar events to show only the ones in typeIDs
        explode: false
        in: query
        name: typeIDs
        schema:
          items:
            type: integer
          type: array
        style: form
      - description: filter to show only events for the provided user
        explode: false
        in: query
        name: targetUserIDs
        schema:
          items:
            type: integer
          type: array
        style: form
      - description: filter to show only events for the provided projects
        explode: false
        in: query
        name: targetProjectIDs
        schema:
          items:
            type: integer
          type: array
        style: form
      responses:
        "200":
          content: {}
          description: 200 OK (no data)
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/view.ErrorResponse'
            text/csv:
              schema:
                $ref: '#/components/schemas/view.ErrorResponse'
          description: 400 Bad Request
      summary: Generate agenda report in CSV format
      tags:
      - CalendarEvents
  /projects/api/v3/calendar/events.html:
    get:
      description: |-
        Generates an agenda report in HTML format containing all the events for the
        provided filters.
      operationId: GET_projects_api_v3_calendar_events.html
      parameters:
      - description: events that happen after this date
        in: query
        name: startDate
        schema:
          format: date
          type: string
      - description: define the format of the report
        in: query
        name: reportFormat
        schema:
          type: string
      - description: events that happen before this date
        in: query
        name: endDate
        schema:
          format: date
          type: string
      - description: include tasks
        in: query
        name: withTasks
        schema:
          default: false
          type: boolean
      - description: include milestones
        in: query
        name: withMilestones
        schema:
          default: false
          type: boolean
      - description: include events
        in: query
        name: withEvents
        schema:
          default: true
          type: boolean
      - description: generate a report document
        in: query
        name: isReportDownload
        schema:
          type: boolean
      - description: should include tags
        in: query
        name: includeTags
        schema:
          default: false
          type: boolean
      - description: when filtering events with targetUserIDs, display only when attending
          the event
        in: query
        name: attendingOnly
        schema:
          default: false
          type: boolean
      - description: filter calendar events to show only the ones in typeIDs
        explode: false
        in: query
        name: typeIDs
        schema:
          items:
            type: integer
          type: array
        style: form
      - description: filter to show only events for the provided user
        explode: false
        in: query
        name: targetUserIDs
        schema:
          items:
            type: integer
          type: array
        style: form
      - description: filter to show only events for the provided projects
        explode: false
        in: query
        name: targetProjectIDs
        schema:
          items:
            type: integer
          type: array
        style: form
      responses:
        "200":
          content: {}
          description: 200 OK (no data)
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/view.ErrorResponse'
            text/html:
              schema:
                $ref: '#/components/schemas/view.ErrorResponse'
          description: 400 Bad Request
      summary: Generate agenda report in HTML format
      tags:
      - CalendarEvents
  /projects/api/v3/calendar/events.json:
    get:
      description: |-
        This call will return all calendar events that the current user can see in
        the provided date range.
      operationId: GET_projects_api_v3_calendar_events.json
      parameters:
      - description: events that happen after this date
        in: query
        name: startDate
        schema:
          format: date
          type: string
      - description: filter by project statuses
        in: query
        name: projectStatuses
        schema:
          type: string
      - description: order mode
        in: query
        name: orderMode
        schema:
          default: asc
          enum:
          - asc
          - desc
          type: string
      - description: order by
        in: query
        name: orderBy
        schema:
          default: date
          enum:
          - date
          type: string
      - description: events that happen before this date
        in: query
        name: endDate
        schema:
          format: date
          type: string
      - description: |-
          filter by project healths

          0: not set
          1: bad
          2: ok
          3: good
        in: query
        name: projectHealths
        schema:
          enum:
          - 0
          - 1
          - 2
          - 3
          type: integer
      - description: number of items in a page
        in: query
        name: pageSize
        schema:
          default: 50
          type: integer
      - description: page number
        in: query
        name: page
        schema:
          default: 1
          type: integer
      - description: filter by starred projects only
        in: query
        name: onlyStarredProjects
        schema:
          type: boolean
      - description: match all project tags
        in: query
        name: matchAllProjectTags
        schema:
          type: boolean
      - description: filter by project tag ids
        explode: false
        in: query
        name: projectTagIds
        schema:
          items:
            type: integer
          type: array
        style: form
      - description: filter by project owner ids
        explode: false
        in: query
        name: projectOwnerIds
        schema:
          items:
            type: integer
          type: array
        style: form
      - description: filter by project ids
        explode: false
        in: query
        name: projectIds
        schema:
          items:
            type: integer
          type: array
        style: form
      - description: filter by company ids
        explode: false
        in: query
        name: projectCompanyIds
        schema:
          items:
            type: integer
          type: array
        style: form
      - description: filter by project category ids
        explode: false
        in: query
        name: projectCategoryIds
        schema:
          items:
            type: integer
          type: array
        style: form
      - explode: false
        in: query
        name: fields[calendarEvents]
        schema:
          enum:
          - id
          - title
          - startDate
          - endDate
          - typeId
          - privacyType
          - allDay
          - location
          - description
          - showAsBusy
          - attendeesCanEdit
          - projectUsersCanEdit
          - monthlyRepeatType
          - dateLastUpdated
          - createdDateTime
          - deleted
          - dateDeleted
          - additionalProperties
          - currentUserAssociationType
          - sequenceId
          - projectId
          - ownerUserId
          - deletedByUserId
          - createdByUserId
          - updatedByUserId
          items:
            type: string
          type: array
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/calendar.EventsResponse'
          description: 200 OK
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/view.ErrorResponse'
          description: 400 Bad Request
      summary: Retrieve the calendar events
      tags:
      - CalendarEvents
  /projects/api/v3/calendar/events.pdf:
    get:
      description: |-
        Generates an agenda report in PDF format containing all the events for the
        provided filters.
      operationId: GET_projects_api_v3_calendar_events.pdf
      parameters:
      - description: events that happen after this date
        in: query
        name: startDate
        schema:
          format: date
          type: string
      - description: define the format of the report
        in: query
        name: reportFormat
        schema:
          type: string
      - description: events that happen before this date
        in: query
        name: endDate
        schema:
          format: date
          type: string
      - description: include tasks
        in: query
        name: withTasks
        schema:
          default: false
          type: boolean
      - description: include milestones
        in: query
        name: withMilestones
        schema:
          default: false
          type: boolean
      - description: include events
        in: query
        name: withEvents
        schema:
          default: true
          type: boolean
      - description: generate a report document
        in: query
        name: isReportDownload
        schema:
          type: boolean
      - description: should include tags
        in: query
        name: includeTags
        schema:
          default: false
          type: boolean
      - description: when filtering events with targetUserIDs, display only when attending
          the event
        in: query
        name: attendingOnly
        schema:
          default: false
          type: boolean
      - description: filter calendar events to show only the ones in typeIDs
        explode: false
        in: query
        name: typeIDs
        schema:
          items:
            type: integer
          type: array
        style: form
      - description: filter to show only events for the provided user
        explode: false
        in: query
        name: targetUserIDs
        schema:
          items:
            type: integer
          type: array
        style: form
      - description: filter to show only events for the provided projects
        explode: false
        in: query
        name: targetProjectIDs
        schema:
          items:
            type: integer
          type: array
        style: form
      responses:
        "200":
          content: {}
          description: 200 OK (no data)
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/view.ErrorResponse'
            application/pdf:
              schema:
                $ref: '#/components/schemas/view.ErrorResponse'
          description: 400 Bad Request
      summary: Generate agenda report in PDF format
      tags:
      - CalendarEvents
  /projects/api/v3/calendar/events.xlsx:
    get:
      description: |-
        Generates an agenda report in XLSX format containing all the events for the
        provided filters.
      operationId: GET_projects_api_v3_calendar_events.xlsx
      parameters:
      - description: events that happen after this date
        in: query
        name: startDate
        schema:
          format: date
          type: string
      - description: define the format of the report
        in: query
        name: reportFormat
        schema:
          type: string
      - description: events that happen before this date
        in: query
        name: endDate
        schema:
          format: date
          type: string
      - description: include tasks
        in: query
        name: withTasks
        schema:
          default: false
          type: boolean
      - description: include milestones
        in: query
        name: withMilestones
        schema:
          default: false
          type: boolean
      - description: include events
        in: query
        name: withEvents
        schema:
          default: true
          type: boolean
      - description: generate a report document
        in: query
        name: isReportDownload
        schema:
          type: boolean
      - description: should include tags
        in: query
        name: includeTags
        schema:
          default: false
          type: boolean
      - description: when filtering events with targetUserIDs, display only when attending
          the event
        in: query
        name: attendingOnly
        schema:
          default: false
          type: boolean
      - description: filter calendar events to show only the ones in typeIDs
        explode: false
        in: query
        name: typeIDs
        schema:
          items:
            type: integer
          type: array
        style: form
      - description: filter to show only events for the provided user
        explode: false
        in: query
        name: targetUserIDs
        schema:
          items:
            type: integer
          type: array
        style: form
      - description: filter to show only events for the provided projects
        explode: false
        in: query
        name: targetProjectIDs
        schema:
          items:
            type: integer
          type: array
        style: form
      responses:
        "200":
          content: {}
          description: 200 OK (no data)
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/view.ErrorResponse'
            application/vnd.openxmlformats-officedocument.spreadsheetml.sheet:
              schema:
                $ref: '#/components/schemas/view.ErrorResponse'
          description: 400 Bad Request
      summary: Generate agenda report in XLSX format
      tags:
      - CalendarEvents
  /projects/api/v3/columns/:id.json:
    get:
      description: Long description explaining the endpoint.
      operationId: GET_projects_api_v3_columns_:id.json
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/column.Response'
          description: 200 OK
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/view.ErrorResponse'
          description: 400 Bad Request
        "404":
          content: {}
          description: 404 Not Found (no data)
      summary: Get a specific column.
      tags:
      - BETA
      x-private: true
  /projects/api/v3/comments.json:
    get:
      operationId: GET_projects_api_v3_comments.json
      parameters:
      - description: filter by risks updated after specified date (deprecated, use
          updatedAfter)
        in: query
        name: updatedAfterDate
        schema:
          format: date-time
          type: string
      - description: filter by risks updated after specified date
        in: query
        name: updatedAfter
        schema:
          format: date-time
          type: string
      - description: filter by comment content (like v1 filterText param)
        in: query
        name: searchTerm
        schema:
          type: string
      - description: filter by published after date
        in: query
        name: publishedStartDate
        schema:
          format: date
          type: string
      - description: filter by published before date
        in: query
        name: publishedEndDate
        schema:
          format: date
          type: string
      - description: filter by project statuses
        in: query
        name: projectStatuses
        schema:
          type: string
      - description: order mode
        in: query
        name: orderMode
        schema:
          default: asc
          enum:
          - asc
          - desc
          type: string
      - description: order by
        in: query
        name: orderBy
        schema:
          default: data
          enum:
          - all
          - date
          - project
          - user
          - type
          type: string
      - description: filter by object types
        in: query
        name: objectTypes
        schema:
          enum:
          - task
          - file
          - notebook
          - milestone
          - link
          - event
          - status
          - projectupdate
          type: string
      - description: object type where the comment is attached to (deprecated, use
          objectTypes)
        in: query
        name: objectType
        schema:
          enum:
          - task
          - file
          - notebook
          - milestone
          - link
          - event
          - status
          - projectupdate
          type: string
      - description: filter by commment status
        in: query
        name: commentStatus
        schema:
          enum:
          - all
          - read
          - unread
          type: string
      - description: |-
          filter by project healths

          0: not set
          1: bad
          2: ok
          3: good
        in: query
        name: projectHealths
        schema:
          enum:
          - 0
          - 1
          - 2
          - 3
          type: integer
      - description: number of items in a page
        in: query
        name: pageSize
        schema:
          default: 50
          type: integer
      - description: page number
        in: query
        name: page
        schema:
          default: 1
          type: integer
      - description: use strict html filtering for content
        in: query
        name: strictHTML
        schema:
          default: false
          type: boolean
      - description: filter by starred projects only
        in: query
        name: onlyStarredProjects
        schema:
          type: boolean
      - description: match all project tags
        in: query
        name: matchAllProjectTags
        schema:
          type: boolean
      - description: filter by user ids
        explode: false
        in: query
        name: userIds
        schema:
          items:
            type: integer
          type: array
        style: form
      - description: filter by project tag ids
        explode: false
        in: query
        name: projectTagIds
        schema:
          items:
            type: integer
          type: array
        style: form
      - description: filter by project owner ids
        explode: false
        in: query
        name: projectOwnerIds
        schema:
          items:
            type: integer
          type: array
        style: form
      - description: filter by project ids
        explode: false
        in: query
        name: projectIds
        schema:
          items:
            type: integer
          type: array
        style: form
      - description: filter by company ids
        explode: false
        in: query
        name: projectCompanyIds
        schema:
          items:
            type: integer
          type: array
        style: form
      - description: filter by project category ids
        explode: false
        in: query
        name: projectCategoryIds
        schema:
          items:
            type: integer
          type: array
        style: form
      - description: filter by object IDs
        explode: false
        in: query
        name: objectIds
        schema:
          items:
            type: integer
          type: array
        style: form
      - description: filter by users who got notified for the comments
        explode: false
        in: query
        name: notifiedUserIds
        schema:
          items:
            type: integer
          type: array
        style: form
      - description: include
        explode: false
        in: query
        name: include
        schema:
          enum:
          - reactions
          - users
          - projects
          - projects.companies
          - files
          - tasks
          items:
            type: string
          type: array
        style: form
      - explode: false
        in: query
        name: fields[users]
        schema:
          enum:
          - id
          - firstName
          - lastName
          - email
          - companyId
          - isAdmin
          - type
          items:
            type: string
          type: array
        style: form
      - explode: false
        in: query
        name: fields[tasks]
        schema:
          enum:
          - id
          - name
          - dateUpdated
          - parentTaskId
          - isPrivate
          - status
          - tasklistId
          - startDate
          - dueDate
          items:
            type: string
          type: array
        style: form
      - explode: false
        in: query
        name: fields[projects]
        schema:
          enum:
          - id
          - name
          items:
            type: string
          type: array
        style: form
      - explode: false
        in: query
        name: fields[notebooks]
        schema:
          enum:
          - id
          - name
          - description
          - contents
          - type
          - isPrivate
          - locked
          - lockdownId
          - secureContent
          - projectId
          - createdByUserID
          - updatedByUserID
          - deletedByUserID
          - dateUpdated
          - dateCreated
          - dateDeleted
          - deleted
          - categoryId
          - notebookVersionID
          - notebookVersionCreatedDateTime
          - notebookVersionUpdatedDateTime
          - latestVersionNo
          - commentsCount
          - readCommentsCount
          - contentHTML
          - privacy
          - commentFollowers
          - changeFollowers
          - projectNotifyCommentIncludeCreator
          - tagIds
          items:
            type: string
          type: array
        style: form
      - explode: false
        in: query
        name: fields[milestones]
        schema:
          enum:
          - id
          - name
          - description
          - deadline
          - completed
          - projectId
          - createdOn
          - lastChangedOn
          - creatorUserId
          - reminder
          - private
          - lockdownId
          - status
          - completedOn
          - completerId
          - percentageComplete
          items:
            type: string
          type: array
        style: form
      - explode: false
        in: query
        name: fields[links]
        schema:
          enum:
          - id
          - title
          - description
          - code
          - width
          - height
          - isPrivate
          - provider
          - projectId
          - createdAt
          - forceNewWindow
          - deleted
          - deletedAt
          - updatedAt
          - categoryId
          - createdBy
          - deletedBy
          - updatedBy
          items:
            type: string
          type: array
        style: form
      - explode: false
        in: query
        name: fields[fileversions]
        schema:
          enum:
          - fileVersionId
          - fileId
          - versionNo
          - name
          - originalName
          - size
          - uploadedBy
          - description
          - status
          - projectId
          - reactions
          - commentsCount
          - commentsCountRead
          - displayName
          items:
            type: string
          type: array
        style: form
      - explode: false
        in: query
        name: fields[files]
        schema:
          enum:
          - isPrivate
          - latestFileVersionNo
          - versionId
          - status
          - description
          - lockdownId
          - tagIds
          - changeFollowers
          - commentFollowers
          - originalName
          - displayName
          - isLocked
          - lockedByUserId
          - lockedDate
          - size
          - uploadedDate
          - uploadedByUserID
          - updatedAt
          - deletedAt
          - deletedBy
          - fileSource
          - projectId
          - numLikes
          - reactions
          - versions
          - downloadURL
          - previewURL
          - thumbURL
          - relatedItems
          - commentsCount
          - commentsCountRead
          - categoryId
          items:
            type: string
          type: array
        style: form
      - explode: false
        in: query
        name: fields[companies]
        schema:
          enum:
          - id
          - name
          - logoUploadedToServer
          - logoImage
          items:
            type: string
          type: array
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/comment.CommentsResponse'
          description: 200 OK
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/view.ErrorResponse'
          description: 400 Bad Request
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/view.ErrorResponse'
          description: 403 Forbidden
        "404":
          content: {}
          description: 404 Not Found (no data)
      summary: Get a list of comments
      tags:
      - Comments
      x-private: true
  /projects/api/v3/companies/:id.json:
    get:
      description: Retrieves a company by id.
      operationId: GET_projects_api_v3_companies_:id.json
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/company.Response'
          description: 200 OK
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/view.ErrorResponse'
          description: 400 Bad Request
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/view.ErrorResponse'
          description: 403 Forbidden
        "404":
          content: {}
          description: 404 Not Found (no data)
      summary: Get a specific company.
      tags:
      - Company
      x-private: true
  /projects/api/v3/costs/users/:id.json:
    put:
      description: sets an hourly cost for a specifc user.
      operationId: PUT_projects_api_v3_costs_users_:id.json
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/usercost.Request'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/usercost.Response'
          description: 200 OK
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/view.ErrorResponse'
          description: 400 Bad Request
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/view.ErrorResponse'
          description: 403 Forbidden
      summary: set a usercost.
      tags:
      - BETA
      x-private: true
      x-codegen-request-body-name: usercost.Request
  /projects/api/v3/customfields.json:
    get:
      description: Return all custom fields for the provided filters.
      operationId: GET_projects_api_v3_customfields.json
      parameters:
      - description: filter by project statuses
        in: query
        name: projectStatuses
        schema:
          type: string
      - description: order mode
        in: query
        name: orderMode
        schema:
          default: asc
          enum:
          - asc
          - desc
          type: string
      - description: order by
        in: query
        name: orderBy
        schema:
          default: name
          enum:
          - name
          - project
          - dateCreated
          - dateUpdated
          type: string
      - description: filter by entities
        in: query
        name: entities
        schema:
          type: string
      - description: filter by project id
        in: query
        name: projectId
        schema:
          type: integer
      - description: |-
          filter by project healths

          0: not set
          1: bad
          2: ok
          3: good
        in: query
        name: projectHealths
        schema:
          enum:
          - 0
          - 1
          - 2
          - 3
          type: integer
      - description: number of items in a page
        in: query
        name: pageSize
        schema:
          default: 50
          type: integer
      - description: page number
        in: query
        name: page
        schema:
          default: 1
          type: integer
      - description: include deleted items
        in: query
        name: showDeleted
        schema:
          default: false
          type: boolean
      - description: filter by starred projects only
        in: query
        name: onlyStarredProjects
        schema:
          type: boolean
      - description: only return site-level custom fields
        in: query
        name: onlySiteLevel
        schema:
          default: false
          type: boolean
      - description: match all project tags
        in: query
        name: matchAllProjectTags
        schema:
          type: boolean
      - description: include custom fields for site-level in the response
        in: query
        name: includeSiteLevel
        schema:
          default: true
          type: boolean
      - description: filter by project tag ids
        explode: false
        in: query
        name: projectTagIds
        schema:
          items:
            type: integer
          type: array
        style: form
      - description: filter by project owner ids
        explode: false
        in: query
        name: projectOwnerIds
        schema:
          items:
            type: integer
          type: array
        style: form
      - description: filter by project ids
        explode: false
        in: query
        name: projectIds
        schema:
          items:
            type: integer
          type: array
        style: form
      - description: filter by company ids
        explode: false
        in: query
        name: projectCompanyIds
        schema:
          items:
            type: integer
          type: array
        style: form
      - description: filter by project category ids
        explode: false
        in: query
        name: projectCategoryIds
        schema:
          items:
            type: integer
          type: array
        style: form
      - description: include
        explode: false
        in: query
        name: include
        schema:
          enum:
          - projects
          - createdBy
          - updatedBy
          - deletedBy
          items:
            type: string
          type: array
        style: form
      - explode: false
        in: query
        name: fields[users]
        schema:
          enum:
          - id
          - firstName
          - lastName
          - email
          - companyId
          - isAdmin
          - type
          items:
            type: string
          type: array
        style: form
      - explode: false
        in: query
        name: fields[projects]
        schema:
          enum:
          - id
          - name
          items:
            type: string
          type: array
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/customfield.CustomFieldsResponse'
          description: 200 OK
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/view.ErrorResponse'
          description: 400 Bad Request
      summary: Get all custom fields
      tags:
      - CustomFields
      x-private: false
    post:
      description: |-
        Creates a new custom field. The custom field could have a scope at an
        installation-level or at a project-level.
      operationId: POST_projects_api_v3_customfields.json
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/customfield.Request'
        required: true
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/customfield.Response'
          description: 201 Created
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/view.ErrorResponse'
          description: 400 Bad Request
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/view.ErrorResponse'
          description: 403 Forbidden
      summary: Create a new custom field
      tags:
      - CustomFields
      x-private: false
      x-codegen-request-body-name: customfield.Request
  /projects/api/v3/customfields/:id.json:
    delete:
      description: Removes a custom field.
      operationId: DELETE_projects_api_v3_customfields_:id.json
      responses:
        "204":
          content: {}
          description: 204 No Content (no data)
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/view.ErrorResponse'
          description: 400 Bad Request
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/view.ErrorResponse'
          description: 403 Forbidden
        "404":
          content: {}
          description: 404 Not Found (no data)
      summary: Delete an existing custom field
      tags:
      - CustomFields
      x-private: false
    get:
      description: This returns all details about an individual custom field.
      operationId: GET_projects_api_v3_customfields_:id.json
      parameters:
      - description: filter by project statuses
        in: query
        name: projectStatuses
        schema:
          type: string
      - description: order mode
        in: query
        name: orderMode
        schema:
          default: asc
          enum:
          - asc
          - desc
          type: string
      - description: order by
        in: query
        name: orderBy
        schema:
          default: name
          enum:
          - name
          - project
          - dateCreated
          - dateUpdated
          type: string
      - description: filter by entities
        in: query
        name: entities
        schema:
          type: string
      - description: filter by project id
        in: query
        name: projectId
        schema:
          type: integer
      - description: |-
          filter by project healths

          0: not set
          1: bad
          2: ok
          3: good
        in: query
        name: projectHealths
        schema:
          enum:
          - 0
          - 1
          - 2
          - 3
          type: integer
      - description: number of items in a page
        in: query
        name: pageSize
        schema:
          default: 50
          type: integer
      - description: page number
        in: query
        name: page
        schema:
          default: 1
          type: integer
      - description: include deleted items
        in: query
        name: showDeleted
        schema:
          default: false
          type: boolean
      - description: filter by starred projects only
        in: query
        name: onlyStarredProjects
        schema:
          type: boolean
      - description: only return site-level custom fields
        in: query
        name: onlySiteLevel
        schema:
          default: false
          type: boolean
      - description: match all project tags
        in: query
        name: matchAllProjectTags
        schema:
          type: boolean
      - description: include custom fields for site-level in the response
        in: query
        name: includeSiteLevel
        schema:
          default: true
          type: boolean
      - description: filter by project tag ids
        explode: false
        in: query
        name: projectTagIds
        schema:
          items:
            type: integer
          type: array
        style: form
      - description: filter by project owner ids
        explode: false
        in: query
        name: projectOwnerIds
        schema:
          items:
            type: integer
          type: array
        style: form
      - description: filter by project ids
        explode: false
        in: query
        name: projectIds
        schema:
          items:
            type: integer
          type: array
        style: form
      - description: filter by company ids
        explode: false
        in: query
        name: projectCompanyIds
        schema:
          items:
            type: integer
          type: array
        style: form
      - description: filter by project category ids
        explode: false
        in: query
        name: projectCategoryIds
        schema:
          items:
            type: integer
          type: array
        style: form
      - description: include
        explode: false
        in: query
        name: include
        schema:
          enum:
          - projects
          - createdBy
          - updatedBy
          - deletedBy
          items:
            type: string
          type: array
        style: form
      - explode: false
        in: query
        name: fields[users]
        schema:
          enum:
          - id
          - firstName
          - lastName
          - email
          - companyId
          - isAdmin
          - type
          items:
            type: string
          type: array
        style: form
      - explode: false
        in: query
        name: fields[projects]
        schema:
          enum:
          - id
          - name
          items:
            type: string
          type: array
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/customfield.Response'
          description: 200 OK
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/view.ErrorResponse'
          description: 400 Bad Request
        "404":
          content: {}
          description: 404 Not Found (no data)
      summary: Get a custom field by id.
      tags:
      - CustomFields
      x-private: false
    patch:
      description: Updates an existing custom field.
      operationId: PATCH_projects_api_v3_customfields_:id.json
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/customfield.Request'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/customfield.Response'
          description: 200 OK
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/view.ErrorResponse'
          description: 400 Bad Request
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/view.ErrorResponse'
          description: 403 Forbidden
        "404":
          content: {}
          description: 404 Not Found (no data)
        "409":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/view.ErrorResponse'
          description: 409 Conflict
      summary: Update an existing custom field.
      tags:
      - CustomFields
      x-private: false
      x-codegen-request-body-name: customfield.Request
    put:
      description: Updates an existing custom field.
      operationId: PUT_projects_api_v3_customfields_:id.json
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/customfield.Request'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/customfield.Response'
          description: 200 OK
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/view.ErrorResponse'
          description: 400 Bad Request
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/view.ErrorResponse'
          description: 403 Forbidden
        "404":
          content: {}
          description: 404 Not Found (no data)
        "409":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/view.ErrorResponse'
          description: 409 Conflict
      summary: Update an existing custom field.
      tags:
      - CustomFields
      x-private: false
      x-codegen-request-body-name: customfield.Request
  /projects/api/v3/customfields/bulk/delete.json:
    post:
      description: Remove multiple custom fields at once.
      operationId: POST_projects_api_v3_customfields_bulk_delete.json
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/customfield.BulkDeleteRequest'
        required: true
      responses:
        "204":
          content: {}
          description: 204 No Content (no data)
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/view.ErrorResponse'
          description: 400 Bad Request
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/view.ErrorResponse'
          description: 403 Forbidden
        "404":
          content: {}
          description: 404 Not Found (no data)
      summary: Delete many custom fields at once
      tags:
      - CustomFields
      x-private: false
      x-codegen-request-body-name: customfield.BulkDeleteRequest
  /projects/api/v3/dashboards.json:
    get:
      description: |-
        Return all dashboards that the logged-in user can access. Dashboards contains
        panels that are used to summarize many activities from the installation.
      operationId: GET_projects_api_v3_dashboards.json
      parameters:
      - description: filter by updated after date
        in: query
        name: updatedAfter
        schema:
          format: date
          type: string
      - description: order mode
        in: query
        name: orderMode
        schema:
          default: asc
          enum:
          - asc
          - desc
          type: string
      - description: order by
        in: query
        name: orderBy
        schema:
          default: isDefault
          enum:
          - isDefault
          - displayOrder
          type: string
      - description: filter by user id
        in: query
        name: userId
        schema:
          type: integer
      - description: filter by project id
        in: query
        name: projectId
        schema:
          type: integer
      - description: number of items in a page
        in: query
        name: pageSize
        schema:
          default: 50
          type: integer
      - description: page number
        in: query
        name: page
        schema:
          default: 1
          type: integer
      - description: include deleted items
        in: query
        name: showDeleted
        schema:
          default: false
          type: boolean
      - description: parse emoji alias to unicode
        in: query
        name: emoji
        schema:
          default: true
          type: boolean
      - description: include
        explode: false
        in: query
        name: include
        schema:
          enum:
          - projects
          - users
          - dashboardSettings
          - dashboardPanels
          - dashboardPanels.settings
          items:
            type: string
          type: array
        style: form
      - explode: false
        in: query
        name: fields[users]
        schema:
          enum:
          - id
          - firstName
          - lastName
          - email
          - companyId
          - isAdmin
          - type
          items:
            type: string
          type: array
        style: form
      - explode: false
        in: query
        name: fields[projects]
        schema:
          enum:
          - id
          - name
          items:
            type: string
          type: array
        style: form
      - explode: false
        in: query
        name: fields[dashboards]
        schema:
          enum:
          - id
          - title
          - color
          - description
          - isDefault
          - userId
          - projectId
          - displayOrder
          - deleted
          - dateCreated
          - dateUpdated
          - dateDeleted
          - dashboardPanelIds
          - dashboardSettingIds
          items:
            type: string
          type: array
        style: form
      - explode: false
        in: query
        name: fields[dashboardSettings]
        schema:
          enum:
          - id
          - dashboardId
          - name
          - value
          items:
            type: string
          type: array
        style: form
      - explode: false
        in: query
        name: fields[dashboardPanels]
        schema:
          enum:
          - id
          - dashboardId
          - name
          - type
          - displayOrder
          - dashboardPanelSettingIds
          items:
            type: string
          type: array
        style: form
      - explode: false
        in: query
        name: fields[dashboardPanelSettings]
        schema:
          enum:
          - id
          - installationId
          - dashboardId
          - dashboardPanelId
          - name
          - value
          items:
            type: string
          type: array
        style: form
      - description: filter by user dashboard ids
        explode: false
        in: query
        name: dashboardIds
        schema:
          items:
            type: integer
          type: array
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/dashboard.UserDashboardsResponse'
          description: 200 OK
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/view.ErrorResponse'
          description: 400 Bad Request
      summary: Get all dashboards
      tags:
      - Dashboards
  /projects/api/v3/files.json:
    get:
      description: Return all files for the provided filters.
      operationId: GET_projects_api_v3_files.json
      parameters:
      - description: filter by uploaded start date
        in: query
        name: uploadedStartDate
        schema:
          format: date
          type: string
      - description: filter by uploaded end date
        in: query
        name: uploadedEndDate
        schema:
          format: date
          type: string
      - description: filter by updated after date (deprecated, use updatedAfter)
        in: query
        name: updatedAfterDate
        schema:
          format: date-time
          type: string
      - description: filter by updated after date
        in: query
        name: updatedAfter
        schema:
          format: date-time
          type: string
      - description: filter by 'all', 'active', 'inactive'
        in: query
        name: status
        schema:
          type: string
      - description: filter by file name
        in: query
        name: searchTerm
        schema:
          type: string
      - description: filter by project type. Leave empty to retrieve all types eg.
          &projectType=
        in: query
        name: projectType
        schema:
          default: normal
          enum:
          - normal
          - tasklists-template
          - projects-template
          type: string
      - description: order mode
        in: query
        name: orderMode
        schema:
          default: asc
          enum:
          - asc
          - desc
          type: string
      - description: order by
        in: query
        name: orderBy
        schema:
          default: name
          enum:
          - name
          - projectname
          - dateuploaded
          - size
          type: string
      - description: filter by version id, returns the latest file
        in: query
        name: versionId
        schema:
          type: integer
      - description: select the version of the file to include when filtering by id.
        in: query
        name: version
        schema:
          type: integer
      - description: filter by task ids.
        in: query
        name: taskId
        schema:
          type: integer
      - description: filter by project id
        in: query
        name: projectId
        schema:
          type: integer
      - description: number of items in a page
        in: query
        name: pageSize
        schema:
          default: 50
          type: integer
      - description: page number
        in: query
        name: page
        schema:
          default: 1
          type: integer
      - description: filter by project file id
        in: query
        name: id
        schema:
          type: integer
      - description: filter by category id
        in: query
        name: categoryId
        schema:
          type: integer
      - description: filter by omitting internal files
        in: query
        name: skipInternalFiles
        schema:
          type: boolean
      - description: filter by omitting external files
        in: query
        name: skipExternalFiles
        schema:
          type: boolean
      - description: include deleted files.
        in: query
        name: showDeleted
        schema:
          type: boolean
      - description: |-
          filter by display name, file extension, file category, original file name and
          the name of the latest uploader.
        in: query
        name: searchAllFields
        schema:
          type: boolean
      - description: filter by matching all tag ids
        in: query
        name: matchAllTags
        schema:
          type: boolean
      - description: filter by files that are locked
        in: query
        name: lockedOnly
        schema:
          type: boolean
      - description: include the file versions of the file
        in: query
        name: getVersions
        schema:
          type: boolean
      - description: include the reactions of each file version
        in: query
        name: getVersionReactions
        schema:
          type: boolean
      - description: get related tasks, messages, comments for a file. default true
          when filtering by id.
        in: query
        name: getRelatedItems
        schema:
          type: boolean
      - description: include reactions of the file
        in: query
        name: getReactions
        schema:
          type: boolean
      - description: include the number of likes
        in: query
        name: getLikes
        schema:
          type: boolean
      - description: include the number of comments and comments read. default true
          when filtering by id
        in: query
        name: getComments
        schema:
          type: boolean
      - description: document editor files
        in: query
        name: fromDocumentEditor
        schema:
          type: boolean
      - description: filter by version ids, returns the latest files
        explode: false
        in: query
        name: versionIds
        schema:
          items:
            type: integer
          type: array
        style: form
      - description: filter by user ids
        explode: false
        in: query
        name: userIds
        schema:
          items:
            type: integer
          type: array
        style: form
      - description: filter by files tag ids.
        explode: false
        in: query
        name: tagIds
        schema:
          items:
            type: integer
          type: array
        style: form
      - description: include
        explode: false
        in: query
        name: include
        schema:
          enum:
          - projects
          - users
          - tags
          - fileCategories
          - messages
          - comments
          - tasks
          items:
            type: string
          type: array
        style: form
      - explode: false
        in: query
        name: fields[users]
        schema:
          enum:
          - id
          - firstName
          - lastName
          - email
          - companyId
          - isAdmin
          - type
          items:
            type: string
          type: array
        style: form
      - explode: false
        in: query
        name: fields[tasks]
        schema:
          enum:
          - id
          - name
          - dateUpdated
          - parentTaskId
          - isPrivate
          - status
          - tasklistId
          - startDate
          - dueDate
          items:
            type: string
          type: array
        style: form
      - explode: false
        in: query
        name: fields[tags]
        schema:
          enum:
          - id
          - name
          - color
          - count
          items:
            type: string
          type: array
        style: form
      - explode: false
        in: query
        name: fields[projects]
        schema:
          enum:
          - id
          - name
          items:
            type: string
          type: array
        style: form
      - explode: false
        in: query
        name: fields[messages]
        schema:
          enum:
          - id
          - postId
          - title
          items:
            type: string
          type: array
        style: form
      - explode: false
        in: query
        name: fields[fileCategories]
        schema:
          enum:
          - id
          - name
          - color
          - parentId
          - projectId
          items:
            type: string
          type: array
        style: form
      - explode: false
        in: query
        name: fields[comments]
        schema:
          enum:
          - id
          - objectType
          - objectId
          - title
          items:
            type: string
          type: array
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/file.ProjectFilesResponse'
          description: 200 OK
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/view.ErrorResponse'
          description: 400 Bad Request
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/view.ErrorResponse'
          description: 403 Forbidden
      summary: Get a list of files.
      tags:
      - Files
      x-private: true
  /projects/api/v3/files/:id.json:
    delete:
      description: Delete an existing file including all the file versions.
      operationId: DELETE_projects_api_v3_files_:id.json
      responses:
        "204":
          content: {}
          description: 204 No Content (no data)
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/view.ErrorResponse'
          description: 400 Bad Request
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/view.ErrorResponse'
          description: 403 Forbidden
        "404":
          content: {}
          description: 404 Not Found (no data)
      summary: Delete an existing file and it's versions.
      tags:
      - Files
      x-private: true
    get:
      description: Get a single file by project file id.
      operationId: GET_projects_api_v3_files_:id.json
      parameters:
      - description: filter by uploaded start date
        in: query
        name: uploadedStartDate
        schema:
          format: date
          type: string
      - description: filter by uploaded end date
        in: query
        name: uploadedEndDate
        schema:
          format: date
          type: string
      - description: filter by updated after date (deprecated, use updatedAfter)
        in: query
        name: updatedAfterDate
        schema:
          format: date-time
          type: string
      - description: filter by updated after date
        in: query
        name: updatedAfter
        schema:
          format: date-time
          type: string
      - description: filter by 'all', 'active', 'inactive'
        in: query
        name: status
        schema:
          type: string
      - description: filter by file name
        in: query
        name: searchTerm
        schema:
          type: string
      - description: filter by project type. Leave empty to retrieve all types eg.
          &projectType=
        in: query
        name: projectType
        schema:
          default: normal
          enum:
          - normal
          - tasklists-template
          - projects-template
          type: string
      - description: order mode
        in: query
        name: orderMode
        schema:
          default: asc
          enum:
          - asc
          - desc
          type: string
      - description: order by
        in: query
        name: orderBy
        schema:
          default: name
          enum:
          - name
          - projectname
          - dateuploaded
          - size
          type: string
      - description: filter by version id, returns the latest file
        in: query
        name: versionId
        schema:
          type: integer
      - description: select the version of the file to include when filtering by id.
        in: query
        name: version
        schema:
          type: integer
      - description: filter by task ids.
        in: query
        name: taskId
        schema:
          type: integer
      - description: filter by project id
        in: query
        name: projectId
        schema:
          type: integer
      - description: number of items in a page
        in: query
        name: pageSize
        schema:
          default: 50
          type: integer
      - description: page number
        in: query
        name: page
        schema:
          default: 1
          type: integer
      - description: filter by project file id
        in: query
        name: id
        schema:
          type: integer
      - description: filter by category id
        in: query
        name: categoryId
        schema:
          type: integer
      - description: filter by omitting internal files
        in: query
        name: skipInternalFiles
        schema:
          type: boolean
      - description: filter by omitting external files
        in: query
        name: skipExternalFiles
        schema:
          type: boolean
      - description: include deleted files.
        in: query
        name: showDeleted
        schema:
          type: boolean
      - description: |-
          filter by display name, file extension, file category, original file name and
          the name of the latest uploader.
        in: query
        name: searchAllFields
        schema:
          type: boolean
      - description: filter by matching all tag ids
        in: query
        name: matchAllTags
        schema:
          type: boolean
      - description: filter by files that are locked
        in: query
        name: lockedOnly
        schema:
          type: boolean
      - description: include the file versions of the file
        in: query
        name: getVersions
        schema:
          type: boolean
      - description: include the reactions of each file version
        in: query
        name: getVersionReactions
        schema:
          type: boolean
      - description: get related tasks, messages, comments for a file. default true
          when filtering by id.
        in: query
        name: getRelatedItems
        schema:
          type: boolean
      - description: include reactions of the file
        in: query
        name: getReactions
        schema:
          type: boolean
      - description: include the number of likes
        in: query
        name: getLikes
        schema:
          type: boolean
      - description: include the number of comments and comments read. default true
          when filtering by id
        in: query
        name: getComments
        schema:
          type: boolean
      - description: document editor files
        in: query
        name: fromDocumentEditor
        schema:
          type: boolean
      - description: filter by version ids, returns the latest files
        explode: false
        in: query
        name: versionIds
        schema:
          items:
            type: integer
          type: array
        style: form
      - description: filter by user ids
        explode: false
        in: query
        name: userIds
        schema:
          items:
            type: integer
          type: array
        style: form
      - description: filter by files tag ids.
        explode: false
        in: query
        name: tagIds
        schema:
          items:
            type: integer
          type: array
        style: form
      - description: include
        explode: false
        in: query
        name: include
        schema:
          enum:
          - projects
          - users
          - tags
          - fileCategories
          - messages
          - comments
          - tasks
          items:
            type: string
          type: array
        style: form
      - explode: false
        in: query
        name: fields[users]
        schema:
          enum:
          - id
          - firstName
          - lastName
          - email
          - companyId
          - isAdmin
          - type
          items:
            type: string
          type: array
        style: form
      - explode: false
        in: query
        name: fields[tasks]
        schema:
          enum:
          - id
          - name
          - dateUpdated
          - parentTaskId
          - isPrivate
          - status
          - tasklistId
          - startDate
          - dueDate
          items:
            type: string
          type: array
        style: form
      - explode: false
        in: query
        name: fields[tags]
        schema:
          enum:
          - id
          - name
          - color
          - count
          items:
            type: string
          type: array
        style: form
      - explode: false
        in: query
        name: fields[projects]
        schema:
          enum:
          - id
          - name
          items:
            type: string
          type: array
        style: form
      - explode: false
        in: query
        name: fields[messages]
        schema:
          enum:
          - id
          - postId
          - title
          items:
            type: string
          type: array
        style: form
      - explode: false
        in: query
        name: fields[fileCategories]
        schema:
          enum:
          - id
          - name
          - color
          - parentId
          - projectId
          items:
            type: string
          type: array
        style: form
      - explode: false
        in: query
        name: fields[comments]
        schema:
          enum:
          - id
          - objectType
          - objectId
          - title
          items:
            type: string
          type: array
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/file.Response'
          description: 200 OK
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/view.ErrorResponse'
          description: 400 Bad Request
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/view.ErrorResponse'
          description: 403 Forbidden
        "404":
          content: {}
          description: 404 Not Found (no data)
      summary: Get a specific file.
      tags:
      - Files
      x-private: true
    patch:
      description: Updates an existing file.
      operationId: PATCH_projects_api_v3_files_:id.json
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/file.Request'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/file.Response'
          description: 200 OK
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/view.ErrorResponse'
          description: 400 Bad Request
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/view.ErrorResponse'
          description: 403 Forbidden
        "404":
          content: {}
          description: 404 Not Found (no data)
        "409":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/view.ErrorResponse'
          description: 409 Conflict
      summary: Update an existing file
      tags:
      - Files
      x-private: true
      x-codegen-request-body-name: file.Request
  /projects/api/v3/files/:id/comments.json:
    get:
      operationId: GET_projects_api_v3_files_:id_comments.json
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/comment.CommentsResponse'
          description: 200 OK
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/view.ErrorResponse'
          description: 400 Bad Request
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/view.ErrorResponse'
          description: 403 Forbidden
        "404":
          content: {}
          description: 404 Not Found (no data)
      summary: Get a list of comments for a file
      tags:
      - FileComments
  /projects/api/v3/files/:projectFileId.json:
    post:
      description: Creates a new fileversion for the project file id specified.
      operationId: POST_projects_api_v3_files_:projectFileId.json
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/fileversion.Request'
        required: true
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/fileversion.Response'
          description: 201 Created
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/view.ErrorResponse'
          description: 400 Bad Request
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/view.ErrorResponse'
          description: 403 Forbidden
        "404":
          content: {}
          description: 404 Not Found (no data)
      summary: Create a new fileversion for the project file id.
      tags:
      - Files
      x-private: true
      x-codegen-request-body-name: fileversion.Request
  /projects/api/v3/files/archive.json:
    post:
      description: Returns an URL to download multiple files at once.
      operationId: POST_projects_api_v3_files_archive.json
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/file.ArchiveRequest'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/file.ArchiveResponse'
          description: 200 OK
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/view.ErrorResponse'
          description: 400 Bad Request
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/view.ErrorResponse'
          description: 403 Forbidden
      summary: Returns an URL for multiple files
      tags:
      - Files
      x-private: true
      x-codegen-request-body-name: file.ArchiveRequest
  /projects/api/v3/files/available.json:
    get:
      description: Retrieves the available space after calculating all stored file
        sizes.
      operationId: GET_projects_api_v3_files_available.json
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/file.AvailableResponse'
          description: 200 OK
      summary: Retrieves available space on account
      tags:
      - Files
      x-private: true
  /projects/api/v3/files/changes.json:
    get:
      description: Retrieves all recently changed files sorted by lastUpdateDateTime
        Descending
      operationId: GET_projects_api_v3_files_changes.json
      parameters:
      - description: filter by risks updated after specified date (deprecated, use
          updatedAfter)
        in: query
        name: updatedAfterDateTime
        schema:
          format: date-time
          type: string
      - description: filter by risks updated after specified date
        in: query
        name: updatedAfter
        schema:
          format: date-time
          type: string
      - description: max number of items to retrieve
        in: query
        name: pageSize
        schema:
          default: 1000
          type: integer
      - description: return parent ID
        in: query
        name: includeParentId
        schema:
          default: false
          type: boolean
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/change.ChangesResponse'
          description: 200 OK
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/view.ErrorResponse'
          description: 400 Bad Request
      summary: Get all recently changed files.
      tags:
      - Files
      x-private: true
  /projects/api/v3/files/usage.json:
    get:
      description: Retrieves all file space used on account.
      operationId: GET_projects_api_v3_files_usage.json
      parameters:
      - description: filter by a specific project
        in: query
        name: projectId
        schema:
          type: integer
      - description: include
        explode: false
        in: query
        name: include
        schema:
          enum:
          - projects
          items:
            type: string
          type: array
        style: form
      - explode: false
        in: query
        name: fields[projects]
        schema:
          enum:
          - id
          - name
          items:
            type: string
          type: array
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/file.UsageResponse'
          description: 200 OK
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/view.ErrorResponse'
          description: 400 Bad Request
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/view.ErrorResponse'
          description: 403 Forbidden
      summary: Retrieve file usage on account
      tags:
      - Files
      x-private: true
  /projects/api/v3/fileversion/:id.json:
    get:
      description: Retrieve a fileversion by id.
      operationId: GET_projects_api_v3_fileversion_:id.json
      parameters:
      - description: filter by project file id
        in: query
        name: id
        schema:
          type: integer
      - description: include reactions of the file version
        in: query
        name: getReactions
        schema:
          type: boolean
      - description: include
        explode: false
        in: query
        name: include
        schema:
          enum:
          - projects
          - users
          items:
            type: string
          type: array
        style: form
      - explode: false
        in: query
        name: fields[users]
        schema:
          enum:
          - id
          - firstName
          - lastName
          - email
          - companyId
          - isAdmin
          - type
          items:
            type: string
          type: array
        style: form
      - explode: false
        in: query
        name: fields[projects]
        schema:
          enum:
          - id
          - name
          items:
            type: string
          type: array
        style: form
      - explode: false
        in: query
        name: fields[files]
        schema:
          enum:
          - isPrivate
          - latestFileVersionNo
          - versionId
          - status
          - description
          - lockdownId
          - tagIds
          - changeFollowers
          - commentFollowers
          - originalName
          - displayName
          - isLocked
          - lockedByUserId
          - lockedDate
          - size
          - uploadedDate
          - uploadedByUserID
          - updatedAt
          - deletedAt
          - deletedBy
          - fileSource
          - projectId
          - numLikes
          - reactions
          - versions
          - downloadURL
          - previewURL
          - thumbURL
          - relatedItems
          - commentsCount
          - commentsCountRead
          - categoryId
          items:
            type: string
          type: array
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/fileversion.Response'
          description: 200 OK
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/view.ErrorResponse'
          description: 400 Bad Request
        "404":
          content: {}
          description: 404 Not Found (no data)
      summary: Get a specific fileversion.
      tags:
      - Files
      x-private: true
  /projects/api/v3/form/:id/assignees.json:
    put:
      description: |-
        Replace the current assignees. An empty list deletes.

        If some of the assignees are found to error, the correct
        ones will be created, and the incorrect assignees will be
        reported back in the response, under `.errors.[]`

        If every assignee is found to not exist, the response will be
        a 404.

        If every assignee is found to be invalid, or a mix of invalid
        and doesn't exist, the response will be a 400.
      operationId: PUT_projects_api_v3_form_:id_assignees.json
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/assignee.Request'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/assignee.Response'
          description: 200 OK
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/view.ErrorResponse'
          description: 400 Bad Request
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/view.ErrorResponse'
          description: 403 Forbidden
        "404":
          content: {}
          description: 404 Not Found (no data)
      summary: Update the existing assignees.
      tags:
      - FormsAssignees
      x-private: true
      x-codegen-request-body-name: assignee.Request
  /projects/api/v3/forms.json:
    get:
      description: Return a list of all forms.
      operationId: GET_projects_api_v3_forms.json
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/form.FormsResponse'
          description: 200 OK
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/view.ErrorResponse'
          description: 400 Bad Request
      summary: Get all forms.
      tags:
      - Forms
      x-private: true
    post:
      operationId: POST_projects_api_v3_forms.json
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/form.Request'
        required: true
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/form.Response'
          description: 201 Created
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/view.ErrorResponse'
          description: 400 Bad Request
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/view.ErrorResponse'
          description: 403 Forbidden
        "409":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/view.ErrorResponse'
          description: 409 Conflict
      summary: Create a new form.
      tags:
      - Forms
      x-private: true
      x-codegen-request-body-name: form.Request
  /projects/api/v3/forms/:id.json:
    delete:
      operationId: DELETE_projects_api_v3_forms_:id.json
      responses:
        "204":
          content: {}
          description: 204 No Content (no data)
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/view.ErrorResponse'
          description: 403 Forbidden
        "404":
          content: {}
          description: 404 Not Found (no data)
      summary: Delete an existing form.
      tags:
      - Forms
      x-private: true
    get:
      operationId: GET_projects_api_v3_forms_:id.json
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/form.Response'
          description: 200 OK
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/form.Response'
          description: 403 Forbidden
        "404":
          content: {}
          description: 404 Not Found (no data)
      summary: Get a specific form.
      tags:
      - Forms
      x-private: true
    patch:
      operationId: PATCH_projects_api_v3_forms_:id.json
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/form.Request'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/form.Response'
          description: 200 OK
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/view.ErrorResponse'
          description: 400 Bad Request
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/view.ErrorResponse'
          description: 403 Forbidden
        "404":
          content: {}
          description: 404 Not Found (no data)
        "409":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/view.ErrorResponse'
          description: 409 Conflict
      summary: Update an existing form.
      tags:
      - Forms
      x-private: true
      x-codegen-request-body-name: form.Request
  /projects/api/v3/forms/:id/assignees.json:
    get:
      description: Get all assignees for a given form.
      operationId: GET_projects_api_v3_forms_:id_assignees.json
      parameters:
      - description: order mode
        in: query
        name: orderMode
        schema:
          default: asc
          enum:
          - asc
          - desc
          type: string
      - description: filter by user id
        in: query
        name: userId
        schema:
          type: integer
      - description: number of items in a page
        in: query
        name: pageSize
        schema:
          default: 50
          type: integer
      - description: page number
        in: query
        name: page
        schema:
          default: 1
          type: integer
      - description: include
        explode: false
        in: query
        name: include
        schema:
          enum:
          - companies
          - teams
          - users
          items:
            type: string
          type: array
        style: form
      - explode: false
        in: query
        name: fields[users]
        schema:
          enum:
          - id
          - firstName
          - lastName
          - email
          - companyId
          - isAdmin
          - type
          items:
            type: string
          type: array
        style: form
      - explode: false
        in: query
        name: fields[teams]
        schema:
          enum:
          - id
          - name
          - teamLogo
          - teamLogoIcon
          - teamLogoColor
          items:
            type: string
          type: array
        style: form
      - explode: false
        in: query
        name: fields[formAssignees]
        schema:
          enum:
          - id
          - type
          items:
            type: string
          type: array
        style: form
      - explode: false
        in: query
        name: fields[companies]
        schema:
          enum:
          - id
          - name
          - logoUploadedToServer
          - logoImage
          items:
            type: string
          type: array
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/assignee.FormAssigneesResponse'
          description: 200 OK
        "404":
          content: {}
          description: 404 Not Found (no data)
      summary: Get all assignees for a given form.
      tags:
      - FormsAssignees
      x-private: true
  /projects/api/v3/forms/:id/draft.json:
    get:
      operationId: GET_projects_api_v3_forms_:id_draft.json
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/form.Response'
          description: 200 OK
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/form.Response'
          description: 403 Forbidden
        "404":
          content: {}
          description: 404 Not Found (no data)
      summary: Get the draft version of a specific form.
      tags:
      - Forms
      x-private: true
  /projects/api/v3/forms/:id/token.json:
    patch:
      description: Update a form token
      operationId: PATCH_projects_api_v3_forms_:id_token.json
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/token.Request'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/token.Response'
          description: 200 OK
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/view.ErrorResponse'
          description: 400 Bad Request
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/view.ErrorResponse'
          description: 403 Forbidden
        "404":
          content: {}
          description: 404 Not Found (no data)
      summary: Update an existing token.
      tags:
      - FormsToken
      x-private: true
      x-codegen-request-body-name: token.Request
  /projects/api/v3/forms/:id/token/refresh.json:
    put:
      description: |-
        Used for invalidating current form URLs and generating
        a new one.
      operationId: PUT_projects_api_v3_forms_:id_token_refresh.json
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/token.Request'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/token.Response'
          description: 200 OK
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/view.ErrorResponse'
          description: 400 Bad Request
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/view.ErrorResponse'
          description: 403 Forbidden
        "404":
          content: {}
          description: 404 Not Found (no data)
      summary: Refresh the value of a token
      tags:
      - FormsToken
      x-private: true
      x-codegen-request-body-name: token.Request
  /projects/api/v3/forms/public/:token.json:
    get:
      description: This endpoint does not require authentication.
      operationId: GET_projects_api_v3_forms_public_:token.json
      parameters:
      - description: order mode
        in: query
        name: orderMode
        schema:
          default: asc
          enum:
          - asc
          - desc
          type: string
      - description: query by form state
        in: query
        name: content.state
        schema:
          enum:
          - active
          - deleted
          - draft
          - latest
          type: string
      - description: filter by user id
        in: query
        name: userId
        schema:
          type: integer
      - description: number of items in a page
        in: query
        name: pageSize
        schema:
          default: 50
          type: integer
      - description: page number
        in: query
        name: page
        schema:
          default: 1
          type: integer
      - description: filter by project ids
        explode: false
        in: query
        name: projectIds
        schema:
          items:
            type: integer
          type: array
        style: form
      - description: include
        explode: false
        in: query
        name: include
        schema:
          enum:
          - projects
          - users
          items:
            type: string
          type: array
        style: form
      - explode: false
        in: query
        name: fields[users]
        schema:
          enum:
          - id
          - firstName
          - lastName
          - email
          - companyId
          - isAdmin
          - type
          items:
            type: string
          type: array
        style: form
      - explode: false
        in: query
        name: fields[projects]
        schema:
          enum:
          - id
          - name
          items:
            type: string
          type: array
        style: form
      - explode: false
        in: query
        name: fields[forms]
        schema:
          enum:
          - id
          - confirmationMessage
          - promptAdditionalSubmissions
          - isShared
          - state
          - taskTitleFieldId
          - token
          - content
          - hostObject
          - installation
          items:
            type: string
          type: array
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/form.PublicResponse'
          description: 200 OK
        "404":
          content: {}
          description: 404 Not Found (no data)
      summary: Get a forms via its token.
      tags:
      - FormsPublic
      x-private: true
  /projects/api/v3/forms/public/:token/submit.json:
    post:
      description: This endpoint does not require authentication.
      operationId: POST_projects_api_v3_forms_public_:token_submit.json
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/form.SubmissionRequest'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/form.FormsResponse'
          description: 200 OK
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/view.ErrorResponse'
          description: 400 Bad Request
        "404":
          content: {}
          description: 404 Not Found (no data)
      summary: Submit a form response
      tags:
      - FormsPublic
      x-private: true
      x-codegen-request-body-name: form.SubmissionRequest
  /projects/api/v3/importer/stats.json:
    get:
      description: |-
        This endpoint returns info about a set of importers. This includes whether
        they are individually running or not, what's their status and a flag to
        represent if any importer is running. The endpoint looks up redis for this
        information. Using the parameter resetImporters this information can be
        deleted in redis to reset it.
      operationId: GET_projects_api_v3_importer_stats.json
      parameters:
      - description: reset importers
        in: query
        name: resetImporters
        schema:
          default: false
          type: boolean
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/importer.ImportersResponse'
          description: 200 OK
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/view.ErrorResponse'
          description: 400 Bad Request
      summary: Get stats about Importers
      tags:
      - Importers
  /projects/api/v3/latestactivity.json:
    get:
      description: |-
        Lists the latest activity across all projects ordered chronologically. When
        you log into Teamwork you will see all the recent activity. This corresponds
        to that view in Teamwork. There are parameters you can send in to filter your
        results.
      operationId: GET_projects_api_v3_latestactivity.json
      parameters:
      - description: filter by updated after date
        in: query
        name: updatedAfter
        schema:
          format: date-time
          type: string
      - description: filter by start datetime
        in: query
        name: startDate
        schema:
          format: date-time
          type: string
      - description: sort by
        in: query
        name: sort
        schema:
          type: string
      - description: list of project status
        in: query
        name: projectStatuses
        schema:
          type: string
      - description: filter by project status
        in: query
        name: projectStatus
        schema:
          type: string
      - description: order mode
        in: query
        name: orderMode
        schema:
          enum:
          - asc
          - desc
          type: string
      - description: filter by end datetime
        in: query
        name: endDate
        schema:
          format: date-time
          type: string
      - description: filter by activity types
        in: query
        name: activityTypes
        schema:
          enum:
          - task
          - tasklist
          - project
          - message
          - notebook
          - milestone
          - like
          - file
          - link
          - billinginvoice
          - task_comment
          - milestone_comment
          - file_comment
          - link_comment
          - comment
          type: string
      - description: filter by project id
        in: query
        name: projectId
        schema:
          type: integer
      - description: list of project health
        in: query
        name: projectHealths
        schema:
          type: integer
      - description: |-
          number of items in a page
          default: 50
        in: query
        name: pageSize
        schema:
          type: integer
      - description: |-
          page number
          default: 1
        in: query
        name: page
        schema:
          type: integer
      - description: activity id offset
        in: query
        name: maxId
        schema:
          type: integer
      - description: limit results from previous id
        in: query
        name: catchupFromId
        schema:
          type: integer
      - description: |-
          include deleted items
          default: false
        in: query
        name: showDeleted
        schema:
          type: boolean
      - description: |-
          filter by starred projects only
          default: false
        in: query
        name: onlyStarredProjects
        schema:
          type: boolean
      - description: enforce all tag ids must be matched
        in: query
        name: matchAllProjectTags
        schema:
          type: boolean
      - description: include archived projects
        in: query
        name: includeArchivedProjects
        schema:
          type: boolean
      - description: group all activities on comments
        in: query
        name: groupCommentActivityType
        schema:
          type: boolean
      - description: filter by user ids
        explode: false
        in: query
        name: userIds
        schema:
          items:
            type: integer
          type: array
        style: form
      - description: filter by project tag ids
        explode: false
        in: query
        name: projectTagIds
        schema:
          items:
            type: integer
          type: array
        style: form
      - description: filter by project owner ids
        explode: false
        in: query
        name: projectOwnerIds
        schema:
          items:
            type: integer
          type: array
        style: form
      - description: filter by company ids
        explode: false
        in: query
        name: projectCompanyIds
        schema:
          items:
            type: integer
          type: array
        style: form
      - description: filter by project category ids
        explode: false
        in: query
        name: projectCategoryIds
        schema:
          items:
            type: integer
          type: array
        style: form
      - description: include
        explode: false
        in: query
        name: include
        schema:
          enum:
          - projects
          - users
          - companies
          items:
            type: string
          type: array
        style: form
      - explode: false
        in: query
        name: fields[users]
        schema:
          enum:
          - id
          - firstName
          - lastName
          - email
          - companyId
          - isAdmin
          - type
          items:
            type: string
          type: array
        style: form
      - explode: false
        in: query
        name: fields[projects]
        schema:
          enum:
          - id
          - name
          items:
            type: string
          type: array
        style: form
      - explode: false
        in: query
        name: fields[companies]
        schema:
          enum:
          - id
          - name
          - logoUploadedToServer
          - logoImage
          items:
            type: string
          type: array
        style: form
      - explode: false
        in: query
        name: fields[activities]
        schema:
          enum:
          - id
          - dateTime
          - activityType
          - latestActivityType
          - itemId
          - itemLink
          - itemType
          - itemDescription
          - itemExtraDescription
          - itemExtraLink
          - itemPublicInfo
          - forUserId
          - forUserName
          - dueDate
          - isPrivate
          - lockdownId
          - projectId
          - companyId
          items:
            type: string
          type: array
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/activity.ActivitiesResponse'
          description: 200 OK
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/view.ErrorResponse'
          description: 400 Bad Request
      summary: Latest activity (all projects)
      tags:
      - Activity
  /projects/api/v3/lockdowns/:id.json:
    get:
      description: Retrieve a lockdown information.
      operationId: GET_projects_api_v3_lockdowns_:id.json
      parameters:
      - description: filter by lockdown ID
        in: query
        name: id
        schema:
          type: integer
      - description: include items
        in: query
        name: includeItems
        schema:
          type: boolean
      - description: include
        explode: false
        in: query
        name: include
        schema:
          enum:
          - users
          - companies
          - companies.users
          - teams
          - teams.users
          - tasklists
          - tasks
          - files
          - notebooks
          - milestones
          - links
          - messages
          - comments
          items:
            type: string
          type: array
        style: form
      - explode: false
        in: query
        name: fields[users]
        schema:
          enum:
          - id
          - firstName
          - lastName
          - email
          - companyId
          - isAdmin
          - type
          items:
            type: string
          type: array
        style: form
      - explode: false
        in: query
        name: fields[teams]
        schema:
          enum:
          - id
          - name
          - teamLogo
          - teamLogoIcon
          - teamLogoColor
          items:
            type: string
          type: array
        style: form
      - explode: false
        in: query
        name: fields[tasks]
        schema:
          enum:
          - id
          - name
          - dateUpdated
          - parentTaskId
          - isPrivate
          - status
          - tasklistId
          - startDate
          - dueDate
          items:
            type: string
          type: array
        style: form
      - explode: false
        in: query
        name: fields[tasklists]
        schema:
          enum:
          - id
          - name
          - projectId
          - milestoneId
          items:
            type: string
          type: array
        style: form
      - explode: false
        in: query
        name: fields[notebooks]
        schema:
          enum:
          - id
          - name
          - description
          - contents
          - type
          - isPrivate
          - locked
          - lockdownId
          - secureContent
          - projectId
          - createdByUserID
          - updatedByUserID
          - deletedByUserID
          - dateUpdated
          - dateCreated
          - dateDeleted
          - deleted
          - categoryId
          - notebookVersionID
          - notebookVersionCreatedDateTime
          - notebookVersionUpdatedDateTime
          - latestVersionNo
          - commentsCount
          - readCommentsCount
          - contentHTML
          - privacy
          - commentFollowers
          - changeFollowers
          - projectNotifyCommentIncludeCreator
          - tagIds
          items:
            type: string
          type: array
        style: form
      - explode: false
        in: query
        name: fields[milestones]
        schema:
          enum:
          - id
          - name
          - description
          - deadline
          - completed
          - projectId
          - createdOn
          - lastChangedOn
          - creatorUserId
          - reminder
          - private
          - lockdownId
          - status
          - completedOn
          - completerId
          - percentageComplete
          items:
            type: string
          type: array
        style: form
      - explode: false
        in: query
        name: fields[messages]
        schema:
          enum:
          - id
          - postId
          - title
          items:
            type: string
          type: array
        style: form
      - explode: false
        in: query
        name: fields[lockdowns]
        schema:
          enum:
          - id
          - userID
          - updatedAt
          - itemType
          - itemID
          - grantAccessTo
          items:
            type: string
          type: array
        style: form
      - explode: false
        in: query
        name: fields[links]
        schema:
          enum:
          - id
          - title
          - description
          - code
          - width
          - height
          - isPrivate
          - provider
          - projectId
          - createdAt
          - forceNewWindow
          - deleted
          - deletedAt
          - updatedAt
          - categoryId
          - createdBy
          - deletedBy
          - updatedBy
          items:
            type: string
          type: array
        style: form
      - explode: false
        in: query
        name: fields[files]
        schema:
          enum:
          - isPrivate
          - latestFileVersionNo
          - versionId
          - status
          - description
          - lockdownId
          - tagIds
          - changeFollowers
          - commentFollowers
          - originalName
          - displayName
          - isLocked
          - lockedByUserId
          - lockedDate
          - size
          - uploadedDate
          - uploadedByUserID
          - updatedAt
          - deletedAt
          - deletedBy
          - fileSource
          - projectId
          - numLikes
          - reactions
          - versions
          - downloadURL
          - previewURL
          - thumbURL
          - relatedItems
          - commentsCount
          - commentsCountRead
          - categoryId
          items:
            type: string
          type: array
        style: form
      - explode: false
        in: query
        name: fields[companies]
        schema:
          enum:
          - id
          - name
          - logoUploadedToServer
          - logoImage
          items:
            type: string
          type: array
        style: form
      - explode: false
        in: query
        name: fields[comments]
        schema:
          enum:
          - id
          - objectType
          - objectId
          - title
          items:
            type: string
          type: array
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/lockdown.Response'
          description: 200 OK
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/view.ErrorResponse'
          description: 400 Bad Request
        "404":
          content: {}
          description: 404 Not Found (no data)
      summary: Get a specific lockdown.
      tags:
      - Lockdowns
      x-private: true
  /projects/api/v3/me/timers.json:
    get:
      description: Will get all your running timers or the person you are logged in
        as.
      operationId: GET_projects_api_v3_me_timers.json
      parameters:
      - description: filter by updated after date (deprecated, use updatedAfter)
        in: query
        name: updatedAfterDate
        schema:
          format: date-time
          type: string
      - description: filter by updated after date
        in: query
        name: updatedAfter
        schema:
          format: date-time
          type: string
      - description: filter by user id
        in: query
        name: userId
        schema:
          type: integer
      - description: filter by task id
        in: query
        name: taskId
        schema:
          type: integer
      - description: filter by project id
        in: query
        name: projectId
        schema:
          type: integer
      - description: |-
          number of items in a page
          default: 50
        in: query
        name: pageSize
        schema:
          type: integer
      - description: |-
          page number
          default: 1
        in: query
        name: page
        schema:
          type: integer
      - description: |-
          include deleted items
          default: false
        in: query
        name: showDeleted
        schema:
          type: boolean
      - description: |-
          enforce running timers only
          default: false
        in: query
        name: runningTimersOnly
        schema:
          type: boolean
      - description: include
        explode: false
        in: query
        name: include
        schema:
          enum:
          - projects
          - tasks
          - tasks.parentTasks
          - tasks.tasklists
          - users
          items:
            type: string
          type: array
        style: form
      - explode: false
        in: query
        name: fields[users]
        schema:
          enum:
          - id
          - firstName
          - lastName
          - email
          - companyId
          - isAdmin
          - type
          items:
            type: string
          type: array
        style: form
      - explode: false
        in: query
        name: fields[timers]
        schema:
          enum:
          - id
          - userId
          - taskId
          - projectId
          - description
          - running
          - billable
          - deleted
          - dateCreated
          - dateDeleted
          - duration
          - lastStartedAt
          - serverTime
          - intervals
          items:
            type: string
          type: array
        style: form
      - explode: false
        in: query
        name: fields[tasks]
        schema:
          enum:
          - id
          - name
          - dateUpdated
          - parentTaskId
          - isPrivate
          - status
          - tasklistId
          - startDate
          - dueDate
          items:
            type: string
          type: array
        style: form
      - explode: false
        in: query
        name: fields[tasklists]
        schema:
          enum:
          - id
          - name
          - projectId
          - milestoneId
          items:
            type: string
          type: array
        style: form
      - explode: false
        in: query
        name: fields[projects]
        schema:
          enum:
          - id
          - name
          items:
            type: string
          type: array
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/timer.TimersResponse'
          description: 200 OK
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/view.ErrorResponse'
          description: 400 Bad Request
      summary: Get all your running timers
      tags:
      - TimeTracking
    post:
      description: |-
        Creates a new timer. If there's already a timer running, it will stop this timer
        at default.
      operationId: POST_projects_api_v3_me_timers.json
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/timer.Request'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/timer.Response'
          description: 200 OK
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/timer.Response'
          description: 201 Created
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/view.ErrorResponse'
          description: 400 Bad Request
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/view.ErrorResponse'
          description: 403 Forbidden
      summary: Create a new timer
      tags:
      - TimeTracking
      x-codegen-request-body-name: timer.Request
  /projects/api/v3/me/timers/:id.json:
    delete:
      description: Delete an existing timer.
      operationId: DELETE_projects_api_v3_me_timers_:id.json
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/timer.DeleteRequest'
        required: true
      responses:
        "204":
          content: {}
          description: 204 No Content (no data)
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/view.ErrorResponse'
          description: 400 Bad Request
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/view.ErrorResponse'
          description: 403 Forbidden
        "404":
          content: {}
          description: 404 Not Found (no data)
      summary: Delete a timer by ID
      tags:
      - TimeTracking
      x-codegen-request-body-name: timer.DeleteRequest
    put:
      description: Edits the fields of a timer.
      operationId: PUT_projects_api_v3_me_timers_:id.json
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/timer.Request'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/timer.Response'
          description: 200 OK
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/view.ErrorResponse'
          description: 400 Bad Request
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/view.ErrorResponse'
          description: 403 Forbidden
        "404":
          content: {}
          description: 404 Not Found (no data)
      summary: Edits a timer
      tags:
      - TimeTracking
      x-codegen-request-body-name: timer.Request
  /projects/api/v3/me/timers/:id/complete.json:
    put:
      description: |-
        Complete an existing timer. If the timer is currently running, it is paused to create
        the timelog entry. When the timelog is created, the timer is deleted.
      operationId: PUT_projects_api_v3_me_timers_:id_complete.json
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/timer.Response'
          description: 200 OK
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/timer.Response'
          description: 201 Created
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/view.ErrorResponse'
          description: 400 Bad Request
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/view.ErrorResponse'
          description: 403 Forbidden
        "404":
          content: {}
          description: 404 Not Found (no data)
      summary: Complete a timer by ID
      tags:
      - TimeTracking
  /projects/api/v3/me/timers/:id/pause.json:
    put:
      description: Pause an existing timer.
      operationId: PUT_projects_api_v3_me_timers_:id_pause.json
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/timer.Response'
          description: 200 OK
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/view.ErrorResponse'
          description: 400 Bad Request
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/view.ErrorResponse'
          description: 403 Forbidden
        "404":
          content: {}
          description: 404 Not Found (no data)
      summary: Pause a timer by ID
      tags:
      - TimeTracking
  /projects/api/v3/me/timers/:id/resume.json:
    put:
      description: Resume an existing timer. If other timers are currently running,
        those timers are paused before resuming.
      operationId: PUT_projects_api_v3_me_timers_:id_resume.json
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/timer.Response'
          description: 200 OK
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/timer.Response'
          description: 201 Created
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/view.ErrorResponse'
          description: 400 Bad Request
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/view.ErrorResponse'
          description: 403 Forbidden
        "404":
          content: {}
          description: 404 Not Found (no data)
      summary: Resume a timer by ID
      tags:
      - TimeTracking
  /projects/api/v3/me/timers/:id/undelete.json:
    put:
      description: Undelete an existing timer.
      operationId: PUT_projects_api_v3_me_timers_:id_undelete.json
      responses:
        "204":
          content: {}
          description: 204 No Content (no data)
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/view.ErrorResponse'
          description: 400 Bad Request
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/view.ErrorResponse'
          description: 403 Forbidden
        "404":
          content: {}
          description: 404 Not Found (no data)
      summary: Undelete a timer by ID
      tags:
      - TimeTracking
  /projects/api/v3/messages/:id.json:
    patch:
      description: |-
        Update specific fields on a message. If the property `read` is sent with the
        value `true` all posts from this message will be marked as read.
      operationId: PATCH_projects_api_v3_messages_:id.json
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/message.Request'
        required: true
      responses:
        "204":
          content: {}
          description: 204 No Content (no data)
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/view.ErrorResponse'
          description: 400 Bad Request
      summary: Edit a message.
      tags:
      - Messages
      x-private: true
      x-codegen-request-body-name: message.Request
  /projects/api/v3/milestones.csv:
    get:
      description: |-
        Generates a milestone report in CSV format containing all milestones for the
        provided filters. Only the milestones that the logged-in user can access will
        be returned.
      operationId: GET_projects_api_v3_milestones.csv
      parameters:
      - description: filter by updated after date (deprecated, use updatedAfter)
        in: query
        name: updatedAfterDate
        schema:
          format: date-time
          type: string
      - description: filter by updated after date
        in: query
        name: updatedAfter
        schema:
          format: date-time
          type: string
      - description: filter by list of milestone status
        in: query
        name: status
        schema:
          enum:
          - all
          - new
          - reopened
          - completed
          - deleted
          - pending
          - incomplete
          - late
          - today
          - upcoming
          type: string
      - description: filter by milestone name and description
        in: query
        name: searchTerm
        schema:
          type: string
      - description: define the format of the report
        in: query
        name: reportFormat
        schema:
          type: string
      - description: filter by list of project status
        in: query
        name: projectStatuses
        schema:
          type: string
      - description: filter by project status
        in: query
        name: projectStatus
        schema:
          type: string
      - description: order mode
        in: query
        name: orderMode
        schema:
          default: asc
          enum:
          - asc
          - desc
          type: string
      - description: order by
        in: query
        name: orderBy
        schema:
          default: date
          enum:
          - date
          - dateonly
          - name
          - project
          - user
          - dateCreated
          - dateUpdated
          type: string
      - description: filter by due before date (deprecated, use dueBefore)
        in: query
        name: dueBeforeDate
        schema:
          format: date
          type: string
      - description: filter by due before date
        in: query
        name: dueBefore
        schema:
          format: date
          type: string
      - description: filter by due after date (deprecated, use dueAfter)
        in: query
        name: dueAfterDate
        schema:
          format: date
          type: string
      - description: filter by due after date
        in: query
        name: dueAfter
        schema:
          format: date
          type: string
      - description: filter by list of project health
        in: query
        name: projectHealths
        schema:
          type: integer
      - description: filter by list of project health (deprecated, use projectHealths)
        in: query
        name: projectHealth
        schema:
          type: integer
      - description: number of items in a page
        in: query
        name: pageSize
        schema:
          default: 50
          type: integer
      - description: page number
        in: query
        name: page
        schema:
          default: 1
          type: integer
      - description: show private milestones
        in: query
        name: showPrivate
        schema:
          default: true
          type: boolean
      - description: show percentages completed
        in: query
        name: showPercentageCompleted
        schema:
          type: boolean
      - description: include deleted items
        in: query
        name: showDeleted
        schema:
          default: false
          type: boolean
      - description: show attached tasklists
        in: query
        name: showAttachedTasklists
        schema:
          type: boolean
      - description: include companies and teams in the search term
        in: query
        name: searchCompaniesTeams
        schema:
          type: boolean
      - description: include assignees in the search
        in: query
        name: searchAssignees
        schema:
          type: boolean
      - description: include progress of each milestone
        in: query
        name: progress
        schema:
          default: false
          type: boolean
      - description: filter by starred projects only
        in: query
        name: onlyStarredProjects
        schema:
          type: boolean
      - description: filter by projects that the logged-in user is related
        in: query
        name: onlyMyProjects
        schema:
          default: false
          type: boolean
      - description: |-
          only include milestones from projects where the user is strictly a project admin.
          site admins have visibility to all projects.
        in: query
        name: onlyAdminProjects
        schema:
          type: boolean
      - description: match all milestone tags
        in: query
        name: matchAllTags
        schema:
          type: boolean
      - description: match all project tags
        in: query
        name: matchAllProjectTags
        schema:
          type: boolean
      - description: generate a report document
        in: query
        name: isReportDownload
        schema:
          type: boolean
      - description: include milestones latest update action
        in: query
        name: includeUpdate
        schema:
          type: boolean
      - description: include today when milestone status is upcoming
        in: query
        name: includeToday
        schema:
          default: true
          type: boolean
      - description: include team users to the responsible party ids
        in: query
        name: includeTeamUserIds
        schema:
          default: true
          type: boolean
      - description: include tags in the reports
        in: query
        name: includeTags
        schema:
          default: true
          type: boolean
      - description: include percentage of tasks completed for all linked tasklists
        in: query
        name: includeProgress
        schema:
          type: boolean
      - description: optional to include completed milestones
        in: query
        name: includeCompleted
        schema:
          type: boolean
      - description: include company users to the responsible party ids
        in: query
        name: includeCompanyUserIds
        schema:
          default: true
          type: boolean
      - description: include teams related to the responsible user ids
        in: query
        name: includeAssigneeTeams
        schema:
          type: boolean
      - description: include companies related to the responsible user ids
        in: query
        name: includeAssigneeCompanies
        schema:
          type: boolean
      - description: include archived projects
        in: query
        name: includeArchivedProjects
        schema:
          default: false
          type: boolean
      - description: convert emoji alias to unicode
        in: query
        name: emoji
        schema:
          default: true
          type: boolean
      - description: count unread comments
        in: query
        name: countUnreadComments
        schema:
          default: false
          type: boolean
      - description: enables the calendar style layout
        in: query
        name: calendar
        schema:
          default: false
          type: boolean
      - description: filter by milestone tag ids
        explode: false
        in: query
        name: tagIds
        schema:
          items:
            type: integer
          type: array
        style: form
      - description: filter by project tag ids
        explode: false
        in: query
        name: projectTagIds
        schema:
          items:
            type: integer
          type: array
        style: form
      - description: filter by project owner ids
        explode: false
        in: query
        name: projectOwnerIds
        schema:
          items:
            type: integer
          type: array
        style: form
      - description: filter by project ids
        explode: false
        in: query
        name: projectIds
        schema:
          items:
            type: integer
          type: array
        style: form
      - description: filter by company ids
        explode: false
        in: query
        name: projectCompanyIds
        schema:
          items:
            type: integer
          type: array
        style: form
      - description: filter by project category ids
        explode: false
        in: query
        name: projectCategoryIds
        schema:
          items:
            type: integer
          type: array
        style: form
      - description: include
        explode: false
        in: query
        name: include
        schema:
          enum:
          - projects
          - projects.companies
          - users
          - completedBy
          - createdBy
          - deletedBy
          - updatedBy
          - commentFollowers
          - changeFollowers
          - tags
          - tasklists
          - tasklists.tasks
          items:
            type: string
          type: array
        style: form
      - description: filter by ids
        explode: false
        in: query
        name: ids
        schema:
          items:
            type: integer
          type: array
        style: form
      - description: filter by followers' ids
        explode: false
        in: query
        name: followerIds
        schema:
          items:
            type: integer
          type: array
        style: form
      - explode: false
        in: query
        name: fields[users]
        schema:
          enum:
          - id
          - firstName
          - lastName
          - email
          - companyId
          - isAdmin
          - type
          items:
            type: string
          type: array
        style: form
      - explode: false
        in: query
        name: fields[tasks]
        schema:
          enum:
          - id
          - name
          - dateUpdated
          - parentTaskId
          - isPrivate
          - status
          - tasklistId
          - startDate
          - dueDate
          items:
            type: string
          type: array
        style: form
      - explode: false
        in: query
        name: fields[tasklists]
        schema:
          enum:
          - id
          - name
          - projectId
          - milestoneId
          items:
            type: string
          type: array
        style: form
      - explode: false
        in: query
        name: fields[tags]
        schema:
          enum:
          - id
          - name
          - color
          - count
          items:
            type: string
          type: array
        style: form
      - explode: false
        in: query
        name: fields[projects]
        schema:
          enum:
          - id
          - name
          items:
            type: string
          type: array
        style: form
      - explode: false
        in: query
        name: fields[milestones]
        schema:
          enum:
          - id
          - name
          - description
          - deadline
          - completed
          - projectId
          - createdOn
          - lastChangedOn
          - creatorUserId
          - reminder
          - private
          - lockdownId
          - status
          - completedOn
          - completerId
          - percentageComplete
          items:
            type: string
          type: array
        style: form
      - explode: false
        in: query
        name: fields[companies]
        schema:
          enum:
          - id
          - name
          - logoUploadedToServer
          - logoImage
          items:
            type: string
          type: array
        style: form
      - description: filter by creators' ids
        explode: false
        in: query
        name: creatorIds
        schema:
          items:
            type: integer
          type: array
        style: form
      - description: filter by assigned user ids
        explode: false
        in: query
        name: assignedToUserIds
        schema:
          items:
            type: integer
          type: array
        style: form
      - description: filter by assigned team ids
        explode: false
        in: query
        name: assignedToTeamIds
        schema:
          items:
            type: integer
          type: array
        style: form
      - description: filter by assigned company ids
        explode: false
        in: query
        name: assignedToCompanyIds
        schema:
          items:
            type: integer
          type: array
        style: form
      responses:
        "200":
          content: {}
          description: 200 OK (no data)
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/view.ErrorResponse'
            text/csv:
              schema:
                $ref: '#/components/schemas/view.ErrorResponse'
          description: 400 Bad Request
      summary: Generate milestone report in CSV format
      tags:
      - Milestones
  /projects/api/v3/milestones.html:
    get:
      description: |-
        Generates a milestone report in HTML format containing all milestones for the
        provided filters. Only the milestones that the logged-in user can access will
        be returned.
      operationId: GET_projects_api_v3_milestones.html
      parameters:
      - description: filter by updated after date (deprecated, use updatedAfter)
        in: query
        name: updatedAfterDate
        schema:
          format: date-time
          type: string
      - description: filter by updated after date
        in: query
        name: updatedAfter
        schema:
          format: date-time
          type: string
      - description: filter by list of milestone status
        in: query
        name: status
        schema:
          enum:
          - all
          - new
          - reopened
          - completed
          - deleted
          - pending
          - incomplete
          - late
          - today
          - upcoming
          type: string
      - description: filter by milestone name and description
        in: query
        name: searchTerm
        schema:
          type: string
      - description: define the format of the report
        in: query
        name: reportFormat
        schema:
          type: string
      - description: filter by list of project status
        in: query
        name: projectStatuses
        schema:
          type: string
      - description: filter by project status
        in: query
        name: projectStatus
        schema:
          type: string
      - description: order mode
        in: query
        name: orderMode
        schema:
          default: asc
          enum:
          - asc
          - desc
          type: string
      - description: order by
        in: query
        name: orderBy
        schema:
          default: date
          enum:
          - date
          - dateonly
          - name
          - project
          - user
          - dateCreated
          - dateUpdated
          type: string
      - description: filter by due before date (deprecated, use dueBefore)
        in: query
        name: dueBeforeDate
        schema:
          format: date
          type: string
      - description: filter by due before date
        in: query
        name: dueBefore
        schema:
          format: date
          type: string
      - description: filter by due after date (deprecated, use dueAfter)
        in: query
        name: dueAfterDate
        schema:
          format: date
          type: string
      - description: filter by due after date
        in: query
        name: dueAfter
        schema:
          format: date
          type: string
      - description: filter by list of project health
        in: query
        name: projectHealths
        schema:
          type: integer
      - description: filter by list of project health (deprecated, use projectHealths)
        in: query
        name: projectHealth
        schema:
          type: integer
      - description: number of items in a page
        in: query
        name: pageSize
        schema:
          default: 50
          type: integer
      - description: page number
        in: query
        name: page
        schema:
          default: 1
          type: integer
      - description: show private milestones
        in: query
        name: showPrivate
        schema:
          default: true
          type: boolean
      - description: show percentages completed
        in: query
        name: showPercentageCompleted
        schema:
          type: boolean
      - description: include deleted items
        in: query
        name: showDeleted
        schema:
          default: false
          type: boolean
      - description: show attached tasklists
        in: query
        name: showAttachedTasklists
        schema:
          type: boolean
      - description: include companies and teams in the search term
        in: query
        name: searchCompaniesTeams
        schema:
          type: boolean
      - description: include assignees in the search
        in: query
        name: searchAssignees
        schema:
          type: boolean
      - description: include progress of each milestone
        in: query
        name: progress
        schema:
          default: false
          type: boolean
      - description: filter by starred projects only
        in: query
        name: onlyStarredProjects
        schema:
          type: boolean
      - description: filter by projects that the logged-in user is related
        in: query
        name: onlyMyProjects
        schema:
          default: false
          type: boolean
      - description: |-
          only include milestones from projects where the user is strictly a project admin.
          site admins have visibility to all projects.
        in: query
        name: onlyAdminProjects
        schema:
          type: boolean
      - description: match all milestone tags
        in: query
        name: matchAllTags
        schema:
          type: boolean
      - description: match all project tags
        in: query
        name: matchAllProjectTags
        schema:
          type: boolean
      - description: generate a report document
        in: query
        name: isReportDownload
        schema:
          type: boolean
      - description: include milestones latest update action
        in: query
        name: includeUpdate
        schema:
          type: boolean
      - description: include today when milestone status is upcoming
        in: query
        name: includeToday
        schema:
          default: true
          type: boolean
      - description: include team users to the responsible party ids
        in: query
        name: includeTeamUserIds
        schema:
          default: true
          type: boolean
      - description: include tags in the reports
        in: query
        name: includeTags
        schema:
          default: true
          type: boolean
      - description: include percentage of tasks completed for all linked tasklists
        in: query
        name: includeProgress
        schema:
          type: boolean
      - description: optional to include completed milestones
        in: query
        name: includeCompleted
        schema:
          type: boolean
      - description: include company users to the responsible party ids
        in: query
        name: includeCompanyUserIds
        schema:
          default: true
          type: boolean
      - description: include teams related to the responsible user ids
        in: query
        name: includeAssigneeTeams
        schema:
          type: boolean
      - description: include companies related to the responsible user ids
        in: query
        name: includeAssigneeCompanies
        schema:
          type: boolean
      - description: include archived projects
        in: query
        name: includeArchivedProjects
        schema:
          default: false
          type: boolean
      - description: convert emoji alias to unicode
        in: query
        name: emoji
        schema:
          default: true
          type: boolean
      - description: count unread comments
        in: query
        name: countUnreadComments
        schema:
          default: false
          type: boolean
      - description: enables the calendar style layout
        in: query
        name: calendar
        schema:
          default: false
          type: boolean
      - description: filter by milestone tag ids
        explode: false
        in: query
        name: tagIds
        schema:
          items:
            type: integer
          type: array
        style: form
      - description: filter by project tag ids
        explode: false
        in: query
        name: projectTagIds
        schema:
          items:
            type: integer
          type: array
        style: form
      - description: filter by project owner ids
        explode: false
        in: query
        name: projectOwnerIds
        schema:
          items:
            type: integer
          type: array
        style: form
      - description: filter by project ids
        explode: false
        in: query
        name: projectIds
        schema:
          items:
            type: integer
          type: array
        style: form
      - description: filter by company ids
        explode: false
        in: query
        name: projectCompanyIds
        schema:
          items:
            type: integer
          type: array
        style: form
      - description: filter by project category ids
        explode: false
        in: query
        name: projectCategoryIds
        schema:
          items:
            type: integer
          type: array
        style: form
      - description: include
        explode: false
        in: query
        name: include
        schema:
          enum:
          - projects
          - projects.companies
          - users
          - completedBy
          - createdBy
          - deletedBy
          - updatedBy
          - commentFollowers
          - changeFollowers
          - tags
          - tasklists
          - tasklists.tasks
          items:
            type: string
          type: array
        style: form
      - description: filter by ids
        explode: false
        in: query
        name: ids
        schema:
          items:
            type: integer
          type: array
        style: form
      - description: filter by followers' ids
        explode: false
        in: query
        name: followerIds
        schema:
          items:
            type: integer
          type: array
        style: form
      - explode: false
        in: query
        name: fields[users]
        schema:
          enum:
          - id
          - firstName
          - lastName
          - email
          - companyId
          - isAdmin
          - type
          items:
            type: string
          type: array
        style: form
      - explode: false
        in: query
        name: fields[tasks]
        schema:
          enum:
          - id
          - name
          - dateUpdated
          - parentTaskId
          - isPrivate
          - status
          - tasklistId
          - startDate
          - dueDate
          items:
            type: string
          type: array
        style: form
      - explode: false
        in: query
        name: fields[tasklists]
        schema:
          enum:
          - id
          - name
          - projectId
          - milestoneId
          items:
            type: string
          type: array
        style: form
      - explode: false
        in: query
        name: fields[tags]
        schema:
          enum:
          - id
          - name
          - color
          - count
          items:
            type: string
          type: array
        style: form
      - explode: false
        in: query
        name: fields[projects]
        schema:
          enum:
          - id
          - name
          items:
            type: string
          type: array
        style: form
      - explode: false
        in: query
        name: fields[milestones]
        schema:
          enum:
          - id
          - name
          - description
          - deadline
          - completed
          - projectId
          - createdOn
          - lastChangedOn
          - creatorUserId
          - reminder
          - private
          - lockdownId
          - status
          - completedOn
          - completerId
          - percentageComplete
          items:
            type: string
          type: array
        style: form
      - explode: false
        in: query
        name: fields[companies]
        schema:
          enum:
          - id
          - name
          - logoUploadedToServer
          - logoImage
          items:
            type: string
          type: array
        style: form
      - description: filter by creators' ids
        explode: false
        in: query
        name: creatorIds
        schema:
          items:
            type: integer
          type: array
        style: form
      - description: filter by assigned user ids
        explode: false
        in: query
        name: assignedToUserIds
        schema:
          items:
            type: integer
          type: array
        style: form
      - description: filter by assigned team ids
        explode: false
        in: query
        name: assignedToTeamIds
        schema:
          items:
            type: integer
          type: array
        style: form
      - description: filter by assigned company ids
        explode: false
        in: query
        name: assignedToCompanyIds
        schema:
          items:
            type: integer
          type: array
        style: form
      responses:
        "200":
          content: {}
          description: 200 OK (no data)
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/view.ErrorResponse'
            text/html:
              schema:
                $ref: '#/components/schemas/view.ErrorResponse'
          description: 400 Bad Request
      summary: Generate milestone report in HTML format
      tags:
      - Milestones
  /projects/api/v3/milestones.json:
    get:
      description: |-
        All milestones are returned on projects that the authenticated user is
        associated with. You can use the provided filters to return only those
        milestones that are incomplete, completed, upcoming or late. All milestones
        are returning in this call. This call uses pagination, returning 100
        milestones per page by default.
      operationId: GET_projects_api_v3_milestones.json
      parameters:
      - description: filter by updated after date (deprecated, use updatedAfter)
        in: query
        name: updatedAfterDate
        schema:
          format: date-time
          type: string
      - description: filter by updated after date
        in: query
        name: updatedAfter
        schema:
          format: date-time
          type: string
      - description: filter by list of milestone status
        in: query
        name: status
        schema:
          enum:
          - all
          - new
          - reopened
          - completed
          - deleted
          - pending
          - incomplete
          - late
          - today
          - upcoming
          type: string
      - description: filter by milestone name and description
        in: query
        name: searchTerm
        schema:
          type: string
      - description: define the format of the report
        in: query
        name: reportFormat
        schema:
          type: string
      - description: filter by list of project status
        in: query
        name: projectStatuses
        schema:
          type: string
      - description: filter by project status
        in: query
        name: projectStatus
        schema:
          type: string
      - description: order mode
        in: query
        name: orderMode
        schema:
          default: asc
          enum:
          - asc
          - desc
          type: string
      - description: order by
        in: query
        name: orderBy
        schema:
          default: date
          enum:
          - date
          - dateonly
          - name
          - project
          - user
          - dateCreated
          - dateUpdated
          type: string
      - description: filter by due before date (deprecated, use dueBefore)
        in: query
        name: dueBeforeDate
        schema:
          format: date
          type: string
      - description: filter by due before date
        in: query
        name: dueBefore
        schema:
          format: date
          type: string
      - description: filter by due after date (deprecated, use dueAfter)
        in: query
        name: dueAfterDate
        schema:
          format: date
          type: string
      - description: filter by due after date
        in: query
        name: dueAfter
        schema:
          format: date
          type: string
      - description: filter by list of project health
        in: query
        name: projectHealths
        schema:
          type: integer
      - description: filter by list of project health (deprecated, use projectHealths)
        in: query
        name: projectHealth
        schema:
          type: integer
      - description: number of items in a page
        in: query
        name: pageSize
        schema:
          default: 50
          type: integer
      - description: page number
        in: query
        name: page
        schema:
          default: 1
          type: integer
      - description: show private milestones
        in: query
        name: showPrivate
        schema:
          default: true
          type: boolean
      - description: show percentages completed
        in: query
        name: showPercentageCompleted
        schema:
          type: boolean
      - description: include deleted items
        in: query
        name: showDeleted
        schema:
          default: false
          type: boolean
      - description: show attached tasklists
        in: query
        name: showAttachedTasklists
        schema:
          type: boolean
      - description: include companies and teams in the search term
        in: query
        name: searchCompaniesTeams
        schema:
          type: boolean
      - description: include assignees in the search
        in: query
        name: searchAssignees
        schema:
          type: boolean
      - description: include progress of each milestone
        in: query
        name: progress
        schema:
          default: false
          type: boolean
      - description: filter by starred projects only
        in: query
        name: onlyStarredProjects
        schema:
          type: boolean
      - description: filter by projects that the logged-in user is related
        in: query
        name: onlyMyProjects
        schema:
          default: false
          type: boolean
      - description: |-
          only include milestones from projects where the user is strictly a project admin.
          site admins have visibility to all projects.
        in: query
        name: onlyAdminProjects
        schema:
          type: boolean
      - description: match all milestone tags
        in: query
        name: matchAllTags
        schema:
          type: boolean
      - description: match all project tags
        in: query
        name: matchAllProjectTags
        schema:
          type: boolean
      - description: generate a report document
        in: query
        name: isReportDownload
        schema:
          type: boolean
      - description: include milestones latest update action
        in: query
        name: includeUpdate
        schema:
          type: boolean
      - description: include today when milestone status is upcoming
        in: query
        name: includeToday
        schema:
          default: true
          type: boolean
      - description: include team users to the responsible party ids
        in: query
        name: includeTeamUserIds
        schema:
          default: true
          type: boolean
      - description: include tags in the reports
        in: query
        name: includeTags
        schema:
          default: true
          type: boolean
      - description: include percentage of tasks completed for all linked tasklists
        in: query
        name: includeProgress
        schema:
          type: boolean
      - description: optional to include completed milestones
        in: query
        name: includeCompleted
        schema:
          type: boolean
      - description: include company users to the responsible party ids
        in: query
        name: includeCompanyUserIds
        schema:
          default: true
          type: boolean
      - description: include teams related to the responsible user ids
        in: query
        name: includeAssigneeTeams
        schema:
          type: boolean
      - description: include companies related to the responsible user ids
        in: query
        name: includeAssigneeCompanies
        schema:
          type: boolean
      - description: include archived projects
        in: query
        name: includeArchivedProjects
        schema:
          default: false
          type: boolean
      - description: convert emoji alias to unicode
        in: query
        name: emoji
        schema:
          default: true
          type: boolean
      - description: count unread comments
        in: query
        name: countUnreadComments
        schema:
          default: false
          type: boolean
      - description: enables the calendar style layout
        in: query
        name: calendar
        schema:
          default: false
          type: boolean
      - description: filter by milestone tag ids
        explode: false
        in: query
        name: tagIds
        schema:
          items:
            type: integer
          type: array
        style: form
      - description: filter by project tag ids
        explode: false
        in: query
        name: projectTagIds
        schema:
          items:
            type: integer
          type: array
        style: form
      - description: filter by project owner ids
        explode: false
        in: query
        name: projectOwnerIds
        schema:
          items:
            type: integer
          type: array
        style: form
      - description: filter by project ids
        explode: false
        in: query
        name: projectIds
        schema:
          items:
            type: integer
          type: array
        style: form
      - description: filter by company ids
        explode: false
        in: query
        name: projectCompanyIds
        schema:
          items:
            type: integer
          type: array
        style: form
      - description: filter by project category ids
        explode: false
        in: query
        name: projectCategoryIds
        schema:
          items:
            type: integer
          type: array
        style: form
      - description: include
        explode: false
        in: query
        name: include
        schema:
          enum:
          - projects
          - projects.companies
          - users
          - completedBy
          - createdBy
          - deletedBy
          - updatedBy
          - commentFollowers
          - changeFollowers
          - tags
          - tasklists
          - tasklists.tasks
          items:
            type: string
          type: array
        style: form
      - description: filter by ids
        explode: false
        in: query
        name: ids
        schema:
          items:
            type: integer
          type: array
        style: form
      - description: filter by followers' ids
        explode: false
        in: query
        name: followerIds
        schema:
          items:
            type: integer
          type: array
        style: form
      - explode: false
        in: query
        name: fields[users]
        schema:
          enum:
          - id
          - firstName
          - lastName
          - email
          - companyId
          - isAdmin
          - type
          items:
            type: string
          type: array
        style: form
      - explode: false
        in: query
        name: fields[tasks]
        schema:
          enum:
          - id
          - name
          - dateUpdated
          - parentTaskId
          - isPrivate
          - status
          - tasklistId
          - startDate
          - dueDate
          items:
            type: string
          type: array
        style: form
      - explode: false
        in: query
        name: fields[tasklists]
        schema:
          enum:
          - id
          - name
          - projectId
          - milestoneId
          items:
            type: string
          type: array
        style: form
      - explode: false
        in: query
        name: fields[tags]
        schema:
          enum:
          - id
          - name
          - color
          - count
          items:
            type: string
          type: array
        style: form
      - explode: false
        in: query
        name: fields[projects]
        schema:
          enum:
          - id
          - name
          items:
            type: string
          type: array
        style: form
      - explode: false
        in: query
        name: fields[milestones]
        schema:
          enum:
          - id
          - name
          - description
          - deadline
          - completed
          - projectId
          - createdOn
          - lastChangedOn
          - creatorUserId
          - reminder
          - private
          - lockdownId
          - status
          - completedOn
          - completerId
          - percentageComplete
          items:
            type: string
          type: array
        style: form
      - explode: false
        in: query
        name: fields[companies]
        schema:
          enum:
          - id
          - name
          - logoUploadedToServer
          - logoImage
          items:
            type: string
          type: array
        style: form
      - description: filter by creators' ids
        explode: false
        in: query
        name: creatorIds
        schema:
          items:
            type: integer
          type: array
        style: form
      - description: filter by assigned user ids
        explode: false
        in: query
        name: assignedToUserIds
        schema:
          items:
            type: integer
          type: array
        style: form
      - description: filter by assigned team ids
        explode: false
        in: query
        name: assignedToTeamIds
        schema:
          items:
            type: integer
          type: array
        style: form
      - description: filter by assigned company ids
        explode: false
        in: query
        name: assignedToCompanyIds
        schema:
          items:
            type: integer
          type: array
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/milestone.MilestonesResponse'
          description: 200 OK
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/view.ErrorResponse'
          description: 400 Bad Request
      summary: Get all milestones
      tags:
      - Milestones
  /projects/api/v3/milestones.pdf:
    get:
      description: |-
        Generates a milestone report in PDF format containing all milestones for the
        provided filters. Only the milestones that the logged-in user can access will
        be returned.
      operationId: GET_projects_api_v3_milestones.pdf
      parameters:
      - description: filter by updated after date (deprecated, use updatedAfter)
        in: query
        name: updatedAfterDate
        schema:
          format: date-time
          type: string
      - description: filter by updated after date
        in: query
        name: updatedAfter
        schema:
          format: date-time
          type: string
      - description: filter by list of milestone status
        in: query
        name: status
        schema:
          enum:
          - all
          - new
          - reopened
          - completed
          - deleted
          - pending
          - incomplete
          - late
          - today
          - upcoming
          type: string
      - description: filter by milestone name and description
        in: query
        name: searchTerm
        schema:
          type: string
      - description: define the format of the report
        in: query
        name: reportFormat
        schema:
          type: string
      - description: filter by list of project status
        in: query
        name: projectStatuses
        schema:
          type: string
      - description: filter by project status
        in: query
        name: projectStatus
        schema:
          type: string
      - description: order mode
        in: query
        name: orderMode
        schema:
          default: asc
          enum:
          - asc
          - desc
          type: string
      - description: order by
        in: query
        name: orderBy
        schema:
          default: date
          enum:
          - date
          - dateonly
          - name
          - project
          - user
          - dateCreated
          - dateUpdated
          type: string
      - description: filter by due before date (deprecated, use dueBefore)
        in: query
        name: dueBeforeDate
        schema:
          format: date
          type: string
      - description: filter by due before date
        in: query
        name: dueBefore
        schema:
          format: date
          type: string
      - description: filter by due after date (deprecated, use dueAfter)
        in: query
        name: dueAfterDate
        schema:
          format: date
          type: string
      - description: filter by due after date
        in: query
        name: dueAfter
        schema:
          format: date
          type: string
      - description: filter by list of project health
        in: query
        name: projectHealths
        schema:
          type: integer
      - description: filter by list of project health (deprecated, use projectHealths)
        in: query
        name: projectHealth
        schema:
          type: integer
      - description: number of items in a page
        in: query
        name: pageSize
        schema:
          default: 50
          type: integer
      - description: page number
        in: query
        name: page
        schema:
          default: 1
          type: integer
      - description: show private milestones
        in: query
        name: showPrivate
        schema:
          default: true
          type: boolean
      - description: show percentages completed
        in: query
        name: showPercentageCompleted
        schema:
          type: boolean
      - description: include deleted items
        in: query
        name: showDeleted
        schema:
          default: false
          type: boolean
      - description: show attached tasklists
        in: query
        name: showAttachedTasklists
        schema:
          type: boolean
      - description: include companies and teams in the search term
        in: query
        name: searchCompaniesTeams
        schema:
          type: boolean
      - description: include assignees in the search
        in: query
        name: searchAssignees
        schema:
          type: boolean
      - description: include progress of each milestone
        in: query
        name: progress
        schema:
          default: false
          type: boolean
      - description: filter by starred projects only
        in: query
        name: onlyStarredProjects
        schema:
          type: boolean
      - description: filter by projects that the logged-in user is related
        in: query
        name: onlyMyProjects
        schema:
          default: false
          type: boolean
      - description: |-
          only include milestones from projects where the user is strictly a project admin.
          site admins have visibility to all projects.
        in: query
        name: onlyAdminProjects
        schema:
          type: boolean
      - description: match all milestone tags
        in: query
        name: matchAllTags
        schema:
          type: boolean
      - description: match all project tags
        in: query
        name: matchAllProjectTags
        schema:
          type: boolean
      - description: generate a report document
        in: query
        name: isReportDownload
        schema:
          type: boolean
      - description: include milestones latest update action
        in: query
        name: includeUpdate
        schema:
          type: boolean
      - description: include today when milestone status is upcoming
        in: query
        name: includeToday
        schema:
          default: true
          type: boolean
      - description: include team users to the responsible party ids
        in: query
        name: includeTeamUserIds
        schema:
          default: true
          type: boolean
      - description: include tags in the reports
        in: query
        name: includeTags
        schema:
          default: true
          type: boolean
      - description: include percentage of tasks completed for all linked tasklists
        in: query
        name: includeProgress
        schema:
          type: boolean
      - description: optional to include completed milestones
        in: query
        name: includeCompleted
        schema:
          type: boolean
      - description: include company users to the responsible party ids
        in: query
        name: includeCompanyUserIds
        schema:
          default: true
          type: boolean
      - description: include teams related to the responsible user ids
        in: query
        name: includeAssigneeTeams
        schema:
          type: boolean
      - description: include companies related to the responsible user ids
        in: query
        name: includeAssigneeCompanies
        schema:
          type: boolean
      - description: include archived projects
        in: query
        name: includeArchivedProjects
        schema:
          default: false
          type: boolean
      - description: convert emoji alias to unicode
        in: query
        name: emoji
        schema:
          default: true
          type: boolean
      - description: count unread comments
        in: query
        name: countUnreadComments
        schema:
          default: false
          type: boolean
      - description: enables the calendar style layout
        in: query
        name: calendar
        schema:
          default: false
          type: boolean
      - description: filter by milestone tag ids
        explode: false
        in: query
        name: tagIds
        schema:
          items:
            type: integer
          type: array
        style: form
      - description: filter by project tag ids
        explode: false
        in: query
        name: projectTagIds
        schema:
          items:
            type: integer
          type: array
        style: form
      - description: filter by project owner ids
        explode: false
        in: query
        name: projectOwnerIds
        schema:
          items:
            type: integer
          type: array
        style: form
      - description: filter by project ids
        explode: false
        in: query
        name: projectIds
        schema:
          items:
            type: integer
          type: array
        style: form
      - description: filter by company ids
        explode: false
        in: query
        name: projectCompanyIds
        schema:
          items:
            type: integer
          type: array
        style: form
      - description: filter by project category ids
        explode: false
        in: query
        name: projectCategoryIds
        schema:
          items:
            type: integer
          type: array
        style: form
      - description: include
        explode: false
        in: query
        name: include
        schema:
          enum:
          - projects
          - projects.companies
          - users
          - completedBy
          - createdBy
          - deletedBy
          - updatedBy
          - commentFollowers
          - changeFollowers
          - tags
          - tasklists
          - tasklists.tasks
          items:
            type: string
          type: array
        style: form
      - description: filter by ids
        explode: false
        in: query
        name: ids
        schema:
          items:
            type: integer
          type: array
        style: form
      - description: filter by followers' ids
        explode: false
        in: query
        name: followerIds
        schema:
          items:
            type: integer
          type: array
        style: form
      - explode: false
        in: query
        name: fields[users]
        schema:
          enum:
          - id
          - firstName
          - lastName
          - email
          - companyId
          - isAdmin
          - type
          items:
            type: string
          type: array
        style: form
      - explode: false
        in: query
        name: fields[tasks]
        schema:
          enum:
          - id
          - name
          - dateUpdated
          - parentTaskId
          - isPrivate
          - status
          - tasklistId
          - startDate
          - dueDate
          items:
            type: string
          type: array
        style: form
      - explode: false
        in: query
        name: fields[tasklists]
        schema:
          enum:
          - id
          - name
          - projectId
          - milestoneId
          items:
            type: string
          type: array
        style: form
      - explode: false
        in: query
        name: fields[tags]
        schema:
          enum:
          - id
          - name
          - color
          - count
          items:
            type: string
          type: array
        style: form
      - explode: false
        in: query
        name: fields[projects]
        schema:
          enum:
          - id
          - name
          items:
            type: string
          type: array
        style: form
      - explode: false
        in: query
        name: fields[milestones]
        schema:
          enum:
          - id
          - name
          - description
          - deadline
          - completed
          - projectId
          - createdOn
          - lastChangedOn
          - creatorUserId
          - reminder
          - private
          - lockdownId
          - status
          - completedOn
          - completerId
          - percentageComplete
          items:
            type: string
          type: array
        style: form
      - explode: false
        in: query
        name: fields[companies]
        schema:
          enum:
          - id
          - name
          - logoUploadedToServer
          - logoImage
          items:
            type: string
          type: array
        style: form
      - description: filter by creators' ids
        explode: false
        in: query
        name: creatorIds
        schema:
          items:
            type: integer
          type: array
        style: form
      - description: filter by assigned user ids
        explode: false
        in: query
        name: assignedToUserIds
        schema:
          items:
            type: integer
          type: array
        style: form
      - description: filter by assigned team ids
        explode: false
        in: query
        name: assignedToTeamIds
        schema:
          items:
            type: integer
          type: array
        style: form
      - description: filter by assigned company ids
        explode: false
        in: query
        name: assignedToCompanyIds
        schema:
          items:
            type: integer
          type: array
        style: form
      responses:
        "200":
          content: {}
          description: 200 OK (no data)
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/view.ErrorResponse'
            application/pdf:
              schema:
                $ref: '#/components/schemas/view.ErrorResponse'
          description: 400 Bad Request
      summary: Generate milestone report in PDF format
      tags:
      - Milestones
  /projects/api/v3/milestones.xlsx:
    get:
      description: |-
        Generates a milestone report in XLSX format containing all milestones for the
        provided filters. Only the milestones that the logged-in user can access will
        be returned.
      operationId: GET_projects_api_v3_milestones.xlsx
      parameters:
      - description: filter by updated after date (deprecated, use updatedAfter)
        in: query
        name: updatedAfterDate
        schema:
          format: date-time
          type: string
      - description: filter by updated after date
        in: query
        name: updatedAfter
        schema:
          format: date-time
          type: string
      - description: filter by list of milestone status
        in: query
        name: status
        schema:
          enum:
          - all
          - new
          - reopened
          - completed
          - deleted
          - pending
          - incomplete
          - late
          - today
          - upcoming
          type: string
      - description: filter by milestone name and description
        in: query
        name: searchTerm
        schema:
          type: string
      - description: define the format of the report
        in: query
        name: reportFormat
        schema:
          type: string
      - description: filter by list of project status
        in: query
        name: projectStatuses
        schema:
          type: string
      - description: filter by project status
        in: query
        name: projectStatus
        schema:
          type: string
      - description: order mode
        in: query
        name: orderMode
        schema:
          default: asc
          enum:
          - asc
          - desc
          type: string
      - description: order by
        in: query
        name: orderBy
        schema:
          default: date
          enum:
          - date
          - dateonly
          - name
          - project
          - user
          - dateCreated
          - dateUpdated
          type: string
      - description: filter by due before date (deprecated, use dueBefore)
        in: query
        name: dueBeforeDate
        schema:
          format: date
          type: string
      - description: filter by due before date
        in: query
        name: dueBefore
        schema:
          format: date
          type: string
      - description: filter by due after date (deprecated, use dueAfter)
        in: query
        name: dueAfterDate
        schema:
          format: date
          type: string
      - description: filter by due after date
        in: query
        name: dueAfter
        schema:
          format: date
          type: string
      - description: filter by list of project health
        in: query
        name: projectHealths
        schema:
          type: integer
      - description: filter by list of project health (deprecated, use projectHealths)
        in: query
        name: projectHealth
        schema:
          type: integer
      - description: number of items in a page
        in: query
        name: pageSize
        schema:
          default: 50
          type: integer
      - description: page number
        in: query
        name: page
        schema:
          default: 1
          type: integer
      - description: show private milestones
        in: query
        name: showPrivate
        schema:
          default: true
          type: boolean
      - description: show percentages completed
        in: query
        name: showPercentageCompleted
        schema:
          type: boolean
      - description: include deleted items
        in: query
        name: showDeleted
        schema:
          default: false
          type: boolean
      - description: show attached tasklists
        in: query
        name: showAttachedTasklists
        schema:
          type: boolean
      - description: include companies and teams in the search term
        in: query
        name: searchCompaniesTeams
        schema:
          type: boolean
      - description: include assignees in the search
        in: query
        name: searchAssignees
        schema:
          type: boolean
      - description: include progress of each milestone
        in: query
        name: progress
        schema:
          default: false
          type: boolean
      - description: filter by starred projects only
        in: query
        name: onlyStarredProjects
        schema:
          type: boolean
      - description: filter by projects that the logged-in user is related
        in: query
        name: onlyMyProjects
        schema:
          default: false
          type: boolean
      - description: |-
          only include milestones from projects where the user is strictly a project admin.
          site admins have visibility to all projects.
        in: query
        name: onlyAdminProjects
        schema:
          type: boolean
      - description: match all milestone tags
        in: query
        name: matchAllTags
        schema:
          type: boolean
      - description: match all project tags
        in: query
        name: matchAllProjectTags
        schema:
          type: boolean
      - description: generate a report document
        in: query
        name: isReportDownload
        schema:
          type: boolean
      - description: include milestones latest update action
        in: query
        name: includeUpdate
        schema:
          type: boolean
      - description: include today when milestone status is upcoming
        in: query
        name: includeToday
        schema:
          default: true
          type: boolean
      - description: include team users to the responsible party ids
        in: query
        name: includeTeamUserIds
        schema:
          default: true
          type: boolean
      - description: include tags in the reports
        in: query
        name: includeTags
        schema:
          default: true
          type: boolean
      - description: include percentage of tasks completed for all linked tasklists
        in: query
        name: includeProgress
        schema:
          type: boolean
      - description: optional to include completed milestones
        in: query
        name: includeCompleted
        schema:
          type: boolean
      - description: include company users to the responsible party ids
        in: query
        name: includeCompanyUserIds
        schema:
          default: true
          type: boolean
      - description: include teams related to the responsible user ids
        in: query
        name: includeAssigneeTeams
        schema:
          type: boolean
      - description: include companies related to the responsible user ids
        in: query
        name: includeAssigneeCompanies
        schema:
          type: boolean
      - description: include archived projects
        in: query
        name: includeArchivedProjects
        schema:
          default: false
          type: boolean
      - description: convert emoji alias to unicode
        in: query
        name: emoji
        schema:
          default: true
          type: boolean
      - description: count unread comments
        in: query
        name: countUnreadComments
        schema:
          default: false
          type: boolean
      - description: enables the calendar style layout
        in: query
        name: calendar
        schema:
          default: false
          type: boolean
      - description: filter by milestone tag ids
        explode: false
        in: query
        name: tagIds
        schema:
          items:
            type: integer
          type: array
        style: form
      - description: filter by project tag ids
        explode: false
        in: query
        name: projectTagIds
        schema:
          items:
            type: integer
          type: array
        style: form
      - description: filter by project owner ids
        explode: false
        in: query
        name: projectOwnerIds
        schema:
          items:
            type: integer
          type: array
        style: form
      - description: filter by project ids
        explode: false
        in: query
        name: projectIds
        schema:
          items:
            type: integer
          type: array
        style: form
      - description: filter by company ids
        explode: false
        in: query
        name: projectCompanyIds
        schema:
          items:
            type: integer
          type: array
        style: form
      - description: filter by project category ids
        explode: false
        in: query
        name: projectCategoryIds
        schema:
          items:
            type: integer
          type: array
        style: form
      - description: include
        explode: false
        in: query
        name: include
        schema:
          enum:
          - projects
          - projects.companies
          - users
          - completedBy
          - createdBy
          - deletedBy
          - updatedBy
          - commentFollowers
          - changeFollowers
          - tags
          - tasklists
          - tasklists.tasks
          items:
            type: string
          type: array
        style: form
      - description: filter by ids
        explode: false
        in: query
        name: ids
        schema:
          items:
            type: integer
          type: array
        style: form
      - description: filter by followers' ids
        explode: false
        in: query
        name: followerIds
        schema:
          items:
            type: integer
          type: array
        style: form
      - explode: false
        in: query
        name: fields[users]
        schema:
          enum:
          - id
          - firstName
          - lastName
          - email
          - companyId
          - isAdmin
          - type
          items:
            type: string
          type: array
        style: form
      - explode: false
        in: query
        name: fields[tasks]
        schema:
          enum:
          - id
          - name
          - dateUpdated
          - parentTaskId
          - isPrivate
          - status
          - tasklistId
          - startDate
          - dueDate
          items:
            type: string
          type: array
        style: form
      - explode: false
        in: query
        name: fields[tasklists]
        schema:
          enum:
          - id
          - name
          - projectId
          - milestoneId
          items:
            type: string
          type: array
        style: form
      - explode: false
        in: query
        name: fields[tags]
        schema:
          enum:
          - id
          - name
          - color
          - count
          items:
            type: string
          type: array
        style: form
      - explode: false
        in: query
        name: fields[projects]
        schema:
          enum:
          - id
          - name
          items:
            type: string
          type: array
        style: form
      - explode: false
        in: query
        name: fields[milestones]
        schema:
          enum:
          - id
          - name
          - description
          - deadline
          - completed
          - projectId
          - createdOn
          - lastChangedOn
          - creatorUserId
          - reminder
          - private
          - lockdownId
          - status
          - completedOn
          - completerId
          - percentageComplete
          items:
            type: string
          type: array
        style: form
      - explode: false
        in: query
        name: fields[companies]
        schema:
          enum:
          - id
          - name
          - logoUploadedToServer
          - logoImage
          items:
            type: string
          type: array
        style: form
      - description: filter by creators' ids
        explode: false
        in: query
        name: creatorIds
        schema:
          items:
            type: integer
          type: array
        style: form
      - description: filter by assigned user ids
        explode: false
        in: query
        name: assignedToUserIds
        schema:
          items:
            type: integer
          type: array
        style: form
      - description: filter by assigned team ids
        explode: false
        in: query
        name: assignedToTeamIds
        schema:
          items:
            type: integer
          type: array
        style: form
      - description: filter by assigned company ids
        explode: false
        in: query
        name: assignedToCompanyIds
        schema:
          items:
            type: integer
          type: array
        style: form
      responses:
        "200":
          content: {}
          description: 200 OK (no data)
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/view.ErrorResponse'
            application/vnd.openxmlformats-officedocument.spreadsheetml.sheet:
              schema:
                $ref: '#/components/schemas/view.ErrorResponse'
          description: 400 Bad Request
      summary: Generate milestone report in XLSX format
      tags:
      - Milestones
  /projects/api/v3/milestones/:id.json:
    get:
      description: This returns all details about an individual milestone.
      operationId: GET_projects_api_v3_milestones_:id.json
      parameters:
      - description: filter by updated after date (deprecated, use updatedAfter)
        in: query
        name: updatedAfterDate
        schema:
          format: date-time
          type: string
      - description: filter by updated after date
        in: query
        name: updatedAfter
        schema:
          format: date-time
          type: string
      - description: filter by list of milestone status
        in: query
        name: status
        schema:
          enum:
          - all
          - new
          - reopened
          - completed
          - deleted
          - pending
          - incomplete
          - late
          - today
          - upcoming
          type: string
      - description: filter by milestone name and description
        in: query
        name: searchTerm
        schema:
          type: string
      - description: define the format of the report
        in: query
        name: reportFormat
        schema:
          type: string
      - description: filter by list of project status
        in: query
        name: projectStatuses
        schema:
          type: string
      - description: filter by project status
        in: query
        name: projectStatus
        schema:
          type: string
      - description: order mode
        in: query
        name: orderMode
        schema:
          default: asc
          enum:
          - asc
          - desc
          type: string
      - description: order by
        in: query
        name: orderBy
        schema:
          default: date
          enum:
          - date
          - dateonly
          - name
          - project
          - user
          - dateCreated
          - dateUpdated
          type: string
      - description: filter by due before date (deprecated, use dueBefore)
        in: query
        name: dueBeforeDate
        schema:
          format: date
          type: string
      - description: filter by due before date
        in: query
        name: dueBefore
        schema:
          format: date
          type: string
      - description: filter by due after date (deprecated, use dueAfter)
        in: query
        name: dueAfterDate
        schema:
          format: date
          type: string
      - description: filter by due after date
        in: query
        name: dueAfter
        schema:
          format: date
          type: string
      - description: filter by list of project health
        in: query
        name: projectHealths
        schema:
          type: integer
      - description: filter by list of project health (deprecated, use projectHealths)
        in: query
        name: projectHealth
        schema:
          type: integer
      - description: number of items in a page
        in: query
        name: pageSize
        schema:
          default: 50
          type: integer
      - description: page number
        in: query
        name: page
        schema:
          default: 1
          type: integer
      - description: show private milestones
        in: query
        name: showPrivate
        schema:
          default: true
          type: boolean
      - description: show percentages completed
        in: query
        name: showPercentageCompleted
        schema:
          type: boolean
      - description: include deleted items
        in: query
        name: showDeleted
        schema:
          default: false
          type: boolean
      - description: show attached tasklists
        in: query
        name: showAttachedTasklists
        schema:
          type: boolean
      - description: include companies and teams in the search term
        in: query
        name: searchCompaniesTeams
        schema:
          type: boolean
      - description: include assignees in the search
        in: query
        name: searchAssignees
        schema:
          type: boolean
      - description: include progress of each milestone
        in: query
        name: progress
        schema:
          default: false
          type: boolean
      - description: filter by starred projects only
        in: query
        name: onlyStarredProjects
        schema:
          type: boolean
      - description: filter by projects that the logged-in user is related
        in: query
        name: onlyMyProjects
        schema:
          default: false
          type: boolean
      - description: |-
          only include milestones from projects where the user is strictly a project admin.
          site admins have visibility to all projects.
        in: query
        name: onlyAdminProjects
        schema:
          type: boolean
      - description: match all milestone tags
        in: query
        name: matchAllTags
        schema:
          type: boolean
      - description: match all project tags
        in: query
        name: matchAllProjectTags
        schema:
          type: boolean
      - description: generate a report document
        in: query
        name: isReportDownload
        schema:
          type: boolean
      - description: include milestones latest update action
        in: query
        name: includeUpdate
        schema:
          type: boolean
      - description: include today when milestone status is upcoming
        in: query
        name: includeToday
        schema:
          default: true
          type: boolean
      - description: include team users to the responsible party ids
        in: query
        name: includeTeamUserIds
        schema:
          default: true
          type: boolean
      - description: include tags in the reports
        in: query
        name: includeTags
        schema:
          default: true
          type: boolean
      - description: include percentage of tasks completed for all linked tasklists
        in: query
        name: includeProgress
        schema:
          type: boolean
      - description: optional to include completed milestones
        in: query
        name: includeCompleted
        schema:
          type: boolean
      - description: include company users to the responsible party ids
        in: query
        name: includeCompanyUserIds
        schema:
          default: true
          type: boolean
      - description: include teams related to the responsible user ids
        in: query
        name: includeAssigneeTeams
        schema:
          type: boolean
      - description: include companies related to the responsible user ids
        in: query
        name: includeAssigneeCompanies
        schema:
          type: boolean
      - description: include archived projects
        in: query
        name: includeArchivedProjects
        schema:
          default: false
          type: boolean
      - description: convert emoji alias to unicode
        in: query
        name: emoji
        schema:
          default: true
          type: boolean
      - description: count unread comments
        in: query
        name: countUnreadComments
        schema:
          default: false
          type: boolean
      - description: enables the calendar style layout
        in: query
        name: calendar
        schema:
          default: false
          type: boolean
      - description: filter by milestone tag ids
        explode: false
        in: query
        name: tagIds
        schema:
          items:
            type: integer
          type: array
        style: form
      - description: filter by project tag ids
        explode: false
        in: query
        name: projectTagIds
        schema:
          items:
            type: integer
          type: array
        style: form
      - description: filter by project owner ids
        explode: false
        in: query
        name: projectOwnerIds
        schema:
          items:
            type: integer
          type: array
        style: form
      - description: filter by project ids
        explode: false
        in: query
        name: projectIds
        schema:
          items:
            type: integer
          type: array
        style: form
      - description: filter by company ids
        explode: false
        in: query
        name: projectCompanyIds
        schema:
          items:
            type: integer
          type: array
        style: form
      - description: filter by project category ids
        explode: false
        in: query
        name: projectCategoryIds
        schema:
          items:
            type: integer
          type: array
        style: form
      - description: include
        explode: false
        in: query
        name: include
        schema:
          enum:
          - projects
          - projects.companies
          - users
          - completedBy
          - createdBy
          - deletedBy
          - updatedBy
          - commentFollowers
          - changeFollowers
          - tags
          - tasklists
          - tasklists.tasks
          items:
            type: string
          type: array
        style: form
      - description: filter by ids
        explode: false
        in: query
        name: ids
        schema:
          items:
            type: integer
          type: array
        style: form
      - description: filter by followers' ids
        explode: false
        in: query
        name: followerIds
        schema:
          items:
            type: integer
          type: array
        style: form
      - explode: false
        in: query
        name: fields[users]
        schema:
          enum:
          - id
          - firstName
          - lastName
          - email
          - companyId
          - isAdmin
          - type
          items:
            type: string
          type: array
        style: form
      - explode: false
        in: query
        name: fields[tasks]
        schema:
          enum:
          - id
          - name
          - dateUpdated
          - parentTaskId
          - isPrivate
          - status
          - tasklistId
          - startDate
          - dueDate
          items:
            type: string
          type: array
        style: form
      - explode: false
        in: query
        name: fields[tasklists]
        schema:
          enum:
          - id
          - name
          - projectId
          - milestoneId
          items:
            type: string
          type: array
        style: form
      - explode: false
        in: query
        name: fields[tags]
        schema:
          enum:
          - id
          - name
          - color
          - count
          items:
            type: string
          type: array
        style: form
      - explode: false
        in: query
        name: fields[projects]
        schema:
          enum:
          - id
          - name
          items:
            type: string
          type: array
        style: form
      - explode: false
        in: query
        name: fields[milestones]
        schema:
          enum:
          - id
          - name
          - description
          - deadline
          - completed
          - projectId
          - createdOn
          - lastChangedOn
          - creatorUserId
          - reminder
          - private
          - lockdownId
          - status
          - completedOn
          - completerId
          - percentageComplete
          items:
            type: string
          type: array
        style: form
      - explode: false
        in: query
        name: fields[companies]
        schema:
          enum:
          - id
          - name
          - logoUploadedToServer
          - logoImage
          items:
            type: string
          type: array
        style: form
      - description: filter by creators' ids
        explode: false
        in: query
        name: creatorIds
        schema:
          items:
            type: integer
          type: array
        style: form
      - description: filter by assigned user ids
        explode: false
        in: query
        name: assignedToUserIds
        schema:
          items:
            type: integer
          type: array
        style: form
      - description: filter by assigned team ids
        explode: false
        in: query
        name: assignedToTeamIds
        schema:
          items:
            type: integer
          type: array
        style: form
      - description: filter by assigned company ids
        explode: false
        in: query
        name: assignedToCompanyIds
        schema:
          items:
            type: integer
          type: array
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/milestone.Response'
          description: 200 OK
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/view.ErrorResponse'
          description: 400 Bad Request
      summary: Get a milestone by id.
      tags:
      - Milestones
  /projects/api/v3/milestones/:id/comments.json:
    get:
      operationId: GET_projects_api_v3_milestones_:id_comments.json
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/comment.CommentsResponse'
          description: 200 OK
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/view.ErrorResponse'
          description: 400 Bad Request
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/view.ErrorResponse'
          description: 403 Forbidden
        "404":
          content: {}
          description: 404 Not Found (no data)
      summary: Get a list of comments for a milestone
      tags:
      - MilestoneComments
  /projects/api/v3/milestones/metrics/deadlines.json:
    get:
      description: |-
        Count the number of milestones on each deadline date. Only the milestones
        that the logged-in user can access will be included in the counting.
      operationId: GET_projects_api_v3_milestones_metrics_deadlines.json
      parameters:
      - in: query
        name: startDate
        schema:
          format: date
          type: string
      - in: query
        name: endDate
        schema:
          format: date
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/deadline.MilestoneMetricDeadlinesResponse'
          description: 200 OK
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/view.ErrorResponse'
          description: 400 Bad Request
      summary: Get milestones by due date in a time range
      tags:
      - Milestones
  /projects/api/v3/notebooks.json:
    get:
      operationId: GET_projects_api_v3_notebooks.json
      parameters:
      - description: filter by updated after date (deprecated, use updatedAfter)
        in: query
        name: updatedAfterDate
        schema:
          format: date-time
          type: string
      - description: filter by updated after date
        in: query
        name: updatedAfter
        schema:
          format: date-time
          type: string
      - description: filter by notebook name and description
        in: query
        name: searchTerm
        schema:
          type: string
      - description: filter by project statuses
        in: query
        name: projectStatuses
        schema:
          type: string
      - description: order mode
        in: query
        name: orderMode
        schema:
          default: asc
          enum:
          - asc
          - desc
          type: string
      - description: order by
        in: query
        name: orderBy
        schema:
          default: dateUpdated
          enum:
          - name
          - project
          - dateCreated
          - dateUpdated
          - category
          type: string
      - description: filter by created after date (deprecated, use createdAfter)
        in: query
        name: createdAfterDate
        schema:
          format: date
          type: string
      - description: filter by created after date
        in: query
        name: createdAfter
        schema:
          format: date
          type: string
      - description: |-
          filter by project healths

          0: not set
          1: bad
          2: ok
          3: good
        in: query
        name: projectHealths
        schema:
          enum:
          - 0
          - 1
          - 2
          - 3
          type: integer
      - description: number of items in a page
        in: query
        name: pageSize
        schema:
          default: 50
          type: integer
      - description: page number
        in: query
        name: page
        schema:
          default: 1
          type: integer
      - description: include deleted items
        in: query
        name: showDeleted
        schema:
          default: false
          type: boolean
      - description: filter by showing only secure notebooks
        in: query
        name: secureOnly
        schema:
          default: false
          type: boolean
      - description: match all notebook tags
        in: query
        name: matchAllTags
        schema:
          type: boolean
      - description: match all project tags
        in: query
        name: matchAllProjectTags
        schema:
          type: boolean
      - description: filter by showing only locked notebooks
        in: query
        name: lockedOnly
        schema:
          default: false
          type: boolean
      - description: parse Emoji's
        in: query
        name: getEmoji
        schema:
          type: boolean
      - description: filter by notebook tag ids
        explode: false
        in: query
        name: tagIds
        schema:
          items:
            type: integer
          type: array
        style: form
      - description: filter by project tag ids
        explode: false
        in: query
        name: projectTagIds
        schema:
          items:
            type: integer
          type: array
        style: form
      - description: filter by project owner ids
        explode: false
        in: query
        name: projectOwnerIds
        schema:
          items:
            type: integer
          type: array
        style: form
      - description: filter by project ids
        explode: false
        in: query
        name: projectIds
        schema:
          items:
            type: integer
          type: array
        style: form
      - description: filter by company ids
        explode: false
        in: query
        name: projectCompanyIds
        schema:
          items:
            type: integer
          type: array
        style: form
      - description: filter by project category ids
        explode: false
        in: query
        name: projectCategoryIds
        schema:
          items:
            type: integer
          type: array
        style: form
      - description: include
        explode: false
        in: query
        name: include
        schema:
          enum:
          - projects
          - tags
          - users
          - notebookCategories
          - companies
          - teams
          items:
            type: string
          type: array
        style: form
      - description: filter by ids
        explode: false
        in: query
        name: ids
        schema:
          items:
            type: integer
          type: array
        style: form
      - explode: false
        in: query
        name: fields[users]
        schema:
          enum:
          - id
          - firstName
          - lastName
          - email
          - companyId
          - isAdmin
          - type
          items:
            type: string
          type: array
        style: form
      - explode: false
        in: query
        name: fields[teams]
        schema:
          enum:
          - id
          - name
          - teamLogo
          - teamLogoIcon
          - teamLogoColor
          items:
            type: string
          type: array
        style: form
      - explode: false
        in: query
        name: fields[tags]
        schema:
          enum:
          - id
          - name
          - color
          - count
          items:
            type: string
          type: array
        style: form
      - explode: false
        in: query
        name: fields[projects]
        schema:
          enum:
          - id
          - name
          items:
            type: string
          type: array
        style: form
      - explode: false
        in: query
        name: fields[notebookCategories]
        schema:
          items:
            type: string
          type: array
        style: form
      - explode: false
        in: query
        name: fields[companies]
        schema:
          enum:
          - id
          - name
          - logoUploadedToServer
          - logoImage
          items:
            type: string
          type: array
        style: form
      - description: filter by creators' ids
        explode: false
        in: query
        name: creatorIds
        schema:
          items:
            type: integer
          type: array
        style: form
      - description: filter by notebook category ids
        explode: false
        in: query
        name: categoryIds
        schema:
          items:
            type: integer
          type: array
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/notebook.NotebooksResponse'
          description: 200 OK
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/view.ErrorResponse'
          description: 400 Bad Request
        "404":
          content: {}
          description: 404 Not Found (no data)
      summary: Get a list of notebooks.
      tags:
      - Notebooks
  /projects/api/v3/notebooks/:id.json:
    delete:
      operationId: DELETE_projects_api_v3_notebooks_:id.json
      responses:
        "204":
          content: {}
          description: 204 No Content (no data)
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/view.ErrorResponse'
          description: 400 Bad Request
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/view.ErrorResponse'
          description: 403 Forbidden
        "404":
          content: {}
          description: 404 Not Found (no data)
      summary: Delete an existing notebook.
      tags:
      - Notebooks
    get:
      operationId: GET_projects_api_v3_notebooks_:id.json
      parameters:
      - description: filter by updated after date (deprecated, use updatedAfter)
        in: query
        name: updatedAfterDate
        schema:
          format: date-time
          type: string
      - description: filter by updated after date
        in: query
        name: updatedAfter
        schema:
          format: date-time
          type: string
      - description: show deleted notebooks
        in: query
        name: showDeleted
        schema:
          type: boolean
      - description: parse Emoji's
        in: query
        name: getEmoji
        schema:
          type: boolean
      - description: include
        explode: false
        in: query
        name: include
        schema:
          enum:
          - projects
          - tags
          - users
          - notebookCategories
          - companies
          - teams
          items:
            type: string
          type: array
        style: form
      - explode: false
        in: query
        name: fields[users]
        schema:
          enum:
          - id
          - firstName
          - lastName
          - email
          - companyId
          - isAdmin
          - type
          items:
            type: string
          type: array
        style: form
      - explode: false
        in: query
        name: fields[teams]
        schema:
          enum:
          - id
          - name
          - teamLogo
          - teamLogoIcon
          - teamLogoColor
          items:
            type: string
          type: array
        style: form
      - explode: false
        in: query
        name: fields[tags]
        schema:
          enum:
          - id
          - name
          - color
          - count
          items:
            type: string
          type: array
        style: form
      - explode: false
        in: query
        name: fields[projects]
        schema:
          enum:
          - id
          - name
          items:
            type: string
          type: array
        style: form
      - explode: false
        in: query
        name: fields[notebookCategories]
        schema:
          items:
            type: string
          type: array
        style: form
      - explode: false
        in: query
        name: fields[companies]
        schema:
          enum:
          - id
          - name
          - logoUploadedToServer
          - logoImage
          items:
            type: string
          type: array
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/notebook.Response'
          description: 200 OK
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/view.ErrorResponse'
          description: 400 Bad Request
        "404":
          content: {}
          description: 404 Not Found (no data)
      summary: Get a specific notebook.
      tags:
      - Notebooks
    patch:
      description: Edits the fields of an existing notebook
      operationId: PATCH_projects_api_v3_notebooks_:id.json
      parameters:
      - description: parse Emoji's
        in: query
        name: getEmoji
        schema:
          type: boolean
      - description: include
        explode: false
        in: query
        name: include
        schema:
          enum:
          - projects
          - tags
          - users
          - notebookCategories
          - companies
          - teams
          items:
            type: string
          type: array
        style: form
      - explode: false
        in: query
        name: fields[users]
        schema:
          enum:
          - id
          - firstName
          - lastName
          - email
          - companyId
          - isAdmin
          - type
          items:
            type: string
          type: array
        style: form
      - explode: false
        in: query
        name: fields[teams]
        schema:
          enum:
          - id
          - name
          - teamLogo
          - teamLogoIcon
          - teamLogoColor
          items:
            type: string
          type: array
        style: form
      - explode: false
        in: query
        name: fields[tags]
        schema:
          enum:
          - id
          - name
          - color
          - count
          items:
            type: string
          type: array
        style: form
      - explode: false
        in: query
        name: fields[projects]
        schema:
          enum:
          - id
          - name
          items:
            type: string
          type: array
        style: form
      - explode: false
        in: query
        name: fields[notebookCategories]
        schema:
          items:
            type: string
          type: array
        style: form
      - explode: false
        in: query
        name: fields[companies]
        schema:
          enum:
          - id
          - name
          - logoUploadedToServer
          - logoImage
          items:
            type: string
          type: array
        style: form
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/notebook.Request'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/notebook.Response'
          description: 200 OK
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/view.ErrorResponse'
          description: 400 Bad Request
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/view.ErrorResponse'
          description: 403 Forbidden
        "404":
          content: {}
          description: 404 Not Found (no data)
      summary: Edits a notebook
      tags:
      - Notebooks
      x-codegen-request-body-name: notebook.Request
  /projects/api/v3/notebooks/:id/comments.json:
    get:
      operationId: GET_projects_api_v3_notebooks_:id_comments.json
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/comment.CommentsResponse'
          description: 200 OK
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/view.ErrorResponse'
          description: 400 Bad Request
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/view.ErrorResponse'
          description: 403 Forbidden
        "404":
          content: {}
          description: 404 Not Found (no data)
      summary: Get a list of comments for a notebook
      tags:
      - NotebookComments
  /projects/api/v3/notebooks/:id/compare.json:
    get:
      description: Gets the contents diff between the contents of 2 notebook versions
      operationId: GET_projects_api_v3_notebooks_:id_compare.json
      parameters:
      - description: include
        explode: false
        in: query
        name: include
        schema:
          enum:
          - users
          items:
            type: string
          type: array
        style: form
      - explode: false
        in: query
        name: fields[users]
        schema:
          enum:
          - id
          - firstName
          - lastName
          - email
          - companyId
          - isAdmin
          - type
          items:
            type: string
          type: array
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/notebook.VersionResponse'
          description: 200 OK
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/view.ErrorResponse'
          description: 400 Bad Request
        "404":
          content: {}
          description: 404 Not Found (no data)
      summary: Compare 2 notebook versions
      tags:
      - Notebooks
  /projects/api/v3/notebooks/:id/lock.json:
    put:
      description: Locks a specific notebook.
      operationId: PUT_projects_api_v3_notebooks_:id_lock.json
      responses:
        "200":
          content: {}
          description: 200 OK (no data)
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/view.ErrorResponse'
          description: 400 Bad Request
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/view.ErrorResponse'
          description: 403 Forbidden
        "404":
          content: {}
          description: 404 Not Found (no data)
      summary: Lock a notebook
      tags:
      - Notebooks
  /projects/api/v3/notebooks/:id/unlock.json:
    put:
      description: Unlocks a specific notebook.
      operationId: PUT_projects_api_v3_notebooks_:id_unlock.json
      responses:
        "200":
          content: {}
          description: 200 OK (no data)
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/view.ErrorResponse'
          description: 400 Bad Request
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/view.ErrorResponse'
          description: 403 Forbidden
        "404":
          content: {}
          description: 404 Not Found (no data)
      summary: Unlock a notebook
      tags:
      - Notebooks
  /projects/api/v3/notebooks/:id/versions.json:
    delete:
      description: Deletes some existing versions of a notebook by version ID
      operationId: DELETE_projects_api_v3_notebooks_:id_versions.json
      responses:
        "204":
          content: {}
          description: 204 No Content (no data)
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/view.ErrorResponse'
          description: 400 Bad Request
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/view.ErrorResponse'
          description: 403 Forbidden
        "404":
          content: {}
          description: 404 Not Found (no data)
      summary: Delete notebook versions.
      tags:
      - Notebooks
    get:
      description: Get a list of a notebooks versions.
      operationId: GET_projects_api_v3_notebooks_:id_versions.json
      parameters:
      - description: include
        explode: false
        in: query
        name: include
        schema:
          enum:
          - users
          items:
            type: string
          type: array
        style: form
      - explode: false
        in: query
        name: fields[users]
        schema:
          enum:
          - id
          - firstName
          - lastName
          - email
          - companyId
          - isAdmin
          - type
          items:
            type: string
          type: array
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/notebook.VersionsResponse'
          description: 200 OK
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/view.ErrorResponse'
          description: 400 Bad Request
        "404":
          content: {}
          description: 404 Not Found (no data)
      summary: Get notebook versions
      tags:
      - Notebooks
  /projects/api/v3/notebooks/:nId/versions/:vId.json:
    get:
      description: Get a specific notebook version.
      operationId: GET_projects_api_v3_notebooks_:nId_versions_:vId.json
      parameters:
      - description: include
        explode: false
        in: query
        name: include
        schema:
          enum:
          - users
          items:
            type: string
          type: array
        style: form
      - explode: false
        in: query
        name: fields[users]
        schema:
          enum:
          - id
          - firstName
          - lastName
          - email
          - companyId
          - isAdmin
          - type
          items:
            type: string
          type: array
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/notebook.VersionResponse'
          description: 200 OK
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/view.ErrorResponse'
          description: 400 Bad Request
        "404":
          content: {}
          description: 404 Not Found (no data)
      summary: Get a notebook version
      tags:
      - Notebooks
  /projects/api/v3/people.json:
    get:
      description: Retrieve all people for the provided filters.
      operationId: GET_projects_api_v3_people.json
      parameters:
      - description: order mode
        in: query
        name: orderMode
        schema:
          default: asc
          enum:
          - asc
          - desc
          type: string
      - description: order by
        in: query
        name: orderBy
        schema:
          default: name
          enum:
          - name
          - namecaseinsensitive
          - company
          type: string
      - description: number of items in a page (not used when generating reports)
        in: query
        name: pageSize
        schema:
          default: 50
          type: integer
      - description: page number (not used when generating reports)
        in: query
        name: page
        schema:
          default: 1
          type: integer
      - description: include (not used when generating reports)
        explode: false
        in: query
        name: include
        schema:
          enum:
          - companies
          items:
            type: string
          type: array
        style: form
      - description: filter by user ids
        explode: false
        in: query
        name: ids
        schema:
          items:
            type: integer
          type: array
        style: form
      - explode: false
        in: query
        name: fields[companies]
        schema:
          enum:
          - id
          - name
          - logoUploadedToServer
          - logoImage
          items:
            type: string
          type: array
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/people.MultiResponse'
          description: 200 OK
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/view.ErrorResponse'
          description: 400 Bad Request
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/view.ErrorResponse'
          description: 403 Forbidden
      summary: Returns a list of people
      tags:
      - People
  /projects/api/v3/people/:id.json:
    get:
      description: Retrieve a person record.
      operationId: GET_projects_api_v3_people_:id.json
      parameters:
      - description: order mode
        in: query
        name: orderMode
        schema:
          default: asc
          enum:
          - asc
          - desc
          type: string
      - description: order by
        in: query
        name: orderBy
        schema:
          default: name
          enum:
          - name
          - namecaseinsensitive
          - company
          type: string
      - description: number of items in a page (not used when generating reports)
        in: query
        name: pageSize
        schema:
          default: 50
          type: integer
      - description: page number (not used when generating reports)
        in: query
        name: page
        schema:
          default: 1
          type: integer
      - description: include (not used when generating reports)
        explode: false
        in: query
        name: include
        schema:
          enum:
          - companies
          items:
            type: string
          type: array
        style: form
      - description: filter by user ids
        explode: false
        in: query
        name: ids
        schema:
          items:
            type: integer
          type: array
        style: form
      - explode: false
        in: query
        name: fields[companies]
        schema:
          enum:
          - id
          - name
          - logoUploadedToServer
          - logoImage
          items:
            type: string
          type: array
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/people.Response'
          description: 200 OK
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/view.ErrorResponse'
          description: 400 Bad Request
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/view.ErrorResponse'
          description: 403 Forbidden
      summary: Returns a person
      tags:
      - Person
  /projects/api/v3/people/:userId/availability.json:
    get:
      description: |-
        Verify the user working hours and events marked as unavailable to calculate
        the availability in the provided range.
      operationId: GET_projects_api_v3_people_:userId_availability.json
      parameters:
      - description: filter by start date
        in: query
        name: startDate
        schema:
          format: date
          type: string
      - description: filter by end date
        in: query
        name: endDate
        schema:
          format: date
          type: string
      - description: filter by user
        in: query
        name: userId
        schema:
          type: integer
      - description: include
        explode: false
        in: query
        name: include
        schema:
          enum:
          - projects
          - users
          items:
            type: string
          type: array
        style: form
      - explode: false
        in: query
        name: fields[users]
        schema:
          enum:
          - id
          - firstName
          - lastName
          - email
          - companyId
          - isAdmin
          - type
          items:
            type: string
          type: array
        style: form
      - explode: false
        in: query
        name: fields[projects]
        schema:
          enum:
          - id
          - name
          items:
            type: string
          type: array
        style: form
      - explode: false
        in: query
        name: fields[availability]
        schema:
          enum:
          - userId
          - dates
          items:
            type: string
          type: array
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/availability.Response'
          description: 200 OK
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/view.ErrorResponse'
          description: 400 Bad Request
        "404":
          content: {}
          description: 404 Not Found (no data)
      summary: Return the user availability.
      tags:
      - People
      x-private: true
  /projects/api/v3/people/metrics/performance.json:
    get:
      description: |-
        Count the number of completed tasks by user for the provided period. By
        default the user with the most completed tasks is shown first.
      operationId: GET_projects_api_v3_people_metrics_performance.json
      parameters:
      - in: query
        name: startDate
        schema:
          format: date
          type: string
      - description: order mode
        in: query
        name: orderMode
        schema:
          default: desc
          enum:
          - asc
          - desc
          type: string
      - in: query
        name: endDate
        schema:
          format: date
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/performance.PeopleMetricPerformancesResponse'
          description: 200 OK
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/view.ErrorResponse'
          description: 400 Bad Request
      summary: Performance of users completing the most tasks
      tags:
      - People
  /projects/api/v3/people/utilization.json:
    get:
      description: Verify the user utilization.
      operationId: GET_projects_api_v3_people_utilization.json
      parameters:
      - description: filter by start date
        in: query
        name: startDate
        schema:
          format: date
          type: string
      - description: order mode
        in: query
        name: sortOrder
        schema:
          default: asc
          enum:
          - asc
          - desc
          type: string
      - description: sort by
        in: query
        name: sort
        schema:
          default: name
          enum:
          - name
          - percentutilization
          - percentestimatedutilization
          - availableminutes
          - unavailableminutes
          - loggedminutes
          - billableminutes
          - unbillableminutes
          type: string
      - description: filter by user first or last name
        in: query
        name: searchTerm
        schema:
          type: string
      - description: group by
        in: query
        name: groupBy
        schema:
          enum:
          - weekly
          - monthly
          type: string
      - description: filter by end date
        in: query
        name: endDate
        schema:
          format: date
          type: string
      - description: |-
          number of items in a page
          default: 50
        in: query
        name: pageSize
        schema:
          type: integer
      - description: |-
          page number
          default: 1
        in: query
        name: page
        schema:
          type: integer
      - description: filter by userIds
        explode: false
        in: query
        name: userIds
        schema:
          items:
            type: integer
          type: array
        style: form
      - description: include
        explode: false
        in: query
        name: include
        schema:
          enum:
          - users
          items:
            type: string
          type: array
        style: form
      - explode: false
        in: query
        name: fields[utilizations]
        schema:
          enum:
          - userId
          - unavailableMinutes
          - availableMinutes
          - billableMinutes
          - unbillableMinutes
          - loggedMinutes
          items:
            type: string
          type: array
        style: form
      - explode: false
        in: query
        name: fields[users]
        schema:
          enum:
          - id
          - firstName
          - lastName
          - email
          - companyId
          - isAdmin
          - type
          items:
            type: string
          type: array
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/utilization.Response'
          description: 200 OK
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/view.ErrorResponse'
          description: 400 Bad Request
        "404":
          content: {}
          description: 404 Not Found (no data)
      summary: Return the user utilization.
      tags:
      - People
  /projects/api/v3/projects.csv:
    get:
      description: |-
        Generates a project report in CSV format containing all projects for the
        provided filters. Only the projects that the logged-in user can access will
        be returned.


        On this endpoint you can filter by project custom fields. The syntax for the
        query parameter is the following:

            projectCustomField[id][op]=value

        Where:
          - [id] is the custom field ID
          - [op] is the operator to apply when filtering, different operators are
            allowed according to the custom field type
          - [value] is the value to apply when filtering

        For example, if I want to filter a dropdown custom field with ID 10 to only
        return entries that have the value "Option1" we would do the following:

            projectCustomField[10][eq]=Option1

        The allowed operators are:
          - like
          - not-like
          - eq
          - not
          - lt
          - gt
          - any
      operationId: GET_projects_api_v3_projects.csv
      parameters:
      - description: updated after
        in: query
        name: updatedAfter
        schema:
          format: date-time
          type: string
      - description: filter by project name
        in: query
        name: searchTerm
        schema:
          type: string
      - description: define the format of the report
        in: query
        name: reportType
        schema:
          default: project
          enum:
          - project
          - health
          type: string
      - description: define the format of the report
        in: query
        name: reportFormat
        schema:
          default: pdf
          enum:
          - csv
          - html
          - pdf
          - xls
          type: string
      - description: filter by project type
        in: query
        name: projectType
        schema:
          type: string
      - description: filter by project status
        in: query
        name: projectStatuses
        schema:
          enum:
          - active
          - current
          - late
          - upcoming
          - completed
          - deleted
          type: string
      - description: order mode
        in: query
        name: orderMode
        schema:
          default: asc
          enum:
          - asc
          - desc
          type: string
      - description: order by
        in: query
        name: orderBy
        schema:
          default: name
          enum:
          - companyname
          - datecreated
          - duedate
          - lastactivity
          - name
          - namecaseinsensitive
          - ownercompany
          - starred
          type: string
      - description: filter by min last activity date
        in: query
        name: minLastActivityDate
        schema:
          format: date
          type: string
      - description: filter by max last activity date
        in: query
        name: maxLastActivityDate
        schema:
          format: date
          type: string
      - description: filter by user id
        in: query
        name: userId
        schema:
          type: integer
      - description: |-
          filter by project healths

          0: not set
          1: bad
          2: ok
          3: good
        in: query
        name: projectHealths
        schema:
          enum:
          - 0
          - 1
          - 2
          - 3
          type: integer
      - description: number of items in a page (not used when generating reports)
        in: query
        name: pageSize
        schema:
          default: 50
          type: integer
      - description: page number (not used when generating reports)
        in: query
        name: page
        schema:
          default: 1
          type: integer
      - description: filter by starred projects only
        in: query
        name: onlyStarredProjects
        schema:
          type: boolean
      - description: only show projects with explicit membership
        in: query
        name: onlyProjectsWithExplicitMembership
        schema:
          default: false
          type: boolean
      - description: return only archived projects
        in: query
        name: onlyArchivedProjects
        schema:
          default: false
          type: boolean
      - description: match all project tags
        in: query
        name: matchAllProjectTags
        schema:
          type: boolean
      - description: generate a report document
        in: query
        name: isReportDownload
        schema:
          default: false
          type: boolean
      - description: fetch user-specific data such as isStarred
        in: query
        name: includeProjectUserInfo
        schema:
          default: false
          type: boolean
      - description: include custom fields
        in: query
        name: includeCustomFields
        schema:
          default: false
          type: boolean
      - description: optional to include completed projects when filtering by project
          statuses "current,late".
        in: query
        name: includeCompletedStatus
        schema:
          type: boolean
      - description: include archived projects
        in: query
        name: includeArchivedProjects
        schema:
          default: false
          type: boolean
      - description: hide projects where the logged-in user is just an observer
        in: query
        name: hideObservedProjects
        schema:
          default: false
          type: boolean
      - description: filter by project tag ids
        explode: false
        in: query
        name: projectTagIds
        schema:
          items:
            type: integer
          type: array
        style: form
      - description: filter by project owner ids
        explode: false
        in: query
        name: projectOwnerIds
        schema:
          items:
            type: integer
          type: array
        style: form
      - description: filter by project ids
        explode: false
        in: query
        name: projectIds
        schema:
          items:
            type: integer
          type: array
        style: form
      - description: filter by company ids
        explode: false
        in: query
        name: projectCompanyIds
        schema:
          items:
            type: integer
          type: array
        style: form
      - description: filter by project category ids
        explode: false
        in: query
        name: projectCategoryIds
        schema:
          items:
            type: integer
          type: array
        style: form
      - description: include (not used when generating reports)
        explode: false
        in: query
        name: include
        schema:
          enum:
          - projectOwners
          - projectUpdates
          - companies
          - projectCategories
          - portfolioCards
          - portfolioBoards
          - portfolioColumns
          - tags
          - customfields
          - customfieldProjects
          - projectBudgets
          items:
            type: string
          type: array
        style: form
      - explode: false
        in: query
        name: fields[users]
        schema:
          enum:
          - id
          - firstName
          - lastName
          - email
          - companyId
          - isAdmin
          - type
          items:
            type: string
          type: array
        style: form
      - explode: false
        in: query
        name: fields[tags]
        schema:
          enum:
          - id
          - name
          - color
          - count
          items:
            type: string
          type: array
        style: form
      - explode: false
        in: query
        name: fields[projects]
        schema:
          enum:
          - id
          - name
          items:
            type: string
          type: array
        style: form
      - explode: false
        in: query
        name: fields[projectcategories]
        schema:
          enum:
          - id
          - name
          - color
          items:
            type: string
          type: array
        style: form
      - explode: false
        in: query
        name: fields[projectUpdates]
        schema:
          enum:
          - id
          - projectId
          - text
          - isActive
          - health
          - color
          - dateCreated
          - deleted
          - deletedDate
          - numLikes
          - reactions
          items:
            type: string
          type: array
        style: form
      - explode: false
        in: query
        name: fields[projectBudgets]
        schema:
          enum:
          - id
          - projectId
          - type
          - status
          - capacityUsed
          - capacity
          - |-
            originatorBudgetId
            isRepeating
          - repeatPeriod
          - repeatUnit
          - repeatsRemaining
          - sequenceNumber
          - |-
            startDateTime
            endDateTime
          - currencyCode
          - timelogType
          - expenseType
          - defaultRate
          - |-
            notificationIds
            createdByUserId
          - dateCreated
          - updatedUserId
          - dateUpdated
          - |-
            completedByUserId
            dateCompleted
          - deletedByUserId
          - dateDeleted
          items:
            type: string
          type: array
        style: form
      - explode: false
        in: query
        name: fields[portfolioColumns]
        schema:
          enum:
          - id
          - name
          - color
          items:
            type: string
          type: array
        style: form
      - explode: false
        in: query
        name: fields[portfolioCards]
        schema:
          enum:
          - id
          - columnId
          - projectId
          items:
            type: string
          type: array
        style: form
      - explode: false
        in: query
        name: fields[portfolioBoards]
        schema:
          enum:
          - id
          - name
          - color
          items:
            type: string
          type: array
        style: form
      - explode: false
        in: query
        name: fields[customfields]
        schema:
          enum:
          - id
          - projectId
          - entity
          - name
          - description
          - type
          - options
          - visibilities
          - isPrivate
          - required
          - createdAt
          - createdByUserId
          - updatedAt
          - updatedByUserId
          - deleted
          - deletedAt
          - deletedByUserId
          items:
            type: string
          type: array
        style: form
      - explode: false
        in: query
        name: fields[customfieldProjects]
        schema:
          enum:
          - id
          - customfieldId
          - value
          - createdAt
          - createdBy
          items:
            type: string
          type: array
        style: form
      - explode: false
        in: query
        name: fields[companies]
        schema:
          enum:
          - id
          - name
          - logoUploadedToServer
          - logoImage
          items:
            type: string
          type: array
        style: form
      responses:
        "200":
          content: {}
          description: 200 OK (no data)
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/view.ErrorResponse'
            text/csv:
              schema:
                $ref: '#/components/schemas/view.ErrorResponse'
          description: 400 Bad Request
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/view.ErrorResponse'
            text/csv:
              schema:
                $ref: '#/components/schemas/view.ErrorResponse'
          description: 403 Forbidden
      summary: Generate project report in CSV format
      tags:
      - Projects
  /projects/api/v3/projects.html:
    get:
      description: |-
        Generates a project report in HTML format containing all projects for the
        provided filters. Only the projects that the logged-in user can access will
        be returned.


        On this endpoint you can filter by project custom fields. The syntax for the
        query parameter is the following:

            projectCustomField[id][op]=value

        Where:
          - [id] is the custom field ID
          - [op] is the operator to apply when filtering, different operators are
            allowed according to the custom field type
          - [value] is the value to apply when filtering

        For example, if I want to filter a dropdown custom field with ID 10 to only
        return entries that have the value "Option1" we would do the following:

            projectCustomField[10][eq]=Option1

        The allowed operators are:
          - like
          - not-like
          - eq
          - not
          - lt
          - gt
          - any
      operationId: GET_projects_api_v3_projects.html
      parameters:
      - description: updated after
        in: query
        name: updatedAfter
        schema:
          format: date-time
          type: string
      - description: filter by project name
        in: query
        name: searchTerm
        schema:
          type: string
      - description: define the format of the report
        in: query
        name: reportType
        schema:
          default: project
          enum:
          - project
          - health
          type: string
      - description: define the format of the report
        in: query
        name: reportFormat
        schema:
          default: pdf
          enum:
          - csv
          - html
          - pdf
          - xls
          type: string
      - description: filter by project type
        in: query
        name: projectType
        schema:
          type: string
      - description: filter by project status
        in: query
        name: projectStatuses
        schema:
          enum:
          - active
          - current
          - late
          - upcoming
          - completed
          - deleted
          type: string
      - description: order mode
        in: query
        name: orderMode
        schema:
          default: asc
          enum:
          - asc
          - desc
          type: string
      - description: order by
        in: query
        name: orderBy
        schema:
          default: name
          enum:
          - companyname
          - datecreated
          - duedate
          - lastactivity
          - name
          - namecaseinsensitive
          - ownercompany
          - starred
          type: string
      - description: filter by min last activity date
        in: query
        name: minLastActivityDate
        schema:
          format: date
          type: string
      - description: filter by max last activity date
        in: query
        name: maxLastActivityDate
        schema:
          format: date
          type: string
      - description: filter by user id
        in: query
        name: userId
        schema:
          type: integer
      - description: |-
          filter by project healths

          0: not set
          1: bad
          2: ok
          3: good
        in: query
        name: projectHealths
        schema:
          enum:
          - 0
          - 1
          - 2
          - 3
          type: integer
      - description: number of items in a page (not used when generating reports)
        in: query
        name: pageSize
        schema:
          default: 50
          type: integer
      - description: page number (not used when generating reports)
        in: query
        name: page
        schema:
          default: 1
          type: integer
      - description: filter by starred projects only
        in: query
        name: onlyStarredProjects
        schema:
          type: boolean
      - description: only show projects with explicit membership
        in: query
        name: onlyProjectsWithExplicitMembership
        schema:
          default: false
          type: boolean
      - description: return only archived projects
        in: query
        name: onlyArchivedProjects
        schema:
          default: false
          type: boolean
      - description: match all project tags
        in: query
        name: matchAllProjectTags
        schema:
          type: boolean
      - description: generate a report document
        in: query
        name: isReportDownload
        schema:
          default: false
          type: boolean
      - description: fetch user-specific data such as isStarred
        in: query
        name: includeProjectUserInfo
        schema:
          default: false
          type: boolean
      - description: include custom fields
        in: query
        name: includeCustomFields
        schema:
          default: false
          type: boolean
      - description: optional to include completed projects when filtering by project
          statuses "current,late".
        in: query
        name: includeCompletedStatus
        schema:
          type: boolean
      - description: include archived projects
        in: query
        name: includeArchivedProjects
        schema:
          default: false
          type: boolean
      - description: hide projects where the logged-in user is just an observer
        in: query
        name: hideObservedProjects
        schema:
          default: false
          type: boolean
      - description: filter by project tag ids
        explode: false
        in: query
        name: projectTagIds
        schema:
          items:
            type: integer
          type: array
        style: form
      - description: filter by project owner ids
        explode: false
        in: query
        name: projectOwnerIds
        schema:
          items:
            type: integer
          type: array
        style: form
      - description: filter by project ids
        explode: false
        in: query
        name: projectIds
        schema:
          items:
            type: integer
          type: array
        style: form
      - description: filter by company ids
        explode: false
        in: query
        name: projectCompanyIds
        schema:
          items:
            type: integer
          type: array
        style: form
      - description: filter by project category ids
        explode: false
        in: query
        name: projectCategoryIds
        schema:
          items:
            type: integer
          type: array
        style: form
      - description: include (not used when generating reports)
        explode: false
        in: query
        name: include
        schema:
          enum:
          - projectOwners
          - projectUpdates
          - companies
          - projectCategories
          - portfolioCards
          - portfolioBoards
          - portfolioColumns
          - tags
          - customfields
          - customfieldProjects
          - projectBudgets
          items:
            type: string
          type: array
        style: form
      - explode: false
        in: query
        name: fields[users]
        schema:
          enum:
          - id
          - firstName
          - lastName
          - email
          - companyId
          - isAdmin
          - type
          items:
            type: string
          type: array
        style: form
      - explode: false
        in: query
        name: fields[tags]
        schema:
          enum:
          - id
          - name
          - color
          - count
          items:
            type: string
          type: array
        style: form
      - explode: false
        in: query
        name: fields[projects]
        schema:
          enum:
          - id
          - name
          items:
            type: string
          type: array
        style: form
      - explode: false
        in: query
        name: fields[projectcategories]
        schema:
          enum:
          - id
          - name
          - color
          items:
            type: string
          type: array
        style: form
      - explode: false
        in: query
        name: fields[projectUpdates]
        schema:
          enum:
          - id
          - projectId
          - text
          - isActive
          - health
          - color
          - dateCreated
          - deleted
          - deletedDate
          - numLikes
          - reactions
          items:
            type: string
          type: array
        style: form
      - explode: false
        in: query
        name: fields[projectBudgets]
        schema:
          enum:
          - id
          - projectId
          - type
          - status
          - capacityUsed
          - capacity
          - |-
            originatorBudgetId
            isRepeating
          - repeatPeriod
          - repeatUnit
          - repeatsRemaining
          - sequenceNumber
          - |-
            startDateTime
            endDateTime
          - currencyCode
          - timelogType
          - expenseType
          - defaultRate
          - |-
            notificationIds
            createdByUserId
          - dateCreated
          - updatedUserId
          - dateUpdated
          - |-
            completedByUserId
            dateCompleted
          - deletedByUserId
          - dateDeleted
          items:
            type: string
          type: array
        style: form
      - explode: false
        in: query
        name: fields[portfolioColumns]
        schema:
          enum:
          - id
          - name
          - color
          items:
            type: string
          type: array
        style: form
      - explode: false
        in: query
        name: fields[portfolioCards]
        schema:
          enum:
          - id
          - columnId
          - projectId
          items:
            type: string
          type: array
        style: form
      - explode: false
        in: query
        name: fields[portfolioBoards]
        schema:
          enum:
          - id
          - name
          - color
          items:
            type: string
          type: array
        style: form
      - explode: false
        in: query
        name: fields[customfields]
        schema:
          enum:
          - id
          - projectId
          - entity
          - name
          - description
          - type
          - options
          - visibilities
          - isPrivate
          - required
          - createdAt
          - createdByUserId
          - updatedAt
          - updatedByUserId
          - deleted
          - deletedAt
          - deletedByUserId
          items:
            type: string
          type: array
        style: form
      - explode: false
        in: query
        name: fields[customfieldProjects]
        schema:
          enum:
          - id
          - customfieldId
          - value
          - createdAt
          - createdBy
          items:
            type: string
          type: array
        style: form
      - explode: false
        in: query
        name: fields[companies]
        schema:
          enum:
          - id
          - name
          - logoUploadedToServer
          - logoImage
          items:
            type: string
          type: array
        style: form
      responses:
        "200":
          content: {}
          description: 200 OK (no data)
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/view.ErrorResponse'
            text/html:
              schema:
                $ref: '#/components/schemas/view.ErrorResponse'
          description: 400 Bad Request
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/view.ErrorResponse'
            text/html:
              schema:
                $ref: '#/components/schemas/view.ErrorResponse'
          description: 403 Forbidden
      summary: Generate project report in HTML format
      tags:
      - Projects
  /projects/api/v3/projects.json:
    get:
      description: |-
        Retrieve all projects for the provided filters. Only the projects that the
        logged-in user can access will be returned.


        On this endpoint you can filter by project custom fields. The syntax for the
        query parameter is the following:

            projectCustomField[id][op]=value

        Where:
          - [id] is the custom field ID
          - [op] is the operator to apply when filtering, different operators are
            allowed according to the custom field type
          - [value] is the value to apply when filtering

        For example, if I want to filter a dropdown custom field with ID 10 to only
        return entries that have the value "Option1" we would do the following:

            projectCustomField[10][eq]=Option1

        The allowed operators are:
          - like
          - not-like
          - eq
          - not
          - lt
          - gt
          - any
      operationId: GET_projects_api_v3_projects.json
      parameters:
      - description: updated after
        in: query
        name: updatedAfter
        schema:
          format: date-time
          type: string
      - description: filter by project name
        in: query
        name: searchTerm
        schema:
          type: string
      - description: define the format of the report
        in: query
        name: reportType
        schema:
          default: project
          enum:
          - project
          - health
          type: string
      - description: define the format of the report
        in: query
        name: reportFormat
        schema:
          default: pdf
          enum:
          - csv
          - html
          - pdf
          - xls
          type: string
      - description: filter by project type
        in: query
        name: projectType
        schema:
          type: string
      - description: filter by project status
        in: query
        name: projectStatuses
        schema:
          enum:
          - active
          - current
          - late
          - upcoming
          - completed
          - deleted
          type: string
      - description: order mode
        in: query
        name: orderMode
        schema:
          default: asc
          enum:
          - asc
          - desc
          type: string
      - description: order by
        in: query
        name: orderBy
        schema:
          default: name
          enum:
          - companyname
          - datecreated
          - duedate
          - lastactivity
          - name
          - namecaseinsensitive
          - ownercompany
          - starred
          type: string
      - description: filter by min last activity date
        in: query
        name: minLastActivityDate
        schema:
          format: date
          type: string
      - description: filter by max last activity date
        in: query
        name: maxLastActivityDate
        schema:
          format: date
          type: string
      - description: filter by user id
        in: query
        name: userId
        schema:
          type: integer
      - description: |-
          filter by project healths

          0: not set
          1: bad
          2: ok
          3: good
        in: query
        name: projectHealths
        schema:
          enum:
          - 0
          - 1
          - 2
          - 3
          type: integer
      - description: number of items in a page (not used when generating reports)
        in: query
        name: pageSize
        schema:
          default: 50
          type: integer
      - description: page number (not used when generating reports)
        in: query
        name: page
        schema:
          default: 1
          type: integer
      - description: filter by starred projects only
        in: query
        name: onlyStarredProjects
        schema:
          type: boolean
      - description: only show projects with explicit membership
        in: query
        name: onlyProjectsWithExplicitMembership
        schema:
          default: false
          type: boolean
      - description: return only archived projects
        in: query
        name: onlyArchivedProjects
        schema:
          default: false
          type: boolean
      - description: match all project tags
        in: query
        name: matchAllProjectTags
        schema:
          type: boolean
      - description: generate a report document
        in: query
        name: isReportDownload
        schema:
          default: false
          type: boolean
      - description: fetch user-specific data such as isStarred
        in: query
        name: includeProjectUserInfo
        schema:
          default: false
          type: boolean
      - description: include custom fields
        in: query
        name: includeCustomFields
        schema:
          default: false
          type: boolean
      - description: optional to include completed projects when filtering by project
          statuses "current,late".
        in: query
        name: includeCompletedStatus
        schema:
          type: boolean
      - description: include archived projects
        in: query
        name: includeArchivedProjects
        schema:
          default: false
          type: boolean
      - description: hide projects where the logged-in user is just an observer
        in: query
        name: hideObservedProjects
        schema:
          default: false
          type: boolean
      - description: filter by project tag ids
        explode: false
        in: query
        name: projectTagIds
        schema:
          items:
            type: integer
          type: array
        style: form
      - description: filter by project owner ids
        explode: false
        in: query
        name: projectOwnerIds
        schema:
          items:
            type: integer
          type: array
        style: form
      - description: filter by project ids
        explode: false
        in: query
        name: projectIds
        schema:
          items:
            type: integer
          type: array
        style: form
      - description: filter by company ids
        explode: false
        in: query
        name: projectCompanyIds
        schema:
          items:
            type: integer
          type: array
        style: form
      - description: filter by project category ids
        explode: false
        in: query
        name: projectCategoryIds
        schema:
          items:
            type: integer
          type: array
        style: form
      - description: include (not used when generating reports)
        explode: false
        in: query
        name: include
        schema:
          enum:
          - projectOwners
          - projectUpdates
          - companies
          - projectCategories
          - portfolioCards
          - portfolioBoards
          - portfolioColumns
          - tags
          - customfields
          - customfieldProjects
          - projectBudgets
          items:
            type: string
          type: array
        style: form
      - explode: false
        in: query
        name: fields[users]
        schema:
          enum:
          - id
          - firstName
          - lastName
          - email
          - companyId
          - isAdmin
          - type
          items:
            type: string
          type: array
        style: form
      - explode: false
        in: query
        name: fields[tags]
        schema:
          enum:
          - id
          - name
          - color
          - count
          items:
            type: string
          type: array
        style: form
      - explode: false
        in: query
        name: fields[projects]
        schema:
          enum:
          - id
          - name
          items:
            type: string
          type: array
        style: form
      - explode: false
        in: query
        name: fields[projectcategories]
        schema:
          enum:
          - id
          - name
          - color
          items:
            type: string
          type: array
        style: form
      - explode: false
        in: query
        name: fields[projectUpdates]
        schema:
          enum:
          - id
          - projectId
          - text
          - isActive
          - health
          - color
          - dateCreated
          - deleted
          - deletedDate
          - numLikes
          - reactions
          items:
            type: string
          type: array
        style: form
      - explode: false
        in: query
        name: fields[projectBudgets]
        schema:
          enum:
          - id
          - projectId
          - type
          - status
          - capacityUsed
          - capacity
          - |-
            originatorBudgetId
            isRepeating
          - repeatPeriod
          - repeatUnit
          - repeatsRemaining
          - sequenceNumber
          - |-
            startDateTime
            endDateTime
          - currencyCode
          - timelogType
          - expenseType
          - defaultRate
          - |-
            notificationIds
            createdByUserId
          - dateCreated
          - updatedUserId
          - dateUpdated
          - |-
            completedByUserId
            dateCompleted
          - deletedByUserId
          - dateDeleted
          items:
            type: string
          type: array
        style: form
      - explode: false
        in: query
        name: fields[portfolioColumns]
        schema:
          enum:
          - id
          - name
          - color
          items:
            type: string
          type: array
        style: form
      - explode: false
        in: query
        name: fields[portfolioCards]
        schema:
          enum:
          - id
          - columnId
          - projectId
          items:
            type: string
          type: array
        style: form
      - explode: false
        in: query
        name: fields[portfolioBoards]
        schema:
          enum:
          - id
          - name
          - color
          items:
            type: string
          type: array
        style: form
      - explode: false
        in: query
        name: fields[customfields]
        schema:
          enum:
          - id
          - projectId
          - entity
          - name
          - description
          - type
          - options
          - visibilities
          - isPrivate
          - required
          - createdAt
          - createdByUserId
          - updatedAt
          - updatedByUserId
          - deleted
          - deletedAt
          - deletedByUserId
          items:
            type: string
          type: array
        style: form
      - explode: false
        in: query
        name: fields[customfieldProjects]
        schema:
          enum:
          - id
          - customfieldId
          - value
          - createdAt
          - createdBy
          items:
            type: string
          type: array
        style: form
      - explode: false
        in: query
        name: fields[companies]
        schema:
          enum:
          - id
          - name
          - logoUploadedToServer
          - logoImage
          items:
            type: string
          type: array
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/project.ProjectsResponse'
          description: 200 OK
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/view.ErrorResponse'
          description: 400 Bad Request
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/view.ErrorResponse'
          description: 403 Forbidden
      summary: Returns a list of projects
      tags:
      - Projects
  /projects/api/v3/projects.pdf:
    get:
      description: |-
        Generates a project report in PDF format containing all projects for the
        provided filters. Only the projects that the logged-in user can access will
        be returned.


        On this endpoint you can filter by project custom fields. The syntax for the
        query parameter is the following:

            projectCustomField[id][op]=value

        Where:
          - [id] is the custom field ID
          - [op] is the operator to apply when filtering, different operators are
            allowed according to the custom field type
          - [value] is the value to apply when filtering

        For example, if I want to filter a dropdown custom field with ID 10 to only
        return entries that have the value "Option1" we would do the following:

            projectCustomField[10][eq]=Option1

        The allowed operators are:
          - like
          - not-like
          - eq
          - not
          - lt
          - gt
          - any
      operationId: GET_projects_api_v3_projects.pdf
      parameters:
      - description: updated after
        in: query
        name: updatedAfter
        schema:
          format: date-time
          type: string
      - description: filter by project name
        in: query
        name: searchTerm
        schema:
          type: string
      - description: define the format of the report
        in: query
        name: reportType
        schema:
          default: project
          enum:
          - project
          - health
          type: string
      - description: define the format of the report
        in: query
        name: reportFormat
        schema:
          default: pdf
          enum:
          - csv
          - html
          - pdf
          - xls
          type: string
      - description: filter by project type
        in: query
        name: projectType
        schema:
          type: string
      - description: filter by project status
        in: query
        name: projectStatuses
        schema:
          enum:
          - active
          - current
          - late
          - upcoming
          - completed
          - deleted
          type: string
      - description: order mode
        in: query
        name: orderMode
        schema:
          default: asc
          enum:
          - asc
          - desc
          type: string
      - description: order by
        in: query
        name: orderBy
        schema:
          default: name
          enum:
          - companyname
          - datecreated
          - duedate
          - lastactivity
          - name
          - namecaseinsensitive
          - ownercompany
          - starred
          type: string
      - description: filter by min last activity date
        in: query
        name: minLastActivityDate
        schema:
          format: date
          type: string
      - description: filter by max last activity date
        in: query
        name: maxLastActivityDate
        schema:
          format: date
          type: string
      - description: filter by user id
        in: query
        name: userId
        schema:
          type: integer
      - description: |-
          filter by project healths

          0: not set
          1: bad
          2: ok
          3: good
        in: query
        name: projectHealths
        schema:
          enum:
          - 0
          - 1
          - 2
          - 3
          type: integer
      - description: number of items in a page (not used when generating reports)
        in: query
        name: pageSize
        schema:
          default: 50
          type: integer
      - description: page number (not used when generating reports)
        in: query
        name: page
        schema:
          default: 1
          type: integer
      - description: filter by starred projects only
        in: query
        name: onlyStarredProjects
        schema:
          type: boolean
      - description: only show projects with explicit membership
        in: query
        name: onlyProjectsWithExplicitMembership
        schema:
          default: false
          type: boolean
      - description: return only archived projects
        in: query
        name: onlyArchivedProjects
        schema:
          default: false
          type: boolean
      - description: match all project tags
        in: query
        name: matchAllProjectTags
        schema:
          type: boolean
      - description: generate a report document
        in: query
        name: isReportDownload
        schema:
          default: false
          type: boolean
      - description: fetch user-specific data such as isStarred
        in: query
        name: includeProjectUserInfo
        schema:
          default: false
          type: boolean
      - description: include custom fields
        in: query
        name: includeCustomFields
        schema:
          default: false
          type: boolean
      - description: optional to include completed projects when filtering by project
          statuses "current,late".
        in: query
        name: includeCompletedStatus
        schema:
          type: boolean
      - description: include archived projects
        in: query
        name: includeArchivedProjects
        schema:
          default: false
          type: boolean
      - description: hide projects where the logged-in user is just an observer
        in: query
        name: hideObservedProjects
        schema:
          default: false
          type: boolean
      - description: filter by project tag ids
        explode: false
        in: query
        name: projectTagIds
        schema:
          items:
            type: integer
          type: array
        style: form
      - description: filter by project owner ids
        explode: false
        in: query
        name: projectOwnerIds
        schema:
          items:
            type: integer
          type: array
        style: form
      - description: filter by project ids
        explode: false
        in: query
        name: projectIds
        schema:
          items:
            type: integer
          type: array
        style: form
      - description: filter by company ids
        explode: false
        in: query
        name: projectCompanyIds
        schema:
          items:
            type: integer
          type: array
        style: form
      - description: filter by project category ids
        explode: false
        in: query
        name: projectCategoryIds
        schema:
          items:
            type: integer
          type: array
        style: form
      - description: include (not used when generating reports)
        explode: false
        in: query
        name: include
        schema:
          enum:
          - projectOwners
          - projectUpdates
          - companies
          - projectCategories
          - portfolioCards
          - portfolioBoards
          - portfolioColumns
          - tags
          - customfields
          - customfieldProjects
          - projectBudgets
          items:
            type: string
          type: array
        style: form
      - explode: false
        in: query
        name: fields[users]
        schema:
          enum:
          - id
          - firstName
          - lastName
          - email
          - companyId
          - isAdmin
          - type
          items:
            type: string
          type: array
        style: form
      - explode: false
        in: query
        name: fields[tags]
        schema:
          enum:
          - id
          - name
          - color
          - count
          items:
            type: string
          type: array
        style: form
      - explode: false
        in: query
        name: fields[projects]
        schema:
          enum:
          - id
          - name
          items:
            type: string
          type: array
        style: form
      - explode: false
        in: query
        name: fields[projectcategories]
        schema:
          enum:
          - id
          - name
          - color
          items:
            type: string
          type: array
        style: form
      - explode: false
        in: query
        name: fields[projectUpdates]
        schema:
          enum:
          - id
          - projectId
          - text
          - isActive
          - health
          - color
          - dateCreated
          - deleted
          - deletedDate
          - numLikes
          - reactions
          items:
            type: string
          type: array
        style: form
      - explode: false
        in: query
        name: fields[projectBudgets]
        schema:
          enum:
          - id
          - projectId
          - type
          - status
          - capacityUsed
          - capacity
          - |-
            originatorBudgetId
            isRepeating
          - repeatPeriod
          - repeatUnit
          - repeatsRemaining
          - sequenceNumber
          - |-
            startDateTime
            endDateTime
          - currencyCode
          - timelogType
          - expenseType
          - defaultRate
          - |-
            notificationIds
            createdByUserId
          - dateCreated
          - updatedUserId
          - dateUpdated
          - |-
            completedByUserId
            dateCompleted
          - deletedByUserId
          - dateDeleted
          items:
            type: string
          type: array
        style: form
      - explode: false
        in: query
        name: fields[portfolioColumns]
        schema:
          enum:
          - id
          - name
          - color
          items:
            type: string
          type: array
        style: form
      - explode: false
        in: query
        name: fields[portfolioCards]
        schema:
          enum:
          - id
          - columnId
          - projectId
          items:
            type: string
          type: array
        style: form
      - explode: false
        in: query
        name: fields[portfolioBoards]
        schema:
          enum:
          - id
          - name
          - color
          items:
            type: string
          type: array
        style: form
      - explode: false
        in: query
        name: fields[customfields]
        schema:
          enum:
          - id
          - projectId
          - entity
          - name
          - description
          - type
          - options
          - visibilities
          - isPrivate
          - required
          - createdAt
          - createdByUserId
          - updatedAt
          - updatedByUserId
          - deleted
          - deletedAt
          - deletedByUserId
          items:
            type: string
          type: array
        style: form
      - explode: false
        in: query
        name: fields[customfieldProjects]
        schema:
          enum:
          - id
          - customfieldId
          - value
          - createdAt
          - createdBy
          items:
            type: string
          type: array
        style: form
      - explode: false
        in: query
        name: fields[companies]
        schema:
          enum:
          - id
          - name
          - logoUploadedToServer
          - logoImage
          items:
            type: string
          type: array
        style: form
      responses:
        "200":
          content: {}
          description: 200 OK (no data)
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/view.ErrorResponse'
            application/pdf:
              schema:
                $ref: '#/components/schemas/view.ErrorResponse'
          description: 400 Bad Request
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/view.ErrorResponse'
            application/pdf:
              schema:
                $ref: '#/components/schemas/view.ErrorResponse'
          description: 403 Forbidden
      summary: Generate project report in PDF format
      tags:
      - Projects
  /projects/api/v3/projects.xlsx:
    get:
      description: |-
        Generates a project report in XLSX format containing all projects for the
        provided filters. Only the projects that the logged-in user can access will
        be returned.


        On this endpoint you can filter by project custom fields. The syntax for the
        query parameter is the following:

            projectCustomField[id][op]=value

        Where:
          - [id] is the custom field ID
          - [op] is the operator to apply when filtering, different operators are
            allowed according to the custom field type
          - [value] is the value to apply when filtering

        For example, if I want to filter a dropdown custom field with ID 10 to only
        return entries that have the value "Option1" we would do the following:

            projectCustomField[10][eq]=Option1

        The allowed operators are:
          - like
          - not-like
          - eq
          - not
          - lt
          - gt
          - any
      operationId: GET_projects_api_v3_projects.xlsx
      parameters:
      - description: updated after
        in: query
        name: updatedAfter
        schema:
          format: date-time
          type: string
      - description: filter by project name
        in: query
        name: searchTerm
        schema:
          type: string
      - description: define the format of the report
        in: query
        name: reportType
        schema:
          default: project
          enum:
          - project
          - health
          type: string
      - description: define the format of the report
        in: query
        name: reportFormat
        schema:
          default: pdf
          enum:
          - csv
          - html
          - pdf
          - xls
          type: string
      - description: filter by project type
        in: query
        name: projectType
        schema:
          type: string
      - description: filter by project status
        in: query
        name: projectStatuses
        schema:
          enum:
          - active
          - current
          - late
          - upcoming
          - completed
          - deleted
          type: string
      - description: order mode
        in: query
        name: orderMode
        schema:
          default: asc
          enum:
          - asc
          - desc
          type: string
      - description: order by
        in: query
        name: orderBy
        schema:
          default: name
          enum:
          - companyname
          - datecreated
          - duedate
          - lastactivity
          - name
          - namecaseinsensitive
          - ownercompany
          - starred
          type: string
      - description: filter by min last activity date
        in: query
        name: minLastActivityDate
        schema:
          format: date
          type: string
      - description: filter by max last activity date
        in: query
        name: maxLastActivityDate
        schema:
          format: date
          type: string
      - description: filter by user id
        in: query
        name: userId
        schema:
          type: integer
      - description: |-
          filter by project healths

          0: not set
          1: bad
          2: ok
          3: good
        in: query
        name: projectHealths
        schema:
          enum:
          - 0
          - 1
          - 2
          - 3
          type: integer
      - description: number of items in a page (not used when generating reports)
        in: query
        name: pageSize
        schema:
          default: 50
          type: integer
      - description: page number (not used when generating reports)
        in: query
        name: page
        schema:
          default: 1
          type: integer
      - description: filter by starred projects only
        in: query
        name: onlyStarredProjects
        schema:
          type: boolean
      - description: only show projects with explicit membership
        in: query
        name: onlyProjectsWithExplicitMembership
        schema:
          default: false
          type: boolean
      - description: return only archived projects
        in: query
        name: onlyArchivedProjects
        schema:
          default: false
          type: boolean
      - description: match all project tags
        in: query
        name: matchAllProjectTags
        schema:
          type: boolean
      - description: generate a report document
        in: query
        name: isReportDownload
        schema:
          default: false
          type: boolean
      - description: fetch user-specific data such as isStarred
        in: query
        name: includeProjectUserInfo
        schema:
          default: false
          type: boolean
      - description: include custom fields
        in: query
        name: includeCustomFields
        schema:
          default: false
          type: boolean
      - description: optional to include completed projects when filtering by project
          statuses "current,late".
        in: query
        name: includeCompletedStatus
        schema:
          type: boolean
      - description: include archived projects
        in: query
        name: includeArchivedProjects
        schema:
          default: false
          type: boolean
      - description: hide projects where the logged-in user is just an observer
        in: query
        name: hideObservedProjects
        schema:
          default: false
          type: boolean
      - description: filter by project tag ids
        explode: false
        in: query
        name: projectTagIds
        schema:
          items:
            type: integer
          type: array
        style: form
      - description: filter by project owner ids
        explode: false
        in: query
        name: projectOwnerIds
        schema:
          items:
            type: integer
          type: array
        style: form
      - description: filter by project ids
        explode: false
        in: query
        name: projectIds
        schema:
          items:
            type: integer
          type: array
        style: form
      - description: filter by company ids
        explode: false
        in: query
        name: projectCompanyIds
        schema:
          items:
            type: integer
          type: array
        style: form
      - description: filter by project category ids
        explode: false
        in: query
        name: projectCategoryIds
        schema:
          items:
            type: integer
          type: array
        style: form
      - description: include (not used when generating reports)
        explode: false
        in: query
        name: include
        schema:
          enum:
          - projectOwners
          - projectUpdates
          - companies
          - projectCategories
          - portfolioCards
          - portfolioBoards
          - portfolioColumns
          - tags
          - customfields
          - customfieldProjects
          - projectBudgets
          items:
            type: string
          type: array
        style: form
      - explode: false
        in: query
        name: fields[users]
        schema:
          enum:
          - id
          - firstName
          - lastName
          - email
          - companyId
          - isAdmin
          - type
          items:
            type: string
          type: array
        style: form
      - explode: false
        in: query
        name: fields[tags]
        schema:
          enum:
          - id
          - name
          - color
          - count
          items:
            type: string
          type: array
        style: form
      - explode: false
        in: query
        name: fields[projects]
        schema:
          enum:
          - id
          - name
          items:
            type: string
          type: array
        style: form
      - explode: false
        in: query
        name: fields[projectcategories]
        schema:
          enum:
          - id
          - name
          - color
          items:
            type: string
          type: array
        style: form
      - explode: false
        in: query
        name: fields[projectUpdates]
        schema:
          enum:
          - id
          - projectId
          - text
          - isActive
          - health
          - color
          - dateCreated
          - deleted
          - deletedDate
          - numLikes
          - reactions
          items:
            type: string
          type: array
        style: form
      - explode: false
        in: query
        name: fields[projectBudgets]
        schema:
          enum:
          - id
          - projectId
          - type
          - status
          - capacityUsed
          - capacity
          - |-
            originatorBudgetId
            isRepeating
          - repeatPeriod
          - repeatUnit
          - repeatsRemaining
          - sequenceNumber
          - |-
            startDateTime
            endDateTime
          - currencyCode
          - timelogType
          - expenseType
          - defaultRate
          - |-
            notificationIds
            createdByUserId
          - dateCreated
          - updatedUserId
          - dateUpdated
          - |-
            completedByUserId
            dateCompleted
          - deletedByUserId
          - dateDeleted
          items:
            type: string
          type: array
        style: form
      - explode: false
        in: query
        name: fields[portfolioColumns]
        schema:
          enum:
          - id
          - name
          - color
          items:
            type: string
          type: array
        style: form
      - explode: false
        in: query
        name: fields[portfolioCards]
        schema:
          enum:
          - id
          - columnId
          - projectId
          items:
            type: string
          type: array
        style: form
      - explode: false
        in: query
        name: fields[portfolioBoards]
        schema:
          enum:
          - id
          - name
          - color
          items:
            type: string
          type: array
        style: form
      - explode: false
        in: query
        name: fields[customfields]
        schema:
          enum:
          - id
          - projectId
          - entity
          - name
          - description
          - type
          - options
          - visibilities
          - isPrivate
          - required
          - createdAt
          - createdByUserId
          - updatedAt
          - updatedByUserId
          - deleted
          - deletedAt
          - deletedByUserId
          items:
            type: string
          type: array
        style: form
      - explode: false
        in: query
        name: fields[customfieldProjects]
        schema:
          enum:
          - id
          - customfieldId
          - value
          - createdAt
          - createdBy
          items:
            type: string
          type: array
        style: form
      - explode: false
        in: query
        name: fields[companies]
        schema:
          enum:
          - id
          - name
          - logoUploadedToServer
          - logoImage
          items:
            type: string
          type: array
        style: form
      responses:
        "200":
          content: {}
          description: 200 OK (no data)
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/view.ErrorResponse'
            application/vnd.openxmlformats-officedocument.spreadsheetml.sheet:
              schema:
                $ref: '#/components/schemas/view.ErrorResponse'
          description: 400 Bad Request
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/view.ErrorResponse'
            application/vnd.openxmlformats-officedocument.spreadsheetml.sheet:
              schema:
                $ref: '#/components/schemas/view.ErrorResponse'
          description: 403 Forbidden
      summary: Generate project report in XLSX format
      tags:
      - Projects
  /projects/api/v3/projects/:id.json:
    get:
      description: |-
        On this endpoint you can filter by project custom fields. The syntax for the
        query parameter is the following:

            projectCustomField[id][op]=value

        Where:
          - [id] is the custom field ID
          - [op] is the operator to apply when filtering, different operators are
            allowed according to the custom field type
          - [value] is the value to apply when filtering

        For example, if I want to filter a dropdown custom field with ID 10 to only
        return entries that have the value "Option1" we would do the following:

            projectCustomField[10][eq]=Option1

        The allowed operators are:
          - like
          - not-like
          - eq
          - not
          - lt
          - gt
          - any
      operationId: GET_projects_api_v3_projects_:id.json
      parameters:
      - description: updated after
        in: query
        name: updatedAfter
        schema:
          format: date-time
          type: string
      - description: filter by project name
        in: query
        name: searchTerm
        schema:
          type: string
      - description: define the format of the report
        in: query
        name: reportType
        schema:
          default: project
          enum:
          - project
          - health
          type: string
      - description: define the format of the report
        in: query
        name: reportFormat
        schema:
          default: pdf
          enum:
          - csv
          - html
          - pdf
          - xls
          type: string
      - description: filter by project type
        in: query
        name: projectType
        schema:
          type: string
      - description: filter by project status
        in: query
        name: projectStatuses
        schema:
          enum:
          - active
          - current
          - late
          - upcoming
          - completed
          - deleted
          type: string
      - description: order mode
        in: query
        name: orderMode
        schema:
          default: asc
          enum:
          - asc
          - desc
          type: string
      - description: order by
        in: query
        name: orderBy
        schema:
          default: name
          enum:
          - companyname
          - datecreated
          - duedate
          - lastactivity
          - name
          - namecaseinsensitive
          - ownercompany
          - starred
          type: string
      - description: filter by min last activity date
        in: query
        name: minLastActivityDate
        schema:
          format: date
          type: string
      - description: filter by max last activity date
        in: query
        name: maxLastActivityDate
        schema:
          format: date
          type: string
      - description: filter by user id
        in: query
        name: userId
        schema:
          type: integer
      - description: |-
          filter by project healths

          0: not set
          1: bad
          2: ok
          3: good
        in: query
        name: projectHealths
        schema:
          enum:
          - 0
          - 1
          - 2
          - 3
          type: integer
      - description: number of items in a page (not used when generating reports)
        in: query
        name: pageSize
        schema:
          default: 50
          type: integer
      - description: page number (not used when generating reports)
        in: query
        name: page
        schema:
          default: 1
          type: integer
      - description: filter by starred projects only
        in: query
        name: onlyStarredProjects
        schema:
          type: boolean
      - description: only show projects with explicit membership
        in: query
        name: onlyProjectsWithExplicitMembership
        schema:
          default: false
          type: boolean
      - description: return only archived projects
        in: query
        name: onlyArchivedProjects
        schema:
          default: false
          type: boolean
      - description: match all project tags
        in: query
        name: matchAllProjectTags
        schema:
          type: boolean
      - description: generate a report document
        in: query
        name: isReportDownload
        schema:
          default: false
          type: boolean
      - description: fetch user-specific data such as isStarred
        in: query
        name: includeProjectUserInfo
        schema:
          default: false
          type: boolean
      - description: include custom fields
        in: query
        name: includeCustomFields
        schema:
          default: false
          type: boolean
      - description: optional to include completed projects when filtering by project
          statuses "current,late".
        in: query
        name: includeCompletedStatus
        schema:
          type: boolean
      - description: include archived projects
        in: query
        name: includeArchivedProjects
        schema:
          default: false
          type: boolean
      - description: hide projects where the logged-in user is just an observer
        in: query
        name: hideObservedProjects
        schema:
          default: false
          type: boolean
      - description: filter by project tag ids
        explode: false
        in: query
        name: projectTagIds
        schema:
          items:
            type: integer
          type: array
        style: form
      - description: filter by project owner ids
        explode: false
        in: query
        name: projectOwnerIds
        schema:
          items:
            type: integer
          type: array
        style: form
      - description: filter by project ids
        explode: false
        in: query
        name: projectIds
        schema:
          items:
            type: integer
          type: array
        style: form
      - description: filter by company ids
        explode: false
        in: query
        name: projectCompanyIds
        schema:
          items:
            type: integer
          type: array
        style: form
      - description: filter by project category ids
        explode: false
        in: query
        name: projectCategoryIds
        schema:
          items:
            type: integer
          type: array
        style: form
      - description: include (not used when generating reports)
        explode: false
        in: query
        name: include
        schema:
          enum:
          - projectOwners
          - projectUpdates
          - companies
          - projectCategories
          - portfolioCards
          - portfolioBoards
          - portfolioColumns
          - tags
          - customfields
          - customfieldProjects
          - projectBudgets
          items:
            type: string
          type: array
        style: form
      - explode: false
        in: query
        name: fields[users]
        schema:
          enum:
          - id
          - firstName
          - lastName
          - email
          - companyId
          - isAdmin
          - type
          items:
            type: string
          type: array
        style: form
      - explode: false
        in: query
        name: fields[tags]
        schema:
          enum:
          - id
          - name
          - color
          - count
          items:
            type: string
          type: array
        style: form
      - explode: false
        in: query
        name: fields[projects]
        schema:
          enum:
          - id
          - name
          items:
            type: string
          type: array
        style: form
      - explode: false
        in: query
        name: fields[projectcategories]
        schema:
          enum:
          - id
          - name
          - color
          items:
            type: string
          type: array
        style: form
      - explode: false
        in: query
        name: fields[projectUpdates]
        schema:
          enum:
          - id
          - projectId
          - text
          - isActive
          - health
          - color
          - dateCreated
          - deleted
          - deletedDate
          - numLikes
          - reactions
          items:
            type: string
          type: array
        style: form
      - explode: false
        in: query
        name: fields[projectBudgets]
        schema:
          enum:
          - id
          - projectId
          - type
          - status
          - capacityUsed
          - capacity
          - |-
            originatorBudgetId
            isRepeating
          - repeatPeriod
          - repeatUnit
          - repeatsRemaining
          - sequenceNumber
          - |-
            startDateTime
            endDateTime
          - currencyCode
          - timelogType
          - expenseType
          - defaultRate
          - |-
            notificationIds
            createdByUserId
          - dateCreated
          - updatedUserId
          - dateUpdated
          - |-
            completedByUserId
            dateCompleted
          - deletedByUserId
          - dateDeleted
          items:
            type: string
          type: array
        style: form
      - explode: false
        in: query
        name: fields[portfolioColumns]
        schema:
          enum:
          - id
          - name
          - color
          items:
            type: string
          type: array
        style: form
      - explode: false
        in: query
        name: fields[portfolioCards]
        schema:
          enum:
          - id
          - columnId
          - projectId
          items:
            type: string
          type: array
        style: form
      - explode: false
        in: query
        name: fields[portfolioBoards]
        schema:
          enum:
          - id
          - name
          - color
          items:
            type: string
          type: array
        style: form
      - explode: false
        in: query
        name: fields[customfields]
        schema:
          enum:
          - id
          - projectId
          - entity
          - name
          - description
          - type
          - options
          - visibilities
          - isPrivate
          - required
          - createdAt
          - createdByUserId
          - updatedAt
          - updatedByUserId
          - deleted
          - deletedAt
          - deletedByUserId
          items:
            type: string
          type: array
        style: form
      - explode: false
        in: query
        name: fields[customfieldProjects]
        schema:
          enum:
          - id
          - customfieldId
          - value
          - createdAt
          - createdBy
          items:
            type: string
          type: array
        style: form
      - explode: false
        in: query
        name: fields[companies]
        schema:
          enum:
          - id
          - name
          - logoUploadedToServer
          - logoImage
          items:
            type: string
          type: array
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/project.SingleResponse'
          description: 200 OK
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/view.ErrorResponse'
          description: 400 Bad Request
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/view.ErrorResponse'
          description: 403 Forbidden
        "404":
          content: {}
          description: 404 Not Found (no data)
      summary: Returns a project
      tags:
      - Project
  /projects/api/v3/projects/:id/featuresorder.json:
    get:
      operationId: GET_projects_api_v3_projects_:id_featuresorder.json
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/project.FeatureOrderResponse'
          description: 200 OK
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/view.ErrorResponse'
          description: 400 Bad Request
      summary: Returns a project features order to display in tab
      tags:
      - Project
    put:
      operationId: PUT_projects_api_v3_projects_:id_featuresorder.json
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/project.FeatureOrderResponse'
          description: 200 OK
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/view.ErrorResponse'
          description: 400 Bad Request
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/view.ErrorResponse'
          description: 403 Forbidden
      summary: Sets the the features order to display in tab
      tags:
      - Project
  /projects/api/v3/projects/:id/files/usage.json:
    get:
      description: Retrieves all file space used on account for a specific project.
      operationId: GET_projects_api_v3_projects_:id_files_usage.json
      parameters:
      - description: filter by a specific project
        in: query
        name: projectId
        schema:
          type: integer
      - description: include
        explode: false
        in: query
        name: include
        schema:
          enum:
          - projects
          items:
            type: string
          type: array
        style: form
      - explode: false
        in: query
        name: fields[projects]
        schema:
          enum:
          - id
          - name
          items:
            type: string
          type: array
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/file.UsageResponse'
          description: 200 OK
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/view.ErrorResponse'
          description: 400 Bad Request
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/view.ErrorResponse'
          description: 403 Forbidden
        "404":
          content: {}
          description: 404 Not Found (no data)
      summary: Retrieve file usage on a project
      tags:
      - Files
      x-private: true
  /projects/api/v3/projects/:projectId/customfields.json:
    get:
      description: Return all custom field values from a specific project.
      operationId: GET_projects_api_v3_projects_:projectId_customfields.json
      parameters:
      - description: updated after
        in: query
        name: updatedAfter
        schema:
          format: date-time
          type: string
      - description: filter by project name
        in: query
        name: searchTerm
        schema:
          type: string
      - description: define the format of the report
        in: query
        name: reportType
        schema:
          default: project
          enum:
          - project
          - health
          type: string
      - description: define the format of the report
        in: query
        name: reportFormat
        schema:
          default: pdf
          enum:
          - csv
          - html
          - pdf
          - xls
          type: string
      - description: filter by project type
        in: query
        name: projectType
        schema:
          type: string
      - description: filter by project status
        in: query
        name: projectStatuses
        schema:
          enum:
          - active
          - current
          - late
          - upcoming
          - completed
          - deleted
          type: string
      - description: order mode
        in: query
        name: orderMode
        schema:
          default: asc
          enum:
          - asc
          - desc
          type: string
      - description: order by
        in: query
        name: orderBy
        schema:
          default: name
          enum:
          - companyname
          - datecreated
          - duedate
          - lastactivity
          - name
          - namecaseinsensitive
          - ownercompany
          - starred
          type: string
      - description: filter by min last activity date
        in: query
        name: minLastActivityDate
        schema:
          format: date
          type: string
      - description: filter by max last activity date
        in: query
        name: maxLastActivityDate
        schema:
          format: date
          type: string
      - description: filter by user id
        in: query
        name: userId
        schema:
          type: integer
      - description: |-
          filter by project healths

          0: not set
          1: bad
          2: ok
          3: good
        in: query
        name: projectHealths
        schema:
          enum:
          - 0
          - 1
          - 2
          - 3
          type: integer
      - description: number of items in a page (not used when generating reports)
        in: query
        name: pageSize
        schema:
          default: 50
          type: integer
      - description: page number (not used when generating reports)
        in: query
        name: page
        schema:
          default: 1
          type: integer
      - description: filter by starred projects only
        in: query
        name: onlyStarredProjects
        schema:
          type: boolean
      - description: only show projects with explicit membership
        in: query
        name: onlyProjectsWithExplicitMembership
        schema:
          default: false
          type: boolean
      - description: return only archived projects
        in: query
        name: onlyArchivedProjects
        schema:
          default: false
          type: boolean
      - description: match all project tags
        in: query
        name: matchAllProjectTags
        schema:
          type: boolean
      - description: generate a report document
        in: query
        name: isReportDownload
        schema:
          default: false
          type: boolean
      - description: fetch user-specific data such as isStarred
        in: query
        name: includeProjectUserInfo
        schema:
          default: false
          type: boolean
      - description: include custom fields
        in: query
        name: includeCustomFields
        schema:
          default: false
          type: boolean
      - description: optional to include completed projects when filtering by project
          statuses "current,late".
        in: query
        name: includeCompletedStatus
        schema:
          type: boolean
      - description: include archived projects
        in: query
        name: includeArchivedProjects
        schema:
          default: false
          type: boolean
      - description: hide projects where the logged-in user is just an observer
        in: query
        name: hideObservedProjects
        schema:
          default: false
          type: boolean
      - description: filter by project tag ids
        explode: false
        in: query
        name: projectTagIds
        schema:
          items:
            type: integer
          type: array
        style: form
      - description: filter by project owner ids
        explode: false
        in: query
        name: projectOwnerIds
        schema:
          items:
            type: integer
          type: array
        style: form
      - description: filter by project ids
        explode: false
        in: query
        name: projectIds
        schema:
          items:
            type: integer
          type: array
        style: form
      - description: filter by company ids
        explode: false
        in: query
        name: projectCompanyIds
        schema:
          items:
            type: integer
          type: array
        style: form
      - description: filter by project category ids
        explode: false
        in: query
        name: projectCategoryIds
        schema:
          items:
            type: integer
          type: array
        style: form
      - description: include (not used when generating reports)
        explode: false
        in: query
        name: include
        schema:
          enum:
          - projectOwners
          - projectUpdates
          - companies
          - projectCategories
          - portfolioCards
          - portfolioBoards
          - portfolioColumns
          - tags
          - customfields
          - customfieldProjects
          - projectBudgets
          items:
            type: string
          type: array
        style: form
      - explode: false
        in: query
        name: fields[users]
        schema:
          enum:
          - id
          - firstName
          - lastName
          - email
          - companyId
          - isAdmin
          - type
          items:
            type: string
          type: array
        style: form
      - explode: false
        in: query
        name: fields[tags]
        schema:
          enum:
          - id
          - name
          - color
          - count
          items:
            type: string
          type: array
        style: form
      - explode: false
        in: query
        name: fields[projects]
        schema:
          enum:
          - id
          - name
          items:
            type: string
          type: array
        style: form
      - explode: false
        in: query
        name: fields[projectcategories]
        schema:
          enum:
          - id
          - name
          - color
          items:
            type: string
          type: array
        style: form
      - explode: false
        in: query
        name: fields[projectUpdates]
        schema:
          enum:
          - id
          - projectId
          - text
          - isActive
          - health
          - color
          - dateCreated
          - deleted
          - deletedDate
          - numLikes
          - reactions
          items:
            type: string
          type: array
        style: form
      - explode: false
        in: query
        name: fields[projectBudgets]
        schema:
          enum:
          - id
          - projectId
          - type
          - status
          - capacityUsed
          - capacity
          - |-
            originatorBudgetId
            isRepeating
          - repeatPeriod
          - repeatUnit
          - repeatsRemaining
          - sequenceNumber
          - |-
            startDateTime
            endDateTime
          - currencyCode
          - timelogType
          - expenseType
          - defaultRate
          - |-
            notificationIds
            createdByUserId
          - dateCreated
          - updatedUserId
          - dateUpdated
          - |-
            completedByUserId
            dateCompleted
          - deletedByUserId
          - dateDeleted
          items:
            type: string
          type: array
        style: form
      - explode: false
        in: query
        name: fields[portfolioColumns]
        schema:
          enum:
          - id
          - name
          - color
          items:
            type: string
          type: array
        style: form
      - explode: false
        in: query
        name: fields[portfolioCards]
        schema:
          enum:
          - id
          - columnId
          - projectId
          items:
            type: string
          type: array
        style: form
      - explode: false
        in: query
        name: fields[portfolioBoards]
        schema:
          enum:
          - id
          - name
          - color
          items:
            type: string
          type: array
        style: form
      - explode: false
        in: query
        name: fields[customfields]
        schema:
          enum:
          - id
          - projectId
          - entity
          - name
          - description
          - type
          - options
          - visibilities
          - isPrivate
          - required
          - createdAt
          - createdByUserId
          - updatedAt
          - updatedByUserId
          - deleted
          - deletedAt
          - deletedByUserId
          items:
            type: string
          type: array
        style: form
      - explode: false
        in: query
        name: fields[customfieldProjects]
        schema:
          enum:
          - id
          - customfieldId
          - value
          - createdAt
          - createdBy
          items:
            type: string
          type: array
        style: form
      - explode: false
        in: query
        name: fields[companies]
        schema:
          enum:
          - id
          - name
          - logoUploadedToServer
          - logoImage
          items:
            type: string
          type: array
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/project.CustomFieldProjectsResponse'
          description: 200 OK
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/view.ErrorResponse'
          description: 400 Bad Request
      summary: Project custom field values.
      tags:
      - CustomFields
      x-private: true
    post:
      description: Add a project custom field value.
      operationId: POST_projects_api_v3_projects_:projectId_customfields.json
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/project.Request'
        required: true
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/project.Response'
          description: 201 Created
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/view.ErrorResponse'
          description: 400 Bad Request
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/view.ErrorResponse'
          description: 403 Forbidden
      summary: Add project custom field value.
      tags:
      - CustomFields
      x-private: true
      x-codegen-request-body-name: project.Request
  /projects/api/v3/projects/:projectId/customfields/:id.json:
    delete:
      description: Removes a project custom field value.
      operationId: DELETE_projects_api_v3_projects_:projectId_customfields_:id.json
      responses:
        "204":
          content: {}
          description: 204 No Content (no data)
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/view.ErrorResponse'
          description: 400 Bad Request
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/view.ErrorResponse'
          description: 403 Forbidden
        "404":
          content: {}
          description: 404 Not Found (no data)
      summary: Delete an existing project custom field value.
      tags:
      - CustomFields
      x-private: true
    get:
      description: Return a specific custom field value from a project.
      operationId: GET_projects_api_v3_projects_:projectId_customfields_:id.json
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/project.Response'
          description: 200 OK
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/view.ErrorResponse'
          description: 400 Bad Request
        "404":
          content: {}
          description: 404 Not Found (no data)
      summary: Project custom field value.
      tags:
      - CustomFields
      x-private: true
    patch:
      description: Edit a project custom field value.
      operationId: PATCH_projects_api_v3_projects_:projectId_customfields_:id.json
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/project.Request'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/project.Response'
          description: 200 OK
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/view.ErrorResponse'
          description: 400 Bad Request
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/view.ErrorResponse'
          description: 403 Forbidden
        "404":
          content: {}
          description: 404 Not Found (no data)
        "409":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/view.ErrorResponse'
          description: 409 Conflict
      summary: Update an existing project custom field value.
      tags:
      - CustomFields
      x-private: true
      x-codegen-request-body-name: project.Request
  /projects/api/v3/projects/:projectId/customfields/bulk/delete.json:
    post:
      description: Remove many entries of project custom field values at once.
      operationId: POST_projects_api_v3_projects_:projectId_customfields_bulk_delete.json
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/project.BulkDeleteRequest'
        required: true
      responses:
        "204":
          content: {}
          description: 204 No Content (no data)
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/view.ErrorResponse'
          description: 400 Bad Request
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/view.ErrorResponse'
          description: 403 Forbidden
        "404":
          content: {}
          description: 404 Not Found (no data)
      summary: Delete many project custom fields values at once.
      tags:
      - CustomFields
      x-private: true
      x-codegen-request-body-name: project.BulkDeleteRequest
  /projects/api/v3/projects/:projectId/customfields/bulk/update.json:
    post:
      description: Edit many entries of project custom field values at once.
      operationId: POST_projects_api_v3_projects_:projectId_customfields_bulk_update.json
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/project.BulkUpdateRequest'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/project.CustomFieldProjectsResponse'
          description: 200 OK
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/view.ErrorResponse'
          description: 400 Bad Request
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/view.ErrorResponse'
          description: 403 Forbidden
        "404":
          content: {}
          description: 404 Not Found (no data)
        "409":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/view.ErrorResponse'
          description: 409 Conflict
      summary: Update many project custom field values at once.
      tags:
      - CustomFields
      x-private: true
      x-codegen-request-body-name: project.BulkUpdateRequest
  /projects/api/v3/projects/:projectId/latestactivity:
    get:
      description: |-
        Lists the latest activity for a specific project. When you access a project
        you will see all the recent activity. This corresponds to that view in
        Teamwork. There is some parameters you can send in to filter your results.
      operationId: GET_projects_api_v3_projects_:projectId_latestactivity
      parameters:
      - description: filter by updated after date
        in: query
        name: updatedAfter
        schema:
          format: date-time
          type: string
      - description: filter by start datetime
        in: query
        name: startDate
        schema:
          format: date-time
          type: string
      - description: sort by
        in: query
        name: sort
        schema:
          type: string
      - description: list of project status
        in: query
        name: projectStatuses
        schema:
          type: string
      - description: filter by project status
        in: query
        name: projectStatus
        schema:
          type: string
      - description: order mode
        in: query
        name: orderMode
        schema:
          enum:
          - asc
          - desc
          type: string
      - description: filter by end datetime
        in: query
        name: endDate
        schema:
          format: date-time
          type: string
      - description: filter by activity types
        in: query
        name: activityTypes
        schema:
          enum:
          - task
          - tasklist
          - project
          - message
          - notebook
          - milestone
          - like
          - file
          - link
          - billinginvoice
          - task_comment
          - milestone_comment
          - file_comment
          - link_comment
          - comment
          type: string
      - description: filter by project id
        in: query
        name: projectId
        schema:
          type: integer
      - description: list of project health
        in: query
        name: projectHealths
        schema:
          type: integer
      - description: |-
          number of items in a page
          default: 50
        in: query
        name: pageSize
        schema:
          type: integer
      - description: |-
          page number
          default: 1
        in: query
        name: page
        schema:
          type: integer
      - description: activity id offset
        in: query
        name: maxId
        schema:
          type: integer
      - description: limit results from previous id
        in: query
        name: catchupFromId
        schema:
          type: integer
      - description: |-
          include deleted items
          default: false
        in: query
        name: showDeleted
        schema:
          type: boolean
      - description: |-
          filter by starred projects only
          default: false
        in: query
        name: onlyStarredProjects
        schema:
          type: boolean
      - description: enforce all tag ids must be matched
        in: query
        name: matchAllProjectTags
        schema:
          type: boolean
      - description: include archived projects
        in: query
        name: includeArchivedProjects
        schema:
          type: boolean
      - description: group all activities on comments
        in: query
        name: groupCommentActivityType
        schema:
          type: boolean
      - description: filter by user id
        explode: false
        in: query
        name: userIds
        schema:
          items:
            type: integer
          type: array
        style: form
      - description: filter by project tag ids
        explode: false
        in: query
        name: projectTagIds
        schema:
          items:
            type: integer
          type: array
        style: form
      - description: filter by project owner ids
        explode: false
        in: query
        name: projectOwnerIds
        schema:
          items:
            type: integer
          type: array
        style: form
      - description: filter by company ids
        explode: false
        in: query
        name: projectCompanyIds
        schema:
          items:
            type: integer
          type: array
        style: form
      - description: filter by project category ids
        explode: false
        in: query
        name: projectCategoryIds
        schema:
          items:
            type: integer
          type: array
        style: form
      - description: include
        explode: false
        in: query
        name: include
        schema:
          enum:
          - projects
          - users
          - companies
          items:
            type: string
          type: array
        style: form
      - explode: false
        in: query
        name: fields[users]
        schema:
          enum:
          - id
          - firstName
          - lastName
          - email
          - companyId
          - isAdmin
          - type
          items:
            type: string
          type: array
        style: form
      - explode: false
        in: query
        name: fields[projects]
        schema:
          enum:
          - id
          - name
          items:
            type: string
          type: array
        style: form
      - explode: false
        in: query
        name: fields[companies]
        schema:
          enum:
          - id
          - name
          - logoUploadedToServer
          - logoImage
          items:
            type: string
          type: array
        style: form
      - explode: false
        in: query
        name: fields[activities]
        schema:
          enum:
          - id
          - dateTime
          - activityType
          - latestActivityType
          - itemId
          - itemLink
          - itemType
          - itemDescription
          - itemExtraDescription
          - itemExtraLink
          - itemPublicInfo
          - forUserId
          - forUserName
          - dueDate
          - isPrivate
          - lockdownId
          - projectId
          - companyId
          items:
            type: string
          type: array
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/activity.ActivitiesResponse'
          description: 200 OK
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/view.ErrorResponse'
          description: 400 Bad Request
      summary: List latest activity for a specific project.
      tags:
      - Activity
  /projects/api/v3/projects/:projectId/milestones.json:
    get:
      description: |-
        This lets you query the list of milestones for a project. You can use the
        provided filters to return only those milestones that are incomplete,
        completed, upcoming or late. This call uses pagination, returning 100
        milestones per page by default.
      operationId: GET_projects_api_v3_projects_:projectId_milestones.json
      parameters:
      - description: filter by updated after date (deprecated, use updatedAfter)
        in: query
        name: updatedAfterDate
        schema:
          format: date-time
          type: string
      - description: filter by updated after date
        in: query
        name: updatedAfter
        schema:
          format: date-time
          type: string
      - description: filter by list of milestone status
        in: query
        name: status
        schema:
          enum:
          - all
          - new
          - reopened
          - completed
          - deleted
          - pending
          - incomplete
          - late
          - today
          - upcoming
          type: string
      - description: filter by milestone name and description
        in: query
        name: searchTerm
        schema:
          type: string
      - description: define the format of the report
        in: query
        name: reportFormat
        schema:
          type: string
      - description: filter by list of project status
        in: query
        name: projectStatuses
        schema:
          type: string
      - description: filter by project status
        in: query
        name: projectStatus
        schema:
          type: string
      - description: order mode
        in: query
        name: orderMode
        schema:
          default: asc
          enum:
          - asc
          - desc
          type: string
      - description: order by
        in: query
        name: orderBy
        schema:
          default: date
          enum:
          - date
          - dateonly
          - name
          - project
          - user
          - dateCreated
          - dateUpdated
          type: string
      - description: filter by due before date (deprecated, use dueBefore)
        in: query
        name: dueBeforeDate
        schema:
          format: date
          type: string
      - description: filter by due before date
        in: query
        name: dueBefore
        schema:
          format: date
          type: string
      - description: filter by due after date (deprecated, use dueAfter)
        in: query
        name: dueAfterDate
        schema:
          format: date
          type: string
      - description: filter by due after date
        in: query
        name: dueAfter
        schema:
          format: date
          type: string
      - description: filter by list of project health
        in: query
        name: projectHealths
        schema:
          type: integer
      - description: filter by list of project health (deprecated, use projectHealths)
        in: query
        name: projectHealth
        schema:
          type: integer
      - description: number of items in a page
        in: query
        name: pageSize
        schema:
          default: 50
          type: integer
      - description: page number
        in: query
        name: page
        schema:
          default: 1
          type: integer
      - description: show private milestones
        in: query
        name: showPrivate
        schema:
          default: true
          type: boolean
      - description: show percentages completed
        in: query
        name: showPercentageCompleted
        schema:
          type: boolean
      - description: include deleted items
        in: query
        name: showDeleted
        schema:
          default: false
          type: boolean
      - description: show attached tasklists
        in: query
        name: showAttachedTasklists
        schema:
          type: boolean
      - description: include companies and teams in the search term
        in: query
        name: searchCompaniesTeams
        schema:
          type: boolean
      - description: include assignees in the search
        in: query
        name: searchAssignees
        schema:
          type: boolean
      - description: include progress of each milestone
        in: query
        name: progress
        schema:
          default: false
          type: boolean
      - description: filter by starred projects only
        in: query
        name: onlyStarredProjects
        schema:
          type: boolean
      - description: filter by projects that the logged-in user is related
        in: query
        name: onlyMyProjects
        schema:
          default: false
          type: boolean
      - description: |-
          only include milestones from projects where the user is strictly a project admin.
          site admins have visibility to all projects.
        in: query
        name: onlyAdminProjects
        schema:
          type: boolean
      - description: match all milestone tags
        in: query
        name: matchAllTags
        schema:
          type: boolean
      - description: match all project tags
        in: query
        name: matchAllProjectTags
        schema:
          type: boolean
      - description: generate a report document
        in: query
        name: isReportDownload
        schema:
          type: boolean
      - description: include milestones latest update action
        in: query
        name: includeUpdate
        schema:
          type: boolean
      - description: include today when milestone status is upcoming
        in: query
        name: includeToday
        schema:
          default: true
          type: boolean
      - description: include team users to the responsible party ids
        in: query
        name: includeTeamUserIds
        schema:
          default: true
          type: boolean
      - description: include tags in the reports
        in: query
        name: includeTags
        schema:
          default: true
          type: boolean
      - description: include percentage of tasks completed for all linked tasklists
        in: query
        name: includeProgress
        schema:
          type: boolean
      - description: optional to include completed milestones
        in: query
        name: includeCompleted
        schema:
          type: boolean
      - description: include company users to the responsible party ids
        in: query
        name: includeCompanyUserIds
        schema:
          default: true
          type: boolean
      - description: include teams related to the responsible user ids
        in: query
        name: includeAssigneeTeams
        schema:
          type: boolean
      - description: include companies related to the responsible user ids
        in: query
        name: includeAssigneeCompanies
        schema:
          type: boolean
      - description: include archived projects
        in: query
        name: includeArchivedProjects
        schema:
          default: false
          type: boolean
      - description: convert emoji alias to unicode
        in: query
        name: emoji
        schema:
          default: true
          type: boolean
      - description: count unread comments
        in: query
        name: countUnreadComments
        schema:
          default: false
          type: boolean
      - description: enables the calendar style layout
        in: query
        name: calendar
        schema:
          default: false
          type: boolean
      - description: filter by milestone tag ids
        explode: false
        in: query
        name: tagIds
        schema:
          items:
            type: integer
          type: array
        style: form
      - description: filter by project tag ids
        explode: false
        in: query
        name: projectTagIds
        schema:
          items:
            type: integer
          type: array
        style: form
      - description: filter by project owner ids
        explode: false
        in: query
        name: projectOwnerIds
        schema:
          items:
            type: integer
          type: array
        style: form
      - description: filter by project ids
        explode: false
        in: query
        name: projectIds
        schema:
          items:
            type: integer
          type: array
        style: form
      - description: filter by company ids
        explode: false
        in: query
        name: projectCompanyIds
        schema:
          items:
            type: integer
          type: array
        style: form
      - description: filter by project category ids
        explode: false
        in: query
        name: projectCategoryIds
        schema:
          items:
            type: integer
          type: array
        style: form
      - description: include
        explode: false
        in: query
        name: include
        schema:
          enum:
          - projects
          - projects.companies
          - users
          - completedBy
          - createdBy
          - deletedBy
          - updatedBy
          - commentFollowers
          - changeFollowers
          - tags
          - tasklists
          - tasklists.tasks
          items:
            type: string
          type: array
        style: form
      - description: filter by ids
        explode: false
        in: query
        name: ids
        schema:
          items:
            type: integer
          type: array
        style: form
      - description: filter by followers' ids
        explode: false
        in: query
        name: followerIds
        schema:
          items:
            type: integer
          type: array
        style: form
      - explode: false
        in: query
        name: fields[users]
        schema:
          enum:
          - id
          - firstName
          - lastName
          - email
          - companyId
          - isAdmin
          - type
          items:
            type: string
          type: array
        style: form
      - explode: false
        in: query
        name: fields[tasks]
        schema:
          enum:
          - id
          - name
          - dateUpdated
          - parentTaskId
          - isPrivate
          - status
          - tasklistId
          - startDate
          - dueDate
          items:
            type: string
          type: array
        style: form
      - explode: false
        in: query
        name: fields[tasklists]
        schema:
          enum:
          - id
          - name
          - projectId
          - milestoneId
          items:
            type: string
          type: array
        style: form
      - explode: false
        in: query
        name: fields[tags]
        schema:
          enum:
          - id
          - name
          - color
          - count
          items:
            type: string
          type: array
        style: form
      - explode: false
        in: query
        name: fields[projects]
        schema:
          enum:
          - id
          - name
          items:
            type: string
          type: array
        style: form
      - explode: false
        in: query
        name: fields[milestones]
        schema:
          enum:
          - id
          - name
          - description
          - deadline
          - completed
          - projectId
          - createdOn
          - lastChangedOn
          - creatorUserId
          - reminder
          - private
          - lockdownId
          - status
          - completedOn
          - completerId
          - percentageComplete
          items:
            type: string
          type: array
        style: form
      - explode: false
        in: query
        name: fields[companies]
        schema:
          enum:
          - id
          - name
          - logoUploadedToServer
          - logoImage
          items:
            type: string
          type: array
        style: form
      - description: filter by creators' ids
        explode: false
        in: query
        name: creatorIds
        schema:
          items:
            type: integer
          type: array
        style: form
      - description: filter by assigned user ids
        explode: false
        in: query
        name: assignedToUserIds
        schema:
          items:
            type: integer
          type: array
        style: form
      - description: filter by assigned team ids
        explode: false
        in: query
        name: assignedToTeamIds
        schema:
          items:
            type: integer
          type: array
        style: form
      - description: filter by assigned company ids
        explode: false
        in: query
        name: assignedToCompanyIds
        schema:
          items:
            type: integer
          type: array
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/milestone.MilestonesResponse'
          description: 200 OK
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/view.ErrorResponse'
          description: 400 Bad Request
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/view.ErrorResponse'
          description: 403 Forbidden
      summary: Get milestones in a project
      tags:
      - Milestones
  /projects/api/v3/projects/:projectId/notebooks.json:
    post:
      operationId: POST_projects_api_v3_projects_:projectId_notebooks.json
      parameters:
      - description: parse Emoji's
        in: query
        name: getEmoji
        schema:
          type: boolean
      - description: include
        explode: false
        in: query
        name: include
        schema:
          enum:
          - projects
          - tags
          - users
          - notebookCategories
          - companies
          - teams
          items:
            type: string
          type: array
        style: form
      - explode: false
        in: query
        name: fields[users]
        schema:
          enum:
          - id
          - firstName
          - lastName
          - email
          - companyId
          - isAdmin
          - type
          items:
            type: string
          type: array
        style: form
      - explode: false
        in: query
        name: fields[teams]
        schema:
          enum:
          - id
          - name
          - teamLogo
          - teamLogoIcon
          - teamLogoColor
          items:
            type: string
          type: array
        style: form
      - explode: false
        in: query
        name: fields[tags]
        schema:
          enum:
          - id
          - name
          - color
          - count
          items:
            type: string
          type: array
        style: form
      - explode: false
        in: query
        name: fields[projects]
        schema:
          enum:
          - id
          - name
          items:
            type: string
          type: array
        style: form
      - explode: false
        in: query
        name: fields[notebookCategories]
        schema:
          items:
            type: string
          type: array
        style: form
      - explode: false
        in: query
        name: fields[companies]
        schema:
          enum:
          - id
          - name
          - logoUploadedToServer
          - logoImage
          items:
            type: string
          type: array
        style: form
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/notebook.Request'
        required: true
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/notebook.Response'
          description: 201 Created
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/view.ErrorResponse'
          description: 400 Bad Request
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/view.ErrorResponse'
          description: 403 Forbidden
      summary: Create a new notebook.
      tags:
      - Notebooks
      x-codegen-request-body-name: notebook.Request
  /projects/api/v3/projects/:projectId/risks:
    get:
      description: |-
        Return all risks for a specific project. Only filters that the logged-in user
        has access will be returned.
      operationId: GET_projects_api_v3_projects_:projectId_risks
      parameters:
      - description: filter by risks updated after specified date (deprecated, use
          updatedAfter)
        in: query
        name: updatedAfterDate
        schema:
          format: date-time
          type: string
      - description: filter by risks updated after specified date
        in: query
        name: updatedAfter
        schema:
          format: date-time
          type: string
      - description: filter by risk statuses
        in: query
        name: statuses
        schema:
          enum:
          - new
          - pending
          - closed
          type: string
      - description: sort order (deprecated, use orderMode)
        in: query
        name: sortOrder
        schema:
          enum:
          - asc
          - desc
          type: string
      - description: sort by (deprecated, use orderBy)
        in: query
        name: sort
        schema:
          enum:
          - datecreated
          - source
          - probability
          - impact
          - result
          - project
          type: string
      - description: search term
        in: query
        name: searchTerm
        schema:
          type: string
      - description: |-
          define the format of the report
          default: pdf
        in: query
        name: reportFormat
        schema:
          type: string
      - description: list of project statuses
        in: query
        name: projectStatuses
        schema:
          type: string
      - description: sort order
        in: query
        name: orderMode
        schema:
          enum:
          - asc
          - desc
          type: string
      - description: sort by
        in: query
        name: orderBy
        schema:
          enum:
          - datecreated
          - source
          - probability
          - impact
          - result
          - project
          type: string
      - description: list of project health
        in: query
        name: projectHealths
        schema:
          type: integer
      - description: filter by probability
        in: query
        name: probabilityTo
        schema:
          type: integer
      - description: filter by probability
        in: query
        name: probabilityFrom
        schema:
          type: integer
      - description: |-
          number of items in a page
          default: 50
        in: query
        name: pageSize
        schema:
          type: integer
      - description: |-
          page number
          default: 1
        in: query
        name: page
        schema:
          type: integer
      - description: filter by impact
        in: query
        name: impactTo
        schema:
          type: integer
      - description: filter by impact
        in: query
        name: impactFrom
        schema:
          type: integer
      - description: |-
          include deleted items
          default: false
        in: query
        name: showDeleted
        schema:
          type: boolean
      - description: |-
          filter by starred projects only
          default: false
        in: query
        name: onlyStarredProjects
        schema:
          type: boolean
      - description: enforce all tag ids must be matched
        in: query
        name: matchAllProjectTags
        schema:
          type: boolean
      - description: generate a report document
        in: query
        name: isReportDownload
        schema:
          type: boolean
      - description: include archived projects
        in: query
        name: includeArchivedProjects
        schema:
          type: boolean
      - description: filter by risks that impact schedule
        in: query
        name: impactSchedule
        schema:
          type: boolean
      - description: filter by risks that impact performance
        in: query
        name: impactPerformance
        schema:
          type: boolean
      - description: filter by risks that impact cost
        in: query
        name: impactCost
        schema:
          type: boolean
      - description: filter by project tag ids
        explode: false
        in: query
        name: projectTagIds
        schema:
          items:
            type: integer
          type: array
        style: form
      - description: filter by project owner ids
        explode: false
        in: query
        name: projectOwnerIds
        schema:
          items:
            type: integer
          type: array
        style: form
      - description: filter by project ids
        explode: false
        in: query
        name: projectIds
        schema:
          items:
            type: integer
          type: array
        style: form
      - description: filter by company ids
        explode: false
        in: query
        name: projectCompanyIds
        schema:
          items:
            type: integer
          type: array
        style: form
      - description: filter by project category ids
        explode: false
        in: query
        name: projectCategoryIds
        schema:
          items:
            type: integer
          type: array
        style: form
      - description: include
        explode: false
        in: query
        name: include
        schema:
          enum:
          - projects
          - users
          - projects.companies
          items:
            type: string
          type: array
        style: form
      - explode: false
        in: query
        name: fields[users]
        schema:
          enum:
          - id
          - firstName
          - lastName
          - email
          - companyId
          - isAdmin
          - type
          items:
            type: string
          type: array
        style: form
      - explode: false
        in: query
        name: fields[risks]
        schema:
          enum:
          - id
          - source
          - probability
          - probabilityValue
          - impact
          - |-
            impactValue
            impactCost
          - impactSchedule
          - impactPerformance
          - createdOn
          - |-
            createdByUserId
            lastChangedOn
          - lastChangedByUserId
          - result
          - mitigationPlan
          - |-
            stats
            projectId
          - deleted
          - canEdit
          items:
            type: string
          type: array
        style: form
      - explode: false
        in: query
        name: fields[projects]
        schema:
          enum:
          - id
          - name
          items:
            type: string
          type: array
        style: form
      - explode: false
        in: query
        name: fields[companies]
        schema:
          enum:
          - id
          - name
          - logoUploadedToServer
          - logoImage
          items:
            type: string
          type: array
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/risk.RisksResponse'
          description: 200 OK
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/view.ErrorResponse'
          description: 400 Bad Request
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/view.ErrorResponse'
          description: 403 Forbidden
      summary: Get risks for a specific project
      tags:
      - Risks
  /projects/api/v3/projects/:projectId/tasklists.csv:
    get:
      description: |-
        Generates a task list report in CSV format containing all tasks for the
        provided filters. Only the tasks that the logged-in user can access will be
        returned.
      operationId: GET_projects_api_v3_projects_:projectId_tasklists.csv
      parameters:
      - description: filter by task date
        in: query
        name: taskDate
        schema:
          default: anytime
          enum:
          - all
          - anytime
          - completed
          - created
          - overdue
          - today
          - yesterday
          - started
          - tomorrow
          - thisweek
          - within7
          - within14
          - within30
          - within365
          - nodate
          - noduedate
          - nostartdate
          - newTaskDefaults
          - hasDate
          type: string
      - description: filter by start datetime
        in: query
        name: startDate
        schema:
          format: date-time
          type: string
      - description: define the format of the report
        in: query
        name: reportFormat
        schema:
          type: string
      - description: order mode
        in: query
        name: orderMode
        schema:
          default: asc
          enum:
          - asc
          - desc
          type: string
      - description: order by
        in: query
        name: orderBy
        schema:
          default: manual
          enum:
          - startdate
          - dateadded
          - priority
          - project
          - flattenedtasklist
          - company
          - manual
          - active
          - completedDatedesc
          - datecompleted
          - duestartdate
          - duestartdatedesc
          - alldates
          - alldatesdesc
          - duedateDESC
          - tasklistname
          - tasklistdisplayorder
          - tasklistid
          - duedate
          - dateupdated
          - taskname
          type: string
      - description: filter by end datetime
        in: query
        name: endDate
        schema:
          format: date-time
          type: string
      - description: order mode of the comments
        in: query
        name: commentsOrderMode
        schema:
          default: asc
          enum:
          - asc
          - desc
          type: string
      - description: filter by task list
        in: query
        name: tasklistId
        schema:
          type: integer
      - description: filter by project
        in: query
        name: projectId
        schema:
          type: integer
      - description: only completed tasks
        in: query
        name: onlyCompletedTasks
        schema:
          default: false
          type: boolean
      - description: generate a report document
        in: query
        name: isReportDownload
        schema:
          type: boolean
      - description: include time
        in: query
        name: includeTime
        schema:
          type: boolean
      - description: include tags
        in: query
        name: includeTags
        schema:
          default: true
          type: boolean
      - description: include private items
        in: query
        name: includePrivateItems
        schema:
          default: true
          type: boolean
      - description: include late tasks
        in: query
        name: includeLateTasks
        schema:
          type: boolean
      - description: include estimated time
        in: query
        name: includeEstimatedTime
        schema:
          default: true
          type: boolean
      - description: include custom fields
        in: query
        name: includeCustomFields
        schema:
          default: false
          type: boolean
      - description: include completed tasks
        in: query
        name: includeCompletedTasks
        schema:
          default: true
          type: boolean
      - description: include comments
        in: query
        name: includeComments
        schema:
          default: false
          type: boolean
      - description: include comment avatars
        in: query
        name: includeCommentAvatars
        schema:
          type: boolean
      - description: include columns
        in: query
        name: includeColumns
        schema:
          default: true
          type: boolean
      - description: include anytime tasks
        in: query
        name: includeAnytimeTasks
        schema:
          type: boolean
      - description: include all comments
        in: query
        name: includeAllComments
        schema:
          default: false
          type: boolean
      - description: ignore task start dates
        in: query
        name: ignoreStartDates
        schema:
          type: boolean
      - description: group by task lists
        in: query
        name: groupByTasklists
        schema:
          type: boolean
      - description: filter by tag names
        explode: false
        in: query
        name: tags
        schema:
          items:
            type: string
          type: array
        style: form
      - description: filter by tag ids
        explode: false
        in: query
        name: tagIds
        schema:
          items:
            type: integer
          type: array
        style: form
      - description: filter by assigned user ids
        explode: false
        in: query
        name: assignedToUserIds
        schema:
          items:
            type: integer
          type: array
        style: form
      - description: filter by assigned team ids
        explode: false
        in: query
        name: assignedToTeamIds
        schema:
          items:
            type: integer
          type: array
        style: form
      - description: filter by assigned company ids
        explode: false
        in: query
        name: assignedToCompanyIds
        schema:
          items:
            type: integer
          type: array
        style: form
      responses:
        "200":
          content: {}
          description: 200 OK (no data)
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/view.ErrorResponse'
            text/csv:
              schema:
                $ref: '#/components/schemas/view.ErrorResponse'
          description: 400 Bad Request
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/view.ErrorResponse'
            text/csv:
              schema:
                $ref: '#/components/schemas/view.ErrorResponse'
          description: 403 Forbidden
      summary: Generate tasklist report in CSV format
      tags:
      - TaskLists
  /projects/api/v3/projects/:projectId/tasklists.html:
    get:
      description: |-
        Generates a task list report in HTML format containing all tasks for the
        provided filters. Only the tasks that the logged-in user can access will be
        returned.
      operationId: GET_projects_api_v3_projects_:projectId_tasklists.html
      parameters:
      - description: filter by task date
        in: query
        name: taskDate
        schema:
          default: anytime
          enum:
          - all
          - anytime
          - completed
          - created
          - overdue
          - today
          - yesterday
          - started
          - tomorrow
          - thisweek
          - within7
          - within14
          - within30
          - within365
          - nodate
          - noduedate
          - nostartdate
          - newTaskDefaults
          - hasDate
          type: string
      - description: filter by start datetime
        in: query
        name: startDate
        schema:
          format: date-time
          type: string
      - description: define the format of the report
        in: query
        name: reportFormat
        schema:
          type: string
      - description: order mode
        in: query
        name: orderMode
        schema:
          default: asc
          enum:
          - asc
          - desc
          type: string
      - description: order by
        in: query
        name: orderBy
        schema:
          default: manual
          enum:
          - startdate
          - dateadded
          - priority
          - project
          - flattenedtasklist
          - company
          - manual
          - active
          - completedDatedesc
          - datecompleted
          - duestartdate
          - duestartdatedesc
          - alldates
          - alldatesdesc
          - duedateDESC
          - tasklistname
          - tasklistdisplayorder
          - tasklistid
          - duedate
          - dateupdated
          - taskname
          type: string
      - description: filter by end datetime
        in: query
        name: endDate
        schema:
          format: date-time
          type: string
      - description: order mode of the comments
        in: query
        name: commentsOrderMode
        schema:
          default: asc
          enum:
          - asc
          - desc
          type: string
      - description: filter by task list
        in: query
        name: tasklistId
        schema:
          type: integer
      - description: filter by project
        in: query
        name: projectId
        schema:
          type: integer
      - description: only completed tasks
        in: query
        name: onlyCompletedTasks
        schema:
          default: false
          type: boolean
      - description: generate a report document
        in: query
        name: isReportDownload
        schema:
          type: boolean
      - description: include time
        in: query
        name: includeTime
        schema:
          type: boolean
      - description: include tags
        in: query
        name: includeTags
        schema:
          default: true
          type: boolean
      - description: include private items
        in: query
        name: includePrivateItems
        schema:
          default: true
          type: boolean
      - description: include late tasks
        in: query
        name: includeLateTasks
        schema:
          type: boolean
      - description: include estimated time
        in: query
        name: includeEstimatedTime
        schema:
          default: true
          type: boolean
      - description: include custom fields
        in: query
        name: includeCustomFields
        schema:
          default: false
          type: boolean
      - description: include completed tasks
        in: query
        name: includeCompletedTasks
        schema:
          default: true
          type: boolean
      - description: include comments
        in: query
        name: includeComments
        schema:
          default: false
          type: boolean
      - description: include comment avatars
        in: query
        name: includeCommentAvatars
        schema:
          type: boolean
      - description: include columns
        in: query
        name: includeColumns
        schema:
          default: true
          type: boolean
      - description: include anytime tasks
        in: query
        name: includeAnytimeTasks
        schema:
          type: boolean
      - description: include all comments
        in: query
        name: includeAllComments
        schema:
          default: false
          type: boolean
      - description: ignore task start dates
        in: query
        name: ignoreStartDates
        schema:
          type: boolean
      - description: group by task lists
        in: query
        name: groupByTasklists
        schema:
          type: boolean
      - description: filter by tag names
        explode: false
        in: query
        name: tags
        schema:
          items:
            type: string
          type: array
        style: form
      - description: filter by tag ids
        explode: false
        in: query
        name: tagIds
        schema:
          items:
            type: integer
          type: array
        style: form
      - description: filter by assigned user ids
        explode: false
        in: query
        name: assignedToUserIds
        schema:
          items:
            type: integer
          type: array
        style: form
      - description: filter by assigned team ids
        explode: false
        in: query
        name: assignedToTeamIds
        schema:
          items:
            type: integer
          type: array
        style: form
      - description: filter by assigned company ids
        explode: false
        in: query
        name: assignedToCompanyIds
        schema:
          items:
            type: integer
          type: array
        style: form
      responses:
        "200":
          content: {}
          description: 200 OK (no data)
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/view.ErrorResponse'
            text/html:
              schema:
                $ref: '#/components/schemas/view.ErrorResponse'
          description: 400 Bad Request
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/view.ErrorResponse'
            text/html:
              schema:
                $ref: '#/components/schemas/view.ErrorResponse'
          description: 403 Forbidden
      summary: Generate tasklist report in HTML format
      tags:
      - TaskLists
  /projects/api/v3/projects/:projectId/tasklists.pdf:
    get:
      description: |-
        Generates a task list report in PDF format containing all tasks for the
        provided filters. Only the tasks that the logged-in user can access will be
        returned.
      operationId: GET_projects_api_v3_projects_:projectId_tasklists.pdf
      parameters:
      - description: filter by task date
        in: query
        name: taskDate
        schema:
          default: anytime
          enum:
          - all
          - anytime
          - completed
          - created
          - overdue
          - today
          - yesterday
          - started
          - tomorrow
          - thisweek
          - within7
          - within14
          - within30
          - within365
          - nodate
          - noduedate
          - nostartdate
          - newTaskDefaults
          - hasDate
          type: string
      - description: filter by start datetime
        in: query
        name: startDate
        schema:
          format: date-time
          type: string
      - description: define the format of the report
        in: query
        name: reportFormat
        schema:
          type: string
      - description: order mode
        in: query
        name: orderMode
        schema:
          default: asc
          enum:
          - asc
          - desc
          type: string
      - description: order by
        in: query
        name: orderBy
        schema:
          default: manual
          enum:
          - startdate
          - dateadded
          - priority
          - project
          - flattenedtasklist
          - company
          - manual
          - active
          - completedDatedesc
          - datecompleted
          - duestartdate
          - duestartdatedesc
          - alldates
          - alldatesdesc
          - duedateDESC
          - tasklistname
          - tasklistdisplayorder
          - tasklistid
          - duedate
          - dateupdated
          - taskname
          type: string
      - description: filter by end datetime
        in: query
        name: endDate
        schema:
          format: date-time
          type: string
      - description: order mode of the comments
        in: query
        name: commentsOrderMode
        schema:
          default: asc
          enum:
          - asc
          - desc
          type: string
      - description: filter by task list
        in: query
        name: tasklistId
        schema:
          type: integer
      - description: filter by project
        in: query
        name: projectId
        schema:
          type: integer
      - description: only completed tasks
        in: query
        name: onlyCompletedTasks
        schema:
          default: false
          type: boolean
      - description: generate a report document
        in: query
        name: isReportDownload
        schema:
          type: boolean
      - description: include time
        in: query
        name: includeTime
        schema:
          type: boolean
      - description: include tags
        in: query
        name: includeTags
        schema:
          default: true
          type: boolean
      - description: include private items
        in: query
        name: includePrivateItems
        schema:
          default: true
          type: boolean
      - description: include late tasks
        in: query
        name: includeLateTasks
        schema:
          type: boolean
      - description: include estimated time
        in: query
        name: includeEstimatedTime
        schema:
          default: true
          type: boolean
      - description: include custom fields
        in: query
        name: includeCustomFields
        schema:
          default: false
          type: boolean
      - description: include completed tasks
        in: query
        name: includeCompletedTasks
        schema:
          default: true
          type: boolean
      - description: include comments
        in: query
        name: includeComments
        schema:
          default: false
          type: boolean
      - description: include comment avatars
        in: query
        name: includeCommentAvatars
        schema:
          type: boolean
      - description: include columns
        in: query
        name: includeColumns
        schema:
          default: true
          type: boolean
      - description: include anytime tasks
        in: query
        name: includeAnytimeTasks
        schema:
          type: boolean
      - description: include all comments
        in: query
        name: includeAllComments
        schema:
          default: false
          type: boolean
      - description: ignore task start dates
        in: query
        name: ignoreStartDates
        schema:
          type: boolean
      - description: group by task lists
        in: query
        name: groupByTasklists
        schema:
          type: boolean
      - description: filter by tag names
        explode: false
        in: query
        name: tags
        schema:
          items:
            type: string
          type: array
        style: form
      - description: filter by tag ids
        explode: false
        in: query
        name: tagIds
        schema:
          items:
            type: integer
          type: array
        style: form
      - description: filter by assigned user ids
        explode: false
        in: query
        name: assignedToUserIds
        schema:
          items:
            type: integer
          type: array
        style: form
      - description: filter by assigned team ids
        explode: false
        in: query
        name: assignedToTeamIds
        schema:
          items:
            type: integer
          type: array
        style: form
      - description: filter by assigned company ids
        explode: false
        in: query
        name: assignedToCompanyIds
        schema:
          items:
            type: integer
          type: array
        style: form
      responses:
        "200":
          content: {}
          description: 200 OK (no data)
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/view.ErrorResponse'
            application/pdf:
              schema:
                $ref: '#/components/schemas/view.ErrorResponse'
          description: 400 Bad Request
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/view.ErrorResponse'
            application/pdf:
              schema:
                $ref: '#/components/schemas/view.ErrorResponse'
          description: 403 Forbidden
      summary: Generate tasklist report in PDF format
      tags:
      - TaskLists
  /projects/api/v3/projects/:projectId/tasklists.xlsx:
    get:
      description: |-
        Generates a task list report in XLSX format containing all tasks for the
        provided filters. Only the tasks that the logged-in user can access will be
        returned.
      operationId: GET_projects_api_v3_projects_:projectId_tasklists.xlsx
      parameters:
      - description: filter by task date
        in: query
        name: taskDate
        schema:
          default: anytime
          enum:
          - all
          - anytime
          - completed
          - created
          - overdue
          - today
          - yesterday
          - started
          - tomorrow
          - thisweek
          - within7
          - within14
          - within30
          - within365
          - nodate
          - noduedate
          - nostartdate
          - newTaskDefaults
          - hasDate
          type: string
      - description: filter by start datetime
        in: query
        name: startDate
        schema:
          format: date-time
          type: string
      - description: define the format of the report
        in: query
        name: reportFormat
        schema:
          type: string
      - description: order mode
        in: query
        name: orderMode
        schema:
          default: asc
          enum:
          - asc
          - desc
          type: string
      - description: order by
        in: query
        name: orderBy
        schema:
          default: manual
          enum:
          - startdate
          - dateadded
          - priority
          - project
          - flattenedtasklist
          - company
          - manual
          - active
          - completedDatedesc
          - datecompleted
          - duestartdate
          - duestartdatedesc
          - alldates
          - alldatesdesc
          - duedateDESC
          - tasklistname
          - tasklistdisplayorder
          - tasklistid
          - duedate
          - dateupdated
          - taskname
          type: string
      - description: filter by end datetime
        in: query
        name: endDate
        schema:
          format: date-time
          type: string
      - description: order mode of the comments
        in: query
        name: commentsOrderMode
        schema:
          default: asc
          enum:
          - asc
          - desc
          type: string
      - description: filter by task list
        in: query
        name: tasklistId
        schema:
          type: integer
      - description: filter by project
        in: query
        name: projectId
        schema:
          type: integer
      - description: only completed tasks
        in: query
        name: onlyCompletedTasks
        schema:
          default: false
          type: boolean
      - description: generate a report document
        in: query
        name: isReportDownload
        schema:
          type: boolean
      - description: include time
        in: query
        name: includeTime
        schema:
          type: boolean
      - description: include tags
        in: query
        name: includeTags
        schema:
          default: true
          type: boolean
      - description: include private items
        in: query
        name: includePrivateItems
        schema:
          default: true
          type: boolean
      - description: include late tasks
        in: query
        name: includeLateTasks
        schema:
          type: boolean
      - description: include estimated time
        in: query
        name: includeEstimatedTime
        schema:
          default: true
          type: boolean
      - description: include custom fields
        in: query
        name: includeCustomFields
        schema:
          default: false
          type: boolean
      - description: include completed tasks
        in: query
        name: includeCompletedTasks
        schema:
          default: true
          type: boolean
      - description: include comments
        in: query
        name: includeComments
        schema:
          default: false
          type: boolean
      - description: include comment avatars
        in: query
        name: includeCommentAvatars
        schema:
          type: boolean
      - description: include columns
        in: query
        name: includeColumns
        schema:
          default: true
          type: boolean
      - description: include anytime tasks
        in: query
        name: includeAnytimeTasks
        schema:
          type: boolean
      - description: include all comments
        in: query
        name: includeAllComments
        schema:
          default: false
          type: boolean
      - description: ignore task start dates
        in: query
        name: ignoreStartDates
        schema:
          type: boolean
      - description: group by task lists
        in: query
        name: groupByTasklists
        schema:
          type: boolean
      - description: filter by tag names
        explode: false
        in: query
        name: tags
        schema:
          items:
            type: string
          type: array
        style: form
      - description: filter by tag ids
        explode: false
        in: query
        name: tagIds
        schema:
          items:
            type: integer
          type: array
        style: form
      - description: filter by assigned user ids
        explode: false
        in: query
        name: assignedToUserIds
        schema:
          items:
            type: integer
          type: array
        style: form
      - description: filter by assigned team ids
        explode: false
        in: query
        name: assignedToTeamIds
        schema:
          items:
            type: integer
          type: array
        style: form
      - description: filter by assigned company ids
        explode: false
        in: query
        name: assignedToCompanyIds
        schema:
          items:
            type: integer
          type: array
        style: form
      responses:
        "200":
          content: {}
          description: 200 OK (no data)
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/view.ErrorResponse'
            application/vnd.openxmlformats-officedocument.spreadsheetml.sheet:
              schema:
                $ref: '#/components/schemas/view.ErrorResponse'
          description: 400 Bad Request
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/view.ErrorResponse'
            application/vnd.openxmlformats-officedocument.spreadsheetml.sheet:
              schema:
                $ref: '#/components/schemas/view.ErrorResponse'
          description: 403 Forbidden
      summary: Generate tasklist report in XLSX format
      tags:
      - TaskLists
  /projects/api/v3/projects/:projectId/time.json:
    get:
      description: |-
        Return logged time entries for a specific project. Only the time entries that
        the logged-in user can access will be returned.
      operationId: GET_projects_api_v3_projects_:projectId_time.json
      parameters:
      - description: filter by updated after date
        in: query
        name: updatedAfter
        schema:
          format: date-time
          type: string
      - description: filter by a starting date
        in: query
        name: startDate
        schema:
          format: date
          type: string
      - description: customise the report by selecting columns
        in: query
        name: selectedColumns
        schema:
          type: string
      - description: define the format of the report
        in: query
        name: reportFormat
        schema:
          type: string
      - description: filter by project statuses
        in: query
        name: projectStatuses
        schema:
          enum:
          - active
          - current
          - late
          - upcoming
          - completed
          - deleted
          type: string
      - description: filter by project status
        in: query
        name: projectStatus
        schema:
          enum:
          - active
          - current
          - late
          - upcoming
          - completed
          - deleted
          type: string
      - description: order mode
        in: query
        name: orderMode
        schema:
          default: asc
          enum:
          - asc
          - desc
          type: string
      - description: sort order
        in: query
        name: orderBy
        schema:
          default: date
          enum:
          - company
          - date
          - dateupdated
          - project
          - task
          - tasklist
          - user
          type: string
      - description: filter by invoiced type
        in: query
        name: invoicedType
        schema:
          default: all
          enum:
          - all
          - invoiced
          - not-invoiced
          type: string
      - description: filter by an ending date
        in: query
        name: endDate
        schema:
          format: date
          type: string
      - description: filter by billable type
        in: query
        name: billableType
        schema:
          default: all
          enum:
          - all
          - billable
          - non-billable
          type: string
      - description: filter by ticket id
        in: query
        name: ticketId
        schema:
          type: integer
      - description: filter by tasklist id
        in: query
        name: tasklistId
        schema:
          type: integer
      - description: filter by project id
        in: query
        name: projectId
        schema:
          type: integer
      - description: |-
          filter by project healths

          0: not set
          1: bad
          2: ok
          3: good
        in: query
        name: projectHealths
        schema:
          enum:
          - 0
          - 1
          - 2
          - 3
          type: integer
      - description: number of items in a page
        in: query
        name: pageSize
        schema:
          default: 50
          type: integer
      - description: page number
        in: query
        name: page
        schema:
          default: 1
          type: integer
      - description: filter by allocation id
        in: query
        name: allocationId
        schema:
          type: integer
      - description: include deleted items
        in: query
        name: showDeleted
        schema:
          default: false
          type: boolean
      - description: filter by starred projects only
        in: query
        name: onlyStarredProjects
        schema:
          type: boolean
      - description: match all tags
        in: query
        name: matchAllTags
        schema:
          type: boolean
      - description: generate a report document
        in: query
        name: isReportDownload
        schema:
          type: boolean
      - description: include archived projects
        in: query
        name: includeArchivedProjects
        schema:
          default: false
          type: boolean
      - description: filter by task tag ids
        explode: false
        in: query
        name: taskTagIds
        schema:
          items:
            type: integer
          type: array
        style: form
      - description: filter by tag ids
        explode: false
        in: query
        name: tagIds
        schema:
          items:
            type: integer
          type: array
        style: form
      - description: filter by project company ids
        explode: false
        in: query
        name: projectsFromCompanyId
        schema:
          items:
            type: integer
          type: array
        style: form
      - description: filter by project tag ids
        explode: false
        in: query
        name: projectTagIds
        schema:
          items:
            type: integer
          type: array
        style: form
      - description: filter by project owner ids
        explode: false
        in: query
        name: projectOwnerIds
        schema:
          items:
            type: integer
          type: array
        style: form
      - description: filter by project ids
        explode: false
        in: query
        name: projectIds
        schema:
          items:
            type: integer
          type: array
        style: form
      - description: filter by project category ids
        explode: false
        in: query
        name: projectCategoryIds
        schema:
          items:
            type: integer
          type: array
        style: form
      - description: include
        explode: false
        in: query
        name: include
        schema:
          enum:
          - projects
          - tags
          - tasks
          - tasks.parentTasks
          - tasks.tasklists
          - users
          items:
            type: string
          type: array
        style: form
      - explode: false
        in: query
        name: fields[users]
        schema:
          enum:
          - id
          - firstName
          - lastName
          - email
          - companyId
          - isAdmin
          - type
          items:
            type: string
          type: array
        style: form
      - explode: false
        in: query
        name: fields[timelogs]
        schema:
          enum:
          - id
          - dateCreated
          - minutes
          - description
          - timeLogged
          - billable
          - deleted
          - dateDeleted
          - hasStartTime
          - dateEdited
          - deskTicketId
          - invoiceNumber
          - userId
          - taskId
          - projectId
          - loggedByUserId
          - deletedByUserId
          - editedByUserId
          - taskIdPreMove
          - projectBillingInvoiceId
          items:
            type: string
          type: array
        style: form
      - explode: false
        in: query
        name: fields[tasks]
        schema:
          enum:
          - id
          - name
          - dateUpdated
          - parentTaskId
          - isPrivate
          - status
          - tasklistId
          - startDate
          - dueDate
          items:
            type: string
          type: array
        style: form
      - explode: false
        in: query
        name: fields[tasklists]
        schema:
          enum:
          - id
          - name
          - projectId
          - milestoneId
          items:
            type: string
          type: array
        style: form
      - explode: false
        in: query
        name: fields[tags]
        schema:
          enum:
          - id
          - name
          - color
          - count
          items:
            type: string
          type: array
        style: form
      - explode: false
        in: query
        name: fields[projects]
        schema:
          enum:
          - id
          - name
          items:
            type: string
          type: array
        style: form
      - description: filter by company ids
        explode: false
        in: query
        name: companyIds
        schema:
          items:
            type: integer
          type: array
        style: form
      - description: filter by assigned user ids
        explode: false
        in: query
        name: assignedToUserIds
        schema:
          items:
            type: integer
          type: array
        style: form
      - description: filter by assigned team ids
        explode: false
        in: query
        name: assignedToTeamIds
        schema:
          items:
            type: integer
          type: array
        style: form
      - description: filter by assigned company ids
        explode: false
        in: query
        name: assignedToCompanyIds
        schema:
          items:
            type: integer
          type: array
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/timelog.TimelogsResponse'
          description: 200 OK
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/view.ErrorResponse'
          description: 400 Bad Request
      summary: Get time entries for a specific project
      tags:
      - TimeTracking
  /projects/api/v3/projects/:projectId/time/total.json:
    get:
      operationId: GET_projects_api_v3_projects_:projectId_time_total.json
      parameters:
      - description: filter by project statuses
        in: query
        name: projectStatuses
        schema:
          enum:
          - active
          - current
          - late
          - upcoming
          - completed
          - deleted
          type: string
      - description: filter by project status
        in: query
        name: projectStatus
        schema:
          enum:
          - active
          - current
          - late
          - upcoming
          - completed
          - deleted
          type: string
      - description: filter by user id
        in: query
        name: userId
        schema:
          type: integer
      - description: filter by tasklist id
        in: query
        name: tasklistId
        schema:
          type: integer
      - description: filter by task id
        in: query
        name: taskId
        schema:
          type: integer
      - description: filter by project id
        in: query
        name: projectId
        schema:
          type: integer
      - description: |-
          filter by project healths

          0: not set
          1: bad
          2: ok
          3: good
        in: query
        name: projectHealths
        schema:
          enum:
          - 0
          - 1
          - 2
          - 3
          type: integer
      - description: filter by desk ticket id
        in: query
        name: deskTicketId
        schema:
          type: integer
      - description: filter by starred projects only
        in: query
        name: onlyStarredProjects
        schema:
          type: boolean
      - description: match all tags
        in: query
        name: matchAllTags
        schema:
          type: boolean
      - description: filter by user ids
        explode: false
        in: query
        name: userIds
        schema:
          items:
            type: integer
          type: array
        style: form
      - description: filter by project tag ids
        explode: false
        in: query
        name: projectTagIds
        schema:
          items:
            type: integer
          type: array
        style: form
      - description: filter by project owner ids
        explode: false
        in: query
        name: projectOwnerIds
        schema:
          items:
            type: integer
          type: array
        style: form
      - description: filter by project ids
        explode: false
        in: query
        name: projectIds
        schema:
          items:
            type: integer
          type: array
        style: form
      - description: filter by project company ids
        explode: false
        in: query
        name: projectCompanyIds
        schema:
          items:
            type: integer
          type: array
        style: form
      - description: filter by project category ids
        explode: false
        in: query
        name: projectCategoryIds
        schema:
          items:
            type: integer
          type: array
        style: form
      - description: filter by company ids
        explode: false
        in: query
        name: companyIds
        schema:
          items:
            type: integer
          type: array
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/timelog.TotalsResponse'
          description: 200 OK
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/view.ErrorResponse'
          description: 400 Bad Request
      summary: Get timelog totals.
      tags:
      - TimeTracking
  /projects/api/v3/projects/:projectIds/updates.json:
    get:
      description: Return the updates from a specific project.
      operationId: GET_projects_api_v3_projects_:projectIds_updates.json
      parameters:
      - description: list of project status
        in: query
        name: projectStatuses
        schema:
          type: string
      - description: filter by project status
        in: query
        name: projectStatus
        schema:
          type: string
      - description: order mode
        in: query
        name: orderMode
        schema:
          default: asc
          enum:
          - asc
          - desc
          type: string
      - description: order by
        in: query
        name: orderBy
        schema:
          default: date
          enum:
          - date
          - color
          - health
          - project
          - user
          type: string
      - description: filter by creation date
        in: query
        name: createdAfter
        schema:
          format: date-time
          type: string
      - description: filter by project id
        in: query
        name: projectId
        schema:
          type: integer
      - description: filter by project health
        in: query
        name: projectHealths
        schema:
          type: integer
      - description: filter by project health (deprecated, use projectHealths)
        in: query
        name: projectHealth
        schema:
          type: integer
      - description: number of items in a page
        in: query
        name: pageSize
        schema:
          default: 50
          type: integer
      - description: page number
        in: query
        name: page
        schema:
          default: 1
          type: integer
      - description: include deleted items
        in: query
        name: showDeleted
        schema:
          default: false
          type: boolean
      - description: add reactions to the response
        in: query
        name: reactions
        schema:
          default: false
          type: boolean
      - description: filter by starred projects only
        in: query
        name: onlyStarredProjects
        schema:
          type: boolean
      - description: match all project tags
        in: query
        name: matchAllProjectTags
        schema:
          type: boolean
      - description: include archived projects
        in: query
        name: includeArchivedProjects
        schema:
          type: boolean
      - description: parse emojis to unicode
        in: query
        name: emoji
        schema:
          default: true
          type: boolean
      - description: filter by active
        in: query
        name: activeOnly
        schema:
          default: true
          type: boolean
      - description: filter by project tag ids
        explode: false
        in: query
        name: projectTagIds
        schema:
          items:
            type: integer
          type: array
        style: form
      - description: filter by project owner ids
        explode: false
        in: query
        name: projectOwnerIds
        schema:
          items:
            type: integer
          type: array
        style: form
      - description: filter by company ids
        explode: false
        in: query
        name: projectCompanyIds
        schema:
          items:
            type: integer
          type: array
        style: form
      - description: filter by project category ids
        explode: false
        in: query
        name: projectCategoryIds
        schema:
          items:
            type: integer
          type: array
        style: form
      - description: include
        explode: false
        in: query
        name: include
        schema:
          enum:
          - projects
          - createdBy
          - deletedBy
          - likes.users
          items:
            type: string
          type: array
        style: form
      - explode: false
        in: query
        name: fields[users]
        schema:
          enum:
          - id
          - firstName
          - lastName
          - email
          - companyId
          - isAdmin
          - type
          items:
            type: string
          type: array
        style: form
      - explode: false
        in: query
        name: fields[projects]
        schema:
          enum:
          - id
          - name
          items:
            type: string
          type: array
        style: form
      - explode: false
        in: query
        name: fields[projectUpdates]
        schema:
          enum:
          - id
          - projectId
          - text
          - isActive
          - health
          - color
          - dateCreated
          - deleted
          - deletedDate
          - numLikes
          - reactions
          items:
            type: string
          type: array
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/update.ProjectUpdatesResponse'
          description: 200 OK
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/view.ErrorResponse'
          description: 400 Bad Request
      summary: Get all updates from a specific project
      tags:
      - ProjectUpdates
  /projects/api/v3/projects/{projectId}/summary.json:
    get:
      description: |-
        Retrieves the summary from a specific project, returning counters about
        tasks, milestones, columns, events, risks, timers, projects healths.


        On this endpoint you can filter by project custom fields. The syntax for the
        query parameter is the following:

            projectCustomField[id][op]=value

        Where:
          - [id] is the custom field ID
          - [op] is the operator to apply when filtering, different operators are
            allowed according to the custom field type
          - [value] is the value to apply when filtering

        For example, if I want to filter a dropdown custom field with ID 10 to only
        return entries that have the value "Option1" we would do the following:

            projectCustomField[10][eq]=Option1

        The allowed operators are:
          - like
          - not-like
          - eq
          - not
          - lt
          - gt
          - any
      operationId: GET_projects_api_v3_projects_{projectId}_summary.json
      parameters:
      - description: used to limit the since counters to a specific period
        in: query
        name: until
        schema:
          enum:
          - now
          - timeRange
          type: string
      - description: filter by start datetime
        in: query
        name: timeRangeStart
        schema:
          format: date-time
          type: string
      - description: filter by end datetime
        in: query
        name: timeRangeEnd
        schema:
          format: date-time
          type: string
      - description: |-
          filter by time range. It will be ignored if timeRangeStart and timeRangeEnd
          were informed.
        in: query
        name: timeRange
        schema:
          enum:
          - yesterday
          - today
          - thisweek
          - lastweek
          - thismonth
          - lastmonth
          - last3months
          - last6months
          type: string
      - description: project status (deprecated, use projectStatuses)
        in: query
        name: status
        schema:
          enum:
          - active
          - current
          - late
          - upcoming
          - completed
          - deleted
          type: string
      - description: project statuses
        in: query
        name: projectStatuses
        schema:
          enum:
          - active
          - current
          - late
          - upcoming
          - completed
          - deleted
          type: string
      - description: project status
        in: query
        name: projectStatus
        schema:
          enum:
          - active
          - current
          - late
          - upcoming
          - completed
          - deleted
          type: string
      - in: path
        name: projectId
        required: true
        schema:
          type: integer
      - description: |-
          project healths

          0: not set
          1: bad
          2: ok
          3: good
        in: query
        name: projectHealths
        schema:
          enum:
          - 0
          - 1
          - 2
          - 3
          type: integer
      - description: |-
          project health (deprecated, use projectHealths)

          0: not set
          1: bad
          2: ok
          3: good
        in: query
        name: projectHealth
        schema:
          enum:
          - 0
          - 1
          - 2
          - 3
          type: integer
      - description: |-
          project healths (deprecated, use projectHealths)

          0: not set
          1: bad
          2: ok
          3: good
        in: query
        name: health
        schema:
          enum:
          - 0
          - 1
          - 2
          - 3
          type: integer
      - description: number of days remaining to event's start
        in: query
        name: eventsDaysAhead
        schema:
          default: 7
          type: integer
      - description: enforce today is considered as start date for today's tasks
        in: query
        name: useStartDatesForTodaysTasks
        schema:
          type: boolean
      - description: filter by my unread messages only
        in: query
        name: unreadMessagesMineOnly
        schema:
          type: boolean
      - description: filter by my unread comments only
        in: query
        name: unreadCommentsMineOnly
        schema:
          type: boolean
      - description: filter by starred projects only
        in: query
        name: onlyStarredProjects
        schema:
          type: boolean
      - description: filter only project events
        in: query
        name: onlyProjectEvents
        schema:
          type: boolean
      - description: enforce all tag ids must be matched (deprecated, use matchAllProjectTags)
        in: query
        name: matchAllTags
        schema:
          type: boolean
      - description: enforce all tag ids must be matched
        in: query
        name: matchAllProjectTags
        schema:
          type: boolean
      - description: include teams related to the taskAssigneeUserIds
        in: query
        name: includeAssigneeTeams
        schema:
          type: boolean
      - description: include archived projects
        in: query
        name: includeArchivedProjects
        schema:
          type: boolean
      - description: count only events that the users are attending
        in: query
        name: eventsAttendingOnly
        schema:
          type: boolean
      - description: |-
          the since section will only use taskAssigneeUserIds if this flag is true
          (keeps backward compatibility)
        in: query
        name: applyTaskAssigneeUsersToSince
        schema:
          type: boolean
      - description: when enabled unread counters will respect the time range period.
        in: query
        name: applySinceOnUnread
        schema:
          default: false
          type: boolean
      - description: filter by user ids
        explode: false
        in: query
        name: userIds
        schema:
          items:
            type: integer
          type: array
        style: form
      - description: filter by user ids who time logged
        explode: false
        in: query
        name: timeLoggedByUserIds
        schema:
          items:
            type: integer
          type: array
        style: form
      - description: filter by user ids with tasks assigned
        explode: false
        in: query
        name: taskAssigneeUserIds
        schema:
          items:
            type: integer
          type: array
        style: form
      - description: filter by project tag ids
        explode: false
        in: query
        name: projectTagIds
        schema:
          items:
            type: integer
          type: array
        style: form
      - description: filter by project owner ids
        explode: false
        in: query
        name: projectOwnerIds
        schema:
          items:
            type: integer
          type: array
        style: form
      - description: filter by project ids
        explode: false
        in: query
        name: projectIds
        schema:
          items:
            type: integer
          type: array
        style: form
      - description: filter by company ids
        explode: false
        in: query
        name: projectCompanyIds
        schema:
          items:
            type: integer
          type: array
        style: form
      - description: filter by project category ids
        explode: false
        in: query
        name: projectCategoryIds
        schema:
          items:
            type: integer
          type: array
        style: form
      - description: filter by user ids with milestones assigned
        explode: false
        in: query
        name: milestoneAssigneeUserIds
        schema:
          items:
            type: integer
          type: array
        style: form
      - description: filter by project tag ids (deprecated, use projectTagIds)
        explode: false
        in: query
        name: filterTagIds
        schema:
          items:
            type: integer
          type: array
        style: form
      - explode: false
        in: query
        name: fields[unread]
        schema:
          enum:
          - comments
          - messages
          items:
            type: string
          type: array
        style: form
      - explode: false
        in: query
        name: fields[time]
        schema:
          enum:
          - mine
          - all
          items:
            type: string
          type: array
        style: form
      - description: sparse fields
        explode: false
        in: query
        name: fields[tasks]
        schema:
          enum:
          - everyone
          - mine
          items:
            type: string
          type: array
        style: form
      - explode: false
        in: query
        name: fields[since]
        schema:
          enum:
          - tasksComplete
          - tasksCreated
          - events
          - dateTime
          items:
            type: string
          type: array
        style: form
      - explode: false
        in: query
        name: fields[risks]
        schema:
          enum:
          - total
          - open
          - pending
          - closed
          items:
            type: string
          type: array
        style: form
      - explode: false
        in: query
        name: fields[milestones]
        schema:
          enum:
          - everyone
          - mine
          items:
            type: string
          type: array
        style: form
      - description: |2-

          0: not set
          1: bad
          2: ok
          3: good
        explode: false
        in: query
        name: fields[health]
        schema:
          enum:
          - "0"
          - "1"
          - "2"
          - "3"
          items:
            type: string
          type: array
        style: form
      - explode: false
        in: query
        name: fields[events]
        schema:
          enum:
          - today
          - upcoming
          items:
            type: string
          type: array
        style: form
      - explode: false
        in: query
        name: fields[columns]
        schema:
          enum:
          - count
          - data
          items:
            type: string
          type: array
        style: form
      - description: filter by company ids (deprecated, use projectCompanyIds)
        explode: false
        in: query
        name: companyIds
        schema:
          items:
            type: integer
          type: array
        style: form
      - description: filter by user ids with tasks or milestones assigned
        explode: false
        in: query
        name: assigneeUserIds
        schema:
          items:
            type: integer
          type: array
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/summary.ProjectResponse'
          description: 200 OK
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/view.ErrorResponse'
          description: 400 Bad Request
      summary: Get project summary dashboard
      tags:
      - Summary
  /projects/api/v3/projects/budgets/usages.json:
    get:
      description: |-
        Gets the budget used capacity for a set of projects,
        with the daily timeline of capacity usage.
      operationId: GET_projects_api_v3_projects_budgets_usages.json
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/budget.ProjectBudgetsUsagesResponse'
          description: 200 OK
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/view.ErrorResponse'
          description: 400 Bad Request
        "404":
          content: {}
          description: 404 Not Found (no data)
      summary: Get the budgets usages for a set of projects
      tags:
      - Budgets
  /projects/api/v3/projects/featuresorder.json:
    put:
      operationId: PUT_projects_api_v3_projects_featuresorder.json
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/project.FeatureOrderResponse'
          description: 200 OK
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/view.ErrorResponse'
          description: 400 Bad Request
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/view.ErrorResponse'
          description: 403 Forbidden
      summary: Sets the default features order to display in tab
      tags:
      - Project
  /projects/api/v3/projects/metrics/active.json:
    get:
      description: Return the number of active projects that the logged-in user can
        access.
      operationId: GET_projects_api_v3_projects_metrics_active.json
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/active.Response'
          description: 200 OK
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/view.ErrorResponse'
          description: 400 Bad Request
        "404":
          content: {}
          description: 404 Not Found (no data)
      summary: Get the total count of active projects
      tags:
      - Projects
  /projects/api/v3/projects/metrics/billable.json:
    get:
      description: |-
        Returns the total billable time of all projects that the logged-in user has
        access.
      operationId: GET_projects_api_v3_projects_metrics_billable.json
      parameters:
      - in: query
        name: startDate
        schema:
          format: date
          type: string
      - description: order mode
        in: query
        name: orderMode
        schema:
          default: desc
          enum:
          - asc
          - desc
          type: string
      - in: query
        name: endDate
        schema:
          format: date
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/billable.ProjectMetricBillablesResponse'
          description: 200 OK
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/view.ErrorResponse'
          description: 400 Bad Request
      summary: Get the total billable time per project
      tags:
      - Projects
  /projects/api/v3/projects/metrics/healths.json:
    get:
      description: |-
        Return the number of projects on each health category. It will only count the
        projects that the logged-in user can access.
      operationId: GET_projects_api_v3_projects_metrics_healths.json
      parameters:
      - description: filter by project statuses
        in: query
        name: projectStatuses
        schema:
          enum:
          - active
          - current
          - late
          - upcoming
          - completed
          - deleted
          type: string
      - description: filter by project status
        in: query
        name: projectStatus
        schema:
          enum:
          - active
          - current
          - late
          - upcoming
          - completed
          - deleted
          type: string
      - description: |-
          project health

          0: not set
          1: bad
          2: ok
          3: good
        in: query
        name: projectHealths
        schema:
          enum:
          - 0
          - 1
          - 2
          - 3
          type: integer
      - description: filter by starred projects only
        in: query
        name: onlyStarredProjects
        schema:
          type: boolean
      - description: match all project tags
        in: query
        name: matchAllProjectTags
        schema:
          type: boolean
      - description: filter by project tag ids
        explode: false
        in: query
        name: projectTagIds
        schema:
          items:
            type: integer
          type: array
        style: form
      - description: filter by project owner ids
        explode: false
        in: query
        name: projectOwnerIds
        schema:
          items:
            type: integer
          type: array
        style: form
      - description: filter by project ids
        explode: false
        in: query
        name: projectIds
        schema:
          items:
            type: integer
          type: array
        style: form
      - description: filter by company ids
        explode: false
        in: query
        name: projectCompanyIds
        schema:
          items:
            type: integer
          type: array
        style: form
      - description: filter by project category ids
        explode: false
        in: query
        name: projectCategoryIds
        schema:
          items:
            type: integer
          type: array
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/health.ProjectMetricHealthsResponse'
          description: 200 OK
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/view.ErrorResponse'
          description: 400 Bad Request
      summary: Get a health summary for all projects
      tags:
      - Projects
  /projects/api/v3/projects/metrics/invoice.json:
    get:
      description: |-
        Count the number of open invoices on all projects that the logged-in user has
        access.
      operationId: GET_projects_api_v3_projects_metrics_invoice.json
      parameters:
      - description: project status
        in: query
        name: projectStatuses
        schema:
          enum:
          - active
          - current
          - late
          - upcoming
          - completed
          - deleted
          type: string
      - description: |-
          project health

          0: not set
          1: bad
          2: ok
          3: good
        in: query
        name: projectHealths
        schema:
          enum:
          - 0
          - 1
          - 2
          - 3
          type: integer
      - description: filter by starred projects only
        in: query
        name: onlyStarredProjects
        schema:
          type: boolean
      - description: match all project tags
        in: query
        name: matchAllProjectTags
        schema:
          type: boolean
      - description: include archived projects
        in: query
        name: includeArchivedProjects
        schema:
          type: boolean
      - description: filter by project tag ids
        explode: false
        in: query
        name: projectTagIds
        schema:
          items:
            type: integer
          type: array
        style: form
      - description: filter by project owner ids
        explode: false
        in: query
        name: projectOwnerIds
        schema:
          items:
            type: integer
          type: array
        style: form
      - description: filter by project ids
        explode: false
        in: query
        name: projectIds
        schema:
          items:
            type: integer
          type: array
        style: form
      - description: filter by company ids
        explode: false
        in: query
        name: projectCompanyIds
        schema:
          items:
            type: integer
          type: array
        style: form
      - description: filter by project category ids
        explode: false
        in: query
        name: projectCategoryIds
        schema:
          items:
            type: integer
          type: array
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/invoice.ProjectMetricInvoicesResponse'
          description: 200 OK
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/view.ErrorResponse'
          description: 400 Bad Request
      summary: Return open invoices across all projects
      tags:
      - Projects
  /projects/api/v3/projects/metrics/owners.json:
    get:
      description: Count the number of projects per project owner user.
      operationId: GET_projects_api_v3_projects_metrics_owners.json
      parameters:
      - description: project status
        in: query
        name: projectStatuses
        schema:
          enum:
          - active
          - current
          - late
          - upcoming
          - completed
          - deleted
          type: string
      - description: sort order
        in: query
        name: orderMode
        schema:
          default: desc
          enum:
          - asc
          - desc
          type: string
      - description: |-
          project health

          0: not set
          1: bad
          2: ok
          3: good
        in: query
        name: projectHealths
        schema:
          enum:
          - 0
          - 1
          - 2
          - 3
          type: integer
      - description: number of items in a page
        in: query
        name: pageSize
        schema:
          default: 50
          type: integer
      - description: page number
        in: query
        name: page
        schema:
          default: 1
          type: integer
      - description: filter by starred projects only
        in: query
        name: onlyStarredProjects
        schema:
          type: boolean
      - description: match all project tags
        in: query
        name: matchAllProjectTags
        schema:
          type: boolean
      - description: filter by project tag ids
        explode: false
        in: query
        name: projectTagIds
        schema:
          items:
            type: integer
          type: array
        style: form
      - description: filter by project owner ids
        explode: false
        in: query
        name: projectOwnerIds
        schema:
          items:
            type: integer
          type: array
        style: form
      - description: filter by project ids
        explode: false
        in: query
        name: projectIds
        schema:
          items:
            type: integer
          type: array
        style: form
      - description: filter by company ids
        explode: false
        in: query
        name: projectCompanyIds
        schema:
          items:
            type: integer
          type: array
        style: form
      - description: filter by project category ids
        explode: false
        in: query
        name: projectCategoryIds
        schema:
          items:
            type: integer
          type: array
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/owner.ProjectMetricOwnersResponse'
          description: 200 OK
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/view.ErrorResponse'
          description: 400 Bad Request
      summary: Get number of owned and un-assigned projects
      tags:
      - Projects
  /projects/api/v3/projects/metrics/unbilled.json:
    get:
      description: |-
        Return the un-billed expenses for each project that the logged-in user has
        access.
      operationId: GET_projects_api_v3_projects_metrics_unbilled.json
      parameters:
      - description: project status
        in: query
        name: projectStatuses
        schema:
          enum:
          - active
          - current
          - late
          - upcoming
          - completed
          - deleted
          type: string
      - description: |-
          project health

          0: not set
          1: bad
          2: ok
          3: good
        in: query
        name: projectHealths
        schema:
          enum:
          - 0
          - 1
          - 2
          - 3
          type: integer
      - description: filter by starred projects only
        in: query
        name: onlyStarredProjects
        schema:
          type: boolean
      - description: match all project tags
        in: query
        name: matchAllProjectTags
        schema:
          type: boolean
      - description: include archived projects
        in: query
        name: includeArchivedProjects
        schema:
          type: boolean
      - description: filter by project tag ids
        explode: false
        in: query
        name: projectTagIds
        schema:
          items:
            type: integer
          type: array
        style: form
      - description: filter by project owner ids
        explode: false
        in: query
        name: projectOwnerIds
        schema:
          items:
            type: integer
          type: array
        style: form
      - description: filter by project ids
        explode: false
        in: query
        name: projectIds
        schema:
          items:
            type: integer
          type: array
        style: form
      - description: filter by company ids
        explode: false
        in: query
        name: projectCompanyIds
        schema:
          items:
            type: integer
          type: array
        style: form
      - description: filter by project category ids
        explode: false
        in: query
        name: projectCategoryIds
        schema:
          items:
            type: integer
          type: array
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/unbilled.ProjectMetricUnbilledResponse'
          description: 200 OK
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/view.ErrorResponse'
          description: 400 Bad Request
      summary: Return un-billed expenses across all projects
      tags:
      - Projects
  /projects/api/v3/projects/teamwork/categories.json:
    get:
      operationId: GET_projects_api_v3_projects_teamwork_categories.json
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/category.CategoriesResponse'
          description: 200 OK
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/view.ErrorResponse'
          description: 400 Bad Request
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/view.ErrorResponse'
          description: 403 Forbidden
      summary: Returns a list of teamwork project categories
      tags:
      - Categories
  /projects/api/v3/projects/teamwork/samples.json:
    get:
      description: Retrieve all sample projects for the provided filters.
      operationId: GET_projects_api_v3_projects_teamwork_samples.json
      parameters:
      - description: filter by project name
        in: query
        name: searchTerm
        schema:
          type: string
      - description: number of items in a page (not used when generating reports)
        in: query
        name: pageSize
        schema:
          default: 50
          type: integer
      - description: page number (not used when generating reports)
        in: query
        name: page
        schema:
          default: 1
          type: integer
      - description: filter by sample ids
        explode: false
        in: query
        name: ids
        schema:
          items:
            type: integer
          type: array
        style: form
      - explode: false
        in: query
        name: fields[sampleprojects]
        schema:
          enum:
          - id
          - name
          - code
          - description
          - icon
          - imagePreview
          - categoryId
          - content
          items:
            type: string
          type: array
        style: form
      - description: filter by category ids
        explode: false
        in: query
        name: categoryIds
        schema:
          items:
            type: integer
          type: array
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/project.SampleProjectsResponse'
          description: 200 OK
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/view.ErrorResponse'
          description: 400 Bad Request
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/view.ErrorResponse'
          description: 403 Forbidden
      summary: Returns a list of teamwork sample projects
      tags:
      - Projects
  /projects/api/v3/projects/templates.json:
    get:
      description: |-
        Retrieve all projects templates for the provided filters. Only the projects templates that the
        logged-in user can access will be returned.


        On this endpoint you can filter by project custom fields. The syntax for the
        query parameter is the following:

            projectCustomField[id][op]=value

        Where:
          - [id] is the custom field ID
          - [op] is the operator to apply when filtering, different operators are
            allowed according to the custom field type
          - [value] is the value to apply when filtering

        For example, if I want to filter a dropdown custom field with ID 10 to only
        return entries that have the value "Option1" we would do the following:

            projectCustomField[10][eq]=Option1

        The allowed operators are:
          - like
          - not-like
          - eq
          - not
          - lt
          - gt
          - any
      operationId: GET_projects_api_v3_projects_templates.json
      parameters:
      - description: updated after
        in: query
        name: updatedAfter
        schema:
          format: date-time
          type: string
      - description: filter by project name
        in: query
        name: searchTerm
        schema:
          type: string
      - description: define the format of the report
        in: query
        name: reportType
        schema:
          default: project
          enum:
          - project
          - health
          type: string
      - description: define the format of the report
        in: query
        name: reportFormat
        schema:
          default: pdf
          enum:
          - csv
          - html
          - pdf
          - xls
          type: string
      - description: filter by project type
        in: query
        name: projectType
        schema:
          type: string
      - description: filter by project status
        in: query
        name: projectStatuses
        schema:
          enum:
          - active
          - current
          - late
          - upcoming
          - completed
          - deleted
          type: string
      - description: order mode
        in: query
        name: orderMode
        schema:
          default: asc
          enum:
          - asc
          - desc
          type: string
      - description: order by
        in: query
        name: orderBy
        schema:
          default: name
          enum:
          - companyname
          - datecreated
          - duedate
          - lastactivity
          - name
          - namecaseinsensitive
          - ownercompany
          - starred
          type: string
      - description: filter by min last activity date
        in: query
        name: minLastActivityDate
        schema:
          format: date
          type: string
      - description: filter by max last activity date
        in: query
        name: maxLastActivityDate
        schema:
          format: date
          type: string
      - description: filter by user id
        in: query
        name: userId
        schema:
          type: integer
      - description: |-
          filter by project healths

          0: not set
          1: bad
          2: ok
          3: good
        in: query
        name: projectHealths
        schema:
          enum:
          - 0
          - 1
          - 2
          - 3
          type: integer
      - description: number of items in a page (not used when generating reports)
        in: query
        name: pageSize
        schema:
          default: 50
          type: integer
      - description: page number (not used when generating reports)
        in: query
        name: page
        schema:
          default: 1
          type: integer
      - description: filter by starred projects only
        in: query
        name: onlyStarredProjects
        schema:
          type: boolean
      - description: only show projects with explicit membership
        in: query
        name: onlyProjectsWithExplicitMembership
        schema:
          default: false
          type: boolean
      - description: return only archived projects
        in: query
        name: onlyArchivedProjects
        schema:
          default: false
          type: boolean
      - description: match all project tags
        in: query
        name: matchAllProjectTags
        schema:
          type: boolean
      - description: generate a report document
        in: query
        name: isReportDownload
        schema:
          default: false
          type: boolean
      - description: fetch user-specific data such as isStarred
        in: query
        name: includeProjectUserInfo
        schema:
          default: false
          type: boolean
      - description: include custom fields
        in: query
        name: includeCustomFields
        schema:
          default: false
          type: boolean
      - description: optional to include completed projects when filtering by project
          statuses "current,late".
        in: query
        name: includeCompletedStatus
        schema:
          type: boolean
      - description: include archived projects
        in: query
        name: includeArchivedProjects
        schema:
          default: false
          type: boolean
      - description: hide projects where the logged-in user is just an observer
        in: query
        name: hideObservedProjects
        schema:
          default: false
          type: boolean
      - description: filter by project tag ids
        explode: false
        in: query
        name: projectTagIds
        schema:
          items:
            type: integer
          type: array
        style: form
      - description: filter by project owner ids
        explode: false
        in: query
        name: projectOwnerIds
        schema:
          items:
            type: integer
          type: array
        style: form
      - description: filter by project ids
        explode: false
        in: query
        name: projectIds
        schema:
          items:
            type: integer
          type: array
        style: form
      - description: filter by company ids
        explode: false
        in: query
        name: projectCompanyIds
        schema:
          items:
            type: integer
          type: array
        style: form
      - description: filter by project category ids
        explode: false
        in: query
        name: projectCategoryIds
        schema:
          items:
            type: integer
          type: array
        style: form
      - description: include (not used when generating reports)
        explode: false
        in: query
        name: include
        schema:
          enum:
          - projectOwners
          - projectUpdates
          - companies
          - projectCategories
          - portfolioCards
          - portfolioBoards
          - portfolioColumns
          - tags
          - customfields
          - customfieldProjects
          - projectBudgets
          items:
            type: string
          type: array
        style: form
      - explode: false
        in: query
        name: fields[users]
        schema:
          enum:
          - id
          - firstName
          - lastName
          - email
          - companyId
          - isAdmin
          - type
          items:
            type: string
          type: array
        style: form
      - explode: false
        in: query
        name: fields[tags]
        schema:
          enum:
          - id
          - name
          - color
          - count
          items:
            type: string
          type: array
        style: form
      - explode: false
        in: query
        name: fields[projects]
        schema:
          enum:
          - id
          - name
          items:
            type: string
          type: array
        style: form
      - explode: false
        in: query
        name: fields[projectcategories]
        schema:
          enum:
          - id
          - name
          - color
          items:
            type: string
          type: array
        style: form
      - explode: false
        in: query
        name: fields[projectUpdates]
        schema:
          enum:
          - id
          - projectId
          - text
          - isActive
          - health
          - color
          - dateCreated
          - deleted
          - deletedDate
          - numLikes
          - reactions
          items:
            type: string
          type: array
        style: form
      - explode: false
        in: query
        name: fields[projectBudgets]
        schema:
          enum:
          - id
          - projectId
          - type
          - status
          - capacityUsed
          - capacity
          - |-
            originatorBudgetId
            isRepeating
          - repeatPeriod
          - repeatUnit
          - repeatsRemaining
          - sequenceNumber
          - |-
            startDateTime
            endDateTime
          - currencyCode
          - timelogType
          - expenseType
          - defaultRate
          - |-
            notificationIds
            createdByUserId
          - dateCreated
          - updatedUserId
          - dateUpdated
          - |-
            completedByUserId
            dateCompleted
          - deletedByUserId
          - dateDeleted
          items:
            type: string
          type: array
        style: form
      - explode: false
        in: query
        name: fields[portfolioColumns]
        schema:
          enum:
          - id
          - name
          - color
          items:
            type: string
          type: array
        style: form
      - explode: false
        in: query
        name: fields[portfolioCards]
        schema:
          enum:
          - id
          - columnId
          - projectId
          items:
            type: string
          type: array
        style: form
      - explode: false
        in: query
        name: fields[portfolioBoards]
        schema:
          enum:
          - id
          - name
          - color
          items:
            type: string
          type: array
        style: form
      - explode: false
        in: query
        name: fields[customfields]
        schema:
          enum:
          - id
          - projectId
          - entity
          - name
          - description
          - type
          - options
          - visibilities
          - isPrivate
          - required
          - createdAt
          - createdByUserId
          - updatedAt
          - updatedByUserId
          - deleted
          - deletedAt
          - deletedByUserId
          items:
            type: string
          type: array
        style: form
      - explode: false
        in: query
        name: fields[customfieldProjects]
        schema:
          enum:
          - id
          - customfieldId
          - value
          - createdAt
          - createdBy
          items:
            type: string
          type: array
        style: form
      - explode: false
        in: query
        name: fields[companies]
        schema:
          enum:
          - id
          - name
          - logoUploadedToServer
          - logoImage
          items:
            type: string
          type: array
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/project.ProjectsResponse'
          description: 200 OK
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/view.ErrorResponse'
          description: 400 Bad Request
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/view.ErrorResponse'
          description: 403 Forbidden
      summary: Returns a list of projects templates
      tags:
      - Projects
  /projects/api/v3/projects/updates.json:
    get:
      description: Return the updates from all projects that the logged-in user can
        access.
      operationId: GET_projects_api_v3_projects_updates.json
      parameters:
      - description: list of project status
        in: query
        name: projectStatuses
        schema:
          type: string
      - description: filter by project status
        in: query
        name: projectStatus
        schema:
          type: string
      - description: order mode
        in: query
        name: orderMode
        schema:
          default: asc
          enum:
          - asc
          - desc
          type: string
      - description: order by
        in: query
        name: orderBy
        schema:
          default: date
          enum:
          - date
          - color
          - health
          - project
          - user
          type: string
      - description: filter by creation date
        in: query
        name: createdAfter
        schema:
          format: date-time
          type: string
      - description: filter by project id
        in: query
        name: projectId
        schema:
          type: integer
      - description: filter by project health
        in: query
        name: projectHealths
        schema:
          type: integer
      - description: filter by project health (deprecated, use projectHealths)
        in: query
        name: projectHealth
        schema:
          type: integer
      - description: number of items in a page
        in: query
        name: pageSize
        schema:
          default: 50
          type: integer
      - description: page number
        in: query
        name: page
        schema:
          default: 1
          type: integer
      - description: include deleted items
        in: query
        name: showDeleted
        schema:
          default: false
          type: boolean
      - description: add reactions to the response
        in: query
        name: reactions
        schema:
          default: false
          type: boolean
      - description: filter by starred projects only
        in: query
        name: onlyStarredProjects
        schema:
          type: boolean
      - description: match all project tags
        in: query
        name: matchAllProjectTags
        schema:
          type: boolean
      - description: include archived projects
        in: query
        name: includeArchivedProjects
        schema:
          type: boolean
      - description: parse emojis to unicode
        in: query
        name: emoji
        schema:
          default: true
          type: boolean
      - description: filter by active
        in: query
        name: activeOnly
        schema:
          default: true
          type: boolean
      - description: filter by project tag ids
        explode: false
        in: query
        name: projectTagIds
        schema:
          items:
            type: integer
          type: array
        style: form
      - description: filter by project owner ids
        explode: false
        in: query
        name: projectOwnerIds
        schema:
          items:
            type: integer
          type: array
        style: form
      - description: filter by company ids
        explode: false
        in: query
        name: projectCompanyIds
        schema:
          items:
            type: integer
          type: array
        style: form
      - description: filter by project category ids
        explode: false
        in: query
        name: projectCategoryIds
        schema:
          items:
            type: integer
          type: array
        style: form
      - description: include
        explode: false
        in: query
        name: include
        schema:
          enum:
          - projects
          - createdBy
          - deletedBy
          - likes.users
          items:
            type: string
          type: array
        style: form
      - explode: false
        in: query
        name: fields[users]
        schema:
          enum:
          - id
          - firstName
          - lastName
          - email
          - companyId
          - isAdmin
          - type
          items:
            type: string
          type: array
        style: form
      - explode: false
        in: query
        name: fields[projects]
        schema:
          enum:
          - id
          - name
          items:
            type: string
          type: array
        style: form
      - explode: false
        in: query
        name: fields[projectUpdates]
        schema:
          enum:
          - id
          - projectId
          - text
          - isActive
          - health
          - color
          - dateCreated
          - deleted
          - deletedDate
          - numLikes
          - reactions
          items:
            type: string
          type: array
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/update.ProjectUpdatesResponse'
          description: 200 OK
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/view.ErrorResponse'
          description: 400 Bad Request
      summary: Get all project updates
      tags:
      - ProjectUpdates
  /projects/api/v3/rates/installation.json:
    get:
      description: Gets the default rate for users installation
      operationId: GET_projects_api_v3_rates_installation.json
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/rates.RateResponse'
          description: 200 OK
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/view.ErrorResponse'
          description: 400 Bad Request
        "404":
          content: {}
          description: 404 Not Found (no data)
      summary: Get an installation default rate.
      tags:
      - BETA
      x-private: true
    put:
      description: sets a rate to be the installtion default rate
      operationId: PUT_projects_api_v3_rates_installation.json
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/rates.Request'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/rates.RateResponse'
          description: 200 OK
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/view.ErrorResponse'
          description: 400 Bad Request
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/view.ErrorResponse'
          description: 403 Forbidden
      summary: set an installation default rate.
      tags:
      - BETA
      x-private: true
      x-codegen-request-body-name: rates.Request
  /projects/api/v3/rates/installation/users.json:
    get:
      description: Long description explaining the endpoint.
      operationId: GET_projects_api_v3_rates_installation_users.json
      parameters:
      - description: number of items in a page
        in: query
        name: pageSize
        schema:
          default: 50
          type: integer
      - description: page number
        in: query
        name: page
        schema:
          default: 1
          type: integer
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/rates.InstallationUserRateResponse'
          description: 200 OK
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/view.ErrorResponse'
          description: 400 Bad Request
        "404":
          content: {}
          description: 404 Not Found (no data)
      summary: Get a specific rates.
      tags:
      - BETA
      x-private: true
  /projects/api/v3/rates/projects/:projectId.json:
    get:
      description: Gets the default rate for specifc project
      operationId: GET_projects_api_v3_rates_projects_:projectId.json
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/rates.RateResponse'
          description: 200 OK
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/view.ErrorResponse'
          description: 400 Bad Request
        "404":
          content: {}
          description: 404 Not Found (no data)
      summary: Get a projects default rate.
      tags:
      - BETA
      x-private: true
    put:
      description: sets a rate to be the project default rate
      operationId: PUT_projects_api_v3_rates_projects_:projectId.json
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/rates.Request'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/rates.RateResponse'
          description: 200 OK
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/view.ErrorResponse'
          description: 400 Bad Request
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/view.ErrorResponse'
          description: 403 Forbidden
      summary: set a project default rate.
      tags:
      - BETA
      x-private: true
      x-codegen-request-body-name: rates.Request
  /projects/api/v3/rates/user/:userId.json:
    get:
      description: Gets the default rate for a specific user
      operationId: GET_projects_api_v3_rates_user_:userId.json
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/rates.RateResponse'
          description: 200 OK
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/view.ErrorResponse'
          description: 400 Bad Request
        "404":
          content: {}
          description: 404 Not Found (no data)
      summary: Get a user default rate.
      tags:
      - BETA
      x-private: true
  /projects/api/v3/rates/users/:userId.json:
    put:
      description: sets a rate to be the the users default rate
      operationId: PUT_projects_api_v3_rates_users_:userId.json
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/rates.Request'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/rates.RateResponse'
          description: 200 OK
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/view.ErrorResponse'
          description: 400 Bad Request
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/view.ErrorResponse'
          description: 403 Forbidden
      summary: set a user default rate.
      tags:
      - BETA
      x-private: true
      x-codegen-request-body-name: rates.Request
  /projects/api/v3/risks.json:
    get:
      description: |-
        Return all risks for the provided filters. Only filters that the logged-in user
        has access will be returned.
      operationId: GET_projects_api_v3_risks.json
      parameters:
      - description: filter by risks updated after specified date (deprecated, use
          updatedAfter)
        in: query
        name: updatedAfterDate
        schema:
          format: date-time
          type: string
      - description: filter by risks updated after specified date
        in: query
        name: updatedAfter
        schema:
          format: date-time
          type: string
      - description: filter by risk statuses
        in: query
        name: statuses
        schema:
          enum:
          - new
          - pending
          - closed
          type: string
      - description: sort order (deprecated, use orderMode)
        in: query
        name: sortOrder
        schema:
          enum:
          - asc
          - desc
          type: string
      - description: sort by (deprecated, use orderBy)
        in: query
        name: sort
        schema:
          enum:
          - datecreated
          - source
          - probability
          - impact
          - result
          - project
          type: string
      - description: search term
        in: query
        name: searchTerm
        schema:
          type: string
      - description: |-
          define the format of the report
          default: pdf
        in: query
        name: reportFormat
        schema:
          type: string
      - description: list of project statuses
        in: query
        name: projectStatuses
        schema:
          type: string
      - description: sort order
        in: query
        name: orderMode
        schema:
          enum:
          - asc
          - desc
          type: string
      - description: sort by
        in: query
        name: orderBy
        schema:
          enum:
          - datecreated
          - source
          - probability
          - impact
          - result
          - project
          type: string
      - description: list of project health
        in: query
        name: projectHealths
        schema:
          type: integer
      - description: filter by probability
        in: query
        name: probabilityTo
        schema:
          type: integer
      - description: filter by probability
        in: query
        name: probabilityFrom
        schema:
          type: integer
      - description: |-
          number of items in a page
          default: 50
        in: query
        name: pageSize
        schema:
          type: integer
      - description: |-
          page number
          default: 1
        in: query
        name: page
        schema:
          type: integer
      - description: filter by impact
        in: query
        name: impactTo
        schema:
          type: integer
      - description: filter by impact
        in: query
        name: impactFrom
        schema:
          type: integer
      - description: |-
          include deleted items
          default: false
        in: query
        name: showDeleted
        schema:
          type: boolean
      - description: |-
          filter by starred projects only
          default: false
        in: query
        name: onlyStarredProjects
        schema:
          type: boolean
      - description: enforce all tag ids must be matched
        in: query
        name: matchAllProjectTags
        schema:
          type: boolean
      - description: generate a report document
        in: query
        name: isReportDownload
        schema:
          type: boolean
      - description: include archived projects
        in: query
        name: includeArchivedProjects
        schema:
          type: boolean
      - description: filter by risks that impact schedule
        in: query
        name: impactSchedule
        schema:
          type: boolean
      - description: filter by risks that impact performance
        in: query
        name: impactPerformance
        schema:
          type: boolean
      - description: filter by risks that impact cost
        in: query
        name: impactCost
        schema:
          type: boolean
      - description: filter by project tag ids
        explode: false
        in: query
        name: projectTagIds
        schema:
          items:
            type: integer
          type: array
        style: form
      - description: filter by project owner ids
        explode: false
        in: query
        name: projectOwnerIds
        schema:
          items:
            type: integer
          type: array
        style: form
      - description: filter by project ids
        explode: false
        in: query
        name: projectIds
        schema:
          items:
            type: integer
          type: array
        style: form
      - description: filter by company ids
        explode: false
        in: query
        name: projectCompanyIds
        schema:
          items:
            type: integer
          type: array
        style: form
      - description: filter by project category ids
        explode: false
        in: query
        name: projectCategoryIds
        schema:
          items:
            type: integer
          type: array
        style: form
      - description: include
        explode: false
        in: query
        name: include
        schema:
          enum:
          - projects
          - users
          - projects.companies
          items:
            type: string
          type: array
        style: form
      - explode: false
        in: query
        name: fields[users]
        schema:
          enum:
          - id
          - firstName
          - lastName
          - email
          - companyId
          - isAdmin
          - type
          items:
            type: string
          type: array
        style: form
      - explode: false
        in: query
        name: fields[risks]
        schema:
          enum:
          - id
          - source
          - probability
          - probabilityValue
          - impact
          - |-
            impactValue
            impactCost
          - impactSchedule
          - impactPerformance
          - createdOn
          - |-
            createdByUserId
            lastChangedOn
          - lastChangedByUserId
          - result
          - mitigationPlan
          - |-
            stats
            projectId
          - deleted
          - canEdit
          items:
            type: string
          type: array
        style: form
      - explode: false
        in: query
        name: fields[projects]
        schema:
          enum:
          - id
          - name
          items:
            type: string
          type: array
        style: form
      - explode: false
        in: query
        name: fields[companies]
        schema:
          enum:
          - id
          - name
          - logoUploadedToServer
          - logoImage
          items:
            type: string
          type: array
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/risk.RisksResponse'
          description: 200 OK
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/view.ErrorResponse'
          description: 400 Bad Request
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/view.ErrorResponse'
          description: 403 Forbidden
      summary: Get all risks
      tags:
      - Risks
  /projects/api/v3/schedule/people.json:
    get:
      description: |-
        Return people allocations summary to easy manage work, time and resources in
        Teamwork that address broader resource management needs.


        On this endpoint you can filter by project custom fields. The syntax for the
        query parameter is the following:

            projectCustomField[id][op]=value

        Where:
          - [id] is the custom field ID
          - [op] is the operator to apply when filtering, different operators are
            allowed according to the custom field type
          - [value] is the value to apply when filtering

        For example, if I want to filter a dropdown custom field with ID 10 to only
        return entries that have the value "Option1" we would do the following:

            projectCustomField[10][eq]=Option1

        The allowed operators are:
          - like
          - not-like
          - eq
          - not
          - lt
          - gt
          - any
      operationId: GET_projects_api_v3_schedule_people.json
      parameters:
      - description: filter by start date
        in: query
        name: startDate
        schema:
          format: date
          type: string
      - description: filter by search term
        in: query
        name: searchTerm
        schema:
          type: string
      - description: filter by project status
        in: query
        name: projectStatus
        schema:
          enum:
          - active
          - current
          - late
          - upcoming
          - completed
          - deleted
          type: string
      - description: order mode
        in: query
        name: orderMode
        schema:
          default: asc
          enum:
          - asc
          - desc
          type: string
      - description: order by
        in: query
        name: orderBy
        schema:
          default: project
          enum:
          - startdate
          - enddate
          - project
          - assigneduser
          type: string
      - description: filter by end date
        in: query
        name: endDate
        schema:
          format: date
          type: string
      - description: |-
          filter by project healths

          0: not set
          1: bad
          2: ok
          3: good
        in: query
        name: projectHealths
        schema:
          enum:
          - 0
          - 1
          - 2
          - 3
          type: integer
      - description: number of items in a page
        in: query
        name: pageSize
        schema:
          default: 50
          type: integer
      - description: page number
        in: query
        name: page
        schema:
          default: 1
          type: integer
      - description: filter by starred projects only
        in: query
        name: onlyStarredProjects
        schema:
          type: boolean
      - description: only show projects with explicit membership
        in: query
        name: onlyProjectsWithExplicitMembership
        schema:
          default: false
          type: boolean
      - description: match all project tags
        in: query
        name: matchAllProjectTags
        schema:
          type: boolean
      - description: hide projects where the logged-in user is just an observer
        in: query
        name: hideObservedProjects
        schema:
          default: false
          type: boolean
      - description: filter by teams
        explode: false
        in: query
        name: teamIds
        schema:
          items:
            type: integer
          type: array
        style: form
      - description: filter by project tag ids
        explode: false
        in: query
        name: projectTagIds
        schema:
          items:
            type: integer
          type: array
        style: form
      - description: filter by project owner ids
        explode: false
        in: query
        name: projectOwnerIds
        schema:
          items:
            type: integer
          type: array
        style: form
      - description: filter by project ids
        explode: false
        in: query
        name: projectIds
        schema:
          items:
            type: integer
          type: array
        style: form
      - description: filter by company ids
        explode: false
        in: query
        name: projectCompanyIds
        schema:
          items:
            type: integer
          type: array
        style: form
      - description: filter by project category ids
        explode: false
        in: query
        name: projectCategoryIds
        schema:
          items:
            type: integer
          type: array
        style: form
      - description: include
        explode: false
        in: query
        name: include
        schema:
          enum:
          - projects
          - projects.milestones
          - projects.budgets
          - projects.companies
          - projects.users
          - assignee
          - assignee.calendarEvents
          - assignee.timelogs
          - allocations
          items:
            type: string
          type: array
        style: form
      - explode: false
        in: query
        name: fields[users]
        schema:
          enum:
          - id
          - firstName
          - lastName
          - email
          - companyId
          - isAdmin
          - type
          items:
            type: string
          type: array
        style: form
      - explode: false
        in: query
        name: fields[userSchedules]
        schema:
          enum:
          - userId
          - allocatedTotalMinutes
          - loggedTotalMinutes
          - unavailableTotalMinutes
          - schedule
          items:
            type: string
          type: array
        style: form
      - explode: false
        in: query
        name: fields[timelogs]
        schema:
          enum:
          - id
          - dateCreated
          - minutes
          - description
          - timeLogged
          - billable
          - deleted
          - dateDeleted
          - hasStartTime
          - dateEdited
          - deskTicketId
          - invoiceNumber
          - userId
          - taskId
          - projectId
          - loggedByUserId
          - deletedByUserId
          - editedByUserId
          - taskIdPreMove
          - projectBillingInvoiceId
          items:
            type: string
          type: array
        style: form
      - explode: false
        in: query
        name: fields[projects]
        schema:
          enum:
          - id
          - name
          items:
            type: string
          type: array
        style: form
      - explode: false
        in: query
        name: fields[projectSchedules]
        schema:
          enum:
          - projectId
          - allocatedTotalMinutes
          - loggedTotalMinutes
          - unavailableTotalMinutes
          - schedule
          items:
            type: string
          type: array
        style: form
      - explode: false
        in: query
        name: fields[milestones]
        schema:
          enum:
          - id
          - name
          - description
          - deadline
          - completed
          - projectId
          - createdOn
          - lastChangedOn
          - creatorUserId
          - reminder
          - private
          - lockdownId
          - status
          - completedOn
          - completerId
          - percentageComplete
          items:
            type: string
          type: array
        style: form
      - explode: false
        in: query
        name: fields[companies]
        schema:
          enum:
          - id
          - name
          - logoUploadedToServer
          - logoImage
          items:
            type: string
          type: array
        style: form
      - explode: false
        in: query
        name: fields[calendarEvents]
        schema:
          enum:
          - id
          - title
          - startDate
          - endDate
          - typeId
          - privacyType
          - allDay
          - location
          - description
          - showAsBusy
          - attendeesCanEdit
          - projectUsersCanEdit
          - monthlyRepeatType
          - dateLastUpdated
          - createdDateTime
          - deleted
          - dateDeleted
          - additionalProperties
          - currentUserAssociationType
          - sequenceId
          - projectId
          - ownerUserId
          - deletedByUserId
          - createdByUserId
          - updatedByUserId
          items:
            type: string
          type: array
        style: form
      - explode: false
        in: query
        name: fields[allocations]
        schema:
          enum:
          - id
          - installationId
          - projectId
          - title
          - description
          - startedAt
          - endedAt
          - duration
          - color
          - status
          - distributeType
          - createdAt
          - createdByUser
          - updatedAt
          - updatedByUser
          - deletedAt
          - deletedByUser
          - assignedUserID
          items:
            type: string
          type: array
        style: form
      - description: filter by companies
        explode: false
        in: query
        name: companyIds
        schema:
          items:
            type: integer
          type: array
        style: form
      - description: filter by assigned user ids
        explode: false
        in: query
        name: assignedUserIds
        schema:
          items:
            type: integer
          type: array
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/schedule.UserSchedulesResponse'
          description: 200 OK
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/view.ErrorResponse'
          description: 400 Bad Request
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/view.ErrorResponse'
          description: 403 Forbidden
      summary: Return the summary for users' allocations.
      tags:
      - ResourceScheduling
      x-private: true
  /projects/api/v3/schedule/projects.json:
    get:
      description: |-
        Return project allocations summary to easy manage work, time and resources in
        Teamwork that address broader resource management needs.


        On this endpoint you can filter by project custom fields. The syntax for the
        query parameter is the following:

            projectCustomField[id][op]=value

        Where:
          - [id] is the custom field ID
          - [op] is the operator to apply when filtering, different operators are
            allowed according to the custom field type
          - [value] is the value to apply when filtering

        For example, if I want to filter a dropdown custom field with ID 10 to only
        return entries that have the value "Option1" we would do the following:

            projectCustomField[10][eq]=Option1

        The allowed operators are:
          - like
          - not-like
          - eq
          - not
          - lt
          - gt
          - any
      operationId: GET_projects_api_v3_schedule_projects.json
      parameters:
      - description: filter by start date
        in: query
        name: startDate
        schema:
          format: date
          type: string
      - description: filter by search term
        in: query
        name: searchTerm
        schema:
          type: string
      - description: filter by project status
        in: query
        name: projectStatus
        schema:
          enum:
          - active
          - current
          - late
          - upcoming
          - completed
          - deleted
          type: string
      - description: order mode
        in: query
        name: orderMode
        schema:
          default: asc
          enum:
          - asc
          - desc
          type: string
      - description: order by
        in: query
        name: orderBy
        schema:
          default: project
          enum:
          - startdate
          - enddate
          - project
          - assigneduser
          type: string
      - description: filter by end date
        in: query
        name: endDate
        schema:
          format: date
          type: string
      - description: |-
          filter by project healths

          0: not set
          1: bad
          2: ok
          3: good
        in: query
        name: projectHealths
        schema:
          enum:
          - 0
          - 1
          - 2
          - 3
          type: integer
      - description: number of items in a page
        in: query
        name: pageSize
        schema:
          default: 50
          type: integer
      - description: page number
        in: query
        name: page
        schema:
          default: 1
          type: integer
      - description: filter by starred projects only
        in: query
        name: onlyStarredProjects
        schema:
          type: boolean
      - description: only show projects with explicit membership
        in: query
        name: onlyProjectsWithExplicitMembership
        schema:
          default: false
          type: boolean
      - description: match all project tags
        in: query
        name: matchAllProjectTags
        schema:
          type: boolean
      - description: hide projects where the logged-in user is just an observer
        in: query
        name: hideObservedProjects
        schema:
          default: false
          type: boolean
      - description: filter by project tag ids
        explode: false
        in: query
        name: projectTagIds
        schema:
          items:
            type: integer
          type: array
        style: form
      - description: filter by project owner ids
        explode: false
        in: query
        name: projectOwnerIds
        schema:
          items:
            type: integer
          type: array
        style: form
      - description: filter by project ids
        explode: false
        in: query
        name: projectIds
        schema:
          items:
            type: integer
          type: array
        style: form
      - description: filter by company ids
        explode: false
        in: query
        name: projectCompanyIds
        schema:
          items:
            type: integer
          type: array
        style: form
      - description: filter by project category ids
        explode: false
        in: query
        name: projectCategoryIds
        schema:
          items:
            type: integer
          type: array
        style: form
      - description: include
        explode: false
        in: query
        name: include
        schema:
          enum:
          - projects
          - projects.milestones
          - projects.budgets
          - projects.companies
          - projects.users
          - assignee
          - assignee.calendarEvents
          - assignee.timelogs
          - allocations
          items:
            type: string
          type: array
        style: form
      - explode: false
        in: query
        name: fields[users]
        schema:
          enum:
          - id
          - firstName
          - lastName
          - email
          - companyId
          - isAdmin
          - type
          items:
            type: string
          type: array
        style: form
      - explode: false
        in: query
        name: fields[userSchedules]
        schema:
          enum:
          - userId
          - allocatedTotalMinutes
          - loggedTotalMinutes
          - unavailableTotalMinutes
          - schedule
          items:
            type: string
          type: array
        style: form
      - explode: false
        in: query
        name: fields[timelogs]
        schema:
          enum:
          - id
          - dateCreated
          - minutes
          - description
          - timeLogged
          - billable
          - deleted
          - dateDeleted
          - hasStartTime
          - dateEdited
          - deskTicketId
          - invoiceNumber
          - userId
          - taskId
          - projectId
          - loggedByUserId
          - deletedByUserId
          - editedByUserId
          - taskIdPreMove
          - projectBillingInvoiceId
          items:
            type: string
          type: array
        style: form
      - explode: false
        in: query
        name: fields[projects]
        schema:
          enum:
          - id
          - name
          items:
            type: string
          type: array
        style: form
      - explode: false
        in: query
        name: fields[projectSchedules]
        schema:
          enum:
          - projectId
          - allocatedTotalMinutes
          - loggedTotalMinutes
          - unavailableTotalMinutes
          - schedule
          items:
            type: string
          type: array
        style: form
      - explode: false
        in: query
        name: fields[milestones]
        schema:
          enum:
          - id
          - name
          - description
          - deadline
          - completed
          - projectId
          - createdOn
          - lastChangedOn
          - creatorUserId
          - reminder
          - private
          - lockdownId
          - status
          - completedOn
          - completerId
          - percentageComplete
          items:
            type: string
          type: array
        style: form
      - explode: false
        in: query
        name: fields[companies]
        schema:
          enum:
          - id
          - name
          - logoUploadedToServer
          - logoImage
          items:
            type: string
          type: array
        style: form
      - explode: false
        in: query
        name: fields[calendarEvents]
        schema:
          enum:
          - id
          - title
          - startDate
          - endDate
          - typeId
          - privacyType
          - allDay
          - location
          - description
          - showAsBusy
          - attendeesCanEdit
          - projectUsersCanEdit
          - monthlyRepeatType
          - dateLastUpdated
          - createdDateTime
          - deleted
          - dateDeleted
          - additionalProperties
          - currentUserAssociationType
          - sequenceId
          - projectId
          - ownerUserId
          - deletedByUserId
          - createdByUserId
          - updatedByUserId
          items:
            type: string
          type: array
        style: form
      - explode: false
        in: query
        name: fields[allocations]
        schema:
          enum:
          - id
          - installationId
          - projectId
          - title
          - description
          - startedAt
          - endedAt
          - duration
          - color
          - status
          - distributeType
          - createdAt
          - createdByUser
          - updatedAt
          - updatedByUser
          - deletedAt
          - deletedByUser
          - assignedUserID
          items:
            type: string
          type: array
        style: form
      - description: filter by assigned user ids
        explode: false
        in: query
        name: assignedUserIds
        schema:
          items:
            type: integer
          type: array
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/schedule.ProjectSchedulesResponse'
          description: 200 OK
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/view.ErrorResponse'
          description: 400 Bad Request
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/view.ErrorResponse'
          description: 403 Forbidden
      summary: Return the summary for projects' allocations.
      tags:
      - ResourceScheduling
      x-private: true
  /projects/api/v3/statuses.json:
    get:
      description: |-
        All of the latest status posts are returned for all users in the parent
        company.
      operationId: GET_projects_api_v3_statuses.json
      parameters:
      - description: return only statuses updated after a specific date
        in: query
        name: updatedAfter
        schema:
          format: date-time
          type: string
      - description: filter by the user name or status message
        in: query
        name: searchTerm
        schema:
          type: string
      - description: filter by team
        in: query
        name: teamId
        schema:
          type: integer
      - description: number of items in a page
        in: query
        name: pageSize
        schema:
          default: 100
          type: integer
      - description: page number
        in: query
        name: page
        schema:
          default: 1
          type: integer
      - description: show also users without status
        in: query
        name: showEveryone
        schema:
          type: boolean
      - description: showDeleted statuses
        in: query
        name: showDeleted
        schema:
          default: false
          type: boolean
      - description: also include statuses from subteams
        in: query
        name: includeSubteams
        schema:
          type: boolean
      - description: include
        explode: false
        in: query
        name: include
        schema:
          enum:
          - statuses
          - users
          - userevents
          items:
            type: string
          type: array
        style: form
      - explode: false
        in: query
        name: fields[users]
        schema:
          enum:
          - id
          - firstName
          - lastName
          - email
          - companyId
          - isAdmin
          - type
          items:
            type: string
          type: array
        style: form
      - explode: false
        in: query
        name: fields[statuses]
        schema:
          enum:
          - id
          - userId
          - emoji
          - text
          - dateTime
          - ipAddress
          - dateLastUpdated
          items:
            type: string
          type: array
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/status.TimelineResponse'
          description: 200 OK
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/view.ErrorResponse'
          description: 400 Bad Request
      summary: Get all statuses
      tags:
      - PeopleStatus
  /projects/api/v3/statuses/timeline.json:
    get:
      description: Return a timeline list of people statuses that the logged-in user
        can access.
      operationId: GET_projects_api_v3_statuses_timeline.json
      parameters:
      - description: filter by the user name or status message
        in: query
        name: searchTerm
        schema:
          type: string
      - description: filter by team
        in: query
        name: teamId
        schema:
          type: integer
      - description: number of items in a page
        in: query
        name: pageSize
        schema:
          default: 50
          type: integer
      - description: page number
        in: query
        name: page
        schema:
          default: 1
          type: integer
      - description: showDeleted statuses
        in: query
        name: showDeleted
        schema:
          default: false
          type: boolean
      - description: also include statuses from subteams
        in: query
        name: includeSubteams
        schema:
          type: boolean
      - description: include
        explode: false
        in: query
        name: include
        schema:
          enum:
          - users
          - userevents
          items:
            type: string
          type: array
        style: form
      - explode: false
        in: query
        name: fields[users]
        schema:
          enum:
          - id
          - firstName
          - lastName
          - email
          - companyId
          - isAdmin
          - type
          items:
            type: string
          type: array
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/status.TimelineResponse'
          description: 200 OK
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/view.ErrorResponse'
          description: 400 Bad Request
      summary: Get the people statuses timeline.
      tags:
      - PeopleStatus
  /projects/api/v3/summary.json:
    get:
      description: |-
        Retrieves the summary from the entire installation, returning counters about
        tasks, milestones, columns, events, risks, timers, projects healths.


        On this endpoint you can filter by project custom fields. The syntax for the
        query parameter is the following:

            projectCustomField[id][op]=value

        Where:
          - [id] is the custom field ID
          - [op] is the operator to apply when filtering, different operators are
            allowed according to the custom field type
          - [value] is the value to apply when filtering

        For example, if I want to filter a dropdown custom field with ID 10 to only
        return entries that have the value "Option1" we would do the following:

            projectCustomField[10][eq]=Option1

        The allowed operators are:
          - like
          - not-like
          - eq
          - not
          - lt
          - gt
          - any
      operationId: GET_projects_api_v3_summary.json
      parameters:
      - description: used to limit the since counters to a specific period
        in: query
        name: until
        schema:
          enum:
          - now
          - timeRange
          type: string
      - description: filter by start datetime
        in: query
        name: timeRangeStart
        schema:
          format: date-time
          type: string
      - description: filter by end datetime
        in: query
        name: timeRangeEnd
        schema:
          format: date-time
          type: string
      - description: |-
          filter by time range. It will be ignored if timeRangeStart and timeRangeEnd
          are provided.
        in: query
        name: timeRange
        schema:
          enum:
          - yesterday
          - today
          - thisweek
          - lastweek
          - thismonth
          - lastmonth
          - last3months
          - last6months
          type: string
      - description: project status (deprecated, use projectStatuses)
        in: query
        name: status
        schema:
          enum:
          - active
          - current
          - late
          - upcoming
          - completed
          - deleted
          type: string
      - description: project statuses
        in: query
        name: projectStatuses
        schema:
          enum:
          - active
          - current
          - late
          - upcoming
          - completed
          - deleted
          type: string
      - description: project status
        in: query
        name: projectStatus
        schema:
          enum:
          - active
          - current
          - late
          - upcoming
          - completed
          - deleted
          type: string
      - description: |-
          project healths

          0: not set
          1: bad
          2: ok
          3: good
        in: query
        name: projectHealths
        schema:
          enum:
          - 0
          - 1
          - 2
          - 3
          type: integer
      - description: |-
          project healths (deprecated, use projectHealths)

          0: not set
          1: bad
          2: ok
          3: good
        in: query
        name: projectHealth
        schema:
          enum:
          - 0
          - 1
          - 2
          - 3
          type: integer
      - description: number of days remaining to event's start
        in: query
        name: eventsDaysAhead
        schema:
          default: 7
          type: integer
      - description: enforce today is considered as start date for today's tasks
        in: query
        name: useStartDatesForTodaysTasks
        schema:
          type: boolean
      - description: filter by my unread messages only
        in: query
        name: unreadMessagesMineOnly
        schema:
          type: boolean
      - description: filter by my unread comments only
        in: query
        name: unreadCommentsMineOnly
        schema:
          type: boolean
      - description: filter by starred projects only
        in: query
        name: onlyStarredProjects
        schema:
          type: boolean
      - description: filter only project events
        in: query
        name: onlyProjectEvents
        schema:
          type: boolean
      - description: enforce all tag ids must be matched (deprecated, use matchAllProjectTags)
        in: query
        name: matchAllTags
        schema:
          type: boolean
      - description: enforce all tag ids must be matched
        in: query
        name: matchAllProjectTags
        schema:
          type: boolean
      - description: include teams related to the taskAssigneeUserIds
        in: query
        name: includeAssigneeTeams
        schema:
          type: boolean
      - description: include archived projects
        in: query
        name: includeArchivedProjects
        schema:
          type: boolean
      - description: count only events that the users are attending
        in: query
        name: eventsAttendingOnly
        schema:
          type: boolean
      - description: |-
          the since section will only use taskAssigneeUserIds if this flag is true
          (keeps backward compatibility)
        in: query
        name: applyTaskAssigneeUsersToSince
        schema:
          type: boolean
      - description: when enabled unread counters will respect the time range period.
        in: query
        name: applySinceOnUnread
        schema:
          default: false
          type: boolean
      - description: filter by user ids
        explode: false
        in: query
        name: userIds
        schema:
          items:
            type: integer
          type: array
        style: form
      - description: filter by user ids who time logged
        explode: false
        in: query
        name: timeLoggedByUserIds
        schema:
          items:
            type: integer
          type: array
        style: form
      - description: filter by user ids with tasks assigned
        explode: false
        in: query
        name: taskAssigneeUserIds
        schema:
          items:
            type: integer
          type: array
        style: form
      - description: filter by project tag ids
        explode: false
        in: query
        name: projectTagIds
        schema:
          items:
            type: integer
          type: array
        style: form
      - description: filter by project owner ids
        explode: false
        in: query
        name: projectOwnerIds
        schema:
          items:
            type: integer
          type: array
        style: form
      - description: filter by project ids
        explode: false
        in: query
        name: projectIds
        schema:
          items:
            type: integer
          type: array
        style: form
      - description: filter by company ids
        explode: false
        in: query
        name: projectCompanyIds
        schema:
          items:
            type: integer
          type: array
        style: form
      - description: filter by project category ids
        explode: false
        in: query
        name: projectCategoryIds
        schema:
          items:
            type: integer
          type: array
        style: form
      - description: filter by user ids with milestones assigned
        explode: false
        in: query
        name: milestoneAssigneeUserIds
        schema:
          items:
            type: integer
          type: array
        style: form
      - description: filter by project tag ids (deprecated, use projectTagIds)
        explode: false
        in: query
        name: filterTagIds
        schema:
          items:
            type: integer
          type: array
        style: form
      - explode: false
        in: query
        name: fields[unread]
        schema:
          enum:
          - comments
          - messages
          items:
            type: string
          type: array
        style: form
      - explode: false
        in: query
        name: fields[time]
        schema:
          enum:
          - estimates
          - totals
          items:
            type: string
          type: array
        style: form
      - description: sparse fields
        explode: false
        in: query
        name: fields[tasks]
        schema:
          enum:
          - nodate
          - today
          - late
          - started
          - complete
          - upcoming
          - active
          items:
            type: string
          type: array
        style: form
      - explode: false
        in: query
        name: fields[since]
        schema:
          enum:
          - tasksComplete
          - tasksCreated
          - events
          - dateTime
          items:
            type: string
          type: array
        style: form
      - explode: false
        in: query
        name: fields[risks]
        schema:
          enum:
          - total
          - open
          - pending
          - closed
          items:
            type: string
          type: array
        style: form
      - explode: false
        in: query
        name: fields[milestones]
        schema:
          enum:
          - today
          - late
          - complete
          - upcoming
          - active
          items:
            type: string
          type: array
        style: form
      - description: |2-

          0: not set
          1: bad
          2: ok
          3: good
        explode: false
        in: query
        name: fields[health]
        schema:
          enum:
          - "0"
          - "1"
          - "2"
          - "3"
          items:
            type: string
          type: array
        style: form
      - explode: false
        in: query
        name: fields[events]
        schema:
          enum:
          - today
          - upcoming
          items:
            type: string
          type: array
        style: form
      - explode: false
        in: query
        name: fields[columns]
        schema:
          enum:
          - count
          - data
          items:
            type: string
          type: array
        style: form
      - description: filter by company ids (deprecated, use projectCompanyIds)
        explode: false
        in: query
        name: companyIds
        schema:
          items:
            type: integer
          type: array
        style: form
      - description: filter by user ids with tasks or milestones assigned
        explode: false
        in: query
        name: assigneeUserIds
        schema:
          items:
            type: integer
          type: array
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/summary.Response'
          description: 200 OK
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/view.ErrorResponse'
          description: 400 Bad Request
      summary: Get installation summary dashboard
      tags:
      - Summary
  /projects/api/v3/tags.json:
    get:
      description: Return all tags that the logged-in user can access.
      operationId: GET_projects_api_v3_tags.json
      parameters:
      - description: search for tags updated after the provided date
        in: query
        name: updatedAfter
        schema:
          format: date-time
          type: string
      - description: filter by search term
        in: query
        name: searchTerm
        schema:
          type: string
      - description: order mode
        in: query
        name: orderMode
        schema:
          default: asc
          enum:
          - asc
          - desc
          type: string
      - description: order by
        in: query
        name: orderBy
        schema:
          default: name
          enum:
          - name
          - count
          - datelastused
          - color
          type: string
      - description: filter by item type
        in: query
        name: itemType
        schema:
          default: all
          enum:
          - all
          - project
          - task
          - tasklist
          - milestone
          - message
          - comment
          - timelog
          - file
          - user
          - company
          - invoice
          - risk
          - notebook
          - link
          - event
          - notebookversion
          - fileversion
          type: string
      - description: mode used when filtering the tags
        in: query
        name: filter
        schema:
          default: all
          enum:
          - all
          - recent
          type: string
      - description: number of items in a page
        in: query
        name: pageSize
        schema:
          default: 500
          type: integer
      - description: page number
        in: query
        name: page
        schema:
          default: 1
          type: integer
      - description: include in the response the number of items that use the tag
        in: query
        name: withCounters
        schema:
          default: false
          type: boolean
      - description: do not include in the response special tags
        in: query
        name: skipSpecial
        schema:
          default: true
          type: boolean
      - description: search term will be placed as a prefix to match the tag names
        in: query
        name: searchRightOnly
        schema:
          default: false
          type: boolean
      - description: skip from the result tags with the defined ids
        explode: false
        in: query
        name: skipIds
        schema:
          items:
            type: integer
          type: array
        style: form
      - description: filter by projects
        explode: false
        in: query
        name: projectIds
        schema:
          items:
            type: integer
          type: array
        style: form
      - explode: false
        in: query
        name: fields[tags]
        schema:
          enum:
          - id
          - name
          - color
          - count
          items:
            type: string
          type: array
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/tag.TagsResponse'
          description: 200 OK
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/view.ErrorResponse'
          description: 400 Bad Request
      summary: Get all tags
      tags:
      - Tags
    post:
      description: |-
        Creates a new tag. If there's already a tag with the same name in the
        installation, it will be returned in the response with the status code 200
        (OK).
      operationId: POST_projects_api_v3_tags.json
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/tag.Request'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/tag.Response'
          description: 200 OK
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/tag.Response'
          description: 201 Created
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/view.ErrorResponse'
          description: 400 Bad Request
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/view.ErrorResponse'
          description: 403 Forbidden
        "409":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/view.ErrorResponse'
          description: 409 Conflict
      summary: Create a single tag
      tags:
      - Tags
      x-codegen-request-body-name: tag.Request
  /projects/api/v3/tags/:id.json:
    delete:
      description: |-
        Removes a tag. If there's no tag with the given ID the status code 409
        (CONFLICT) will be returned.
      operationId: DELETE_projects_api_v3_tags_:id.json
      responses:
        "204":
          content: {}
          description: 204 No Content (no data)
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/view.ErrorResponse'
          description: 400 Bad Request
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/view.ErrorResponse'
          description: 403 Forbidden
        "404":
          content: {}
          description: 404 Not Found (no data)
      summary: Deletes a tag
      tags:
      - Tags
    get:
      description: Return a specific tag.
      operationId: GET_projects_api_v3_tags_:id.json
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/tag.Response'
          description: 200 OK
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/view.ErrorResponse'
          description: 400 Bad Request
        "404":
          content: {}
          description: 404 Not Found (no data)
      summary: Get details of an individual tag
      tags:
      - Tags
    patch:
      description: |-
        Updates a existing tag. If there's already a tag with the same changed name
        in the installation, it will be returned the status code 409 (CONFLICT).
      operationId: PATCH_projects_api_v3_tags_:id.json
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/tag.Request'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/tag.Response'
          description: 200 OK
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/view.ErrorResponse'
          description: 400 Bad Request
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/view.ErrorResponse'
          description: 403 Forbidden
        "404":
          content: {}
          description: 404 Not Found (no data)
        "409":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/view.ErrorResponse'
          description: 409 Conflict
      summary: Update a single tag
      tags:
      - Tags
      x-codegen-request-body-name: tag.Request
  /projects/api/v3/tags/bulk/delete.json:
    post:
      description: Removes many tags at once.
      operationId: POST_projects_api_v3_tags_bulk_delete.json
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/tag.BulkDeleteRequest'
        required: true
      responses:
        "204":
          content: {}
          description: 204 No Content (no data)
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/view.ErrorResponse'
          description: 400 Bad Request
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/view.ErrorResponse'
          description: 403 Forbidden
        "404":
          content: {}
          description: 404 Not Found (no data)
      summary: Delete many tags at once
      tags:
      - Tags
      x-codegen-request-body-name: tag.BulkDeleteRequest
  /projects/api/v3/tasklists/:tasklistId/tasks.json:
    post:
      description: Create a new task in the provided task list.
      operationId: POST_projects_api_v3_tasklists_:tasklistId_tasks.json
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/task.Request'
        required: true
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/task.Response'
          description: 201 Created
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/view.ErrorResponse'
          description: 400 Bad Request
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/view.ErrorResponse'
          description: 403 Forbidden
      summary: Creates a task.
      tags:
      - Tasks
      x-private: true
      x-codegen-request-body-name: task.Request
  /projects/api/v3/tasks.json:
    get:
      description: Return multiple tasks according to the provided filter.
      operationId: GET_projects_api_v3_tasks.json
      parameters:
      - description: filter by updated after date
        in: query
        name: updatedAfter
        schema:
          format: date
          type: string
      - description: filter by today
        in: query
        name: today
        schema:
          format: date-time
          type: string
      - description: filter by task included set
        in: query
        name: taskIncludedSet
        schema:
          enum:
          - overdue
          - nodate
          - nostartdate
          - "noduedate\n\t\tnostartwithfutureduedate"
          - taskListNames
          - projectNames
          type: string
      - description: filter by a taskFilter
        in: query
        name: taskFilter
        schema:
          enum:
          - all
          - anytime
          - completed
          - created
          - overdue
          - "today\n\t\tyesterday"
          - started
          - tomorrow
          - thisweek
          - "within7\n\t\twithin14"
          - within30
          - within365
          - nodate
          - "noduedate\n\t\tnostartdate"
          - newTaskDefaults
          - hasDate
          type: string
      - description: filter by list of task status
        in: query
        name: status
        schema:
          enum:
          - upcoming
          - late
          - all
          type: string
      - description: filter on start date
        in: query
        name: startDate
        schema:
          format: date
          type: string
      - description: filter by search term
        in: query
        name: searchTerm
        schema:
          type: string
      - description: filter by project status
        in: query
        name: projectStatuses
        schema:
          enum:
          - active
          - current
          - late
          - upcoming
          - completed
          - deleted
          type: string
      - description: filter by task priority
        in: query
        name: priority
        schema:
          type: string
      - description: order mode
        in: query
        name: orderMode
        schema:
          default: asc
          enum:
          - asc
          - desc
          type: string
      - description: order by
        in: query
        name: orderBy
        schema:
          default: duedate
          enum:
          - startdate
          - dateadded
          - priority
          - project
          - flattenedtasklist
          - company
          - "manual\n\tactive"
          - datecompleted
          - duestartdate
          - alldates
          - tasklistname
          - tasklistdisplayorder
          - tasklistid
          - duedate
          - dateupdated
          - taskname
          - createdby
          - completedby
          - assignedto
          - taskstatus
          - taskduedate
          type: string
      - description: filter on end date
        in: query
        name: endDate
        schema:
          format: date
          type: string
      - description: filter on deleted after date
        in: query
        name: deletedAfter
        schema:
          format: date-time
          type: string
      - description: filter by created filter
        in: query
        name: createdFilter
        schema:
          enum:
          - anytime
          - today
          - yesterday
          - custom
          type: string
      - description: filter by created date code
        in: query
        name: createdDateCode
        schema:
          type: string
      - description: filter by created before date
        in: query
        name: createdBefore
        schema:
          format: date
          type: string
      - description: filter by created after date
        in: query
        name: createdAfter
        schema:
          format: date-time
          type: string
      - description: filter by completed before date
        in: query
        name: completedBefore
        schema:
          format: date-time
          type: string
      - description: filter by completed after date
        in: query
        name: completedAfter
        schema:
          format: date-time
          type: string
      - description: |-
          filter by project healths

          0: not set
          1: bad
          2: ok
          3: good
        in: query
        name: projectHealths
        schema:
          enum:
          - 0
          - 1
          - 2
          - 3
          type: integer
      - description: filter by parent task ids
        in: query
        name: parentTaskId
        schema:
          type: integer
      - description: number of items in a page
        in: query
        name: pageSize
        schema:
          default: 50
          type: integer
      - description: page number
        in: query
        name: page
        schema:
          default: 1
          type: integer
      - description: include task id
        in: query
        name: includeTaskId
        schema:
          type: integer
      - description: filter by completer user id
        in: query
        name: completedByUserId
        schema:
          type: integer
      - description: use start dates for todays tasks
        in: query
        name: useStartDatesForTodaysTasks
        schema:
          type: boolean
      - description: filter on all projects
        in: query
        name: useAllProjects
        schema:
          type: boolean
      - description: include deleted items
        in: query
        name: showDeleted
        schema:
          default: false
          type: boolean
      - description: include tasks from completed lists
        in: query
        name: showCompletedLists
        schema:
          type: boolean
      - description: include companies and teams in the search term
        in: query
        name: searchCompaniesTeams
        schema:
          type: boolean
      - description: include assignees in the search
        in: query
        name: searchAssignees
        schema:
          type: boolean
      - description: only untagged tasks
        in: query
        name: onlyUntaggedTasks
        schema:
          type: boolean
      - description: filter by only tasks with unread comments
        in: query
        name: onlyTasksWithUnreadComments
        schema:
          type: boolean
      - description: filter by only tasks with tickets
        in: query
        name: onlyTasksWithTickets
        schema:
          type: boolean
      - description: filter by starred projects only
        in: query
        name: onlyStarredProjects
        schema:
          type: boolean
      - description: |-
          only include tasks from projects where the user is strictly a project admin.
          site admins have visibility to all projects.
        in: query
        name: onlyAdminProjects
        schema:
          type: boolean
      - description: nest sub tasks
        in: query
        name: nestSubTasks
        schema:
          type: boolean
      - description: match all tags
        in: query
        name: matchAllTags
        schema:
          type: boolean
      - description: match all project tags
        in: query
        name: matchAllProjectTags
        schema:
          type: boolean
      - description: match all exclude tags
        in: query
        name: matchAllExcludedTags
        schema:
          type: boolean
      - description: include tasks latest update action
        in: query
        name: includeUpdate
        schema:
          type: boolean
      - description: include untagged tasks
        in: query
        name: includeUntaggedTasks
        schema:
          type: boolean
      - description: filter by include today
        in: query
        name: includeToday
        schema:
          type: boolean
      - description: include tasks without due dates
        in: query
        name: includeTasksWithoutDueDates
        schema:
          type: boolean
      - description: include tasks with cards
        in: query
        name: includeTasksWithCards
        schema:
          type: boolean
      - description: include tasks from deleted lists
        in: query
        name: includeTasksFromDeletedLists
        schema:
          type: boolean
      - description: include reminders
        in: query
        name: includeReminders
        schema:
          type: boolean
      - description: include ids of completed and active subtasks, dependencies, predecessors
        in: query
        name: includeRelatedTasks
        schema:
          type: boolean
      - description: include private items
        in: query
        name: includePrivateItems
        schema:
          type: boolean
      - description: include overdue tasks
        in: query
        name: includeOverdueTasks
        schema:
          type: boolean
      - description: include original due date of a task
        in: query
        name: includeOriginalDueDate
        schema:
          type: boolean
      - description: include logged time
        in: query
        name: includeLoggedTime
        schema:
          type: boolean
      - description: include completed tasks
        in: query
        name: includeCompletedTasks
        schema:
          type: boolean
      - description: include completed sub tasks
        in: query
        name: includeCompletedSubtasks
        schema:
          type: boolean
      - description: filter by include crm deal ids
        in: query
        name: includeCRMDealIds
        schema:
          type: boolean
      - description: filter by include blocked
        in: query
        name: includeBlocked
        schema:
          type: boolean
      - description: include teams related to the responsible user ids
        in: query
        name: includeAssigneeTeams
        schema:
          type: boolean
      - description: include companies related to the responsible user ids
        in: query
        name: includeAssigneeCompanies
        schema:
          type: boolean
      - description: include all comments
        in: query
        name: includeAllComments
        schema:
          type: boolean
      - description: group by tasklist
        in: query
        name: groupByTasklist
        schema:
          type: boolean
      - description: get sub tasks
        in: query
        name: getSubTasks
        schema:
          type: boolean
      - description: get files
        in: query
        name: getFiles
        schema:
          type: boolean
      - description: exclude assignee not on project teams
        in: query
        name: excludeAssigneeNotOnProjectTeams
        schema:
          type: boolean
      - description: only return tasks with estimated time
        in: query
        name: OnlyTasksWithEstimatedTime
        schema:
          type: boolean
      - description: filter by tasklist ids
        explode: false
        in: query
        name: tasklistIds
        schema:
          items:
            type: integer
          type: array
        style: form
      - description: filter by tag values
        explode: false
        in: query
        name: tags
        schema:
          items:
            type: string
          type: array
        style: form
      - description: filter by tag ids
        explode: false
        in: query
        name: tagIds
        schema:
          items:
            type: integer
          type: array
        style: form
      - description: skip crm deal ids
        explode: false
        in: query
        name: skipCRMDealIds
        schema:
          items:
            type: integer
          type: array
        style: form
      - description: filter by responsible party ids
        explode: false
        in: query
        name: responsiblePartyIds
        schema:
          items:
            type: integer
          type: array
        style: form
      - description: filter by project tag ids
        explode: false
        in: query
        name: projectTagIds
        schema:
          items:
            type: integer
          type: array
        style: form
      - description: filter by project owner ids
        explode: false
        in: query
        name: projectOwnerIds
        schema:
          items:
            type: integer
          type: array
        style: form
      - description: filter by project ids
        explode: false
        in: query
        name: projectIds
        schema:
          items:
            type: integer
          type: array
        style: form
      - description: filter by company ids
        explode: false
        in: query
        name: projectCompanyIds
        schema:
          items:
            type: integer
          type: array
        style: form
      - description: filter by project category ids
        explode: false
        in: query
        name: projectCategoryIds
        schema:
          items:
            type: integer
          type: array
        style: form
      - description: include
        explode: false
        in: query
        name: include
        schema:
          enum:
          - projects
          - tasklists
          - parentTasks
          - companies
          - "teams\n\tusers"
          - milestones
          - comments
          - comments.users
          - tags
          - "cards\n\tcards.columns"
          - timeTotals
          items:
            type: string
          type: array
        style: form
      - description: filter by task ids
        explode: false
        in: query
        name: ids
        schema:
          items:
            type: integer
          type: array
        style: form
      - description: filter by followed by user ids
        explode: false
        in: query
        name: followedByUserIds
        schema:
          items:
            type: integer
          type: array
        style: form
      - description: filter by board column ids
        explode: false
        in: query
        name: filterBoardColumnIds
        schema:
          items:
            type: integer
          type: array
        style: form
      - explode: false
        in: query
        name: fields[users]
        schema:
          enum:
          - id
          - firstName
          - lastName
          - email
          - companyId
          - isAdmin
          - type
          items:
            type: string
          type: array
        style: form
      - explode: false
        in: query
        name: fields[teams]
        schema:
          enum:
          - id
          - name
          - teamLogo
          - teamLogoIcon
          - teamLogoColor
          items:
            type: string
          type: array
        style: form
      - explode: false
        in: query
        name: fields[tasks]
        schema:
          enum:
          - id
          - name
          - dateUpdated
          - parentTaskId
          - isPrivate
          - status
          - tasklistId
          - startDate
          - dueDate
          items:
            type: string
          type: array
        style: form
      - explode: false
        in: query
        name: fields[tasklists]
        schema:
          enum:
          - id
          - name
          - projectId
          - milestoneId
          items:
            type: string
          type: array
        style: form
      - explode: false
        in: query
        name: fields[tags]
        schema:
          enum:
          - id
          - name
          - color
          - count
          items:
            type: string
          type: array
        style: form
      - explode: false
        in: query
        name: fields[projects]
        schema:
          enum:
          - id
          - name
          items:
            type: string
          type: array
        style: form
      - explode: false
        in: query
        name: fields[milestones]
        schema:
          enum:
          - id
          - name
          - description
          - deadline
          - completed
          - projectId
          - createdOn
          - lastChangedOn
          - creatorUserId
          - reminder
          - private
          - lockdownId
          - status
          - completedOn
          - completerId
          - percentageComplete
          items:
            type: string
          type: array
        style: form
      - explode: false
        in: query
        name: fields[companies]
        schema:
          enum:
          - id
          - name
          - logoUploadedToServer
          - logoImage
          items:
            type: string
          type: array
        style: form
      - explode: false
        in: query
        name: fields[comments]
        schema:
          enum:
          - id
          - objectType
          - objectId
          - title
          items:
            type: string
          type: array
        style: form
      - explode: false
        in: query
        name: fields[columns]
        schema:
          enum:
          - id
          - name
          - color
          - displayOrder
          - createdAt
          - updatedAt
          - settings
          - "sort\n\tsortOrder"
          - deletedAt
          - project
          - hasTriggers
          - deleted
          - stats
          - defaultTasklist
          items:
            type: string
          type: array
        style: form
      - explode: false
        in: query
        name: fields[cards]
        schema:
          enum:
          - id
          - displayOrder
          - archived
          - archivedAt
          - archivedBy
          - "createdAt\n\tcreateBy"
          - updatedAt
          - visible
          - status
          - deleteBy
          - deletedAt
          items:
            type: string
          type: array
        style: form
      - description: filter by excluded tag ids
        explode: false
        in: query
        name: excludeTagIds
        schema:
          items:
            type: integer
          type: array
        style: form
      - description: filter by custom fields
        explode: false
        in: query
        name: customFields
        schema:
          items:
            type: string
          type: array
        style: form
      - description: filter by crm deal ids
        explode: false
        in: query
        name: crmDealIds
        schema:
          items:
            type: integer
          type: array
        style: form
      - description: filter by creator user ids
        explode: false
        in: query
        name: createdByUserIds
        schema:
          items:
            type: integer
          type: array
        style: form
      - description: filter by assignee team ids
        explode: false
        in: query
        name: assigneeTeamIds
        schema:
          items:
            type: integer
          type: array
        style: form
      - description: filter by assignee company ids
        explode: false
        in: query
        name: assigneeCompanyIds
        schema:
          items:
            type: integer
          type: array
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/task.TasksResponse'
          description: 200 OK
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/view.ErrorResponse'
          description: 400 Bad Request
      summary: Get all tasks.
      tags:
      - Tasks
      x-private: true
  /projects/api/v3/tasks/:id.json:
    get:
      description: Returns the information about a specific task.
      operationId: GET_projects_api_v3_tasks_:id.json
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/task.Response'
          description: 200 OK
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/view.ErrorResponse'
          description: 400 Bad Request
        "404":
          content: {}
          description: 404 Not Found (no data)
      summary: Get a specific task.
      tags:
      - Tasks
      x-private: true
  /projects/api/v3/tasks/:taskId/customfields.json:
    get:
      description: Return all custom field values from a specific task.
      operationId: GET_projects_api_v3_tasks_:taskId_customfields.json
      parameters:
      - description: filter by task id
        in: query
        name: taskId
        schema:
          type: integer
      - description: number of items in a page
        in: query
        name: pageSize
        schema:
          default: 50
          type: integer
      - description: page number
        in: query
        name: page
        schema:
          default: 1
          type: integer
      - description: include
        explode: false
        in: query
        name: include
        schema:
          enum:
          - tasks
          - customfields
          items:
            type: string
          type: array
        style: form
      - explode: false
        in: query
        name: fields[tasks]
        schema:
          enum:
          - id
          - name
          - dateUpdated
          - parentTaskId
          - isPrivate
          - status
          - tasklistId
          - startDate
          - dueDate
          items:
            type: string
          type: array
        style: form
      - explode: false
        in: query
        name: fields[customfields]
        schema:
          enum:
          - id
          - projectId
          - entity
          - name
          - description
          - type
          - options
          - visibilities
          - isPrivate
          - required
          - createdAt
          - createdByUserId
          - updatedAt
          - updatedByUserId
          - deleted
          - deletedAt
          - deletedByUserId
          items:
            type: string
          type: array
        style: form
      - explode: false
        in: query
        name: fields[customfieldTasks]
        schema:
          enum:
          - id
          - customfieldId
          - value
          - createdAt
          - createdBy
          items:
            type: string
          type: array
        style: form
      - description: filter by custom field ids
        explode: false
        in: query
        name: customFieldIds
        schema:
          items:
            type: integer
          type: array
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/task.CustomFieldTasksResponse'
          description: 200 OK
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/view.ErrorResponse'
          description: 400 Bad Request
      summary: Task custom field values.
      tags:
      - CustomFields
      x-private: true
    post:
      description: Add a task custom field value.
      operationId: POST_projects_api_v3_tasks_:taskId_customfields.json
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/task.Request'
        required: true
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/task.Response'
          description: 201 Created
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/view.ErrorResponse'
          description: 400 Bad Request
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/view.ErrorResponse'
          description: 403 Forbidden
      summary: Add task custom field value.
      tags:
      - CustomFields
      x-private: true
      x-codegen-request-body-name: task.Request
  /projects/api/v3/tasks/:taskId/customfields/:id.json:
    delete:
      description: Removes a task custom field value.
      operationId: DELETE_projects_api_v3_tasks_:taskId_customfields_:id.json
      responses:
        "204":
          content: {}
          description: 204 No Content (no data)
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/view.ErrorResponse'
          description: 400 Bad Request
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/view.ErrorResponse'
          description: 403 Forbidden
        "404":
          content: {}
          description: 404 Not Found (no data)
      summary: Delete an existing task custom field value.
      tags:
      - CustomFields
      x-private: true
    get:
      description: Return a specific custom field value from a task.
      operationId: GET_projects_api_v3_tasks_:taskId_customfields_:id.json
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/task.Response'
          description: 200 OK
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/view.ErrorResponse'
          description: 400 Bad Request
        "404":
          content: {}
          description: 404 Not Found (no data)
      summary: Task custom field value.
      tags:
      - CustomFields
      x-private: true
    patch:
      description: Edit a task custom field value.
      operationId: PATCH_projects_api_v3_tasks_:taskId_customfields_:id.json
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/task.Request'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/task.Response'
          description: 200 OK
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/view.ErrorResponse'
          description: 400 Bad Request
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/view.ErrorResponse'
          description: 403 Forbidden
        "404":
          content: {}
          description: 404 Not Found (no data)
        "409":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/view.ErrorResponse'
          description: 409 Conflict
      summary: Update an existing task custom field value.
      tags:
      - CustomFields
      x-private: true
      x-codegen-request-body-name: task.Request
  /projects/api/v3/tasks/:taskId/customfields/bulk/delete.json:
    post:
      description: Remove many entries of task custom field values at once.
      operationId: POST_projects_api_v3_tasks_:taskId_customfields_bulk_delete.json
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/task.BulkDeleteRequest'
        required: true
      responses:
        "204":
          content: {}
          description: 204 No Content (no data)
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/view.ErrorResponse'
          description: 400 Bad Request
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/view.ErrorResponse'
          description: 403 Forbidden
        "404":
          content: {}
          description: 404 Not Found (no data)
      summary: Delete many task custom fields values at once.
      tags:
      - CustomFields
      x-private: true
      x-codegen-request-body-name: task.BulkDeleteRequest
  /projects/api/v3/tasks/:taskId/customfields/bulk/update.json:
    post:
      description: Edit many entries of task custom field values at once.
      operationId: POST_projects_api_v3_tasks_:taskId_customfields_bulk_update.json
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/task.BulkUpdateRequest'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/task.CustomFieldTasksResponse'
          description: 200 OK
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/view.ErrorResponse'
          description: 400 Bad Request
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/view.ErrorResponse'
          description: 403 Forbidden
        "404":
          content: {}
          description: 404 Not Found (no data)
        "409":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/view.ErrorResponse'
          description: 409 Conflict
      summary: Update many task custom field values at once.
      tags:
      - CustomFields
      x-private: true
      x-codegen-request-body-name: task.BulkUpdateRequest
  /projects/api/v3/tasks/metrics/complete.json:
    get:
      description: |-
        Returns the total number of completed tasks. Only the tasks that the
        logged-in user can access will be counted.
      operationId: GET_projects_api_v3_tasks_metrics_complete.json
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/complete.Response'
          description: 200 OK
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/view.ErrorResponse'
          description: 400 Bad Request
      summary: Total count of completed tasks
      tags:
      - Tasks
  /projects/api/v3/tasks/metrics/late.json:
    get:
      description: |-
        Returns the number of late tasks. Only the tasks that the logged-in user has
        access to will be counted.
      operationId: GET_projects_api_v3_tasks_metrics_late.json
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/late.Response'
          description: 200 OK
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/view.ErrorResponse'
          description: 400 Bad Request
      summary: Get total count of late tasks
      tags:
      - Tasks
  /projects/api/v3/teams/:teamId/statuses/timeline.json:
    get:
      description: |-
        Return people statuses from a specific team that the logged-in user can
        access.
      operationId: GET_projects_api_v3_teams_:teamId_statuses_timeline.json
      parameters:
      - description: filter by the user name or status message
        in: query
        name: searchTerm
        schema:
          type: string
      - description: filter by team
        in: query
        name: teamId
        schema:
          type: integer
      - description: number of items in a page
        in: query
        name: pageSize
        schema:
          default: 50
          type: integer
      - description: page number
        in: query
        name: page
        schema:
          default: 1
          type: integer
      - description: showDeleted statuses
        in: query
        name: showDeleted
        schema:
          default: false
          type: boolean
      - description: also include statuses from subteams
        in: query
        name: includeSubteams
        schema:
          type: boolean
      - description: include
        explode: false
        in: query
        name: include
        schema:
          enum:
          - users
          - userevents
          items:
            type: string
          type: array
        style: form
      - explode: false
        in: query
        name: fields[users]
        schema:
          enum:
          - id
          - firstName
          - lastName
          - email
          - companyId
          - isAdmin
          - type
          items:
            type: string
          type: array
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/status.TimelineResponse'
          description: 200 OK
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/view.ErrorResponse'
          description: 400 Bad Request
      summary: Get statuses timeline for a specific team
      tags:
      - PeopleStatus
  /projects/api/v3/time.json:
    get:
      description: |-
        Return all logged time entries for all projects. Only the time entries that
        the logged-in user can access will be returned.
      operationId: GET_projects_api_v3_time.json
      parameters:
      - description: filter by updated after date
        in: query
        name: updatedAfter
        schema:
          format: date-time
          type: string
      - description: filter by a starting date
        in: query
        name: startDate
        schema:
          format: date
          type: string
      - description: customise the report by selecting columns
        in: query
        name: selectedColumns
        schema:
          type: string
      - description: define the format of the report
        in: query
        name: reportFormat
        schema:
          type: string
      - description: filter by project statuses
        in: query
        name: projectStatuses
        schema:
          enum:
          - active
          - current
          - late
          - upcoming
          - completed
          - deleted
          type: string
      - description: filter by project status
        in: query
        name: projectStatus
        schema:
          enum:
          - active
          - current
          - late
          - upcoming
          - completed
          - deleted
          type: string
      - description: order mode
        in: query
        name: orderMode
        schema:
          default: asc
          enum:
          - asc
          - desc
          type: string
      - description: sort order
        in: query
        name: orderBy
        schema:
          default: date
          enum:
          - company
          - date
          - dateupdated
          - project
          - task
          - tasklist
          - user
          type: string
      - description: filter by invoiced type
        in: query
        name: invoicedType
        schema:
          default: all
          enum:
          - all
          - invoiced
          - not-invoiced
          type: string
      - description: filter by an ending date
        in: query
        name: endDate
        schema:
          format: date
          type: string
      - description: filter by billable type
        in: query
        name: billableType
        schema:
          default: all
          enum:
          - all
          - billable
          - non-billable
          type: string
      - description: filter by ticket id
        in: query
        name: ticketId
        schema:
          type: integer
      - description: filter by tasklist id
        in: query
        name: tasklistId
        schema:
          type: integer
      - description: filter by project id
        in: query
        name: projectId
        schema:
          type: integer
      - description: |-
          filter by project healths

          0: not set
          1: bad
          2: ok
          3: good
        in: query
        name: projectHealths
        schema:
          enum:
          - 0
          - 1
          - 2
          - 3
          type: integer
      - description: number of items in a page
        in: query
        name: pageSize
        schema:
          default: 50
          type: integer
      - description: page number
        in: query
        name: page
        schema:
          default: 1
          type: integer
      - description: filter by allocation id
        in: query
        name: allocationId
        schema:
          type: integer
      - description: include deleted items
        in: query
        name: showDeleted
        schema:
          default: false
          type: boolean
      - description: filter by starred projects only
        in: query
        name: onlyStarredProjects
        schema:
          type: boolean
      - description: match all tags
        in: query
        name: matchAllTags
        schema:
          type: boolean
      - description: generate a report document
        in: query
        name: isReportDownload
        schema:
          type: boolean
      - description: include archived projects
        in: query
        name: includeArchivedProjects
        schema:
          default: false
          type: boolean
      - description: filter by task tag ids
        explode: false
        in: query
        name: taskTagIds
        schema:
          items:
            type: integer
          type: array
        style: form
      - description: filter by tag ids
        explode: false
        in: query
        name: tagIds
        schema:
          items:
            type: integer
          type: array
        style: form
      - description: filter by project company ids
        explode: false
        in: query
        name: projectsFromCompanyId
        schema:
          items:
            type: integer
          type: array
        style: form
      - description: filter by project tag ids
        explode: false
        in: query
        name: projectTagIds
        schema:
          items:
            type: integer
          type: array
        style: form
      - description: filter by project owner ids
        explode: false
        in: query
        name: projectOwnerIds
        schema:
          items:
            type: integer
          type: array
        style: form
      - description: filter by project ids
        explode: false
        in: query
        name: projectIds
        schema:
          items:
            type: integer
          type: array
        style: form
      - description: filter by project category ids
        explode: false
        in: query
        name: projectCategoryIds
        schema:
          items:
            type: integer
          type: array
        style: form
      - description: include
        explode: false
        in: query
        name: include
        schema:
          enum:
          - projects
          - tags
          - tasks
          - tasks.parentTasks
          - tasks.tasklists
          - users
          items:
            type: string
          type: array
        style: form
      - explode: false
        in: query
        name: fields[users]
        schema:
          enum:
          - id
          - firstName
          - lastName
          - email
          - companyId
          - isAdmin
          - type
          items:
            type: string
          type: array
        style: form
      - explode: false
        in: query
        name: fields[timelogs]
        schema:
          enum:
          - id
          - dateCreated
          - minutes
          - description
          - timeLogged
          - billable
          - deleted
          - dateDeleted
          - hasStartTime
          - dateEdited
          - deskTicketId
          - invoiceNumber
          - userId
          - taskId
          - projectId
          - loggedByUserId
          - deletedByUserId
          - editedByUserId
          - taskIdPreMove
          - projectBillingInvoiceId
          items:
            type: string
          type: array
        style: form
      - explode: false
        in: query
        name: fields[tasks]
        schema:
          enum:
          - id
          - name
          - dateUpdated
          - parentTaskId
          - isPrivate
          - status
          - tasklistId
          - startDate
          - dueDate
          items:
            type: string
          type: array
        style: form
      - explode: false
        in: query
        name: fields[tasklists]
        schema:
          enum:
          - id
          - name
          - projectId
          - milestoneId
          items:
            type: string
          type: array
        style: form
      - explode: false
        in: query
        name: fields[tags]
        schema:
          enum:
          - id
          - name
          - color
          - count
          items:
            type: string
          type: array
        style: form
      - explode: false
        in: query
        name: fields[projects]
        schema:
          enum:
          - id
          - name
          items:
            type: string
          type: array
        style: form
      - description: filter by company ids
        explode: false
        in: query
        name: companyIds
        schema:
          items:
            type: integer
          type: array
        style: form
      - description: filter by assigned user ids
        explode: false
        in: query
        name: assignedToUserIds
        schema:
          items:
            type: integer
          type: array
        style: form
      - description: filter by assigned team ids
        explode: false
        in: query
        name: assignedToTeamIds
        schema:
          items:
            type: integer
          type: array
        style: form
      - description: filter by assigned company ids
        explode: false
        in: query
        name: assignedToCompanyIds
        schema:
          items:
            type: integer
          type: array
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/timelog.TimelogsResponse'
          description: 200 OK
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/view.ErrorResponse'
          description: 400 Bad Request
      summary: Get all time entries
      tags:
      - TimeTracking
  /projects/api/v3/time/total.json:
    get:
      operationId: GET_projects_api_v3_time_total.json
      parameters:
      - description: filter by project statuses
        in: query
        name: projectStatuses
        schema:
          enum:
          - active
          - current
          - late
          - upcoming
          - completed
          - deleted
          type: string
      - description: filter by project status
        in: query
        name: projectStatus
        schema:
          enum:
          - active
          - current
          - late
          - upcoming
          - completed
          - deleted
          type: string
      - description: filter by user id
        in: query
        name: userId
        schema:
          type: integer
      - description: filter by tasklist id
        in: query
        name: tasklistId
        schema:
          type: integer
      - description: filter by task id
        in: query
        name: taskId
        schema:
          type: integer
      - description: filter by project id
        in: query
        name: projectId
        schema:
          type: integer
      - description: |-
          filter by project healths

          0: not set
          1: bad
          2: ok
          3: good
        in: query
        name: projectHealths
        schema:
          enum:
          - 0
          - 1
          - 2
          - 3
          type: integer
      - description: filter by desk ticket id
        in: query
        name: deskTicketId
        schema:
          type: integer
      - description: filter by starred projects only
        in: query
        name: onlyStarredProjects
        schema:
          type: boolean
      - description: match all tags
        in: query
        name: matchAllTags
        schema:
          type: boolean
      - description: filter by user ids
        explode: false
        in: query
        name: userIds
        schema:
          items:
            type: integer
          type: array
        style: form
      - description: filter by project tag ids
        explode: false
        in: query
        name: projectTagIds
        schema:
          items:
            type: integer
          type: array
        style: form
      - description: filter by project owner ids
        explode: false
        in: query
        name: projectOwnerIds
        schema:
          items:
            type: integer
          type: array
        style: form
      - description: filter by project ids
        explode: false
        in: query
        name: projectIds
        schema:
          items:
            type: integer
          type: array
        style: form
      - description: filter by project company ids
        explode: false
        in: query
        name: projectCompanyIds
        schema:
          items:
            type: integer
          type: array
        style: form
      - description: filter by project category ids
        explode: false
        in: query
        name: projectCategoryIds
        schema:
          items:
            type: integer
          type: array
        style: form
      - description: filter by company ids
        explode: false
        in: query
        name: companyIds
        schema:
          items:
            type: integer
          type: array
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/timelog.TotalsResponse'
          description: 200 OK
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/view.ErrorResponse'
          description: 400 Bad Request
      summary: Get timelog totals.
      tags:
      - TimeTracking
  /projects/api/v3/timers.json:
    get:
      description: |-
        Brings back all current running timers. Will return a set of existing intervals for each timer.
        If the timer has never been stopped then this interval will only have a from property set and
        the you will need to calculate the current duration of the timer.
      operationId: GET_projects_api_v3_timers.json
      parameters:
      - description: filter by updated after date (deprecated, use updatedAfter)
        in: query
        name: updatedAfterDate
        schema:
          format: date-time
          type: string
      - description: filter by updated after date
        in: query
        name: updatedAfter
        schema:
          format: date-time
          type: string
      - description: filter by user id
        in: query
        name: userId
        schema:
          type: integer
      - description: filter by task id
        in: query
        name: taskId
        schema:
          type: integer
      - description: filter by project id
        in: query
        name: projectId
        schema:
          type: integer
      - description: |-
          number of items in a page
          default: 50
        in: query
        name: pageSize
        schema:
          type: integer
      - description: |-
          page number
          default: 1
        in: query
        name: page
        schema:
          type: integer
      - description: |-
          include deleted items
          default: false
        in: query
        name: showDeleted
        schema:
          type: boolean
      - description: |-
          enforce running timers only
          default: false
        in: query
        name: runningTimersOnly
        schema:
          type: boolean
      - description: include
        explode: false
        in: query
        name: include
        schema:
          enum:
          - projects
          - tasks
          - tasks.parentTasks
          - tasks.tasklists
          - users
          items:
            type: string
          type: array
        style: form
      - explode: false
        in: query
        name: fields[users]
        schema:
          enum:
          - id
          - firstName
          - lastName
          - email
          - companyId
          - isAdmin
          - type
          items:
            type: string
          type: array
        style: form
      - explode: false
        in: query
        name: fields[timers]
        schema:
          enum:
          - id
          - userId
          - taskId
          - projectId
          - description
          - running
          - billable
          - deleted
          - dateCreated
          - dateDeleted
          - duration
          - lastStartedAt
          - serverTime
          - intervals
          items:
            type: string
          type: array
        style: form
      - explode: false
        in: query
        name: fields[tasks]
        schema:
          enum:
          - id
          - name
          - dateUpdated
          - parentTaskId
          - isPrivate
          - status
          - tasklistId
          - startDate
          - dueDate
          items:
            type: string
          type: array
        style: form
      - explode: false
        in: query
        name: fields[tasklists]
        schema:
          enum:
          - id
          - name
          - projectId
          - milestoneId
          items:
            type: string
          type: array
        style: form
      - explode: false
        in: query
        name: fields[projects]
        schema:
          enum:
          - id
          - name
          items:
            type: string
          type: array
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/timer.TimersResponse'
          description: 200 OK
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/view.ErrorResponse'
          description: 400 Bad Request
      summary: Get all running timers
      tags:
      - TimeTracking
  /projects/api/v3/timers/:id.json:
    get:
      description: Will get a timer with with a specific ID
      operationId: GET_projects_api_v3_timers_:id.json
      parameters:
      - description: filter by user id
        in: query
        name: userId
        schema:
          type: integer
      - description: filter by task id
        in: query
        name: showDeleted
        schema:
          type: boolean
      - description: include
        explode: false
        in: query
        name: include
        schema:
          enum:
          - projects
          - tasks
          - tasks.parentTasks
          - tasks.tasklists
          - users
          items:
            type: string
          type: array
        style: form
      - explode: false
        in: query
        name: fields[users]
        schema:
          enum:
          - id
          - firstName
          - lastName
          - email
          - companyId
          - isAdmin
          - type
          items:
            type: string
          type: array
        style: form
      - explode: false
        in: query
        name: fields[timers]
        schema:
          enum:
          - id
          - userId
          - taskId
          - projectId
          - description
          - running
          - billable
          - deleted
          - dateCreated
          - dateDeleted
          - duration
          - lastStartedAt
          - serverTime
          - intervals
          items:
            type: string
          type: array
        style: form
      - explode: false
        in: query
        name: fields[tasks]
        schema:
          enum:
          - id
          - name
          - dateUpdated
          - parentTaskId
          - isPrivate
          - status
          - tasklistId
          - startDate
          - dueDate
          items:
            type: string
          type: array
        style: form
      - explode: false
        in: query
        name: fields[tasklists]
        schema:
          enum:
          - id
          - name
          - projectId
          - milestoneId
          items:
            type: string
          type: array
        style: form
      - explode: false
        in: query
        name: fields[projects]
        schema:
          enum:
          - id
          - name
          items:
            type: string
          type: array
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/timer.Response'
          description: 200 OK
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/view.ErrorResponse'
          description: 400 Bad Request
        "404":
          content: {}
          description: 404 Not Found (no data)
      summary: Get a specific timer
      tags:
      - TimeTracking
  /projects/api/v3/workload.csv:
    get:
      description: |-
        Generates a workload report in CSV format containing all workload for the
        provided filters. Only the tasks that the logged-in user can access will be
        returned.
      operationId: GET_projects_api_v3_workload.csv
      parameters:
      - description: filter by start date
        in: query
        name: startDate
        schema:
          format: date
          type: string
      - description: filter by search term
        in: query
        name: searchTerm
        schema:
          type: string
      - description: define the format of the report
        in: query
        name: reportFormat
        schema:
          type: string
      - description: filter by project status
        in: query
        name: projectStatuses
        schema:
          enum:
          - active
          - current
          - late
          - upcoming
          - completed
          - deleted
          type: string
      - description: order mode
        in: query
        name: orderMode
        schema:
          default: asc
          enum:
          - asc
          - desc
          type: string
      - description: order by
        in: query
        name: orderBy
        schema:
          default: user
          enum:
          - project
          - company
          - user
          - startDate
          - dueDate
          - estimatedTime
          type: string
      - description: filter by end date
        in: query
        name: endDate
        schema:
          format: date
          type: string
      - description: |-
          filter by project healths

          0: not set
          1: bad
          2: ok
          3: good
        in: query
        name: projectHealths
        schema:
          enum:
          - 0
          - 1
          - 2
          - 3
          type: integer
      - description: enable prorata estimated time
        in: query
        name: prorataEstimatedTime
        schema:
          type: boolean
      - description: filter for only untagged tasks
        in: query
        name: onlyUntaggedTasks
        schema:
          type: boolean
      - description: filter by starred projects only
        in: query
        name: onlyStarredProjects
        schema:
          type: boolean
      - description: math all task tags
        in: query
        name: matchAllTags
        schema:
          type: boolean
      - description: match all project tags
        in: query
        name: matchAllProjectTags
        schema:
          type: boolean
      - description: match all excluded task tags
        in: query
        name: matchAllExcludedTags
        schema:
          type: boolean
      - description: generate a report document
        in: query
        name: isReportDownload
        schema:
          type: boolean
      - description: include tasks without dates
        in: query
        name: includeTasksWithoutDates
        schema:
          type: boolean
      - description: distribute estimated time to assignees
        in: query
        name: distributeEstimatedTimeToAssignees
        schema:
          type: boolean
      - description: filter by task tag ids
        explode: false
        in: query
        name: tagIds
        schema:
          items:
            type: integer
          type: array
        style: form
      - description: filter by responsible party IDs
        explode: false
        in: query
        name: responsiblePartyIds
        schema:
          items:
            type: integer
          type: array
        style: form
      - description: filter by project tag ids
        explode: false
        in: query
        name: projectTagIds
        schema:
          items:
            type: integer
          type: array
        style: form
      - description: filter by project owner ids
        explode: false
        in: query
        name: projectOwnerIds
        schema:
          items:
            type: integer
          type: array
        style: form
      - description: filter by project ids
        explode: false
        in: query
        name: projectIds
        schema:
          items:
            type: integer
          type: array
        style: form
      - description: filter by company ids
        explode: false
        in: query
        name: projectCompanyIds
        schema:
          items:
            type: integer
          type: array
        style: form
      - description: filter by project category ids
        explode: false
        in: query
        name: projectCategoryIds
        schema:
          items:
            type: integer
          type: array
        style: form
      - description: exclude some task tag ids
        explode: false
        in: query
        name: excludeTagIds
        schema:
          items:
            type: integer
          type: array
        style: form
      responses:
        "200":
          content: {}
          description: 200 OK (no data)
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/view.ErrorResponse'
            text/csv:
              schema:
                $ref: '#/components/schemas/view.ErrorResponse'
          description: 400 Bad Request
      summary: Generate workload report in CSV format
      tags:
      - Workload
  /projects/api/v3/workload.html:
    get:
      description: |-
        Generates a workload report in HTML format containing all workload for the
        provided filters. Only the tasks that the logged-in user can access will be
        returned.
      operationId: GET_projects_api_v3_workload.html
      parameters:
      - description: filter by start date
        in: query
        name: startDate
        schema:
          format: date
          type: string
      - description: filter by search term
        in: query
        name: searchTerm
        schema:
          type: string
      - description: define the format of the report
        in: query
        name: reportFormat
        schema:
          type: string
      - description: filter by project status
        in: query
        name: projectStatuses
        schema:
          enum:
          - active
          - current
          - late
          - upcoming
          - completed
          - deleted
          type: string
      - description: order mode
        in: query
        name: orderMode
        schema:
          default: asc
          enum:
          - asc
          - desc
          type: string
      - description: order by
        in: query
        name: orderBy
        schema:
          default: user
          enum:
          - project
          - company
          - user
          - startDate
          - dueDate
          - estimatedTime
          type: string
      - description: filter by end date
        in: query
        name: endDate
        schema:
          format: date
          type: string
      - description: |-
          filter by project healths

          0: not set
          1: bad
          2: ok
          3: good
        in: query
        name: projectHealths
        schema:
          enum:
          - 0
          - 1
          - 2
          - 3
          type: integer
      - description: enable prorata estimated time
        in: query
        name: prorataEstimatedTime
        schema:
          type: boolean
      - description: filter for only untagged tasks
        in: query
        name: onlyUntaggedTasks
        schema:
          type: boolean
      - description: filter by starred projects only
        in: query
        name: onlyStarredProjects
        schema:
          type: boolean
      - description: math all task tags
        in: query
        name: matchAllTags
        schema:
          type: boolean
      - description: match all project tags
        in: query
        name: matchAllProjectTags
        schema:
          type: boolean
      - description: match all excluded task tags
        in: query
        name: matchAllExcludedTags
        schema:
          type: boolean
      - description: generate a report document
        in: query
        name: isReportDownload
        schema:
          type: boolean
      - description: include tasks without dates
        in: query
        name: includeTasksWithoutDates
        schema:
          type: boolean
      - description: distribute estimated time to assignees
        in: query
        name: distributeEstimatedTimeToAssignees
        schema:
          type: boolean
      - description: filter by task tag ids
        explode: false
        in: query
        name: tagIds
        schema:
          items:
            type: integer
          type: array
        style: form
      - description: filter by responsible party IDs
        explode: false
        in: query
        name: responsiblePartyIds
        schema:
          items:
            type: integer
          type: array
        style: form
      - description: filter by project tag ids
        explode: false
        in: query
        name: projectTagIds
        schema:
          items:
            type: integer
          type: array
        style: form
      - description: filter by project owner ids
        explode: false
        in: query
        name: projectOwnerIds
        schema:
          items:
            type: integer
          type: array
        style: form
      - description: filter by project ids
        explode: false
        in: query
        name: projectIds
        schema:
          items:
            type: integer
          type: array
        style: form
      - description: filter by company ids
        explode: false
        in: query
        name: projectCompanyIds
        schema:
          items:
            type: integer
          type: array
        style: form
      - description: filter by project category ids
        explode: false
        in: query
        name: projectCategoryIds
        schema:
          items:
            type: integer
          type: array
        style: form
      - description: exclude some task tag ids
        explode: false
        in: query
        name: excludeTagIds
        schema:
          items:
            type: integer
          type: array
        style: form
      responses:
        "200":
          content: {}
          description: 200 OK (no data)
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/view.ErrorResponse'
            text/html:
              schema:
                $ref: '#/components/schemas/view.ErrorResponse'
          description: 400 Bad Request
      summary: Generate workload report in HTML format
      tags:
      - Workload
  /projects/api/v3/workload.pdf:
    get:
      description: |-
        Generates a task list report in PDF format containing all workload for the
        provided filters. Only the tasks that the logged-in user can access will be
        returned.
      operationId: GET_projects_api_v3_workload.pdf
      parameters:
      - description: filter by start date
        in: query
        name: startDate
        schema:
          format: date
          type: string
      - description: filter by search term
        in: query
        name: searchTerm
        schema:
          type: string
      - description: define the format of the report
        in: query
        name: reportFormat
        schema:
          type: string
      - description: filter by project status
        in: query
        name: projectStatuses
        schema:
          enum:
          - active
          - current
          - late
          - upcoming
          - completed
          - deleted
          type: string
      - description: order mode
        in: query
        name: orderMode
        schema:
          default: asc
          enum:
          - asc
          - desc
          type: string
      - description: order by
        in: query
        name: orderBy
        schema:
          default: user
          enum:
          - project
          - company
          - user
          - startDate
          - dueDate
          - estimatedTime
          type: string
      - description: filter by end date
        in: query
        name: endDate
        schema:
          format: date
          type: string
      - description: |-
          filter by project healths

          0: not set
          1: bad
          2: ok
          3: good
        in: query
        name: projectHealths
        schema:
          enum:
          - 0
          - 1
          - 2
          - 3
          type: integer
      - description: enable prorata estimated time
        in: query
        name: prorataEstimatedTime
        schema:
          type: boolean
      - description: filter for only untagged tasks
        in: query
        name: onlyUntaggedTasks
        schema:
          type: boolean
      - description: filter by starred projects only
        in: query
        name: onlyStarredProjects
        schema:
          type: boolean
      - description: math all task tags
        in: query
        name: matchAllTags
        schema:
          type: boolean
      - description: match all project tags
        in: query
        name: matchAllProjectTags
        schema:
          type: boolean
      - description: match all excluded task tags
        in: query
        name: matchAllExcludedTags
        schema:
          type: boolean
      - description: generate a report document
        in: query
        name: isReportDownload
        schema:
          type: boolean
      - description: include tasks without dates
        in: query
        name: includeTasksWithoutDates
        schema:
          type: boolean
      - description: distribute estimated time to assignees
        in: query
        name: distributeEstimatedTimeToAssignees
        schema:
          type: boolean
      - description: filter by task tag ids
        explode: false
        in: query
        name: tagIds
        schema:
          items:
            type: integer
          type: array
        style: form
      - description: filter by responsible party IDs
        explode: false
        in: query
        name: responsiblePartyIds
        schema:
          items:
            type: integer
          type: array
        style: form
      - description: filter by project tag ids
        explode: false
        in: query
        name: projectTagIds
        schema:
          items:
            type: integer
          type: array
        style: form
      - description: filter by project owner ids
        explode: false
        in: query
        name: projectOwnerIds
        schema:
          items:
            type: integer
          type: array
        style: form
      - description: filter by project ids
        explode: false
        in: query
        name: projectIds
        schema:
          items:
            type: integer
          type: array
        style: form
      - description: filter by company ids
        explode: false
        in: query
        name: projectCompanyIds
        schema:
          items:
            type: integer
          type: array
        style: form
      - description: filter by project category ids
        explode: false
        in: query
        name: projectCategoryIds
        schema:
          items:
            type: integer
          type: array
        style: form
      - description: exclude some task tag ids
        explode: false
        in: query
        name: excludeTagIds
        schema:
          items:
            type: integer
          type: array
        style: form
      responses:
        "200":
          content: {}
          description: 200 OK (no data)
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/view.ErrorResponse'
            application/pdf:
              schema:
                $ref: '#/components/schemas/view.ErrorResponse'
          description: 400 Bad Request
      summary: Generate workload report in PDF format
      tags:
      - Workload
  /projects/api/v3/workload.xlsx:
    get:
      description: |-
        Generates a workload report in XLSX format containing all workload for the
        provided filters. Only the tasks that the logged-in user can access will be
        returned.
      operationId: GET_projects_api_v3_workload.xlsx
      parameters:
      - description: filter by start date
        in: query
        name: startDate
        schema:
          format: date
          type: string
      - description: filter by search term
        in: query
        name: searchTerm
        schema:
          type: string
      - description: define the format of the report
        in: query
        name: reportFormat
        schema:
          type: string
      - description: filter by project status
        in: query
        name: projectStatuses
        schema:
          enum:
          - active
          - current
          - late
          - upcoming
          - completed
          - deleted
          type: string
      - description: order mode
        in: query
        name: orderMode
        schema:
          default: asc
          enum:
          - asc
          - desc
          type: string
      - description: order by
        in: query
        name: orderBy
        schema:
          default: user
          enum:
          - project
          - company
          - user
          - startDate
          - dueDate
          - estimatedTime
          type: string
      - description: filter by end date
        in: query
        name: endDate
        schema:
          format: date
          type: string
      - description: |-
          filter by project healths

          0: not set
          1: bad
          2: ok
          3: good
        in: query
        name: projectHealths
        schema:
          enum:
          - 0
          - 1
          - 2
          - 3
          type: integer
      - description: enable prorata estimated time
        in: query
        name: prorataEstimatedTime
        schema:
          type: boolean
      - description: filter for only untagged tasks
        in: query
        name: onlyUntaggedTasks
        schema:
          type: boolean
      - description: filter by starred projects only
        in: query
        name: onlyStarredProjects
        schema:
          type: boolean
      - description: math all task tags
        in: query
        name: matchAllTags
        schema:
          type: boolean
      - description: match all project tags
        in: query
        name: matchAllProjectTags
        schema:
          type: boolean
      - description: match all excluded task tags
        in: query
        name: matchAllExcludedTags
        schema:
          type: boolean
      - description: generate a report document
        in: query
        name: isReportDownload
        schema:
          type: boolean
      - description: include tasks without dates
        in: query
        name: includeTasksWithoutDates
        schema:
          type: boolean
      - description: distribute estimated time to assignees
        in: query
        name: distributeEstimatedTimeToAssignees
        schema:
          type: boolean
      - description: filter by task tag ids
        explode: false
        in: query
        name: tagIds
        schema:
          items:
            type: integer
          type: array
        style: form
      - description: filter by responsible party IDs
        explode: false
        in: query
        name: responsiblePartyIds
        schema:
          items:
            type: integer
          type: array
        style: form
      - description: filter by project tag ids
        explode: false
        in: query
        name: projectTagIds
        schema:
          items:
            type: integer
          type: array
        style: form
      - description: filter by project owner ids
        explode: false
        in: query
        name: projectOwnerIds
        schema:
          items:
            type: integer
          type: array
        style: form
      - description: filter by project ids
        explode: false
        in: query
        name: projectIds
        schema:
          items:
            type: integer
          type: array
        style: form
      - description: filter by company ids
        explode: false
        in: query
        name: projectCompanyIds
        schema:
          items:
            type: integer
          type: array
        style: form
      - description: filter by project category ids
        explode: false
        in: query
        name: projectCategoryIds
        schema:
          items:
            type: integer
          type: array
        style: form
      - description: exclude some task tag ids
        explode: false
        in: query
        name: excludeTagIds
        schema:
          items:
            type: integer
          type: array
        style: form
      responses:
        "200":
          content: {}
          description: 200 OK (no data)
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/view.ErrorResponse'
            application/vnd.openxmlformats-officedocument.spreadsheetml.sheet:
              schema:
                $ref: '#/components/schemas/view.ErrorResponse'
          description: 400 Bad Request
      summary: Generate workload report in XLSX format.
      tags:
      - Workload
  /projects/api/v3/workload/planners.json:
    get:
      description: Return the workload planner for each users of the installation.
      operationId: GET_projects_api_v3_workload_planners.json
      parameters:
      - description: define the start date of the planner
        in: query
        name: startDate
        schema:
          format: date
          type: string
      - description: filter by user name
        in: query
        name: searchUserName
        schema:
          type: string
      - description: filter by task name
        in: query
        name: searchTaskName
        schema:
          type: string
      - description: list of project status
        in: query
        name: projectStatuses
        schema:
          type: string
      - description: filter by project status
        in: query
        name: projectStatus
        schema:
          type: string
      - description: order mode
        in: query
        name: orderMode
        schema:
          default: asc
          enum:
          - asc
          - desc
          type: string
      - description: order by
        in: query
        name: orderBy
        schema:
          default: name
          enum:
          - name
          - company
          type: string
      - description: define the end date of the planner
        in: query
        name: endDate
        schema:
          format: date
          type: string
      - description: list of project health
        in: query
        name: projectHealths
        schema:
          type: integer
      - description: number of items in a page
        in: query
        name: pageSize
        schema:
          default: 50
          type: integer
      - description: page number
        in: query
        name: page
        schema:
          default: 1
          type: integer
      - description: subtract logged time from task estimated time
        in: query
        name: subtractLoggedTimeFromEstimates
        schema:
          type: boolean
      - description: include tasks that have the start and due dates outside the window
          range
        in: query
        name: prorating
        schema:
          default: false
          type: boolean
      - description: filter ony untagged tasks
        in: query
        name: onlyUntaggedTasks
        schema:
          type: boolean
      - description: filter by starred projects only
        in: query
        name: onlyStarredProjects
        schema:
          type: boolean
      - description: enforce all tag ids must be matched
        in: query
        name: matchAllProjectTags
        schema:
          type: boolean
      - description: include team users to the responsible party ids
        in: query
        name: includeTeamUserIds
        schema:
          default: true
          type: boolean
      - description: include tasks without start or due date
        in: query
        name: includeTasksWithoutDates
        schema:
          type: boolean
      - description: include completed tasks
        in: query
        name: includeCompletedTasks
        schema:
          type: boolean
      - description: include company users to the responsible party ids
        in: query
        name: includeCompanyUserIds
        schema:
          default: true
          type: boolean
      - description: include calendar events on capacity calculation
        in: query
        name: includeCalendarEvents
        schema:
          type: boolean
      - description: include teams related to the responsible party ids
        in: query
        name: includeAssigneeTeams
        schema:
          type: boolean
      - description: include companies related to the responsible party ids
        in: query
        name: includeAssigneeCompanies
        schema:
          type: boolean
      - description: include archived projects
        in: query
        name: includeArchivedProjects
        schema:
          type: boolean
      - description: distribute the estimated time for a task between all the assignees
        in: query
        name: distribute
        schema:
          type: boolean
      - description: filter by member of team ids
        explode: false
        in: query
        name: teamIds
        schema:
          items:
            type: integer
          type: array
        style: form
      - description: filter by task tag ids
        explode: false
        in: query
        name: tagIds
        schema:
          items:
            type: integer
          type: array
        style: form
      - description: filter by responsible party ids
        explode: false
        in: query
        name: responsiblePartyIds
        schema:
          items:
            type: integer
          type: array
        style: form
      - description: filter by project tag ids
        explode: false
        in: query
        name: projectTagIds
        schema:
          items:
            type: integer
          type: array
        style: form
      - description: filter by project owner ids
        explode: false
        in: query
        name: projectOwnerIds
        schema:
          items:
            type: integer
          type: array
        style: form
      - description: filter by project ids
        explode: false
        in: query
        name: projectIds
        schema:
          items:
            type: integer
          type: array
        style: form
      - description: filter by company ids
        explode: false
        in: query
        name: projectCompanyIds
        schema:
          items:
            type: integer
          type: array
        style: form
      - description: filter by project category ids
        explode: false
        in: query
        name: projectCategoryIds
        schema:
          items:
            type: integer
          type: array
        style: form
      - description: filter by member of project ids
        explode: false
        in: query
        name: memberOfProjectIds
        schema:
          items:
            type: integer
          type: array
        style: form
      - description: include
        explode: false
        in: query
        name: include
        schema:
          enum:
          - users
          - users.workingHours
          - users.workingHours.workingHoursEntry
          - tasks
          - tasks.timelogs
          - tasklists
          - milestones
          - companies
          - calendarEvents
          items:
            type: string
          type: array
        style: form
      - explode: false
        in: query
        name: fields[workingHours]
        schema:
          enum:
          - id
          - objectType
          - objectId
          - name
          - description
          - dateCreated
          - dateUpdated
          - entryIds
          items:
            type: string
          type: array
        style: form
      - explode: false
        in: query
        name: fields[workingHourEntries]
        schema:
          enum:
          - id
          - workingHourId
          - weekday
          - startTime
          - endTime
          - taskHours
          - timezone
          items:
            type: string
          type: array
        style: form
      - explode: false
        in: query
        name: fields[users]
        schema:
          enum:
          - id
          - firstName
          - lastName
          - email
          - companyId
          - isAdmin
          - type
          items:
            type: string
          type: array
        style: form
      - explode: false
        in: query
        name: fields[timelogs]
        schema:
          enum:
          - id
          - dateCreated
          - minutes
          - description
          - timeLogged
          - billable
          - deleted
          - dateDeleted
          - hasStartTime
          - dateEdited
          - deskTicketId
          - invoiceNumber
          - userId
          - taskId
          - projectId
          - loggedByUserId
          - deletedByUserId
          - editedByUserId
          - taskIdPreMove
          - projectBillingInvoiceId
          items:
            type: string
          type: array
        style: form
      - explode: false
        in: query
        name: fields[tasks]
        schema:
          enum:
          - id
          - name
          - dateUpdated
          - parentTaskId
          - isPrivate
          - status
          - tasklistId
          - startDate
          - dueDate
          items:
            type: string
          type: array
        style: form
      - explode: false
        in: query
        name: fields[tasklists]
        schema:
          enum:
          - id
          - name
          - projectId
          - milestoneId
          items:
            type: string
          type: array
        style: form
      - explode: false
        in: query
        name: fields[milestones]
        schema:
          enum:
          - id
          - name
          - description
          - deadline
          - completed
          - projectId
          - createdOn
          - lastChangedOn
          - creatorUserId
          - reminder
          - private
          - lockdownId
          - status
          - completedOn
          - completerId
          - percentageComplete
          items:
            type: string
          type: array
        style: form
      - explode: false
        in: query
        name: fields[companies]
        schema:
          enum:
          - id
          - name
          - logoUploadedToServer
          - logoImage
          items:
            type: string
          type: array
        style: form
      - explode: false
        in: query
        name: fields[calendarEvents]
        schema:
          enum:
          - id
          - title
          - startDate
          - endDate
          - typeId
          - privacyType
          - allDay
          - location
          - description
          - showAsBusy
          - attendeesCanEdit
          - projectUsersCanEdit
          - monthlyRepeatType
          - dateLastUpdated
          - createdDateTime
          - deleted
          - dateDeleted
          - additionalProperties
          - currentUserAssociationType
          - sequenceId
          - projectId
          - ownerUserId
          - deletedByUserId
          - createdByUserId
          - updatedByUserId
          items:
            type: string
          type: array
        style: form
      - description: filter by removing task tag ids
        explode: false
        in: query
        name: excludeTagIds
        schema:
          items:
            type: integer
          type: array
        style: form
      - description: filter by user company id
        explode: false
        in: query
        name: companyIds
        schema:
          items:
            type: integer
          type: array
        style: form
      - description: filter by assignee team ids
        explode: false
        in: query
        name: assigneeTeamIds
        schema:
          items:
            type: integer
          type: array
        style: form
      - description: filter by assignee company ids
        explode: false
        in: query
        name: assigneeCompanyIds
        schema:
          items:
            type: integer
          type: array
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/planner.WorkloadPlannersResponse'
          description: 200 OK
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/view.ErrorResponse'
          description: 400 Bad Request
      summary: Retrieve user workload planner
      tags:
      - Workload
components:
  schemas:
    active.ProjectMetricActive:
      description: ProjectMetricActive contains all the information returned from
        a active.
      example:
        value: 0
      properties:
        value:
          type: integer
      title: ProjectMetricActive
      type: object
    active.Response:
      description: Response contains information about a specific active.
      example:
        data:
          value: 0
      properties:
        data:
          $ref: '#/components/schemas/active.ProjectMetricActive'
      title: Response
      type: object
    activity.ActivitiesResponse:
      description: |-
        ActivitiesResponse contains all the information returned when sending a GET
        request to the activity endpoint.
      example:
        activities:
        - dateTime: dateTime
          itemLink: itemLink
          dueDate: dueDate
          link: link
          publicInfo: publicInfo
          description: description
          project:
            meta: '{}'
            id: 0
            type: type
          isPrivate: 5
          type: type
          forUserId: 6
          lockdown:
            meta: '{}'
            id: 0
            type: type
          company:
            meta: '{}'
            id: 0
            type: type
          id: 1
          forUser:
            meta: '{}'
            id: 0
            type: type
          extraDescription: extraDescription
          item:
            meta: '{}'
            id: 0
            type: type
          latestActivityType: latestActivityType
          lockdownId: 2
          userId: 9
          itemId: 5
          companyId: 0
          forUserName: forUserName
          activityType: activityType
          projectId: 7
          user:
            meta: '{}'
            id: 0
            type: type
        - dateTime: dateTime
          itemLink: itemLink
          dueDate: dueDate
          link: link
          publicInfo: publicInfo
          description: description
          project:
            meta: '{}'
            id: 0
            type: type
          isPrivate: 5
          type: type
          forUserId: 6
          lockdown:
            meta: '{}'
            id: 0
            type: type
          company:
            meta: '{}'
            id: 0
            type: type
          id: 1
          forUser:
            meta: '{}'
            id: 0
            type: type
          extraDescription: extraDescription
          item:
            meta: '{}'
            id: 0
            type: type
          latestActivityType: latestActivityType
          lockdownId: 2
          userId: 9
          itemId: 5
          companyId: 0
          forUserName: forUserName
          activityType: activityType
          projectId: 7
          user:
            meta: '{}'
            id: 0
            type: type
        meta:
          page:
            count: 6
            hasMore: true
            pageOffset: 3
            pageSize: 3
        included:
          companies:
            key:
              city: city
              industry:
                meta: '{}'
                id: 0
                type: type
              emailTwo: emailTwo
              industryId: 6
              isOwner: true
              addressTwo: addressTwo
              countryCode: countryCode
              emailThree: emailThree
              id: 1
              state: state
              fax: fax
              zip: zip
              profileText: profileText
              website: website
              clientUsers: 1
              companyNameUrl: companyNameUrl
              logoUrl: logoUrl
              phone: phone
              emailOne: emailOne
              name: name
              privateNotesText: privateNotesText
              accounts: 7
              addressOne: addressOne
              contacts: 1
              canSeePrivate: true
              cid: cid
          projects:
            key:
              replyByEmailEnabled: true
              startPage: startPage
              endDate: endDate
              overviewStartPage: overviewStartPage
              tagIds:
              - 6
              - 6
              customFieldValueIds:
              - 5
              - 5
              description: description
              minMaxAvailableDates:
                maxEndDate: maxEndDate
                minStartDate: minStartDate
                suggestedEndDate: suggestedEndDate
                suggestedStartDate: suggestedStartDate
                deadlinesFound: true
              ownerId: 8
              type: type
              createdAt: createdAt
              updateId: 6
              logo: logo
              company:
                meta: '{}'
                id: 0
                type: type
              id: 9
              financialBudget:
                meta: '{}'
                id: 0
                type: type
              updatedAt: updatedAt
              harvestTimersEnabled: true
              updatedBy: 1
              activePages:
                comments: true
                riskRegister: true
                list: true
                gantt: true
                billing: true
                notebooks: true
                files: true
                messages: true
                links: true
                time: true
                milestones: true
                board: true
                forms: true
                table: true
                tasks: true
              isStarred: true
              directFileUploadsEnabled: true
              isOnBoardingProject: true
              subStatus: subStatus
              isSampleProject: true
              tags:
              - meta: '{}'
                id: 0
                type: type
              - meta: '{}'
                id: 0
                type: type
              tasksStartPage: tasksStartPage
              financialBudgetId: 9
              privacyEnabled: true
              companyId: 1
              defaultPrivacy: defaultPrivacy
              customFieldValues:
              - meta: '{}'
                id: 0
                type: type
              - meta: '{}'
                id: 0
                type: type
              createdBy: 4
              notifyCommentIncludeCreator: true
              skipWeekends: true
              name: name
              projectOwnerId: 9
              notifyEveryone: true
              timeBudgetId: 3
              showAnnouncement: true
              category:
                meta: '{}'
                id: 0
                type: type
              integrations:
                xero:
                  connected: true
                  countryCode: countryCode
                  organisation: organisation
                  baseCurrency: baseCurrency
                  enabled: true
                oneDriveBusiness:
                  folder: folder
                  folderName: folderName
                  account: account
                  enabled: true
                sharepoint:
                  folder: folder
                  folderName: folderName
                  account: account
                  enabled: true
              ownedBy: 6
              categoryId: 7
              startDate: startDate
              status: status
              timeBudget:
                meta: '{}'
                id: 0
                type: type
          users:
            key:
              lastName: lastName
              avatarUrl: avatarUrl
              isAdmin: true
              title: title
              type: type
              firstName: firstName
              companyId: 2
              workingHoursId: 5
              lengthOfDay: 6.878052220127876
              company:
                meta: '{}'
                id: 0
                type: type
              workingHour:
                meta: '{}'
                id: 0
                type: type
              id: 6
              email: email
      properties:
        activities:
          items:
            $ref: '#/components/schemas/activity.Activity'
          type: array
        included:
          $ref: '#/components/schemas/activity_ActivitiesResponse_included'
        meta:
          $ref: '#/components/schemas/view.Meta'
      title: ActivitiesResponse
      type: object
    activity.Activity:
      description: Activity represents a view of activity.
      example:
        dateTime: dateTime
        itemLink: itemLink
        dueDate: dueDate
        link: link
        publicInfo: publicInfo
        description: description
        project:
          meta: '{}'
          id: 0
          type: type
        isPrivate: 5
        type: type
        forUserId: 6
        lockdown:
          meta: '{}'
          id: 0
          type: type
        company:
          meta: '{}'
          id: 0
          type: type
        id: 1
        forUser:
          meta: '{}'
          id: 0
          type: type
        extraDescription: extraDescription
        item:
          meta: '{}'
          id: 0
          type: type
        latestActivityType: latestActivityType
        lockdownId: 2
        userId: 9
        itemId: 5
        companyId: 0
        forUserName: forUserName
        activityType: activityType
        projectId: 7
        user:
          meta: '{}'
          id: 0
          type: type
      properties:
        activityType:
          type: string
        company:
          $ref: '#/components/schemas/view.Relationship'
        companyId:
          type: integer
        dateTime:
          type: string
        description:
          type: string
        dueDate:
          type: string
        extraDescription:
          type: string
        forUser:
          $ref: '#/components/schemas/view.Relationship'
        forUserId:
          type: integer
        forUserName:
          type: string
        id:
          type: integer
        isPrivate:
          type: integer
        item:
          $ref: '#/components/schemas/view.Relationship'
        itemId:
          type: integer
        itemLink:
          type: string
        latestActivityType:
          type: string
        link:
          type: string
        lockdown:
          $ref: '#/components/schemas/view.Relationship'
        lockdownId:
          type: integer
        project:
          $ref: '#/components/schemas/view.Relationship'
        projectId:
          type: integer
        publicInfo:
          type: string
        type:
          type: string
        user:
          $ref: '#/components/schemas/view.Relationship'
        userId:
          type: integer
      title: Activity
      type: object
    allocation.Allocation:
      description: Allocation contains all the information returned from a allocation.
      properties:
        assignedUserID:
          type: integer
        color:
          type: string
        description:
          type: string
        distributeType:
          type: string
        duration:
          description: in minutes
          type: integer
        endedAt:
          description: Date unmarshals represents a Unified API Spec date format.
          title: Date
          type: object
        hoursPerDay:
          type: number
        ignoreCollisions:
          type: boolean
        projectId:
          type: integer
        recurringRule:
          $ref: '#/components/schemas/payload.NullableRRule'
        startedAt:
          description: Date unmarshals represents a Unified API Spec date format.
          title: Date
          type: object
        title:
          type: string
      title: Allocation
      type: object
    allocation.AllocationsResponse:
      description: AllocationsResponse contains information about a group of allocations.
      example:
        allocations:
        - updatedBy: 4
          color: color
          description: description
          project:
            meta: '{}'
            id: 0
            type: type
          startedAt: '{}'
          availableDuration: 1
          title: title
          deletedBy: 5
          hoursPerDay: 7.061401241503109
          duration: 2
          createdAt: createdAt
          distributeType: distributeType
          deletedAt: deletedAt
          createdBy: 5
          endedAt: '{}'
          installation:
            meta: '{}'
            id: 0
            type: type
          id: 9
          installationId: 3
          assignedUser:
            meta: '{}'
            id: 0
            type: type
          projectId: 2
          assignedUserID: 6
          recurringRule: recurringRule
          status: status
          updatedAt: updatedAt
        - updatedBy: 4
          color: color
          description: description
          project:
            meta: '{}'
            id: 0
            type: type
          startedAt: '{}'
          availableDuration: 1
          title: title
          deletedBy: 5
          hoursPerDay: 7.061401241503109
          duration: 2
          createdAt: createdAt
          distributeType: distributeType
          deletedAt: deletedAt
          createdBy: 5
          endedAt: '{}'
          installation:
            meta: '{}'
            id: 0
            type: type
          id: 9
          installationId: 3
          assignedUser:
            meta: '{}'
            id: 0
            type: type
          projectId: 2
          assignedUserID: 6
          recurringRule: recurringRule
          status: status
          updatedAt: updatedAt
        meta:
          page:
            count: 6
            hasMore: true
            pageOffset: 3
            pageSize: 3
        included:
          companies:
            key:
              city: city
              industry:
                meta: '{}'
                id: 0
                type: type
              emailTwo: emailTwo
              industryId: 6
              isOwner: true
              addressTwo: addressTwo
              countryCode: countryCode
              emailThree: emailThree
              id: 1
              state: state
              fax: fax
              zip: zip
              profileText: profileText
              website: website
              clientUsers: 1
              companyNameUrl: companyNameUrl
              logoUrl: logoUrl
              phone: phone
              emailOne: emailOne
              name: name
              privateNotesText: privateNotesText
              accounts: 7
              addressOne: addressOne
              contacts: 1
              canSeePrivate: true
              cid: cid
          projects:
            key:
              replyByEmailEnabled: true
              startPage: startPage
              endDate: endDate
              overviewStartPage: overviewStartPage
              tagIds:
              - 6
              - 6
              customFieldValueIds:
              - 5
              - 5
              description: description
              minMaxAvailableDates:
                maxEndDate: maxEndDate
                minStartDate: minStartDate
                suggestedEndDate: suggestedEndDate
                suggestedStartDate: suggestedStartDate
                deadlinesFound: true
              ownerId: 8
              type: type
              createdAt: createdAt
              updateId: 6
              logo: logo
              company:
                meta: '{}'
                id: 0
                type: type
              id: 9
              financialBudget:
                meta: '{}'
                id: 0
                type: type
              updatedAt: updatedAt
              harvestTimersEnabled: true
              updatedBy: 1
              activePages:
                comments: true
                riskRegister: true
                list: true
                gantt: true
                billing: true
                notebooks: true
                files: true
                messages: true
                links: true
                time: true
                milestones: true
                board: true
                forms: true
                table: true
                tasks: true
              isStarred: true
              directFileUploadsEnabled: true
              isOnBoardingProject: true
              subStatus: subStatus
              isSampleProject: true
              tags:
              - meta: '{}'
                id: 0
                type: type
              - meta: '{}'
                id: 0
                type: type
              tasksStartPage: tasksStartPage
              financialBudgetId: 9
              privacyEnabled: true
              companyId: 1
              defaultPrivacy: defaultPrivacy
              customFieldValues:
              - meta: '{}'
                id: 0
                type: type
              - meta: '{}'
                id: 0
                type: type
              createdBy: 4
              notifyCommentIncludeCreator: true
              skipWeekends: true
              name: name
              projectOwnerId: 9
              notifyEveryone: true
              timeBudgetId: 3
              showAnnouncement: true
              category:
                meta: '{}'
                id: 0
                type: type
              integrations:
                xero:
                  connected: true
                  countryCode: countryCode
                  organisation: organisation
                  baseCurrency: baseCurrency
                  enabled: true
                oneDriveBusiness:
                  folder: folder
                  folderName: folderName
                  account: account
                  enabled: true
                sharepoint:
                  folder: folder
                  folderName: folderName
                  account: account
                  enabled: true
              ownedBy: 6
              categoryId: 7
              startDate: startDate
              status: status
              timeBudget:
                meta: '{}'
                id: 0
                type: type
          users:
            key:
              lastName: lastName
              avatarUrl: avatarUrl
              isAdmin: true
              title: title
              type: type
              firstName: firstName
              companyId: 2
              workingHoursId: 5
              lengthOfDay: 6.878052220127876
              company:
                meta: '{}'
                id: 0
                type: type
              workingHour:
                meta: '{}'
                id: 0
                type: type
              id: 6
              email: email
      properties:
        allocations:
          items:
            $ref: '#/components/schemas/view.Allocation'
          type: array
        included:
          $ref: '#/components/schemas/activity_ActivitiesResponse_included'
        meta:
          $ref: '#/components/schemas/view.Meta'
      title: AllocationsResponse
      type: object
    allocation.BulkDeleteRequest:
      description: BulkDeleteRequest contains the ids of the allocations that should
        be removed.
      properties:
        allocationIds:
          items:
            type: integer
          type: array
        hardDelete:
          type: boolean
      title: BulkDeleteRequest
      type: object
    allocation.DeleteRequest:
      description: DeleteRequest contains some options while removing an allocation.
      properties:
        hardDelete:
          type: boolean
      title: DeleteRequest
      type: object
    allocation.Request:
      description: Request contains information of a allocation to be created or updated.
      properties:
        allocation:
          $ref: '#/components/schemas/allocation.Allocation'
      title: Request
      type: object
    allocation.Response:
      description: Response contains information about a specific allocation.
      example:
        allocation:
          updatedBy: 4
          color: color
          description: description
          project:
            meta: '{}'
            id: 0
            type: type
          startedAt: '{}'
          availableDuration: 1
          title: title
          deletedBy: 5
          hoursPerDay: 7.061401241503109
          duration: 2
          createdAt: createdAt
          distributeType: distributeType
          deletedAt: deletedAt
          createdBy: 5
          endedAt: '{}'
          installation:
            meta: '{}'
            id: 0
            type: type
          id: 9
          installationId: 3
          assignedUser:
            meta: '{}'
            id: 0
            type: type
          projectId: 2
          assignedUserID: 6
          recurringRule: recurringRule
          status: status
          updatedAt: updatedAt
      properties:
        allocation:
          $ref: '#/components/schemas/view.Allocation'
      title: Response
      type: object
    allocation.SplitRequest:
      description: |-
        SplitRequest contains the time at which to insert the split, and new duration
        of the resulting first allocation.
      properties:
        at:
          description: Date unmarshals represents a Unified API Spec date format.
          title: Date
          type: object
        duration:
          type: integer
      title: SplitRequest
      type: object
    app.AppsResponse:
      description: AppsResponse contains information about a group of apps.
      example:
        meta:
          page:
            count: 6
            hasMore: true
            pageOffset: 3
            pageSize: 3
        included:
          appsettings:
            key:
              isSecret: true
              defaultValue: defaultValue
              displayName: displayName
              name: name
              id: 6
              type: STRING
              value: value
        apps:
        - code: code
          isVerified: true
          isInstalled: true
          verifiedAt: verifiedAt
          description: description
          shortDescription: shortDescription
          isUninstallable: true
          logoURL: logoURL
          url: url
          createdAt: createdAt
          baseUrl: baseUrl
          appsettings:
          - meta: '{}'
            id: 0
            type: type
          - meta: '{}'
            id: 0
            type: type
          name: name
          publisher:
            meta: '{}'
            id: 0
            type: type
          id: 0
          updatedAt: updatedAt
        - code: code
          isVerified: true
          isInstalled: true
          verifiedAt: verifiedAt
          description: description
          shortDescription: shortDescription
          isUninstallable: true
          logoURL: logoURL
          url: url
          createdAt: createdAt
          baseUrl: baseUrl
          appsettings:
          - meta: '{}'
            id: 0
            type: type
          - meta: '{}'
            id: 0
            type: type
          name: name
          publisher:
            meta: '{}'
            id: 0
            type: type
          id: 0
          updatedAt: updatedAt
      properties:
        apps:
          items:
            $ref: '#/components/schemas/view.App'
          type: array
        included:
          $ref: '#/components/schemas/app_AppsResponse_included'
        meta:
          $ref: '#/components/schemas/view.Meta'
      title: AppsResponse
      type: object
    app.Response:
      description: Response contains information about a specific app.
      example:
        app:
          code: code
          isVerified: true
          isInstalled: true
          verifiedAt: verifiedAt
          description: description
          shortDescription: shortDescription
          isUninstallable: true
          logoURL: logoURL
          url: url
          createdAt: createdAt
          baseUrl: baseUrl
          appsettings:
          - meta: '{}'
            id: 0
            type: type
          - meta: '{}'
            id: 0
            type: type
          name: name
          publisher:
            meta: '{}'
            id: 0
            type: type
          id: 0
          updatedAt: updatedAt
        included:
          appsettings:
            key:
              isSecret: true
              defaultValue: defaultValue
              displayName: displayName
              name: name
              id: 6
              type: STRING
              value: value
      properties:
        app:
          $ref: '#/components/schemas/view.App'
        included:
          $ref: '#/components/schemas/app_AppsResponse_included'
      title: Response
      type: object
    assignee.FormAssignee:
      description: FormAssignee contains all the information returned from a assignee.
      properties:
        id:
          type: integer
        meta:
          properties: {}
          type: object
        type:
          type: string
      title: FormAssignee
      type: object
    assignee.FormAssigneesResponse:
      description: FormAssigneesResponse contains information about a group of assignees.
      example:
        meta:
          page:
            count: 6
            hasMore: true
            pageOffset: 3
            pageSize: 3
        assignees:
        - id: 0
          type: type
        - id: 0
          type: type
        included:
          companies:
            key:
              city: city
              industry:
                meta: '{}'
                id: 0
                type: type
              emailTwo: emailTwo
              industryId: 6
              isOwner: true
              addressTwo: addressTwo
              countryCode: countryCode
              emailThree: emailThree
              id: 1
              state: state
              fax: fax
              zip: zip
              profileText: profileText
              website: website
              clientUsers: 1
              companyNameUrl: companyNameUrl
              logoUrl: logoUrl
              phone: phone
              emailOne: emailOne
              name: name
              privateNotesText: privateNotesText
              accounts: 7
              addressOne: addressOne
              contacts: 1
              canSeePrivate: true
              cid: cid
          projects:
            key:
              replyByEmailEnabled: true
              startPage: startPage
              endDate: endDate
              overviewStartPage: overviewStartPage
              tagIds:
              - 6
              - 6
              customFieldValueIds:
              - 5
              - 5
              description: description
              minMaxAvailableDates:
                maxEndDate: maxEndDate
                minStartDate: minStartDate
                suggestedEndDate: suggestedEndDate
                suggestedStartDate: suggestedStartDate
                deadlinesFound: true
              ownerId: 8
              type: type
              createdAt: createdAt
              updateId: 6
              logo: logo
              company:
                meta: '{}'
                id: 0
                type: type
              id: 9
              financialBudget:
                meta: '{}'
                id: 0
                type: type
              updatedAt: updatedAt
              harvestTimersEnabled: true
              updatedBy: 1
              activePages:
                comments: true
                riskRegister: true
                list: true
                gantt: true
                billing: true
                notebooks: true
                files: true
                messages: true
                links: true
                time: true
                milestones: true
                board: true
                forms: true
                table: true
                tasks: true
              isStarred: true
              directFileUploadsEnabled: true
              isOnBoardingProject: true
              subStatus: subStatus
              isSampleProject: true
              tags:
              - meta: '{}'
                id: 0
                type: type
              - meta: '{}'
                id: 0
                type: type
              tasksStartPage: tasksStartPage
              financialBudgetId: 9
              privacyEnabled: true
              companyId: 1
              defaultPrivacy: defaultPrivacy
              customFieldValues:
              - meta: '{}'
                id: 0
                type: type
              - meta: '{}'
                id: 0
                type: type
              createdBy: 4
              notifyCommentIncludeCreator: true
              skipWeekends: true
              name: name
              projectOwnerId: 9
              notifyEveryone: true
              timeBudgetId: 3
              showAnnouncement: true
              category:
                meta: '{}'
                id: 0
                type: type
              integrations:
                xero:
                  connected: true
                  countryCode: countryCode
                  organisation: organisation
                  baseCurrency: baseCurrency
                  enabled: true
                oneDriveBusiness:
                  folder: folder
                  folderName: folderName
                  account: account
                  enabled: true
                sharepoint:
                  folder: folder
                  folderName: folderName
                  account: account
                  enabled: true
              ownedBy: 6
              categoryId: 7
              startDate: startDate
              status: status
              timeBudget:
                meta: '{}'
                id: 0
                type: type
          teams:
            key:
              teamLogo: teamLogo
              name: name
              id: 4
              teamLogoColor: teamLogoColor
              teamLogoIcon: teamLogoIcon
          users:
            key:
              lastName: lastName
              avatarUrl: avatarUrl
              isAdmin: true
              title: title
              type: type
              firstName: firstName
              companyId: 2
              workingHoursId: 5
              lengthOfDay: 6.878052220127876
              company:
                meta: '{}'
                id: 0
                type: type
              workingHour:
                meta: '{}'
                id: 0
                type: type
              id: 6
              email: email
      properties:
        assignees:
          items:
            $ref: '#/components/schemas/view.FormAssignee'
          type: array
        included:
          $ref: '#/components/schemas/assignee_FormAssigneesResponse_included'
        meta:
          $ref: '#/components/schemas/view.Meta'
      title: FormAssigneesResponse
      type: object
    assignee.Request:
      description: Request contains information of a assignee to be created or updated.
      properties:
        assignees:
          items:
            $ref: '#/components/schemas/assignee.FormAssignee'
          type: array
      title: Request
      type: object
    assignee.Response:
      description: Response contains information about a specific assignee.
      example:
        assignees:
        - id: 0
          type: type
        - id: 0
          type: type
        errors:
        - code: code
          meta: '{}'
          detail: detail
          id: '{}'
          source: source
          title: title
          statusCode: 6
        - code: code
          meta: '{}'
          detail: detail
          id: '{}'
          source: source
          title: title
          statusCode: 6
      properties:
        assignees:
          items:
            $ref: '#/components/schemas/view.FormAssignee'
          type: array
        errors:
          items:
            $ref: '#/components/schemas/apierrors.BulkError'
          type: array
      title: Response
      type: object
    availability.Response:
      description: Response contains information about a specific availability.
      example:
        availability:
          dates:
            key:
              unavailableEventIds:
              - 6
              - 6
              availableMinutes: 0
          user:
            meta: '{}'
            id: 0
            type: type
          userId: 1
        included:
          calendarEvents:
            key:
              dateLastUpdated: dateLastUpdated
              endDate: endDate
              projectUsersCanEdit: true
              createdDateTime: createdDateTime
              description: description
              project:
                meta: '{}'
                id: 0
                type: type
              updatedByUserId: 1
              currentUserAssociationType: currentUserAssociationType
              title: title
              type:
                meta: '{}'
                id: 0
                type: type
              sequenceId: 2
              deletedBy: 5
              allDay: true
              createdAt: createdAt
              id: 2
              updatedAt: updatedAt
              createdByUserId: 1
              updatedBy: 7
              attendeesCanEdit: true
              attendingUserIds:
              - 0
              - 0
              monthlyRepeatType: monthlyRepeatType
              dateDeleted: dateDeleted
              deletedByUserId: 5
              sequence:
                meta: '{}'
                id: 0
                type: type
              deletedAt: deletedAt
              deleted: true
              createdBy: 6
              ownerUserId: 9
              location: location
              showAsBusy: true
              typeId: 4
              additionalProperties: additionalProperties
              attendingUsers:
              - meta: '{}'
                id: 0
                type: type
              - meta: '{}'
                id: 0
                type: type
              ownedBy: 7
              projectId: 3
              privacyType: privacyType
              startDate: startDate
          workingHourEntries:
            key:
              timezone: timezone
              taskHours: 5.637376656633329
              weekday: weekday
              startTime: startTime
              workingHour:
                meta: '{}'
                id: 0
                type: type
              endTime: endTime
              id: 5
              workingHourId: 2
          workingHours:
            key:
              createdAt: createdAt
              entries:
              - meta: '{}'
                id: 0
                type: type
              - meta: '{}'
                id: 0
                type: type
              entryIds:
              - 7
              - 7
              dateCreated: dateCreated
              name: name
              description: description
              id: 9
              objectId: 3
              dateUpdated: dateUpdated
              object:
                meta: '{}'
                id: 0
                type: type
              objectType: objectType
              updatedAt: updatedAt
          users:
            key:
              lastName: lastName
              avatarUrl: avatarUrl
              isAdmin: true
              title: title
              type: type
              firstName: firstName
              companyId: 2
              workingHoursId: 5
              lengthOfDay: 6.878052220127876
              company:
                meta: '{}'
                id: 0
                type: type
              workingHour:
                meta: '{}'
                id: 0
                type: type
              id: 6
              email: email
      properties:
        availability:
          $ref: '#/components/schemas/view.UserAvailability'
        included:
          $ref: '#/components/schemas/availability_Response_included'
      title: Response
      type: object
    billable.ProjectMetricBillable:
      description: ProjectMetricBillable contains all the information returned from
        a billable.
      example:
        name: name
        value: 0
      properties:
        name:
          type: string
        value:
          type: integer
      title: ProjectMetricBillable
      type: object
    billable.ProjectMetricBillablesResponse:
      description: ProjectMetricBillablesResponse contains information about a group
        of billables.
      example:
        data:
        - name: name
          value: 0
        - name: name
          value: 0
      properties:
        data:
          items:
            $ref: '#/components/schemas/billable.ProjectMetricBillable'
          type: array
      title: ProjectMetricBillablesResponse
      type: object
    budget.BulkDeleteRequest:
      description: BulkDeleteRequest contains the ids of the budgets that should be
        removed.
      properties:
        budgetIds:
          items:
            type: integer
          type: array
      title: BulkDeleteRequest
      type: object
    budget.CapacityUsedAtDate:
      description: CapacityUsedAtDate reprsents the capacity of the
      example:
        date: date
        usage: 5.637376656633329
      properties:
        date:
          description: RFC3339 formated datetime, when the day starts int UTC time
          type: string
        usage:
          type: number
      title: CapacityUsedAtDate
      type: object
    budget.ProjectBudget:
      description: ProjectBudget contains all the information returned from a budget.
      properties:
        capacity:
          type: integer
        currencyCode:
          type: string
        defaultRate:
          type: number
        endDateTime:
          type: string
        expenseType:
          type: string
        id:
          type: integer
        isRepeating:
          type: boolean
        notifications:
          items:
            $ref: '#/components/schemas/notification.ProjectBudgetNotification'
          type: array
        originatorBudgetID:
          type: integer
        projectId:
          type: integer
        repeatPeriod:
          type: integer
        repeatUnit:
          type: string
        repeatsRemaining:
          type: integer
        sequenceNumber:
          type: integer
        startDateTime:
          type: string
        status:
          type: string
        timelogType:
          type: string
        type:
          type: string
      title: ProjectBudget
      type: object
    budget.ProjectBudgetSummary:
      description: ProjectBudgetSummary has a summary with some of the view.ProjectBudget
        fields
      example:
        startDateTime: startDateTime
        capacityUsed: 6
        project:
          meta: '{}'
          id: 0
          type: type
        timelogType: timelogType
        id: 1
        endDateTime: endDateTime
        type: type
        projectId: 5
        capacity: 0
      properties:
        capacity:
          type: integer
        capacityUsed:
          type: integer
        endDateTime:
          type: string
        id:
          type: integer
        project:
          $ref: '#/components/schemas/view.Relationship'
        projectId:
          type: integer
        startDateTime:
          type: string
        timelogType:
          type: string
        type:
          type: string
      title: ProjectBudgetSummary
      type: object
    budget.ProjectBudgetUsage:
      description: ProjectBudgetUsage has the summary and daily usage for a ProjectBudget
      example:
        budgetSummary:
          startDateTime: startDateTime
          capacityUsed: 6
          project:
            meta: '{}'
            id: 0
            type: type
          timelogType: timelogType
          id: 1
          endDateTime: endDateTime
          type: type
          projectId: 5
          capacity: 0
        usageTimeline:
        - date: date
          usage: 5.637376656633329
        - date: date
          usage: 5.637376656633329
      properties:
        budgetSummary:
          $ref: '#/components/schemas/budget.ProjectBudgetSummary'
        usageTimeline:
          items:
            $ref: '#/components/schemas/budget.CapacityUsedAtDate'
          type: array
      title: ProjectBudgetUsage
      type: object
    budget.ProjectBudgetUsageResponse:
      description: ProjectBudgetUsageResponse contains a list of ProjectBudgetUsage
      example:
        budgetUsages:
        - budgetSummary:
            startDateTime: startDateTime
            capacityUsed: 6
            project:
              meta: '{}'
              id: 0
              type: type
            timelogType: timelogType
            id: 1
            endDateTime: endDateTime
            type: type
            projectId: 5
            capacity: 0
          usageTimeline:
          - date: date
            usage: 5.637376656633329
          - date: date
            usage: 5.637376656633329
        - budgetSummary:
            startDateTime: startDateTime
            capacityUsed: 6
            project:
              meta: '{}'
              id: 0
              type: type
            timelogType: timelogType
            id: 1
            endDateTime: endDateTime
            type: type
            projectId: 5
            capacity: 0
          usageTimeline:
          - date: date
            usage: 5.637376656633329
          - date: date
            usage: 5.637376656633329
      properties:
        budgetUsages:
          items:
            $ref: '#/components/schemas/budget.ProjectBudgetUsage'
          type: array
      title: ProjectBudgetUsageResponse
      type: object
    budget.ProjectBudgetsResponse:
      description: ProjectBudgetsResponse contains information about a group of budgets.
      example:
        budgets:
        - notificationIds:
          - 4
          - 4
          project:
            meta: '{}'
            id: 0
            type: type
          updatedByUserId: 1
          type: type
          deletedBy: 9
          capacity: 0
          createdAt: createdAt
          originatorBudgetId: 7
          dateCreated: dateCreated
          dateCompleted: dateCompleted
          repeatPeriod: 1
          id: 2
          updatedAt: updatedAt
          createdByUserId: 2
          repeatUnit: repeatUnit
          sequenceNumber: 6
          completedAt: completedAt
          expenseType: expenseType
          updatedBy: 7
          originatorBudget:
            meta: '{}'
            id: 0
            type: type
          repeatsRemaining: 1
          capacityUsed: 6
          timelogType: timelogType
          endDateTime: endDateTime
          dateDeleted: dateDeleted
          deletedByUserId: 3
          completedByUserId: 5
          dateUpdated: dateUpdated
          defaultRate: 7.061401241503109
          deletedAt: deletedAt
          isRepeating: true
          startDateTime: startDateTime
          createdBy: 5
          currencyCode: currencyCode
          projectId: 1
          completedBy: 1
          notifications:
          - meta: '{}'
            id: 0
            type: type
          - meta: '{}'
            id: 0
            type: type
          status: status
        - notificationIds:
          - 4
          - 4
          project:
            meta: '{}'
            id: 0
            type: type
          updatedByUserId: 1
          type: type
          deletedBy: 9
          capacity: 0
          createdAt: createdAt
          originatorBudgetId: 7
          dateCreated: dateCreated
          dateCompleted: dateCompleted
          repeatPeriod: 1
          id: 2
          updatedAt: updatedAt
          createdByUserId: 2
          repeatUnit: repeatUnit
          sequenceNumber: 6
          completedAt: completedAt
          expenseType: expenseType
          updatedBy: 7
          originatorBudget:
            meta: '{}'
            id: 0
            type: type
          repeatsRemaining: 1
          capacityUsed: 6
          timelogType: timelogType
          endDateTime: endDateTime
          dateDeleted: dateDeleted
          deletedByUserId: 3
          completedByUserId: 5
          dateUpdated: dateUpdated
          defaultRate: 7.061401241503109
          deletedAt: deletedAt
          isRepeating: true
          startDateTime: startDateTime
          createdBy: 5
          currencyCode: currencyCode
          projectId: 1
          completedBy: 1
          notifications:
          - meta: '{}'
            id: 0
            type: type
          - meta: '{}'
            id: 0
            type: type
          status: status
        meta:
          page:
            count: 6
            hasMore: true
            pageOffset: 3
            pageSize: 3
        included:
          companies:
            key:
              city: city
              industry:
                meta: '{}'
                id: 0
                type: type
              emailTwo: emailTwo
              industryId: 6
              isOwner: true
              addressTwo: addressTwo
              countryCode: countryCode
              emailThree: emailThree
              id: 1
              state: state
              fax: fax
              zip: zip
              profileText: profileText
              website: website
              clientUsers: 1
              companyNameUrl: companyNameUrl
              logoUrl: logoUrl
              phone: phone
              emailOne: emailOne
              name: name
              privateNotesText: privateNotesText
              accounts: 7
              addressOne: addressOne
              contacts: 1
              canSeePrivate: true
              cid: cid
          projects:
            key:
              replyByEmailEnabled: true
              startPage: startPage
              endDate: endDate
              overviewStartPage: overviewStartPage
              tagIds:
              - 6
              - 6
              customFieldValueIds:
              - 5
              - 5
              description: description
              minMaxAvailableDates:
                maxEndDate: maxEndDate
                minStartDate: minStartDate
                suggestedEndDate: suggestedEndDate
                suggestedStartDate: suggestedStartDate
                deadlinesFound: true
              ownerId: 8
              type: type
              createdAt: createdAt
              updateId: 6
              logo: logo
              company:
                meta: '{}'
                id: 0
                type: type
              id: 9
              financialBudget:
                meta: '{}'
                id: 0
                type: type
              updatedAt: updatedAt
              harvestTimersEnabled: true
              updatedBy: 1
              activePages:
                comments: true
                riskRegister: true
                list: true
                gantt: true
                billing: true
                notebooks: true
                files: true
                messages: true
                links: true
                time: true
                milestones: true
                board: true
                forms: true
                table: true
                tasks: true
              isStarred: true
              directFileUploadsEnabled: true
              isOnBoardingProject: true
              subStatus: subStatus
              isSampleProject: true
              tags:
              - meta: '{}'
                id: 0
                type: type
              - meta: '{}'
                id: 0
                type: type
              tasksStartPage: tasksStartPage
              financialBudgetId: 9
              privacyEnabled: true
              companyId: 1
              defaultPrivacy: defaultPrivacy
              customFieldValues:
              - meta: '{}'
                id: 0
                type: type
              - meta: '{}'
                id: 0
                type: type
              createdBy: 4
              notifyCommentIncludeCreator: true
              skipWeekends: true
              name: name
              projectOwnerId: 9
              notifyEveryone: true
              timeBudgetId: 3
              showAnnouncement: true
              category:
                meta: '{}'
                id: 0
                type: type
              integrations:
                xero:
                  connected: true
                  countryCode: countryCode
                  organisation: organisation
                  baseCurrency: baseCurrency
                  enabled: true
                oneDriveBusiness:
                  folder: folder
                  folderName: folderName
                  account: account
                  enabled: true
                sharepoint:
                  folder: folder
                  folderName: folderName
                  account: account
                  enabled: true
              ownedBy: 6
              categoryId: 7
              startDate: startDate
              status: status
              timeBudget:
                meta: '{}'
                id: 0
                type: type
          teams:
            key:
              teamLogo: teamLogo
              name: name
              id: 4
              teamLogoColor: teamLogoColor
              teamLogoIcon: teamLogoIcon
          notifications:
            key:
              capacityThreshold: 0.8008281904610115
              notificationMedium: notificationMedium
              companies:
              - meta: '{}'
                id: 0
                type: type
              - meta: '{}'
                id: 0
                type: type
              companyIds:
              - 6
              - 6
              teams:
              - meta: '{}'
                id: 0
                type: type
              - meta: '{}'
                id: 0
                type: type
              userIds:
              - 5
              - 5
              id: 1
              teamIds:
              - 5
              - 5
              users:
              - meta: '{}'
                id: 0
                type: type
              - meta: '{}'
                id: 0
                type: type
          users:
            key:
              lastName: lastName
              avatarUrl: avatarUrl
              isAdmin: true
              title: title
              type: type
              firstName: firstName
              companyId: 2
              workingHoursId: 5
              lengthOfDay: 6.878052220127876
              company:
                meta: '{}'
                id: 0
                type: type
              workingHour:
                meta: '{}'
                id: 0
                type: type
              id: 6
              email: email
      properties:
        budgets:
          items:
            $ref: '#/components/schemas/view.ProjectBudget'
          type: array
        included:
          $ref: '#/components/schemas/budget_ProjectBudgetsResponse_included'
        meta:
          $ref: '#/components/schemas/view.Meta'
      title: ProjectBudgetsResponse
      type: object
    budget.ProjectBudgetsUsagesResponse:
      description: ProjectBudgetsUsagesResponse contains information about a group
        of budgets.
      example:
        budgetUsages:
        - budgetSummary:
            startDateTime: startDateTime
            capacityUsed: 6
            project:
              meta: '{}'
              id: 0
              type: type
            timelogType: timelogType
            id: 1
            endDateTime: endDateTime
            type: type
            projectId: 5
            capacity: 0
          usageTimeline:
          - date: date
            usage: 5.637376656633329
          - date: date
            usage: 5.637376656633329
        - budgetSummary:
            startDateTime: startDateTime
            capacityUsed: 6
            project:
              meta: '{}'
              id: 0
              type: type
            timelogType: timelogType
            id: 1
            endDateTime: endDateTime
            type: type
            projectId: 5
            capacity: 0
          usageTimeline:
          - date: date
            usage: 5.637376656633329
          - date: date
            usage: 5.637376656633329
        meta:
          page:
            count: 6
            hasMore: true
            pageOffset: 3
            pageSize: 3
      properties:
        budgetUsages:
          items:
            $ref: '#/components/schemas/budget.ProjectBudgetUsage'
          type: array
        meta:
          $ref: '#/components/schemas/view.Meta'
      title: ProjectBudgetsUsagesResponse
      type: object
    budget.Request:
      description: Request contains information of a budget to be created or updated.
      properties:
        budget:
          $ref: '#/components/schemas/budget.ProjectBudget'
      title: Request
      type: object
    budget.Response:
      description: Response contains information about a specific budget.
      example:
        repeatStatus: repeatStatus
        budget:
          notificationIds:
          - 4
          - 4
          project:
            meta: '{}'
            id: 0
            type: type
          updatedByUserId: 1
          type: type
          deletedBy: 9
          capacity: 0
          createdAt: createdAt
          originatorBudgetId: 7
          dateCreated: dateCreated
          dateCompleted: dateCompleted
          repeatPeriod: 1
          id: 2
          updatedAt: updatedAt
          createdByUserId: 2
          repeatUnit: repeatUnit
          sequenceNumber: 6
          completedAt: completedAt
          expenseType: expenseType
          updatedBy: 7
          originatorBudget:
            meta: '{}'
            id: 0
            type: type
          repeatsRemaining: 1
          capacityUsed: 6
          timelogType: timelogType
          endDateTime: endDateTime
          dateDeleted: dateDeleted
          deletedByUserId: 3
          completedByUserId: 5
          dateUpdated: dateUpdated
          defaultRate: 7.061401241503109
          deletedAt: deletedAt
          isRepeating: true
          startDateTime: startDateTime
          createdBy: 5
          currencyCode: currencyCode
          projectId: 1
          completedBy: 1
          notifications:
          - meta: '{}'
            id: 0
            type: type
          - meta: '{}'
            id: 0
            type: type
          status: status
      properties:
        budget:
          $ref: '#/components/schemas/view.ProjectBudget'
        repeatStatus:
          type: string
      title: Response
      type: object
    calendar.EventsResponse:
      description: EventsResponse contains information about a group of calendar events.
      example:
        calendarEvents:
        - dateLastUpdated: dateLastUpdated
          endDate: endDate
          projectUsersCanEdit: true
          createdDateTime: createdDateTime
          description: description
          project:
            meta: '{}'
            id: 0
            type: type
          updatedByUserId: 1
          currentUserAssociationType: currentUserAssociationType
          title: title
          type:
            meta: '{}'
            id: 0
            type: type
          sequenceId: 2
          deletedBy: 5
          allDay: true
          createdAt: createdAt
          id: 2
          updatedAt: updatedAt
          createdByUserId: 1
          updatedBy: 7
          attendeesCanEdit: true
          attendingUserIds:
          - 0
          - 0
          monthlyRepeatType: monthlyRepeatType
          dateDeleted: dateDeleted
          deletedByUserId: 5
          sequence:
            meta: '{}'
            id: 0
            type: type
          deletedAt: deletedAt
          deleted: true
          createdBy: 6
          ownerUserId: 9
          location: location
          showAsBusy: true
          typeId: 4
          additionalProperties: additionalProperties
          attendingUsers:
          - meta: '{}'
            id: 0
            type: type
          - meta: '{}'
            id: 0
            type: type
          ownedBy: 7
          projectId: 3
          privacyType: privacyType
          startDate: startDate
        - dateLastUpdated: dateLastUpdated
          endDate: endDate
          projectUsersCanEdit: true
          createdDateTime: createdDateTime
          description: description
          project:
            meta: '{}'
            id: 0
            type: type
          updatedByUserId: 1
          currentUserAssociationType: currentUserAssociationType
          title: title
          type:
            meta: '{}'
            id: 0
            type: type
          sequenceId: 2
          deletedBy: 5
          allDay: true
          createdAt: createdAt
          id: 2
          updatedAt: updatedAt
          createdByUserId: 1
          updatedBy: 7
          attendeesCanEdit: true
          attendingUserIds:
          - 0
          - 0
          monthlyRepeatType: monthlyRepeatType
          dateDeleted: dateDeleted
          deletedByUserId: 5
          sequence:
            meta: '{}'
            id: 0
            type: type
          deletedAt: deletedAt
          deleted: true
          createdBy: 6
          ownerUserId: 9
          location: location
          showAsBusy: true
          typeId: 4
          additionalProperties: additionalProperties
          attendingUsers:
          - meta: '{}'
            id: 0
            type: type
          - meta: '{}'
            id: 0
            type: type
          ownedBy: 7
          projectId: 3
          privacyType: privacyType
          startDate: startDate
        meta:
          page:
            count: 6
            hasMore: true
            pageOffset: 3
            pageSize: 3
        included:
          projects:
            key:
              replyByEmailEnabled: true
              startPage: startPage
              endDate: endDate
              overviewStartPage: overviewStartPage
              tagIds:
              - 6
              - 6
              customFieldValueIds:
              - 5
              - 5
              description: description
              minMaxAvailableDates:
                maxEndDate: maxEndDate
                minStartDate: minStartDate
                suggestedEndDate: suggestedEndDate
                suggestedStartDate: suggestedStartDate
                deadlinesFound: true
              ownerId: 8
              type: type
              createdAt: createdAt
              updateId: 6
              logo: logo
              company:
                meta: '{}'
                id: 0
                type: type
              id: 9
              financialBudget:
                meta: '{}'
                id: 0
                type: type
              updatedAt: updatedAt
              harvestTimersEnabled: true
              updatedBy: 1
              activePages:
                comments: true
                riskRegister: true
                list: true
                gantt: true
                billing: true
                notebooks: true
                files: true
                messages: true
                links: true
                time: true
                milestones: true
                board: true
                forms: true
                table: true
                tasks: true
              isStarred: true
              directFileUploadsEnabled: true
              isOnBoardingProject: true
              subStatus: subStatus
              isSampleProject: true
              tags:
              - meta: '{}'
                id: 0
                type: type
              - meta: '{}'
                id: 0
                type: type
              tasksStartPage: tasksStartPage
              financialBudgetId: 9
              privacyEnabled: true
              companyId: 1
              defaultPrivacy: defaultPrivacy
              customFieldValues:
              - meta: '{}'
                id: 0
                type: type
              - meta: '{}'
                id: 0
                type: type
              createdBy: 4
              notifyCommentIncludeCreator: true
              skipWeekends: true
              name: name
              projectOwnerId: 9
              notifyEveryone: true
              timeBudgetId: 3
              showAnnouncement: true
              category:
                meta: '{}'
                id: 0
                type: type
              integrations:
                xero:
                  connected: true
                  countryCode: countryCode
                  organisation: organisation
                  baseCurrency: baseCurrency
                  enabled: true
                oneDriveBusiness:
                  folder: folder
                  folderName: folderName
                  account: account
                  enabled: true
                sharepoint:
                  folder: folder
                  folderName: folderName
                  account: account
                  enabled: true
              ownedBy: 6
              categoryId: 7
              startDate: startDate
              status: status
              timeBudget:
                meta: '{}'
                id: 0
                type: type
          users:
            key:
              lastName: lastName
              avatarUrl: avatarUrl
              isAdmin: true
              title: title
              type: type
              firstName: firstName
              companyId: 2
              workingHoursId: 5
              lengthOfDay: 6.878052220127876
              company:
                meta: '{}'
                id: 0
                type: type
              workingHour:
                meta: '{}'
                id: 0
                type: type
              id: 6
              email: email
      properties:
        calendarEvents:
          items:
            $ref: '#/components/schemas/view.CalendarEvent'
          type: array
        included:
          $ref: '#/components/schemas/calendar_EventsResponse_included'
        meta:
          $ref: '#/components/schemas/view.Meta'
      title: EventsResponse
      type: object
    category.CategoriesResponse:
      description: CategoriesResponse contains information about a group of projects.
      example:
        projects:
        - parent:
            meta: '{}'
            id: 0
            type: type
          color: color
          count: 2
          name: name
          id: 4
          parentId: 7
        - parent:
            meta: '{}'
            id: 0
            type: type
          color: color
          count: 2
          name: name
          id: 4
          parentId: 7
      properties:
        projects:
          items:
            $ref: '#/components/schemas/view.ProjectCategory'
          type: array
      title: CategoriesResponse
      type: object
    change.ChangesResponse:
      description: ChangesResponse contains information about a group of changes.
      example:
        changes:
        - parent:
            meta: '{}'
            id: 0
            type: type
          lastUpdatedDate: lastUpdatedDate
          id: 0
          parentId: 6
        - parent:
            meta: '{}'
            id: 0
            type: type
          lastUpdatedDate: lastUpdatedDate
          id: 0
          parentId: 6
      properties:
        changes:
          items:
            $ref: '#/components/schemas/view.Change'
          type: array
      title: ChangesResponse
      type: object
    column.BoardColumnMeta:
      description: BoardColumnMeta contains user-specific information
      example:
        user:
          canEdit: true
          canAddCards: true
      properties:
        user:
          $ref: '#/components/schemas/column_BoardColumnMeta_user'
      title: BoardColumnMeta
      type: object
    column.Response:
      description: Response contains information about a specific column.
      example:
        meta:
          user:
            canEdit: true
            canAddCards: true
        column:
          settings:
            reminders: true
            private: true
            comments: true
            tickets: true
            recurring: true
            subtasklabel: true
            subtasktext: true
            avatar: true
            endAt: true
            priority: true
            dependencies: true
            tags: true
            estimatedtime: true
            followers: true
            name: true
            files: true
            progress: true
            assignee: true
            tasklist: true
            time: true
            startAt: true
          color: color
          displayOrder: 0
          project:
            meta: '{}'
            id: 0
            type: type
          sort: sort
          createdAt: createdAt
          deletedAt: deletedAt
          deleted: true
          defaultTasklist:
            meta: '{}'
            id: 0
            type: type
          stats:
            estimatedTime: 5
            total: 2
            active: 1
            completed: 5
          sortOrder: sortOrder
          name: name
          hasTriggers: true
          id: 6
          updatedAt: updatedAt
        included:
          tasklists:
            key:
              milestone:
                meta: '{}'
                id: 0
                type: type
              milestoneId: 5
              name: name
              project:
                meta: '{}'
                id: 0
                type: type
              id: 5
              newTaskDefaults:
                estimatedMinutes: 2
                dueDate: dueDate
                responisblePartyIds:
                  companies:
                  - meta: '{}'
                    id: 0
                    type: type
                  - meta: '{}'
                    id: 0
                    type: type
                  companyIds:
                  - 7
                  - 7
                  teams:
                  - meta: '{}'
                    id: 0
                    type: type
                  - meta: '{}'
                    id: 0
                    type: type
                  userIds:
                  - 3
                  - 3
                  teamIds:
                  - 9
                  - 9
                  users:
                  - meta: '{}'
                    id: 0
                    type: type
                  - meta: '{}'
                    id: 0
                    type: type
                priority: priority
                startDate: startDate
                tags:
                - 2
                - 2
              taskIds:
              - 7
              - 7
              projectId: 4
              tasks:
              - meta: '{}'
                id: 0
                type: type
              - meta: '{}'
                id: 0
                type: type
      properties:
        column:
          $ref: '#/components/schemas/view.BoardColumn'
        included:
          $ref: '#/components/schemas/column_Response_included'
        meta:
          $ref: '#/components/schemas/column.BoardColumnMeta'
      title: Response
      type: object
    comment.CommentsResponse:
      description: CommentsResponse contains information about a group of comments.
      example:
        comments:
        - dateLastEdited: dateLastEdited
          reactionsCount: 6
          project:
            meta: '{}'
            id: 0
            type: type
          postedDateTime: postedDateTime
          body: body
          deletedBy: 0
          lastEditedByUserId: 7
          objectType: objectType
          postedBy: 2
          fileIds:
          - 1
          - 1
          installation:
            meta: '{}'
            id: 0
            type: type
          id: 5
          peopleNotifiedCount: 3
          contentType: contentType
          objectId: 9
          dateDeleted: dateDeleted
          deletedByUserId: 6
          lastEditedBy: 2
          deleted: true
          postedByUserId: 4
          files:
          - meta: '{}'
            id: 0
            type: type
          - meta: '{}'
            id: 0
            type: type
          reactions:
          - installation:
              meta: '{}'
              id: 0
              type: type
            postedDateTime: postedDateTime
            installationId: 1
            type: type
            user:
              meta: '{}'
              id: 0
              type: type
            userId: 1
            objectId: 1
            object:
              meta: '{}'
              id: 0
              type: type
            objectType: objectType
          - installation:
              meta: '{}'
              id: 0
              type: type
            postedDateTime: postedDateTime
            installationId: 1
            type: type
            user:
              meta: '{}'
              id: 0
              type: type
            userId: 1
            objectId: 1
            object:
              meta: '{}'
              id: 0
              type: type
            objectType: objectType
          installationId: 5
          projectId: 7
          object:
            meta: '{}'
            id: 0
            type: type
        - dateLastEdited: dateLastEdited
          reactionsCount: 6
          project:
            meta: '{}'
            id: 0
            type: type
          postedDateTime: postedDateTime
          body: body
          deletedBy: 0
          lastEditedByUserId: 7
          objectType: objectType
          postedBy: 2
          fileIds:
          - 1
          - 1
          installation:
            meta: '{}'
            id: 0
            type: type
          id: 5
          peopleNotifiedCount: 3
          contentType: contentType
          objectId: 9
          dateDeleted: dateDeleted
          deletedByUserId: 6
          lastEditedBy: 2
          deleted: true
          postedByUserId: 4
          files:
          - meta: '{}'
            id: 0
            type: type
          - meta: '{}'
            id: 0
            type: type
          reactions:
          - installation:
              meta: '{}'
              id: 0
              type: type
            postedDateTime: postedDateTime
            installationId: 1
            type: type
            user:
              meta: '{}'
              id: 0
              type: type
            userId: 1
            objectId: 1
            object:
              meta: '{}'
              id: 0
              type: type
            objectType: objectType
          - installation:
              meta: '{}'
              id: 0
              type: type
            postedDateTime: postedDateTime
            installationId: 1
            type: type
            user:
              meta: '{}'
              id: 0
              type: type
            userId: 1
            objectId: 1
            object:
              meta: '{}'
              id: 0
              type: type
            objectType: objectType
          installationId: 5
          projectId: 7
          object:
            meta: '{}'
            id: 0
            type: type
        meta:
          page:
            count: 6
            hasMore: true
            pageOffset: 3
            pageSize: 3
        included:
          companies:
            key:
              city: city
              industry:
                meta: '{}'
                id: 0
                type: type
              emailTwo: emailTwo
              industryId: 6
              isOwner: true
              addressTwo: addressTwo
              countryCode: countryCode
              emailThree: emailThree
              id: 1
              state: state
              fax: fax
              zip: zip
              profileText: profileText
              website: website
              clientUsers: 1
              companyNameUrl: companyNameUrl
              logoUrl: logoUrl
              phone: phone
              emailOne: emailOne
              name: name
              privateNotesText: privateNotesText
              accounts: 7
              addressOne: addressOne
              contacts: 1
              canSeePrivate: true
              cid: cid
          projects:
            key:
              replyByEmailEnabled: true
              startPage: startPage
              endDate: endDate
              overviewStartPage: overviewStartPage
              tagIds:
              - 6
              - 6
              customFieldValueIds:
              - 5
              - 5
              description: description
              minMaxAvailableDates:
                maxEndDate: maxEndDate
                minStartDate: minStartDate
                suggestedEndDate: suggestedEndDate
                suggestedStartDate: suggestedStartDate
                deadlinesFound: true
              ownerId: 8
              type: type
              createdAt: createdAt
              updateId: 6
              logo: logo
              company:
                meta: '{}'
                id: 0
                type: type
              id: 9
              financialBudget:
                meta: '{}'
                id: 0
                type: type
              updatedAt: updatedAt
              harvestTimersEnabled: true
              updatedBy: 1
              activePages:
                comments: true
                riskRegister: true
                list: true
                gantt: true
                billing: true
                notebooks: true
                files: true
                messages: true
                links: true
                time: true
                milestones: true
                board: true
                forms: true
                table: true
                tasks: true
              isStarred: true
              directFileUploadsEnabled: true
              isOnBoardingProject: true
              subStatus: subStatus
              isSampleProject: true
              tags:
              - meta: '{}'
                id: 0
                type: type
              - meta: '{}'
                id: 0
                type: type
              tasksStartPage: tasksStartPage
              financialBudgetId: 9
              privacyEnabled: true
              companyId: 1
              defaultPrivacy: defaultPrivacy
              customFieldValues:
              - meta: '{}'
                id: 0
                type: type
              - meta: '{}'
                id: 0
                type: type
              createdBy: 4
              notifyCommentIncludeCreator: true
              skipWeekends: true
              name: name
              projectOwnerId: 9
              notifyEveryone: true
              timeBudgetId: 3
              showAnnouncement: true
              category:
                meta: '{}'
                id: 0
                type: type
              integrations:
                xero:
                  connected: true
                  countryCode: countryCode
                  organisation: organisation
                  baseCurrency: baseCurrency
                  enabled: true
                oneDriveBusiness:
                  folder: folder
                  folderName: folderName
                  account: account
                  enabled: true
                sharepoint:
                  folder: folder
                  folderName: folderName
                  account: account
                  enabled: true
              ownedBy: 6
              categoryId: 7
              startDate: startDate
              status: status
              timeBudget:
                meta: '{}'
                id: 0
                type: type
          notebooks:
            key:
              changeFollowers:
                companies:
                - meta: '{}'
                  id: 0
                  type: type
                - meta: '{}'
                  id: 0
                  type: type
                companyIds:
                - 7
                - 7
                teams:
                - meta: '{}'
                  id: 0
                  type: type
                - meta: '{}'
                  id: 0
                  type: type
                userIds:
                - 3
                - 3
                teamIds:
                - 9
                - 9
                users:
                - meta: '{}'
                  id: 0
                  type: type
                - meta: '{}'
                  id: 0
                  type: type
              versionCount: 2
              createdByUserID: 8
              userFollowingComments: true
              tagIds:
              - 7
              - 7
              lockedAt: lockedAt
              commentFollowers:
                companies:
                - meta: '{}'
                  id: 0
                  type: type
                - meta: '{}'
                  id: 0
                  type: type
                companyIds:
                - 7
                - 7
                teams:
                - meta: '{}'
                  id: 0
                  type: type
                - meta: '{}'
                  id: 0
                  type: type
                userIds:
                - 3
                - 3
                teamIds:
                - 9
                - 9
                users:
                - meta: '{}'
                  id: 0
                  type: type
                - meta: '{}'
                  id: 0
                  type: type
              description: description
              privacy:
                companies:
                - meta: '{}'
                  id: 0
                  type: type
                - meta: '{}'
                  id: 0
                  type: type
                companyIds:
                - 7
                - 7
                teams:
                - meta: '{}'
                  id: 0
                  type: type
                - meta: '{}'
                  id: 0
                  type: type
                userIds:
                - 3
                - 3
                teamIds:
                - 9
                - 9
                users:
                - meta: '{}'
                  id: 0
                  type: type
                - meta: '{}'
                  id: 0
                  type: type
              project:
                meta: '{}'
                id: 0
                type: type
              isPrivate: true
              type: type
              deletedBy: 0
              deletedByUserID: 5
              createdAt: createdAt
              dateCreated: dateCreated
              latestVersionNo: 8
              lockedBy: 3
              userFollowingChanges: true
              lockdown:
                meta: '{}'
                id: 0
                type: type
              id: 5
              locked: true
              notebookVersionID: 3
              updatedAt: updatedAt
              updatedBy: 0
              readCommentsCount: 5
              lockdownId: 7
              updatedByUserID: 3
              contentHTML: contentHTML
              dateDeleted: dateDeleted
              dateUpdated: dateUpdated
              tags:
              - meta: '{}'
                id: 0
                type: type
              - meta: '{}'
                id: 0
                type: type
              secureContent: true
              deletedAt: deletedAt
              notebookVersionUpdatedDateTime: notebookVersionUpdatedDateTime
              deleted: true
              contents: contents
              createdBy: 9
              commentsCount: 3
              name: name
              notebookVersionCreatedDateTime: notebookVersionCreatedDateTime
              category:
                meta: '{}'
                id: 0
                type: type
              projectId: 9
              categoryId: 1
              notebookVersion:
                meta: '{}'
                id: 0
                type: type
          fileversions:
            key:
              commentsCountRead: 8
              displayName: displayName
              description: description
              project:
                meta: '{}'
                id: 0
                type: type
              fileVersionId: 3
              originalName: originalName
              file:
                meta: '{}'
                id: 0
                type: type
              size: 7
              commentsCount: 4
              name: name
              versionNo: 3
              reactions:
                mine: mine
                counts:
                  joy: 6
                  like: 5
                  dislike: 1
                  frown: 2
                  heart: 6
              projectId: 3
              uploadedBy: 5
              fileId: 7
              status: status
          files:
            key:
              changeFollowers:
                companies:
                - meta: '{}'
                  id: 0
                  type: type
                - meta: '{}'
                  id: 0
                  type: type
                companyIds:
                - 7
                - 7
                teams:
                - meta: '{}'
                  id: 0
                  type: type
                - meta: '{}'
                  id: 0
                  type: type
                userIds:
                - 3
                - 3
                teamIds:
                - 9
                - 9
                users:
                - meta: '{}'
                  id: 0
                  type: type
                - meta: '{}'
                  id: 0
                  type: type
              commentsCountRead: 4
              previewURL: previewURL
              displayName: displayName
              tagIds:
              - 0
              - 0
              downloadURL: downloadURL
              commentFollowers:
                companies:
                - meta: '{}'
                  id: 0
                  type: type
                - meta: '{}'
                  id: 0
                  type: type
                companyIds:
                - 7
                - 7
                teams:
                - meta: '{}'
                  id: 0
                  type: type
                - meta: '{}'
                  id: 0
                  type: type
                userIds:
                - 3
                - 3
                teamIds:
                - 9
                - 9
                users:
                - meta: '{}'
                  id: 0
                  type: type
                - meta: '{}'
                  id: 0
                  type: type
              description: description
              project:
                meta: '{}'
                id: 0
                type: type
              isPrivate: 9
              numLikes: 3
              uploadedDate: uploadedDate
              deletedBy: 5
              uploadedByUserID: 6
              originalName: originalName
              lockedBy: 9
              isLocked: true
              lockdown:
                meta: '{}'
                id: 0
                type: type
              id: 9
              thumbURL: thumbURL
              uploadedBy: 7
              updatedAt: updatedAt
              latestFileVersionNo: 6
              lockdownId: 8
              lockedByUserId: 6
              relatedItems:
                comments:
                - 6
                - 6
                messages:
                - 3
                - 3
                tasks:
                - 3
                - 3
              fileSource: fileSource
              lockedDate: lockedDate
              version:
                meta: '{}'
                id: 0
                type: type
              tags:
              - meta: '{}'
                id: 0
                type: type
              - meta: '{}'
                id: 0
                type: type
              deletedAt: deletedAt
              versionId: 0
              size: 7
              versions:
              - commentsCountRead: 8
                displayName: displayName
                description: description
                project:
                  meta: '{}'
                  id: 0
                  type: type
                fileVersionId: 3
                originalName: originalName
                file:
                  meta: '{}'
                  id: 0
                  type: type
                size: 7
                commentsCount: 4
                name: name
                versionNo: 3
                reactions:
                  mine: mine
                  counts:
                    joy: 6
                    like: 5
                    dislike: 1
                    frown: 2
                    heart: 6
                projectId: 3
                uploadedBy: 5
                fileId: 7
                status: status
              - commentsCountRead: 8
                displayName: displayName
                description: description
                project:
                  meta: '{}'
                  id: 0
                  type: type
                fileVersionId: 3
                originalName: originalName
                file:
                  meta: '{}'
                  id: 0
                  type: type
                size: 7
                commentsCount: 4
                name: name
                versionNo: 3
                reactions:
                  mine: mine
                  counts:
                    joy: 6
                    like: 5
                    dislike: 1
                    frown: 2
                    heart: 6
                projectId: 3
                uploadedBy: 5
                fileId: 7
                status: status
              commentsCount: 1
              reactions:
                mine: mine
                counts:
                  joy: 6
                  like: 5
                  dislike: 1
                  frown: 2
                  heart: 6
              category:
                meta: '{}'
                id: 0
                type: type
              projectId: 6
              categoryId: 7
              status: status
          links:
            key:
              code: code
              updatedBy: 9
              description: description
              project:
                meta: '{}'
                id: 0
                type: type
              isPrivate: true
              title: title
              deletedBy: 6
              createdAt: createdAt
              deletedAt: deletedAt
              deleted: true
              createdBy: 0
              provider: provider
              width: 0
              id: 4
              category:
                meta: '{}'
                id: 0
                type: type
              projectId: 7
              categoryId: 4
              forceNewWindow: 4
              height: 1
              updatedAt: updatedAt
          milestones:
            key:
              changeFollowers:
              - meta: '{}'
                id: 0
                type: type
              - meta: '{}'
                id: 0
                type: type
              creatorUserId: 8
              private: true
              userFollowingComments: true
              canEdit: true
              tagIds:
              - 4
              - 4
              commentFollowers:
              - meta: '{}'
                id: 0
                type: type
              - meta: '{}'
                id: 0
                type: type
              description: description
              project:
                meta: '{}'
                id: 0
                type: type
              tasklists:
              - meta: '{}'
                id: 0
                type: type
              - meta: '{}'
                id: 0
                type: type
              percentageTasksCompleted: 1
              createdOn: createdOn
              isDeleted: true
              originalDueDate: originalDueDate
              userFollowingChanges: true
              commentFollowerIds:
              - 0
              - 0
              lockdown:
                meta: '{}'
                id: 0
                type: type
              id: 4
              deadline: deadline
              numCommentsRead: 0
              updatedBy: 9
              reminder: true
              canComplete: true
              lockdownId: 3
              completerId: 4
              completed: true
              tags:
              - meta: '{}'
                id: 0
                type: type
              - meta: '{}'
                id: 0
                type: type
              changeFollowerIds:
              - 9
              - 9
              responsiblePartyIds:
              - 6
              - 6
              lastChangedOn: lastChangedOn
              responsibleParties:
              - meta: '{}'
                id: 0
                type: type
              - meta: '{}'
                id: 0
                type: type
              createdBy: 6
              latestUpdates:
              - field: field
                before: '{}'
                after: '{}'
              - field: field
                before: '{}'
                after: '{}'
              percentageComplete: 2
              commentsCount: 7
              completedOn: completedOn
              name: name
              projectId: 8
              tasklistIds:
              - 8
              - 8
              completedBy: 5
              status: status
          tasks:
            key:
              parentTaskId: 9
              assigneeUserIds:
              - 1
              - 1
              dueDate: dueDate
              tagIds:
              - 1
              - 1
              displayOrder: 9
              description: description
              isPrivate: 8
              userPermissions:
                canComplete: true
                canEdit: true
                canViewEstTime: true
                canAddSubtasks: true
                canLogTime: true
              assigneeUsers:
              - meta: '{}'
                id: 0
                type: type
              - meta: '{}'
                id: 0
                type: type
              originalDueDate: '{}'
              assigneeCompanyIds:
              - 1
              - 1
              assigneeTeamIds:
              - 1
              - 1
              id: 6
              subTaskIds:
              - 6
              - 6
              updatedAt: updatedAt
              predecessorIds:
              - 6
              - 6
              createdByUserId: 1
              updatedBy: 6
              crmDealIds:
              - 4
              - 4
              assigneeCompanies:
              - meta: '{}'
                id: 0
                type: type
              - meta: '{}'
                id: 0
                type: type
              parentTask:
                meta: '{}'
                id: 0
                type: type
              hasDeskTickets: true
              priority: priority
              dateUpdated: dateUpdated
              assigneeTeams:
              - meta: '{}'
                id: 0
                type: type
              - meta: '{}'
                id: 0
                type: type
              dependencyIds:
              - 5
              - 5
              createdBy: 7
              latestUpdates:
              - field: field
                before: '{}'
                after: '{}'
              - field: field
                before: '{}'
                after: '{}'
              completedOn: completedOn
              name: name
              progress: 3
              estimateMinutes: 9
              tasklist:
                meta: '{}'
                id: 0
                type: type
              completedBy: 6
              startDate: startDate
              tasklistId: 2
              status: status
          users:
            key:
              lastName: lastName
              avatarUrl: avatarUrl
              isAdmin: true
              title: title
              type: type
              firstName: firstName
              companyId: 2
              workingHoursId: 5
              lengthOfDay: 6.878052220127876
              company:
                meta: '{}'
                id: 0
                type: type
              workingHour:
                meta: '{}'
                id: 0
                type: type
              id: 6
              email: email
      properties:
        comments:
          items:
            $ref: '#/components/schemas/comment.FullComment'
          type: array
        included:
          $ref: '#/components/schemas/comment_CommentsResponse_included'
        meta:
          $ref: '#/components/schemas/view.Meta'
      title: CommentsResponse
      type: object
    comment.FullComment:
      description: FullComment contains the full information for a comment
      example:
        dateLastEdited: dateLastEdited
        reactionsCount: 6
        project:
          meta: '{}'
          id: 0
          type: type
        postedDateTime: postedDateTime
        body: body
        deletedBy: 0
        lastEditedByUserId: 7
        objectType: objectType
        postedBy: 2
        fileIds:
        - 1
        - 1
        installation:
          meta: '{}'
          id: 0
          type: type
        id: 5
        peopleNotifiedCount: 3
        contentType: contentType
        objectId: 9
        dateDeleted: dateDeleted
        deletedByUserId: 6
        lastEditedBy: 2
        deleted: true
        postedByUserId: 4
        files:
        - meta: '{}'
          id: 0
          type: type
        - meta: '{}'
          id: 0
          type: type
        reactions:
        - installation:
            meta: '{}'
            id: 0
            type: type
          postedDateTime: postedDateTime
          installationId: 1
          type: type
          user:
            meta: '{}'
            id: 0
            type: type
          userId: 1
          objectId: 1
          object:
            meta: '{}'
            id: 0
            type: type
          objectType: objectType
        - installation:
            meta: '{}'
            id: 0
            type: type
          postedDateTime: postedDateTime
          installationId: 1
          type: type
          user:
            meta: '{}'
            id: 0
            type: type
          userId: 1
          objectId: 1
          object:
            meta: '{}'
            id: 0
            type: type
          objectType: objectType
        installationId: 5
        projectId: 7
        object:
          meta: '{}'
          id: 0
          type: type
      properties:
        body:
          type: string
        contentType:
          type: string
        dateDeleted:
          type: string
        dateLastEdited:
          type: string
        deleted:
          type: boolean
        deletedBy:
          type: integer
        deletedByUserId:
          type: integer
        fileIds:
          items:
            type: integer
          type: array
        files:
          items:
            $ref: '#/components/schemas/view.Relationship'
          type: array
        id:
          type: integer
        installation:
          $ref: '#/components/schemas/view.Relationship'
        installationId:
          type: integer
        lastEditedBy:
          type: integer
        lastEditedByUserId:
          type: integer
        object:
          $ref: '#/components/schemas/view.Relationship'
        objectId:
          type: integer
        objectType:
          type: string
        peopleNotifiedCount:
          type: integer
        postedBy:
          type: integer
        postedByUserId:
          type: integer
        postedDateTime:
          type: string
        project:
          $ref: '#/components/schemas/view.Relationship'
        projectId:
          type: integer
        reactions:
          items:
            $ref: '#/components/schemas/view.Reaction'
          type: array
        reactionsCount:
          type: integer
      title: FullComment
      type: object
    company.Response:
      description: Response contains information about a specific company.
      example:
        company:
          city: city
          industry:
            meta: '{}'
            id: 0
            type: type
          emailTwo: emailTwo
          industryId: 6
          isOwner: true
          addressTwo: addressTwo
          countryCode: countryCode
          emailThree: emailThree
          id: 1
          state: state
          fax: fax
          zip: zip
          profileText: profileText
          website: website
          clientUsers: 1
          companyNameUrl: companyNameUrl
          logoUrl: logoUrl
          phone: phone
          emailOne: emailOne
          name: name
          privateNotesText: privateNotesText
          accounts: 7
          addressOne: addressOne
          contacts: 1
          canSeePrivate: true
          cid: cid
        included:
          industries:
            key:
              industryCategory:
                meta: '{}'
                id: 0
                type: type
              industryCategoryId: 5
              isPublished: true
              displayOrder: 6
              name: name
              id: 1
              isActive: true
          countries:
            key:
              eu: true
              country: country
              code: code
              vatName: vatName
              phoneCode: phoneCode
              vatPercent: 0
          tags:
            key:
              color: color
              count: 0
              name: name
              project:
                meta: '{}'
                id: 0
                type: type
              id: 6
              projectId: 1
      properties:
        company:
          $ref: '#/components/schemas/view.Company'
        included:
          $ref: '#/components/schemas/company_Response_included'
      title: Response
      type: object
    complete.Response:
      description: Response contains information about a specific complete.
      example:
        data:
          value: 0
      properties:
        data:
          $ref: '#/components/schemas/complete.TaskMetricComplete'
      title: Response
      type: object
    complete.TaskMetricComplete:
      description: TaskMetricComplete contains all the information returned from a
        complete.
      example:
        value: 0
      properties:
        value:
          type: integer
      title: TaskMetricComplete
      type: object
    customfield.BulkDeleteRequest:
      description: |-
        BulkDeleteRequest contains the ids of the custom fields that should be
        removed.
      properties:
        customfieldIds:
          items:
            type: integer
          type: array
      title: BulkDeleteRequest
      type: object
    customfield.CustomField:
      description: CustomField contains all the information returned from a custom
        field.
      properties:
        description:
          type: string
        entity:
          description: using a verbose name to avoid conflict
          type: string
        isPrivate:
          type: boolean
        name:
          type: string
        options:
          type: object
        privacy:
          $ref: '#/components/schemas/payload.UserGroups'
        projectId:
          type: integer
        required:
          type: boolean
        type:
          type: string
        visibilities:
          type: string
      title: CustomField
      type: object
    customfield.CustomFieldsResponse:
      description: CustomFieldsResponse contains information about a group of custom
        fields.
      example:
        meta:
          page:
            count: 6
            hasMore: true
            pageOffset: 3
            pageSize: 3
        customfields:
        - createdByUserId: 6
          updatedBy: 7
          description: description
          project:
            meta: '{}'
            id: 0
            type: type
          isPrivate: true
          updatedByUserId: 9
          type: type
          deletedBy: 1
          deletedByUserId: 5
          required: true
          createdAt: createdAt
          deletedAt: deletedAt
          deleted: true
          createdBy: 0
          name: name
          options: '{}'
          visibilities: visibilities
          id: 5
          projectId: 2
          entity: entity
          updatedAt: updatedAt
        - createdByUserId: 6
          updatedBy: 7
          description: description
          project:
            meta: '{}'
            id: 0
            type: type
          isPrivate: true
          updatedByUserId: 9
          type: type
          deletedBy: 1
          deletedByUserId: 5
          required: true
          createdAt: createdAt
          deletedAt: deletedAt
          deleted: true
          createdBy: 0
          name: name
          options: '{}'
          visibilities: visibilities
          id: 5
          projectId: 2
          entity: entity
          updatedAt: updatedAt
        included:
          projects:
            key:
              replyByEmailEnabled: true
              startPage: startPage
              endDate: endDate
              overviewStartPage: overviewStartPage
              tagIds:
              - 6
              - 6
              customFieldValueIds:
              - 5
              - 5
              description: description
              minMaxAvailableDates:
                maxEndDate: maxEndDate
                minStartDate: minStartDate
                suggestedEndDate: suggestedEndDate
                suggestedStartDate: suggestedStartDate
                deadlinesFound: true
              ownerId: 8
              type: type
              createdAt: createdAt
              updateId: 6
              logo: logo
              company:
                meta: '{}'
                id: 0
                type: type
              id: 9
              financialBudget:
                meta: '{}'
                id: 0
                type: type
              updatedAt: updatedAt
              harvestTimersEnabled: true
              updatedBy: 1
              activePages:
                comments: true
                riskRegister: true
                list: true
                gantt: true
                billing: true
                notebooks: true
                files: true
                messages: true
                links: true
                time: true
                milestones: true
                board: true
                forms: true
                table: true
                tasks: true
              isStarred: true
              directFileUploadsEnabled: true
              isOnBoardingProject: true
              subStatus: subStatus
              isSampleProject: true
              tags:
              - meta: '{}'
                id: 0
                type: type
              - meta: '{}'
                id: 0
                type: type
              tasksStartPage: tasksStartPage
              financialBudgetId: 9
              privacyEnabled: true
              companyId: 1
              defaultPrivacy: defaultPrivacy
              customFieldValues:
              - meta: '{}'
                id: 0
                type: type
              - meta: '{}'
                id: 0
                type: type
              createdBy: 4
              notifyCommentIncludeCreator: true
              skipWeekends: true
              name: name
              projectOwnerId: 9
              notifyEveryone: true
              timeBudgetId: 3
              showAnnouncement: true
              category:
                meta: '{}'
                id: 0
                type: type
              integrations:
                xero:
                  connected: true
                  countryCode: countryCode
                  organisation: organisation
                  baseCurrency: baseCurrency
                  enabled: true
                oneDriveBusiness:
                  folder: folder
                  folderName: folderName
                  account: account
                  enabled: true
                sharepoint:
                  folder: folder
                  folderName: folderName
                  account: account
                  enabled: true
              ownedBy: 6
              categoryId: 7
              startDate: startDate
              status: status
              timeBudget:
                meta: '{}'
                id: 0
                type: type
          users:
            key:
              lastName: lastName
              avatarUrl: avatarUrl
              isAdmin: true
              title: title
              type: type
              firstName: firstName
              companyId: 2
              workingHoursId: 5
              lengthOfDay: 6.878052220127876
              company:
                meta: '{}'
                id: 0
                type: type
              workingHour:
                meta: '{}'
                id: 0
                type: type
              id: 6
              email: email
      properties:
        customfields:
          items:
            $ref: '#/components/schemas/view.CustomField'
          type: array
        included:
          $ref: '#/components/schemas/calendar_EventsResponse_included'
        meta:
          $ref: '#/components/schemas/view.Meta'
      title: CustomFieldsResponse
      type: object
    customfield.Request:
      description: Request contains information of a custom field to be created or
        updated.
      properties:
        customfield:
          $ref: '#/components/schemas/customfield.CustomField'
      title: Request
      type: object
    customfield.Response:
      description: Response contains information about a specific customfield.
      example:
        customfield:
          createdByUserId: 6
          updatedBy: 7
          description: description
          project:
            meta: '{}'
            id: 0
            type: type
          isPrivate: true
          updatedByUserId: 9
          type: type
          deletedBy: 1
          deletedByUserId: 5
          required: true
          createdAt: createdAt
          deletedAt: deletedAt
          deleted: true
          createdBy: 0
          name: name
          options: '{}'
          visibilities: visibilities
          id: 5
          projectId: 2
          entity: entity
          updatedAt: updatedAt
        count: 0
      properties:
        count:
          type: integer
        customfield:
          $ref: '#/components/schemas/view.CustomField'
      title: Response
      type: object
    dashboard.UserDashboardsResponse:
      description: UserDashboardsResponse contains information about a group of dashboards.
      example:
        meta:
          page:
            count: 6
            hasMore: true
            pageOffset: 3
            pageSize: 3
        dashboards:
        - color: color
          dashboardSettingIds:
          - 6
          - 6
          displayOrder: 1
          description: description
          project:
            meta: '{}'
            id: 0
            type: type
          dashboardPanelIds:
          - 0
          - 0
          title: title
          userId: 2
          createdAt: createdAt
          deletedAt: deletedAt
          isDefault: true
          deleted: true
          dashboardPanels:
          - meta: '{}'
            id: 0
            type: type
          - meta: '{}'
            id: 0
            type: type
          dashboardSettings:
          - meta: '{}'
            id: 0
            type: type
          - meta: '{}'
            id: 0
            type: type
          id: 5
          projectId: 5
          user:
            meta: '{}'
            id: 0
            type: type
          updatedAt: updatedAt
        - color: color
          dashboardSettingIds:
          - 6
          - 6
          displayOrder: 1
          description: description
          project:
            meta: '{}'
            id: 0
            type: type
          dashboardPanelIds:
          - 0
          - 0
          title: title
          userId: 2
          createdAt: createdAt
          deletedAt: deletedAt
          isDefault: true
          deleted: true
          dashboardPanels:
          - meta: '{}'
            id: 0
            type: type
          - meta: '{}'
            id: 0
            type: type
          dashboardSettings:
          - meta: '{}'
            id: 0
            type: type
          - meta: '{}'
            id: 0
            type: type
          id: 5
          projectId: 5
          user:
            meta: '{}'
            id: 0
            type: type
          updatedAt: updatedAt
        included:
          projects:
            key:
              replyByEmailEnabled: true
              startPage: startPage
              endDate: endDate
              overviewStartPage: overviewStartPage
              tagIds:
              - 6
              - 6
              customFieldValueIds:
              - 5
              - 5
              description: description
              minMaxAvailableDates:
                maxEndDate: maxEndDate
                minStartDate: minStartDate
                suggestedEndDate: suggestedEndDate
                suggestedStartDate: suggestedStartDate
                deadlinesFound: true
              ownerId: 8
              type: type
              createdAt: createdAt
              updateId: 6
              logo: logo
              company:
                meta: '{}'
                id: 0
                type: type
              id: 9
              financialBudget:
                meta: '{}'
                id: 0
                type: type
              updatedAt: updatedAt
              harvestTimersEnabled: true
              updatedBy: 1
              activePages:
                comments: true
                riskRegister: true
                list: true
                gantt: true
                billing: true
                notebooks: true
                files: true
                messages: true
                links: true
                time: true
                milestones: true
                board: true
                forms: true
                table: true
                tasks: true
              isStarred: true
              directFileUploadsEnabled: true
              isOnBoardingProject: true
              subStatus: subStatus
              isSampleProject: true
              tags:
              - meta: '{}'
                id: 0
                type: type
              - meta: '{}'
                id: 0
                type: type
              tasksStartPage: tasksStartPage
              financialBudgetId: 9
              privacyEnabled: true
              companyId: 1
              defaultPrivacy: defaultPrivacy
              customFieldValues:
              - meta: '{}'
                id: 0
                type: type
              - meta: '{}'
                id: 0
                type: type
              createdBy: 4
              notifyCommentIncludeCreator: true
              skipWeekends: true
              name: name
              projectOwnerId: 9
              notifyEveryone: true
              timeBudgetId: 3
              showAnnouncement: true
              category:
                meta: '{}'
                id: 0
                type: type
              integrations:
                xero:
                  connected: true
                  countryCode: countryCode
                  organisation: organisation
                  baseCurrency: baseCurrency
                  enabled: true
                oneDriveBusiness:
                  folder: folder
                  folderName: folderName
                  account: account
                  enabled: true
                sharepoint:
                  folder: folder
                  folderName: folderName
                  account: account
                  enabled: true
              ownedBy: 6
              categoryId: 7
              startDate: startDate
              status: status
              timeBudget:
                meta: '{}'
                id: 0
                type: type
          dashboardPanelSettings:
            key:
              dashboardId: 7
              dashboardPanelId: 9
              name: name
              id: 3
              value: value
          dashboardPanels:
            key:
              dashboardId: 2
              displayOrder: 7
              name: name
              id: 1
              type: type
              dashboardPanelSettingIds:
              - 4
              - 4
          dashboardSettings:
            key:
              dashboardId: 1
              name: name
              id: 1
              value: value
          users:
            key:
              lastName: lastName
              avatarUrl: avatarUrl
              isAdmin: true
              title: title
              type: type
              firstName: firstName
              companyId: 2
              workingHoursId: 5
              lengthOfDay: 6.878052220127876
              company:
                meta: '{}'
                id: 0
                type: type
              workingHour:
                meta: '{}'
                id: 0
                type: type
              id: 6
              email: email
      properties:
        dashboards:
          items:
            $ref: '#/components/schemas/view.UserDashboard'
          type: array
        included:
          $ref: '#/components/schemas/dashboard_UserDashboardsResponse_included'
        meta:
          $ref: '#/components/schemas/view.Meta'
      title: UserDashboardsResponse
      type: object
    deadline.MilestoneMetricDeadline:
      description: MilestoneMetricDeadline contains all the information returned from
        a deadline.
      example:
        date: date
        value: 0
      properties:
        date:
          type: string
        value:
          type: integer
      title: MilestoneMetricDeadline
      type: object
    deadline.MilestoneMetricDeadlinesResponse:
      description: MilestoneMetricDeadlinesResponse contains information about a group
        of deadlines.
      example:
        data:
        - date: date
          value: 0
        - date: date
          value: 0
      properties:
        data:
          items:
            $ref: '#/components/schemas/deadline.MilestoneMetricDeadline'
          type: array
      title: MilestoneMetricDeadlinesResponse
      type: object
    apierrors.BulkError:
      description: |-
        BulkError stores details related to an error on an api request that
        we may want to present to the user, but do not wish to cancel the
        request over
      example:
        code: code
        meta: '{}'
        detail: detail
        id: '{}'
        source: source
        title: title
        statusCode: 6
      properties:
        code:
          type: string
        detail:
          type: string
        id:
          type: object
        meta:
          properties: {}
          type: object
        source:
          type: string
        statusCode:
          type: integer
        title:
          type: string
      title: BulkError
      type: object
    file.ArchiveRequest:
      description: ArchiveRequest contains all file IDs that will be grouped for download.
      properties:
        fileIds:
          items:
            type: integer
          type: array
      title: ArchiveRequest
      type: object
    file.ArchiveResponse:
      description: ArchiveResponse contains the download URL with all desired files.
      example:
        downloadURL: downloadURL
      properties:
        downloadURL:
          type: string
      title: ArchiveResponse
      type: object
    file.AvailableResponse:
      description: AvailableResponse contains information regarding the available
        space.
      example:
        available:
          bytes: 0
      properties:
        available:
          $ref: '#/components/schemas/file_AvailableResponse_available'
      title: AvailableResponse
      type: object
    file.ProjectFile:
      description: ProjectFile contains all the information returned from a file.
      properties:
        categoryId:
          type: integer
        description:
          type: string
        name:
          type: string
        notify:
          $ref: '#/components/schemas/payload.Notify'
        notifyCurrentUser:
          type: boolean
        privacy:
          $ref: '#/components/schemas/payload.UserGroups'
        private:
          type: boolean
        tagIds:
          $ref: '#/components/schemas/payload.NullableInt64Slice'
        versionId:
          type: integer
      title: ProjectFile
      type: object
    file.ProjectFilesResponse:
      description: ProjectFilesResponse contains information about a group of files.
      example:
        meta:
          page:
            count: 6
            hasMore: true
            pageOffset: 3
            pageSize: 3
        files:
        - changeFollowers:
            companies:
            - meta: '{}'
              id: 0
              type: type
            - meta: '{}'
              id: 0
              type: type
            companyIds:
            - 7
            - 7
            teams:
            - meta: '{}'
              id: 0
              type: type
            - meta: '{}'
              id: 0
              type: type
            userIds:
            - 3
            - 3
            teamIds:
            - 9
            - 9
            users:
            - meta: '{}'
              id: 0
              type: type
            - meta: '{}'
              id: 0
              type: type
          commentsCountRead: 4
          previewURL: previewURL
          displayName: displayName
          tagIds:
          - 0
          - 0
          downloadURL: downloadURL
          commentFollowers:
            companies:
            - meta: '{}'
              id: 0
              type: type
            - meta: '{}'
              id: 0
              type: type
            companyIds:
            - 7
            - 7
            teams:
            - meta: '{}'
              id: 0
              type: type
            - meta: '{}'
              id: 0
              type: type
            userIds:
            - 3
            - 3
            teamIds:
            - 9
            - 9
            users:
            - meta: '{}'
              id: 0
              type: type
            - meta: '{}'
              id: 0
              type: type
          description: description
          project:
            meta: '{}'
            id: 0
            type: type
          isPrivate: 9
          numLikes: 3
          uploadedDate: uploadedDate
          deletedBy: 5
          uploadedByUserID: 6
          originalName: originalName
          lockedBy: 9
          isLocked: true
          lockdown:
            meta: '{}'
            id: 0
            type: type
          id: 9
          thumbURL: thumbURL
          uploadedBy: 7
          updatedAt: updatedAt
          latestFileVersionNo: 6
          lockdownId: 8
          lockedByUserId: 6
          relatedItems:
            comments:
            - 6
            - 6
            messages:
            - 3
            - 3
            tasks:
            - 3
            - 3
          fileSource: fileSource
          lockedDate: lockedDate
          version:
            meta: '{}'
            id: 0
            type: type
          tags:
          - meta: '{}'
            id: 0
            type: type
          - meta: '{}'
            id: 0
            type: type
          deletedAt: deletedAt
          versionId: 0
          size: 7
          versions:
          - commentsCountRead: 8
            displayName: displayName
            description: description
            project:
              meta: '{}'
              id: 0
              type: type
            fileVersionId: 3
            originalName: originalName
            file:
              meta: '{}'
              id: 0
              type: type
            size: 7
            commentsCount: 4
            name: name
            versionNo: 3
            reactions:
              mine: mine
              counts:
                joy: 6
                like: 5
                dislike: 1
                frown: 2
                heart: 6
            projectId: 3
            uploadedBy: 5
            fileId: 7
            status: status
          - commentsCountRead: 8
            displayName: displayName
            description: description
            project:
              meta: '{}'
              id: 0
              type: type
            fileVersionId: 3
            originalName: originalName
            file:
              meta: '{}'
              id: 0
              type: type
            size: 7
            commentsCount: 4
            name: name
            versionNo: 3
            reactions:
              mine: mine
              counts:
                joy: 6
                like: 5
                dislike: 1
                frown: 2
                heart: 6
            projectId: 3
            uploadedBy: 5
            fileId: 7
            status: status
          commentsCount: 1
          reactions:
            mine: mine
            counts:
              joy: 6
              like: 5
              dislike: 1
              frown: 2
              heart: 6
          category:
            meta: '{}'
            id: 0
            type: type
          projectId: 6
          categoryId: 7
          status: status
        - changeFollowers:
            companies:
            - meta: '{}'
              id: 0
              type: type
            - meta: '{}'
              id: 0
              type: type
            companyIds:
            - 7
            - 7
            teams:
            - meta: '{}'
              id: 0
              type: type
            - meta: '{}'
              id: 0
              type: type
            userIds:
            - 3
            - 3
            teamIds:
            - 9
            - 9
            users:
            - meta: '{}'
              id: 0
              type: type
            - meta: '{}'
              id: 0
              type: type
          commentsCountRead: 4
          previewURL: previewURL
          displayName: displayName
          tagIds:
          - 0
          - 0
          downloadURL: downloadURL
          commentFollowers:
            companies:
            - meta: '{}'
              id: 0
              type: type
            - meta: '{}'
              id: 0
              type: type
            companyIds:
            - 7
            - 7
            teams:
            - meta: '{}'
              id: 0
              type: type
            - meta: '{}'
              id: 0
              type: type
            userIds:
            - 3
            - 3
            teamIds:
            - 9
            - 9
            users:
            - meta: '{}'
              id: 0
              type: type
            - meta: '{}'
              id: 0
              type: type
          description: description
          project:
            meta: '{}'
            id: 0
            type: type
          isPrivate: 9
          numLikes: 3
          uploadedDate: uploadedDate
          deletedBy: 5
          uploadedByUserID: 6
          originalName: originalName
          lockedBy: 9
          isLocked: true
          lockdown:
            meta: '{}'
            id: 0
            type: type
          id: 9
          thumbURL: thumbURL
          uploadedBy: 7
          updatedAt: updatedAt
          latestFileVersionNo: 6
          lockdownId: 8
          lockedByUserId: 6
          relatedItems:
            comments:
            - 6
            - 6
            messages:
            - 3
            - 3
            tasks:
            - 3
            - 3
          fileSource: fileSource
          lockedDate: lockedDate
          version:
            meta: '{}'
            id: 0
            type: type
          tags:
          - meta: '{}'
            id: 0
            type: type
          - meta: '{}'
            id: 0
            type: type
          deletedAt: deletedAt
          versionId: 0
          size: 7
          versions:
          - commentsCountRead: 8
            displayName: displayName
            description: description
            project:
              meta: '{}'
              id: 0
              type: type
            fileVersionId: 3
            originalName: originalName
            file:
              meta: '{}'
              id: 0
              type: type
            size: 7
            commentsCount: 4
            name: name
            versionNo: 3
            reactions:
              mine: mine
              counts:
                joy: 6
                like: 5
                dislike: 1
                frown: 2
                heart: 6
            projectId: 3
            uploadedBy: 5
            fileId: 7
            status: status
          - commentsCountRead: 8
            displayName: displayName
            description: description
            project:
              meta: '{}'
              id: 0
              type: type
            fileVersionId: 3
            originalName: originalName
            file:
              meta: '{}'
              id: 0
              type: type
            size: 7
            commentsCount: 4
            name: name
            versionNo: 3
            reactions:
              mine: mine
              counts:
                joy: 6
                like: 5
                dislike: 1
                frown: 2
                heart: 6
            projectId: 3
            uploadedBy: 5
            fileId: 7
            status: status
          commentsCount: 1
          reactions:
            mine: mine
            counts:
              joy: 6
              like: 5
              dislike: 1
              frown: 2
              heart: 6
          category:
            meta: '{}'
            id: 0
            type: type
          projectId: 6
          categoryId: 7
          status: status
        included:
          comments:
            key:
              id: 0
              title: title
              objectId: 6
              object:
                meta: '{}'
                id: 0
                type: type
              objectType: objectType
          projects:
            key:
              replyByEmailEnabled: true
              startPage: startPage
              endDate: endDate
              overviewStartPage: overviewStartPage
              tagIds:
              - 6
              - 6
              customFieldValueIds:
              - 5
              - 5
              description: description
              minMaxAvailableDates:
                maxEndDate: maxEndDate
                minStartDate: minStartDate
                suggestedEndDate: suggestedEndDate
                suggestedStartDate: suggestedStartDate
                deadlinesFound: true
              ownerId: 8
              type: type
              createdAt: createdAt
              updateId: 6
              logo: logo
              company:
                meta: '{}'
                id: 0
                type: type
              id: 9
              financialBudget:
                meta: '{}'
                id: 0
                type: type
              updatedAt: updatedAt
              harvestTimersEnabled: true
              updatedBy: 1
              activePages:
                comments: true
                riskRegister: true
                list: true
                gantt: true
                billing: true
                notebooks: true
                files: true
                messages: true
                links: true
                time: true
                milestones: true
                board: true
                forms: true
                table: true
                tasks: true
              isStarred: true
              directFileUploadsEnabled: true
              isOnBoardingProject: true
              subStatus: subStatus
              isSampleProject: true
              tags:
              - meta: '{}'
                id: 0
                type: type
              - meta: '{}'
                id: 0
                type: type
              tasksStartPage: tasksStartPage
              financialBudgetId: 9
              privacyEnabled: true
              companyId: 1
              defaultPrivacy: defaultPrivacy
              customFieldValues:
              - meta: '{}'
                id: 0
                type: type
              - meta: '{}'
                id: 0
                type: type
              createdBy: 4
              notifyCommentIncludeCreator: true
              skipWeekends: true
              name: name
              projectOwnerId: 9
              notifyEveryone: true
              timeBudgetId: 3
              showAnnouncement: true
              category:
                meta: '{}'
                id: 0
                type: type
              integrations:
                xero:
                  connected: true
                  countryCode: countryCode
                  organisation: organisation
                  baseCurrency: baseCurrency
                  enabled: true
                oneDriveBusiness:
                  folder: folder
                  folderName: folderName
                  account: account
                  enabled: true
                sharepoint:
                  folder: folder
                  folderName: folderName
                  account: account
                  enabled: true
              ownedBy: 6
              categoryId: 7
              startDate: startDate
              status: status
              timeBudget:
                meta: '{}'
                id: 0
                type: type
          permissions:
            key:
              canEdit: true
              canDelete: true
              canAddFiles: true
          fileCategories:
            key:
              parent:
                meta: '{}'
                id: 0
                type: type
              color: color
              name: name
              project:
                meta: '{}'
                id: 0
                type: type
              id: 1
              projectId: 5
              parentId: 5
          messages:
            key:
              post:
                meta: '{}'
                id: 0
                type: type
              id: 2
              postId: 7
              title: title
          tasks:
            key:
              parentTaskId: 9
              assigneeUserIds:
              - 1
              - 1
              dueDate: dueDate
              tagIds:
              - 1
              - 1
              displayOrder: 9
              description: description
              isPrivate: 8
              userPermissions:
                canComplete: true
                canEdit: true
                canViewEstTime: true
                canAddSubtasks: true
                canLogTime: true
              assigneeUsers:
              - meta: '{}'
                id: 0
                type: type
              - meta: '{}'
                id: 0
                type: type
              originalDueDate: '{}'
              assigneeCompanyIds:
              - 1
              - 1
              assigneeTeamIds:
              - 1
              - 1
              id: 6
              subTaskIds:
              - 6
              - 6
              updatedAt: updatedAt
              predecessorIds:
              - 6
              - 6
              createdByUserId: 1
              updatedBy: 6
              crmDealIds:
              - 4
              - 4
              assigneeCompanies:
              - meta: '{}'
                id: 0
                type: type
              - meta: '{}'
                id: 0
                type: type
              parentTask:
                meta: '{}'
                id: 0
                type: type
              hasDeskTickets: true
              priority: priority
              dateUpdated: dateUpdated
              assigneeTeams:
              - meta: '{}'
                id: 0
                type: type
              - meta: '{}'
                id: 0
                type: type
              dependencyIds:
              - 5
              - 5
              createdBy: 7
              latestUpdates:
              - field: field
                before: '{}'
                after: '{}'
              - field: field
                before: '{}'
                after: '{}'
              completedOn: completedOn
              name: name
              progress: 3
              estimateMinutes: 9
              tasklist:
                meta: '{}'
                id: 0
                type: type
              completedBy: 6
              startDate: startDate
              tasklistId: 2
              status: status
          users:
            key:
              lastName: lastName
              avatarUrl: avatarUrl
              isAdmin: true
              title: title
              type: type
              firstName: firstName
              companyId: 2
              workingHoursId: 5
              lengthOfDay: 6.878052220127876
              company:
                meta: '{}'
                id: 0
                type: type
              workingHour:
                meta: '{}'
                id: 0
                type: type
              id: 6
              email: email
          tags:
            key:
              color: color
              count: 0
              name: name
              project:
                meta: '{}'
                id: 0
                type: type
              id: 6
              projectId: 1
      properties:
        files:
          items:
            $ref: '#/components/schemas/view.ProjectFile'
          type: array
        included:
          $ref: '#/components/schemas/file_ProjectFilesResponse_included'
        meta:
          $ref: '#/components/schemas/view.Meta'
      title: ProjectFilesResponse
      type: object
    file.ProjectUsage:
      description: ProjectUsage contains information regarding files usage on a project.
      example:
        total: 1
        totalAsText: totalAsText
        project:
          meta: '{}'
          id: 0
          type: type
        projectId: 6
      properties:
        project:
          $ref: '#/components/schemas/view.Relationship'
        projectId:
          type: integer
        total:
          type: integer
        totalAsText:
          type: string
      title: ProjectUsage
      type: object
    file.Request:
      description: Request contains information of a file to be created or updated.
      properties:
        file:
          $ref: '#/components/schemas/file.ProjectFile'
      title: Request
      type: object
    file.Response:
      description: Response contains information about a specific file.
      example:
        file:
          changeFollowers:
            companies:
            - meta: '{}'
              id: 0
              type: type
            - meta: '{}'
              id: 0
              type: type
            companyIds:
            - 7
            - 7
            teams:
            - meta: '{}'
              id: 0
              type: type
            - meta: '{}'
              id: 0
              type: type
            userIds:
            - 3
            - 3
            teamIds:
            - 9
            - 9
            users:
            - meta: '{}'
              id: 0
              type: type
            - meta: '{}'
              id: 0
              type: type
          commentsCountRead: 4
          previewURL: previewURL
          displayName: displayName
          tagIds:
          - 0
          - 0
          downloadURL: downloadURL
          commentFollowers:
            companies:
            - meta: '{}'
              id: 0
              type: type
            - meta: '{}'
              id: 0
              type: type
            companyIds:
            - 7
            - 7
            teams:
            - meta: '{}'
              id: 0
              type: type
            - meta: '{}'
              id: 0
              type: type
            userIds:
            - 3
            - 3
            teamIds:
            - 9
            - 9
            users:
            - meta: '{}'
              id: 0
              type: type
            - meta: '{}'
              id: 0
              type: type
          description: description
          project:
            meta: '{}'
            id: 0
            type: type
          isPrivate: 9
          numLikes: 3
          uploadedDate: uploadedDate
          deletedBy: 5
          uploadedByUserID: 6
          originalName: originalName
          lockedBy: 9
          isLocked: true
          lockdown:
            meta: '{}'
            id: 0
            type: type
          id: 9
          thumbURL: thumbURL
          uploadedBy: 7
          updatedAt: updatedAt
          latestFileVersionNo: 6
          lockdownId: 8
          lockedByUserId: 6
          relatedItems:
            comments:
            - 6
            - 6
            messages:
            - 3
            - 3
            tasks:
            - 3
            - 3
          fileSource: fileSource
          lockedDate: lockedDate
          version:
            meta: '{}'
            id: 0
            type: type
          tags:
          - meta: '{}'
            id: 0
            type: type
          - meta: '{}'
            id: 0
            type: type
          deletedAt: deletedAt
          versionId: 0
          size: 7
          versions:
          - commentsCountRead: 8
            displayName: displayName
            description: description
            project:
              meta: '{}'
              id: 0
              type: type
            fileVersionId: 3
            originalName: originalName
            file:
              meta: '{}'
              id: 0
              type: type
            size: 7
            commentsCount: 4
            name: name
            versionNo: 3
            reactions:
              mine: mine
              counts:
                joy: 6
                like: 5
                dislike: 1
                frown: 2
                heart: 6
            projectId: 3
            uploadedBy: 5
            fileId: 7
            status: status
          - commentsCountRead: 8
            displayName: displayName
            description: description
            project:
              meta: '{}'
              id: 0
              type: type
            fileVersionId: 3
            originalName: originalName
            file:
              meta: '{}'
              id: 0
              type: type
            size: 7
            commentsCount: 4
            name: name
            versionNo: 3
            reactions:
              mine: mine
              counts:
                joy: 6
                like: 5
                dislike: 1
                frown: 2
                heart: 6
            projectId: 3
            uploadedBy: 5
            fileId: 7
            status: status
          commentsCount: 1
          reactions:
            mine: mine
            counts:
              joy: 6
              like: 5
              dislike: 1
              frown: 2
              heart: 6
          category:
            meta: '{}'
            id: 0
            type: type
          projectId: 6
          categoryId: 7
          status: status
        included:
          comments:
            key:
              id: 0
              title: title
              objectId: 6
              object:
                meta: '{}'
                id: 0
                type: type
              objectType: objectType
          projects:
            key:
              replyByEmailEnabled: true
              startPage: startPage
              endDate: endDate
              overviewStartPage: overviewStartPage
              tagIds:
              - 6
              - 6
              customFieldValueIds:
              - 5
              - 5
              description: description
              minMaxAvailableDates:
                maxEndDate: maxEndDate
                minStartDate: minStartDate
                suggestedEndDate: suggestedEndDate
                suggestedStartDate: suggestedStartDate
                deadlinesFound: true
              ownerId: 8
              type: type
              createdAt: createdAt
              updateId: 6
              logo: logo
              company:
                meta: '{}'
                id: 0
                type: type
              id: 9
              financialBudget:
                meta: '{}'
                id: 0
                type: type
              updatedAt: updatedAt
              harvestTimersEnabled: true
              updatedBy: 1
              activePages:
                comments: true
                riskRegister: true
                list: true
                gantt: true
                billing: true
                notebooks: true
                files: true
                messages: true
                links: true
                time: true
                milestones: true
                board: true
                forms: true
                table: true
                tasks: true
              isStarred: true
              directFileUploadsEnabled: true
              isOnBoardingProject: true
              subStatus: subStatus
              isSampleProject: true
              tags:
              - meta: '{}'
                id: 0
                type: type
              - meta: '{}'
                id: 0
                type: type
              tasksStartPage: tasksStartPage
              financialBudgetId: 9
              privacyEnabled: true
              companyId: 1
              defaultPrivacy: defaultPrivacy
              customFieldValues:
              - meta: '{}'
                id: 0
                type: type
              - meta: '{}'
                id: 0
                type: type
              createdBy: 4
              notifyCommentIncludeCreator: true
              skipWeekends: true
              name: name
              projectOwnerId: 9
              notifyEveryone: true
              timeBudgetId: 3
              showAnnouncement: true
              category:
                meta: '{}'
                id: 0
                type: type
              integrations:
                xero:
                  connected: true
                  countryCode: countryCode
                  organisation: organisation
                  baseCurrency: baseCurrency
                  enabled: true
                oneDriveBusiness:
                  folder: folder
                  folderName: folderName
                  account: account
                  enabled: true
                sharepoint:
                  folder: folder
                  folderName: folderName
                  account: account
                  enabled: true
              ownedBy: 6
              categoryId: 7
              startDate: startDate
              status: status
              timeBudget:
                meta: '{}'
                id: 0
                type: type
          permissions:
            key:
              canEdit: true
              canDelete: true
              canAddFiles: true
          fileCategories:
            key:
              parent:
                meta: '{}'
                id: 0
                type: type
              color: color
              name: name
              project:
                meta: '{}'
                id: 0
                type: type
              id: 1
              projectId: 5
              parentId: 5
          messages:
            key:
              post:
                meta: '{}'
                id: 0
                type: type
              id: 2
              postId: 7
              title: title
          tasks:
            key:
              parentTaskId: 9
              assigneeUserIds:
              - 1
              - 1
              dueDate: dueDate
              tagIds:
              - 1
              - 1
              displayOrder: 9
              description: description
              isPrivate: 8
              userPermissions:
                canComplete: true
                canEdit: true
                canViewEstTime: true
                canAddSubtasks: true
                canLogTime: true
              assigneeUsers:
              - meta: '{}'
                id: 0
                type: type
              - meta: '{}'
                id: 0
                type: type
              originalDueDate: '{}'
              assigneeCompanyIds:
              - 1
              - 1
              assigneeTeamIds:
              - 1
              - 1
              id: 6
              subTaskIds:
              - 6
              - 6
              updatedAt: updatedAt
              predecessorIds:
              - 6
              - 6
              createdByUserId: 1
              updatedBy: 6
              crmDealIds:
              - 4
              - 4
              assigneeCompanies:
              - meta: '{}'
                id: 0
                type: type
              - meta: '{}'
                id: 0
                type: type
              parentTask:
                meta: '{}'
                id: 0
                type: type
              hasDeskTickets: true
              priority: priority
              dateUpdated: dateUpdated
              assigneeTeams:
              - meta: '{}'
                id: 0
                type: type
              - meta: '{}'
                id: 0
                type: type
              dependencyIds:
              - 5
              - 5
              createdBy: 7
              latestUpdates:
              - field: field
                before: '{}'
                after: '{}'
              - field: field
                before: '{}'
                after: '{}'
              completedOn: completedOn
              name: name
              progress: 3
              estimateMinutes: 9
              tasklist:
                meta: '{}'
                id: 0
                type: type
              completedBy: 6
              startDate: startDate
              tasklistId: 2
              status: status
          users:
            key:
              lastName: lastName
              avatarUrl: avatarUrl
              isAdmin: true
              title: title
              type: type
              firstName: firstName
              companyId: 2
              workingHoursId: 5
              lengthOfDay: 6.878052220127876
              company:
                meta: '{}'
                id: 0
                type: type
              workingHour:
                meta: '{}'
                id: 0
                type: type
              id: 6
              email: email
          tags:
            key:
              color: color
              count: 0
              name: name
              project:
                meta: '{}'
                id: 0
                type: type
              id: 6
              projectId: 1
      properties:
        file:
          $ref: '#/components/schemas/view.ProjectFile'
        included:
          $ref: '#/components/schemas/file_ProjectFilesResponse_included'
      title: Response
      type: object
    file.UsageResponse:
      description: UsageResponse contains information regarding files usage on the
        account.
      example:
        filesUsage:
          totalRemainingAsText: totalRemainingAsText
          total: 5
          projects:
          - total: 1
            totalAsText: totalAsText
            project:
              meta: '{}'
              id: 0
              type: type
            projectId: 6
          - total: 1
            totalAsText: totalAsText
            project:
              meta: '{}'
              id: 0
              type: type
            projectId: 6
          totalAllowedAsText: totalAllowedAsText
          totalAsText: totalAsText
          overuse: 0
          totalAllowed: 5
          overuseAsText: overuseAsText
          totalRemaining: 2
        included:
          projects:
            key:
              replyByEmailEnabled: true
              startPage: startPage
              endDate: endDate
              overviewStartPage: overviewStartPage
              tagIds:
              - 6
              - 6
              customFieldValueIds:
              - 5
              - 5
              description: description
              minMaxAvailableDates:
                maxEndDate: maxEndDate
                minStartDate: minStartDate
                suggestedEndDate: suggestedEndDate
                suggestedStartDate: suggestedStartDate
                deadlinesFound: true
              ownerId: 8
              type: type
              createdAt: createdAt
              updateId: 6
              logo: logo
              company:
                meta: '{}'
                id: 0
                type: type
              id: 9
              financialBudget:
                meta: '{}'
                id: 0
                type: type
              updatedAt: updatedAt
              harvestTimersEnabled: true
              updatedBy: 1
              activePages:
                comments: true
                riskRegister: true
                list: true
                gantt: true
                billing: true
                notebooks: true
                files: true
                messages: true
                links: true
                time: true
                milestones: true
                board: true
                forms: true
                table: true
                tasks: true
              isStarred: true
              directFileUploadsEnabled: true
              isOnBoardingProject: true
              subStatus: subStatus
              isSampleProject: true
              tags:
              - meta: '{}'
                id: 0
                type: type
              - meta: '{}'
                id: 0
                type: type
              tasksStartPage: tasksStartPage
              financialBudgetId: 9
              privacyEnabled: true
              companyId: 1
              defaultPrivacy: defaultPrivacy
              customFieldValues:
              - meta: '{}'
                id: 0
                type: type
              - meta: '{}'
                id: 0
                type: type
              createdBy: 4
              notifyCommentIncludeCreator: true
              skipWeekends: true
              name: name
              projectOwnerId: 9
              notifyEveryone: true
              timeBudgetId: 3
              showAnnouncement: true
              category:
                meta: '{}'
                id: 0
                type: type
              integrations:
                xero:
                  connected: true
                  countryCode: countryCode
                  organisation: organisation
                  baseCurrency: baseCurrency
                  enabled: true
                oneDriveBusiness:
                  folder: folder
                  folderName: folderName
                  account: account
                  enabled: true
                sharepoint:
                  folder: folder
                  folderName: folderName
                  account: account
                  enabled: true
              ownedBy: 6
              categoryId: 7
              startDate: startDate
              status: status
              timeBudget:
                meta: '{}'
                id: 0
                type: type
      properties:
        filesUsage:
          $ref: '#/components/schemas/file_UsageResponse_filesUsage'
        included:
          $ref: '#/components/schemas/file_UsageResponse_included'
      title: UsageResponse
      type: object
    fileversion.Fileversion:
      description: Fileversion contains all the information returned from a fileversion.
      properties:
        categoryId:
          type: integer
        description:
          type: string
        fileData:
          type: string
        fileRef:
          type: string
        fileSize:
          type: integer
        fileSource:
          type: string
        id:
          type: integer
        name:
          type: string
        notify:
          $ref: '#/components/schemas/payload.Notify'
        notifyCurrentUser:
          type: boolean
        pendingFileRef:
          type: string
        privacy:
          $ref: '#/components/schemas/payload.UserGroups'
        private:
          type: boolean
        projectId:
          type: integer
      title: Fileversion
      type: object
    fileversion.Request:
      description: Request contains information of a fileversion to be created or
        updated.
      properties:
        fileversion:
          $ref: '#/components/schemas/fileversion.Fileversion'
      title: Request
      type: object
    fileversion.Response:
      description: Response contains information about a specific fileversion.
      example:
        fileversion:
          commentsCountRead: 8
          displayName: displayName
          description: description
          project:
            meta: '{}'
            id: 0
            type: type
          fileVersionId: 3
          originalName: originalName
          file:
            meta: '{}'
            id: 0
            type: type
          size: 7
          commentsCount: 4
          name: name
          versionNo: 3
          reactions:
            mine: mine
            counts:
              joy: 6
              like: 5
              dislike: 1
              frown: 2
              heart: 6
          projectId: 3
          uploadedBy: 5
          fileId: 7
          status: status
        included:
          projects:
            key:
              replyByEmailEnabled: true
              startPage: startPage
              endDate: endDate
              overviewStartPage: overviewStartPage
              tagIds:
              - 6
              - 6
              customFieldValueIds:
              - 5
              - 5
              description: description
              minMaxAvailableDates:
                maxEndDate: maxEndDate
                minStartDate: minStartDate
                suggestedEndDate: suggestedEndDate
                suggestedStartDate: suggestedStartDate
                deadlinesFound: true
              ownerId: 8
              type: type
              createdAt: createdAt
              updateId: 6
              logo: logo
              company:
                meta: '{}'
                id: 0
                type: type
              id: 9
              financialBudget:
                meta: '{}'
                id: 0
                type: type
              updatedAt: updatedAt
              harvestTimersEnabled: true
              updatedBy: 1
              activePages:
                comments: true
                riskRegister: true
                list: true
                gantt: true
                billing: true
                notebooks: true
                files: true
                messages: true
                links: true
                time: true
                milestones: true
                board: true
                forms: true
                table: true
                tasks: true
              isStarred: true
              directFileUploadsEnabled: true
              isOnBoardingProject: true
              subStatus: subStatus
              isSampleProject: true
              tags:
              - meta: '{}'
                id: 0
                type: type
              - meta: '{}'
                id: 0
                type: type
              tasksStartPage: tasksStartPage
              financialBudgetId: 9
              privacyEnabled: true
              companyId: 1
              defaultPrivacy: defaultPrivacy
              customFieldValues:
              - meta: '{}'
                id: 0
                type: type
              - meta: '{}'
                id: 0
                type: type
              createdBy: 4
              notifyCommentIncludeCreator: true
              skipWeekends: true
              name: name
              projectOwnerId: 9
              notifyEveryone: true
              timeBudgetId: 3
              showAnnouncement: true
              category:
                meta: '{}'
                id: 0
                type: type
              integrations:
                xero:
                  connected: true
                  countryCode: countryCode
                  organisation: organisation
                  baseCurrency: baseCurrency
                  enabled: true
                oneDriveBusiness:
                  folder: folder
                  folderName: folderName
                  account: account
                  enabled: true
                sharepoint:
                  folder: folder
                  folderName: folderName
                  account: account
                  enabled: true
              ownedBy: 6
              categoryId: 7
              startDate: startDate
              status: status
              timeBudget:
                meta: '{}'
                id: 0
                type: type
          files:
            key:
              changeFollowers:
                companies:
                - meta: '{}'
                  id: 0
                  type: type
                - meta: '{}'
                  id: 0
                  type: type
                companyIds:
                - 7
                - 7
                teams:
                - meta: '{}'
                  id: 0
                  type: type
                - meta: '{}'
                  id: 0
                  type: type
                userIds:
                - 3
                - 3
                teamIds:
                - 9
                - 9
                users:
                - meta: '{}'
                  id: 0
                  type: type
                - meta: '{}'
                  id: 0
                  type: type
              commentsCountRead: 4
              previewURL: previewURL
              displayName: displayName
              tagIds:
              - 0
              - 0
              downloadURL: downloadURL
              commentFollowers:
                companies:
                - meta: '{}'
                  id: 0
                  type: type
                - meta: '{}'
                  id: 0
                  type: type
                companyIds:
                - 7
                - 7
                teams:
                - meta: '{}'
                  id: 0
                  type: type
                - meta: '{}'
                  id: 0
                  type: type
                userIds:
                - 3
                - 3
                teamIds:
                - 9
                - 9
                users:
                - meta: '{}'
                  id: 0
                  type: type
                - meta: '{}'
                  id: 0
                  type: type
              description: description
              project:
                meta: '{}'
                id: 0
                type: type
              isPrivate: 9
              numLikes: 3
              uploadedDate: uploadedDate
              deletedBy: 5
              uploadedByUserID: 6
              originalName: originalName
              lockedBy: 9
              isLocked: true
              lockdown:
                meta: '{}'
                id: 0
                type: type
              id: 9
              thumbURL: thumbURL
              uploadedBy: 7
              updatedAt: updatedAt
              latestFileVersionNo: 6
              lockdownId: 8
              lockedByUserId: 6
              relatedItems:
                comments:
                - 6
                - 6
                messages:
                - 3
                - 3
                tasks:
                - 3
                - 3
              fileSource: fileSource
              lockedDate: lockedDate
              version:
                meta: '{}'
                id: 0
                type: type
              tags:
              - meta: '{}'
                id: 0
                type: type
              - meta: '{}'
                id: 0
                type: type
              deletedAt: deletedAt
              versionId: 0
              size: 7
              versions:
              - commentsCountRead: 8
                displayName: displayName
                description: description
                project:
                  meta: '{}'
                  id: 0
                  type: type
                fileVersionId: 3
                originalName: originalName
                file:
                  meta: '{}'
                  id: 0
                  type: type
                size: 7
                commentsCount: 4
                name: name
                versionNo: 3
                reactions:
                  mine: mine
                  counts:
                    joy: 6
                    like: 5
                    dislike: 1
                    frown: 2
                    heart: 6
                projectId: 3
                uploadedBy: 5
                fileId: 7
                status: status
              - commentsCountRead: 8
                displayName: displayName
                description: description
                project:
                  meta: '{}'
                  id: 0
                  type: type
                fileVersionId: 3
                originalName: originalName
                file:
                  meta: '{}'
                  id: 0
                  type: type
                size: 7
                commentsCount: 4
                name: name
                versionNo: 3
                reactions:
                  mine: mine
                  counts:
                    joy: 6
                    like: 5
                    dislike: 1
                    frown: 2
                    heart: 6
                projectId: 3
                uploadedBy: 5
                fileId: 7
                status: status
              commentsCount: 1
              reactions:
                mine: mine
                counts:
                  joy: 6
                  like: 5
                  dislike: 1
                  frown: 2
                  heart: 6
              category:
                meta: '{}'
                id: 0
                type: type
              projectId: 6
              categoryId: 7
              status: status
          users:
            key:
              lastName: lastName
              avatarUrl: avatarUrl
              isAdmin: true
              title: title
              type: type
              firstName: firstName
              companyId: 2
              workingHoursId: 5
              lengthOfDay: 6.878052220127876
              company:
                meta: '{}'
                id: 0
                type: type
              workingHour:
                meta: '{}'
                id: 0
                type: type
              id: 6
              email: email
      properties:
        fileversion:
          $ref: '#/components/schemas/view.Fileversion'
        included:
          $ref: '#/components/schemas/fileversion_Response_included'
      title: Response
      type: object
    form.Banner:
      description: Banner contains information of a form banner to be created or updated.
      properties:
        url:
          type: string
        x:
          type: number
        y:
          type: number
      title: Banner
      type: object
    form.Content:
      description: Content contains information of a form content to be created or
        updated.
      properties:
        banner:
          $ref: '#/components/schemas/form.Banner'
        definition:
          type: string
        description:
          type: string
        name:
          type: string
        state:
          type: string
      title: Content
      type: object
    form.Form:
      description: Form contains information of a form to be created or updated.
      properties:
        confirmationMessage:
          type: string
        content:
          $ref: '#/components/schemas/form.Content'
        hostObject:
          $ref: '#/components/schemas/form.HostObject'
        promptAdditionalSubmissions:
          type: boolean
        taskTitleFieldId:
          type: string
      title: Form
      type: object
    form.FormsResponse:
      description: FormsResponse contains information about a group of forms.
      example:
        meta:
          page:
            count: 6
            hasMore: true
            pageOffset: 3
            pageSize: 3
        included:
          projects:
            key:
              replyByEmailEnabled: true
              startPage: startPage
              endDate: endDate
              overviewStartPage: overviewStartPage
              tagIds:
              - 6
              - 6
              customFieldValueIds:
              - 5
              - 5
              description: description
              minMaxAvailableDates:
                maxEndDate: maxEndDate
                minStartDate: minStartDate
                suggestedEndDate: suggestedEndDate
                suggestedStartDate: suggestedStartDate
                deadlinesFound: true
              ownerId: 8
              type: type
              createdAt: createdAt
              updateId: 6
              logo: logo
              company:
                meta: '{}'
                id: 0
                type: type
              id: 9
              financialBudget:
                meta: '{}'
                id: 0
                type: type
              updatedAt: updatedAt
              harvestTimersEnabled: true
              updatedBy: 1
              activePages:
                comments: true
                riskRegister: true
                list: true
                gantt: true
                billing: true
                notebooks: true
                files: true
                messages: true
                links: true
                time: true
                milestones: true
                board: true
                forms: true
                table: true
                tasks: true
              isStarred: true
              directFileUploadsEnabled: true
              isOnBoardingProject: true
              subStatus: subStatus
              isSampleProject: true
              tags:
              - meta: '{}'
                id: 0
                type: type
              - meta: '{}'
                id: 0
                type: type
              tasksStartPage: tasksStartPage
              financialBudgetId: 9
              privacyEnabled: true
              companyId: 1
              defaultPrivacy: defaultPrivacy
              customFieldValues:
              - meta: '{}'
                id: 0
                type: type
              - meta: '{}'
                id: 0
                type: type
              createdBy: 4
              notifyCommentIncludeCreator: true
              skipWeekends: true
              name: name
              projectOwnerId: 9
              notifyEveryone: true
              timeBudgetId: 3
              showAnnouncement: true
              category:
                meta: '{}'
                id: 0
                type: type
              integrations:
                xero:
                  connected: true
                  countryCode: countryCode
                  organisation: organisation
                  baseCurrency: baseCurrency
                  enabled: true
                oneDriveBusiness:
                  folder: folder
                  folderName: folderName
                  account: account
                  enabled: true
                sharepoint:
                  folder: folder
                  folderName: folderName
                  account: account
                  enabled: true
              ownedBy: 6
              categoryId: 7
              startDate: startDate
              status: status
              timeBudget:
                meta: '{}'
                id: 0
                type: type
          users:
            key:
              lastName: lastName
              avatarUrl: avatarUrl
              isAdmin: true
              title: title
              type: type
              firstName: firstName
              companyId: 2
              workingHoursId: 5
              lengthOfDay: 6.878052220127876
              company:
                meta: '{}'
                id: 0
                type: type
              workingHour:
                meta: '{}'
                id: 0
                type: type
              id: 6
              email: email
        forms:
        - updatedBy:
            meta: '{}'
            id: 0
            type: type
          hostObject:
            meta: '{}'
            id: 0
            type: type
          content:
            name: name
            banner:
              x: 0.8008281904610115
              y: 6.027456183070403
              url: url
            description: description
            definition: definition
            state: state
            version: 1
          deletedBy:
            meta: '{}'
            id: 0
            type: type
          token:
            canonicalURL: canonicalURL
            value: value
          createdAt: createdAt
          deletedAt: deletedAt
          createdBy:
            meta: '{}'
            id: 0
            type: type
          installation:
            meta: '{}'
            id: 0
            type: type
          promptAdditionalSubmissions: true
          taskTitleFieldId: taskTitleFieldId
          id: 5
          state: state
          isShared: true
          confirmationMessage: confirmationMessage
          updatedAt: updatedAt
        - updatedBy:
            meta: '{}'
            id: 0
            type: type
          hostObject:
            meta: '{}'
            id: 0
            type: type
          content:
            name: name
            banner:
              x: 0.8008281904610115
              y: 6.027456183070403
              url: url
            description: description
            definition: definition
            state: state
            version: 1
          deletedBy:
            meta: '{}'
            id: 0
            type: type
          token:
            canonicalURL: canonicalURL
            value: value
          createdAt: createdAt
          deletedAt: deletedAt
          createdBy:
            meta: '{}'
            id: 0
            type: type
          installation:
            meta: '{}'
            id: 0
            type: type
          promptAdditionalSubmissions: true
          taskTitleFieldId: taskTitleFieldId
          id: 5
          state: state
          isShared: true
          confirmationMessage: confirmationMessage
          updatedAt: updatedAt
      properties:
        forms:
          items:
            $ref: '#/components/schemas/view.Form'
          type: array
        included:
          $ref: '#/components/schemas/calendar_EventsResponse_included'
        meta:
          $ref: '#/components/schemas/view.Meta'
      title: FormsResponse
      type: object
    form.HostObject:
      description: HostObject contains information of a form host object to be created
        or updated.
      properties:
        id:
          type: integer
        meta:
          $ref: '#/components/schemas/form.HostObjectMeta'
        type:
          type: string
      title: HostObject
      type: object
    form.HostObjectMeta:
      description: HostObjectMeta contains information of a form host object meta
        to be created or updated.
      properties:
        tasklistId:
          type: integer
      title: HostObjectMeta
      type: object
    form.PublicResponse:
      description: PublicResponse contains information about a specific public form.
      example:
        form:
          banner:
            x: 0.8008281904610115
            y: 6.027456183070403
            url: url
          promptAdditionalSubmissions: true
          content:
            name: name
            banner:
              x: 0.8008281904610115
              y: 6.027456183070403
              url: url
            description: description
            definition: definition
            state: state
            version: 1
          confirmationMessage: confirmationMessage
          token:
            canonicalURL: canonicalURL
            value: value
      properties:
        form:
          $ref: '#/components/schemas/view.PublicForm'
      title: PublicResponse
      type: object
    form.Request:
      description: Request contains information of a form to be created or updated.
      properties:
        form:
          $ref: '#/components/schemas/form.Form'
      title: Request
      type: object
    form.Response:
      description: Response contains information about a specific form.
      example:
        form:
          updatedBy:
            meta: '{}'
            id: 0
            type: type
          hostObject:
            meta: '{}'
            id: 0
            type: type
          content:
            name: name
            banner:
              x: 0.8008281904610115
              y: 6.027456183070403
              url: url
            description: description
            definition: definition
            state: state
            version: 1
          deletedBy:
            meta: '{}'
            id: 0
            type: type
          token:
            canonicalURL: canonicalURL
            value: value
          createdAt: createdAt
          deletedAt: deletedAt
          createdBy:
            meta: '{}'
            id: 0
            type: type
          installation:
            meta: '{}'
            id: 0
            type: type
          promptAdditionalSubmissions: true
          taskTitleFieldId: taskTitleFieldId
          id: 5
          state: state
          isShared: true
          confirmationMessage: confirmationMessage
          updatedAt: updatedAt
        included:
          projects:
            key:
              replyByEmailEnabled: true
              startPage: startPage
              endDate: endDate
              overviewStartPage: overviewStartPage
              tagIds:
              - 6
              - 6
              customFieldValueIds:
              - 5
              - 5
              description: description
              minMaxAvailableDates:
                maxEndDate: maxEndDate
                minStartDate: minStartDate
                suggestedEndDate: suggestedEndDate
                suggestedStartDate: suggestedStartDate
                deadlinesFound: true
              ownerId: 8
              type: type
              createdAt: createdAt
              updateId: 6
              logo: logo
              company:
                meta: '{}'
                id: 0
                type: type
              id: 9
              financialBudget:
                meta: '{}'
                id: 0
                type: type
              updatedAt: updatedAt
              harvestTimersEnabled: true
              updatedBy: 1
              activePages:
                comments: true
                riskRegister: true
                list: true
                gantt: true
                billing: true
                notebooks: true
                files: true
                messages: true
                links: true
                time: true
                milestones: true
                board: true
                forms: true
                table: true
                tasks: true
              isStarred: true
              directFileUploadsEnabled: true
              isOnBoardingProject: true
              subStatus: subStatus
              isSampleProject: true
              tags:
              - meta: '{}'
                id: 0
                type: type
              - meta: '{}'
                id: 0
                type: type
              tasksStartPage: tasksStartPage
              financialBudgetId: 9
              privacyEnabled: true
              companyId: 1
              defaultPrivacy: defaultPrivacy
              customFieldValues:
              - meta: '{}'
                id: 0
                type: type
              - meta: '{}'
                id: 0
                type: type
              createdBy: 4
              notifyCommentIncludeCreator: true
              skipWeekends: true
              name: name
              projectOwnerId: 9
              notifyEveryone: true
              timeBudgetId: 3
              showAnnouncement: true
              category:
                meta: '{}'
                id: 0
                type: type
              integrations:
                xero:
                  connected: true
                  countryCode: countryCode
                  organisation: organisation
                  baseCurrency: baseCurrency
                  enabled: true
                oneDriveBusiness:
                  folder: folder
                  folderName: folderName
                  account: account
                  enabled: true
                sharepoint:
                  folder: folder
                  folderName: folderName
                  account: account
                  enabled: true
              ownedBy: 6
              categoryId: 7
              startDate: startDate
              status: status
              timeBudget:
                meta: '{}'
                id: 0
                type: type
          users:
            key:
              lastName: lastName
              avatarUrl: avatarUrl
              isAdmin: true
              title: title
              type: type
              firstName: firstName
              companyId: 2
              workingHoursId: 5
              lengthOfDay: 6.878052220127876
              company:
                meta: '{}'
                id: 0
                type: type
              workingHour:
                meta: '{}'
                id: 0
                type: type
              id: 6
              email: email
      properties:
        form:
          $ref: '#/components/schemas/view.Form'
        included:
          $ref: '#/components/schemas/calendar_EventsResponse_included'
      title: Response
      type: object
    form.Submission:
      description: Submission contains information of a form submitted by a user.
      properties:
        data:
          properties: {}
          type: object
        version:
          type: integer
      title: Submission
      type: object
    form.SubmissionRequest:
      description: SubmissionRequest contains information of a form submitted by a
        user.
      properties:
        form:
          $ref: '#/components/schemas/form.Submission'
      title: SubmissionRequest
      type: object
    health.ProjectMetricHealth:
      description: ProjectMetricHealth stores a specific health counter.
      example:
        name: name
        value: 0
      properties:
        name:
          type: string
        value:
          type: integer
      title: ProjectMetricHealth
      type: object
    health.ProjectMetricHealthsResponse:
      description: |-
        ProjectMetricHealthsResponse contains information about a group of healths.
        Following this format to satisfy the Numerics integration.
      example:
        data:
        - name: name
          value: 0
        - name: name
          value: 0
      properties:
        data:
          items:
            $ref: '#/components/schemas/health.ProjectMetricHealth'
          type: array
      title: ProjectMetricHealthsResponse
      type: object
    importer.Importer:
      description: Importer single importer for response.
      example:
        running: true
        name: name
        status: status
      properties:
        name:
          type: string
        running:
          type: boolean
        status:
          type: string
      title: Importer
      type: object
    importer.ImportersResponse:
      description: ImportersResponse contains information about a group of importers.
      example:
        importers:
        - running: true
          name: name
          status: status
        - running: true
          name: name
          status: status
        isImporting: true
      properties:
        importers:
          items:
            $ref: '#/components/schemas/importer.Importer'
          type: array
        isImporting:
          type: boolean
      title: ImportersResponse
      type: object
    invoice.ProjectMetricInvoicesResponse:
      description: ProjectMetricInvoicesResponse contains information about a group
        of invoices.
      example:
        data:
          value: 0
      properties:
        data:
          $ref: '#/components/schemas/invoice_ProjectMetricInvoicesResponse_data'
      title: ProjectMetricInvoicesResponse
      type: object
    late.Response:
      description: |-
        Response contains the count of late tasks.
        Following this format to satisfy the Numerics integration.
      example:
        data:
          value: 0
      properties:
        data:
          $ref: '#/components/schemas/late.TaskMetricLate'
      title: Response
      type: object
    late.TaskMetricLate:
      description: TaskMetricLate contains count information about late tasks.
      example:
        value: 0
      properties:
        value:
          type: integer
      title: TaskMetricLate
      type: object
    lockdown.Response:
      description: Response contains information about a specific lockdown.
      example:
        lockdown:
          itemID: 6
          item:
            meta: '{}'
            id: 0
            type: type
          itemType: itemType
          id: 0
          grantAccessTo:
            companies:
            - meta: '{}'
              id: 0
              type: type
            - meta: '{}'
              id: 0
              type: type
            companyIds:
            - 7
            - 7
            teams:
            - meta: '{}'
              id: 0
              type: type
            - meta: '{}'
              id: 0
              type: type
            userIds:
            - 3
            - 3
            teamIds:
            - 9
            - 9
            users:
            - meta: '{}'
              id: 0
              type: type
            - meta: '{}'
              id: 0
              type: type
          user:
            meta: '{}'
            id: 0
            type: type
          userID: 1
          updatedAt: updatedAt
        included:
          companies:
            key:
              city: city
              industry:
                meta: '{}'
                id: 0
                type: type
              emailTwo: emailTwo
              industryId: 6
              isOwner: true
              addressTwo: addressTwo
              countryCode: countryCode
              emailThree: emailThree
              id: 1
              state: state
              fax: fax
              zip: zip
              profileText: profileText
              website: website
              clientUsers: 1
              companyNameUrl: companyNameUrl
              logoUrl: logoUrl
              phone: phone
              emailOne: emailOne
              name: name
              privateNotesText: privateNotesText
              accounts: 7
              addressOne: addressOne
              contacts: 1
              canSeePrivate: true
              cid: cid
          comments:
            key:
              id: 0
              title: title
              objectId: 6
              object:
                meta: '{}'
                id: 0
                type: type
              objectType: objectType
          teams:
            key:
              teamLogo: teamLogo
              name: name
              id: 4
              teamLogoColor: teamLogoColor
              teamLogoIcon: teamLogoIcon
          notebooks:
            key:
              changeFollowers:
                companies:
                - meta: '{}'
                  id: 0
                  type: type
                - meta: '{}'
                  id: 0
                  type: type
                companyIds:
                - 7
                - 7
                teams:
                - meta: '{}'
                  id: 0
                  type: type
                - meta: '{}'
                  id: 0
                  type: type
                userIds:
                - 3
                - 3
                teamIds:
                - 9
                - 9
                users:
                - meta: '{}'
                  id: 0
                  type: type
                - meta: '{}'
                  id: 0
                  type: type
              versionCount: 2
              createdByUserID: 8
              userFollowingComments: true
              tagIds:
              - 7
              - 7
              lockedAt: lockedAt
              commentFollowers:
                companies:
                - meta: '{}'
                  id: 0
                  type: type
                - meta: '{}'
                  id: 0
                  type: type
                companyIds:
                - 7
                - 7
                teams:
                - meta: '{}'
                  id: 0
                  type: type
                - meta: '{}'
                  id: 0
                  type: type
                userIds:
                - 3
                - 3
                teamIds:
                - 9
                - 9
                users:
                - meta: '{}'
                  id: 0
                  type: type
                - meta: '{}'
                  id: 0
                  type: type
              description: description
              privacy:
                companies:
                - meta: '{}'
                  id: 0
                  type: type
                - meta: '{}'
                  id: 0
                  type: type
                companyIds:
                - 7
                - 7
                teams:
                - meta: '{}'
                  id: 0
                  type: type
                - meta: '{}'
                  id: 0
                  type: type
                userIds:
                - 3
                - 3
                teamIds:
                - 9
                - 9
                users:
                - meta: '{}'
                  id: 0
                  type: type
                - meta: '{}'
                  id: 0
                  type: type
              project:
                meta: '{}'
                id: 0
                type: type
              isPrivate: true
              type: type
              deletedBy: 0
              deletedByUserID: 5
              createdAt: createdAt
              dateCreated: dateCreated
              latestVersionNo: 8
              lockedBy: 3
              userFollowingChanges: true
              lockdown:
                meta: '{}'
                id: 0
                type: type
              id: 5
              locked: true
              notebookVersionID: 3
              updatedAt: updatedAt
              updatedBy: 0
              readCommentsCount: 5
              lockdownId: 7
              updatedByUserID: 3
              contentHTML: contentHTML
              dateDeleted: dateDeleted
              dateUpdated: dateUpdated
              tags:
              - meta: '{}'
                id: 0
                type: type
              - meta: '{}'
                id: 0
                type: type
              secureContent: true
              deletedAt: deletedAt
              notebookVersionUpdatedDateTime: notebookVersionUpdatedDateTime
              deleted: true
              contents: contents
              createdBy: 9
              commentsCount: 3
              name: name
              notebookVersionCreatedDateTime: notebookVersionCreatedDateTime
              category:
                meta: '{}'
                id: 0
                type: type
              projectId: 9
              categoryId: 1
              notebookVersion:
                meta: '{}'
                id: 0
                type: type
          files:
            key:
              changeFollowers:
                companies:
                - meta: '{}'
                  id: 0
                  type: type
                - meta: '{}'
                  id: 0
                  type: type
                companyIds:
                - 7
                - 7
                teams:
                - meta: '{}'
                  id: 0
                  type: type
                - meta: '{}'
                  id: 0
                  type: type
                userIds:
                - 3
                - 3
                teamIds:
                - 9
                - 9
                users:
                - meta: '{}'
                  id: 0
                  type: type
                - meta: '{}'
                  id: 0
                  type: type
              commentsCountRead: 4
              previewURL: previewURL
              displayName: displayName
              tagIds:
              - 0
              - 0
              downloadURL: downloadURL
              commentFollowers:
                companies:
                - meta: '{}'
                  id: 0
                  type: type
                - meta: '{}'
                  id: 0
                  type: type
                companyIds:
                - 7
                - 7
                teams:
                - meta: '{}'
                  id: 0
                  type: type
                - meta: '{}'
                  id: 0
                  type: type
                userIds:
                - 3
                - 3
                teamIds:
                - 9
                - 9
                users:
                - meta: '{}'
                  id: 0
                  type: type
                - meta: '{}'
                  id: 0
                  type: type
              description: description
              project:
                meta: '{}'
                id: 0
                type: type
              isPrivate: 9
              numLikes: 3
              uploadedDate: uploadedDate
              deletedBy: 5
              uploadedByUserID: 6
              originalName: originalName
              lockedBy: 9
              isLocked: true
              lockdown:
                meta: '{}'
                id: 0
                type: type
              id: 9
              thumbURL: thumbURL
              uploadedBy: 7
              updatedAt: updatedAt
              latestFileVersionNo: 6
              lockdownId: 8
              lockedByUserId: 6
              relatedItems:
                comments:
                - 6
                - 6
                messages:
                - 3
                - 3
                tasks:
                - 3
                - 3
              fileSource: fileSource
              lockedDate: lockedDate
              version:
                meta: '{}'
                id: 0
                type: type
              tags:
              - meta: '{}'
                id: 0
                type: type
              - meta: '{}'
                id: 0
                type: type
              deletedAt: deletedAt
              versionId: 0
              size: 7
              versions:
              - commentsCountRead: 8
                displayName: displayName
                description: description
                project:
                  meta: '{}'
                  id: 0
                  type: type
                fileVersionId: 3
                originalName: originalName
                file:
                  meta: '{}'
                  id: 0
                  type: type
                size: 7
                commentsCount: 4
                name: name
                versionNo: 3
                reactions:
                  mine: mine
                  counts:
                    joy: 6
                    like: 5
                    dislike: 1
                    frown: 2
                    heart: 6
                projectId: 3
                uploadedBy: 5
                fileId: 7
                status: status
              - commentsCountRead: 8
                displayName: displayName
                description: description
                project:
                  meta: '{}'
                  id: 0
                  type: type
                fileVersionId: 3
                originalName: originalName
                file:
                  meta: '{}'
                  id: 0
                  type: type
                size: 7
                commentsCount: 4
                name: name
                versionNo: 3
                reactions:
                  mine: mine
                  counts:
                    joy: 6
                    like: 5
                    dislike: 1
                    frown: 2
                    heart: 6
                projectId: 3
                uploadedBy: 5
                fileId: 7
                status: status
              commentsCount: 1
              reactions:
                mine: mine
                counts:
                  joy: 6
                  like: 5
                  dislike: 1
                  frown: 2
                  heart: 6
              category:
                meta: '{}'
                id: 0
                type: type
              projectId: 6
              categoryId: 7
              status: status
          messages:
            key:
              post:
                meta: '{}'
                id: 0
                type: type
              id: 2
              postId: 7
              title: title
          links:
            key:
              code: code
              updatedBy: 9
              description: description
              project:
                meta: '{}'
                id: 0
                type: type
              isPrivate: true
              title: title
              deletedBy: 6
              createdAt: createdAt
              deletedAt: deletedAt
              deleted: true
              createdBy: 0
              provider: provider
              width: 0
              id: 4
              category:
                meta: '{}'
                id: 0
                type: type
              projectId: 7
              categoryId: 4
              forceNewWindow: 4
              height: 1
              updatedAt: updatedAt
          tasklists:
            key:
              milestone:
                meta: '{}'
                id: 0
                type: type
              milestoneId: 5
              name: name
              project:
                meta: '{}'
                id: 0
                type: type
              id: 5
              newTaskDefaults:
                estimatedMinutes: 2
                dueDate: dueDate
                responisblePartyIds:
                  companies:
                  - meta: '{}'
                    id: 0
                    type: type
                  - meta: '{}'
                    id: 0
                    type: type
                  companyIds:
                  - 7
                  - 7
                  teams:
                  - meta: '{}'
                    id: 0
                    type: type
                  - meta: '{}'
                    id: 0
                    type: type
                  userIds:
                  - 3
                  - 3
                  teamIds:
                  - 9
                  - 9
                  users:
                  - meta: '{}'
                    id: 0
                    type: type
                  - meta: '{}'
                    id: 0
                    type: type
                priority: priority
                startDate: startDate
                tags:
                - 2
                - 2
              taskIds:
              - 7
              - 7
              projectId: 4
              tasks:
              - meta: '{}'
                id: 0
                type: type
              - meta: '{}'
                id: 0
                type: type
          milestones:
            key:
              changeFollowers:
              - meta: '{}'
                id: 0
                type: type
              - meta: '{}'
                id: 0
                type: type
              creatorUserId: 8
              private: true
              userFollowingComments: true
              canEdit: true
              tagIds:
              - 4
              - 4
              commentFollowers:
              - meta: '{}'
                id: 0
                type: type
              - meta: '{}'
                id: 0
                type: type
              description: description
              project:
                meta: '{}'
                id: 0
                type: type
              tasklists:
              - meta: '{}'
                id: 0
                type: type
              - meta: '{}'
                id: 0
                type: type
              percentageTasksCompleted: 1
              createdOn: createdOn
              isDeleted: true
              originalDueDate: originalDueDate
              userFollowingChanges: true
              commentFollowerIds:
              - 0
              - 0
              lockdown:
                meta: '{}'
                id: 0
                type: type
              id: 4
              deadline: deadline
              numCommentsRead: 0
              updatedBy: 9
              reminder: true
              canComplete: true
              lockdownId: 3
              completerId: 4
              completed: true
              tags:
              - meta: '{}'
                id: 0
                type: type
              - meta: '{}'
                id: 0
                type: type
              changeFollowerIds:
              - 9
              - 9
              responsiblePartyIds:
              - 6
              - 6
              lastChangedOn: lastChangedOn
              responsibleParties:
              - meta: '{}'
                id: 0
                type: type
              - meta: '{}'
                id: 0
                type: type
              createdBy: 6
              latestUpdates:
              - field: field
                before: '{}'
                after: '{}'
              - field: field
                before: '{}'
                after: '{}'
              percentageComplete: 2
              commentsCount: 7
              completedOn: completedOn
              name: name
              projectId: 8
              tasklistIds:
              - 8
              - 8
              completedBy: 5
              status: status
          tasks:
            key:
              parentTaskId: 9
              assigneeUserIds:
              - 1
              - 1
              dueDate: dueDate
              tagIds:
              - 1
              - 1
              displayOrder: 9
              description: description
              isPrivate: 8
              userPermissions:
                canComplete: true
                canEdit: true
                canViewEstTime: true
                canAddSubtasks: true
                canLogTime: true
              assigneeUsers:
              - meta: '{}'
                id: 0
                type: type
              - meta: '{}'
                id: 0
                type: type
              originalDueDate: '{}'
              assigneeCompanyIds:
              - 1
              - 1
              assigneeTeamIds:
              - 1
              - 1
              id: 6
              subTaskIds:
              - 6
              - 6
              updatedAt: updatedAt
              predecessorIds:
              - 6
              - 6
              createdByUserId: 1
              updatedBy: 6
              crmDealIds:
              - 4
              - 4
              assigneeCompanies:
              - meta: '{}'
                id: 0
                type: type
              - meta: '{}'
                id: 0
                type: type
              parentTask:
                meta: '{}'
                id: 0
                type: type
              hasDeskTickets: true
              priority: priority
              dateUpdated: dateUpdated
              assigneeTeams:
              - meta: '{}'
                id: 0
                type: type
              - meta: '{}'
                id: 0
                type: type
              dependencyIds:
              - 5
              - 5
              createdBy: 7
              latestUpdates:
              - field: field
                before: '{}'
                after: '{}'
              - field: field
                before: '{}'
                after: '{}'
              completedOn: completedOn
              name: name
              progress: 3
              estimateMinutes: 9
              tasklist:
                meta: '{}'
                id: 0
                type: type
              completedBy: 6
              startDate: startDate
              tasklistId: 2
              status: status
          users:
            key:
              lastName: lastName
              avatarUrl: avatarUrl
              isAdmin: true
              title: title
              type: type
              firstName: firstName
              companyId: 2
              workingHoursId: 5
              lengthOfDay: 6.878052220127876
              company:
                meta: '{}'
                id: 0
                type: type
              workingHour:
                meta: '{}'
                id: 0
                type: type
              id: 6
              email: email
      properties:
        included:
          $ref: '#/components/schemas/lockdown_Response_included'
        lockdown:
          $ref: '#/components/schemas/view.Lockdown'
      title: Response
      type: object
    message.Request:
      description: Request contains information of a message to be created or updated.
      properties:
        read:
          type: boolean
      title: Request
      type: object
    milestone.MilestonesResponse:
      description: MilestonesResponse contains information about a group of milestones.
      example:
        meta:
          page:
            count: 6
            hasMore: true
            pageOffset: 3
            pageSize: 3
        milestones:
        - changeFollowers:
          - meta: '{}'
            id: 0
            type: type
          - meta: '{}'
            id: 0
            type: type
          creatorUserId: 8
          private: true
          userFollowingComments: true
          canEdit: true
          tagIds:
          - 4
          - 4
          commentFollowers:
          - meta: '{}'
            id: 0
            type: type
          - meta: '{}'
            id: 0
            type: type
          description: description
          project:
            meta: '{}'
            id: 0
            type: type
          tasklists:
          - meta: '{}'
            id: 0
            type: type
          - meta: '{}'
            id: 0
            type: type
          percentageTasksCompleted: 1
          createdOn: createdOn
          isDeleted: true
          originalDueDate: originalDueDate
          userFollowingChanges: true
          commentFollowerIds:
          - 0
          - 0
          lockdown:
            meta: '{}'
            id: 0
            type: type
          id: 4
          deadline: deadline
          numCommentsRead: 0
          updatedBy: 9
          reminder: true
          canComplete: true
          lockdownId: 3
          completerId: 4
          completed: true
          tags:
          - meta: '{}'
            id: 0
            type: type
          - meta: '{}'
            id: 0
            type: type
          changeFollowerIds:
          - 9
          - 9
          responsiblePartyIds:
          - 6
          - 6
          lastChangedOn: lastChangedOn
          responsibleParties:
          - meta: '{}'
            id: 0
            type: type
          - meta: '{}'
            id: 0
            type: type
          createdBy: 6
          latestUpdates:
          - field: field
            before: '{}'
            after: '{}'
          - field: field
            before: '{}'
            after: '{}'
          percentageComplete: 2
          commentsCount: 7
          completedOn: completedOn
          name: name
          projectId: 8
          tasklistIds:
          - 8
          - 8
          completedBy: 5
          status: status
        - changeFollowers:
          - meta: '{}'
            id: 0
            type: type
          - meta: '{}'
            id: 0
            type: type
          creatorUserId: 8
          private: true
          userFollowingComments: true
          canEdit: true
          tagIds:
          - 4
          - 4
          commentFollowers:
          - meta: '{}'
            id: 0
            type: type
          - meta: '{}'
            id: 0
            type: type
          description: description
          project:
            meta: '{}'
            id: 0
            type: type
          tasklists:
          - meta: '{}'
            id: 0
            type: type
          - meta: '{}'
            id: 0
            type: type
          percentageTasksCompleted: 1
          createdOn: createdOn
          isDeleted: true
          originalDueDate: originalDueDate
          userFollowingChanges: true
          commentFollowerIds:
          - 0
          - 0
          lockdown:
            meta: '{}'
            id: 0
            type: type
          id: 4
          deadline: deadline
          numCommentsRead: 0
          updatedBy: 9
          reminder: true
          canComplete: true
          lockdownId: 3
          completerId: 4
          completed: true
          tags:
          - meta: '{}'
            id: 0
            type: type
          - meta: '{}'
            id: 0
            type: type
          changeFollowerIds:
          - 9
          - 9
          responsiblePartyIds:
          - 6
          - 6
          lastChangedOn: lastChangedOn
          responsibleParties:
          - meta: '{}'
            id: 0
            type: type
          - meta: '{}'
            id: 0
            type: type
          createdBy: 6
          latestUpdates:
          - field: field
            before: '{}'
            after: '{}'
          - field: field
            before: '{}'
            after: '{}'
          percentageComplete: 2
          commentsCount: 7
          completedOn: completedOn
          name: name
          projectId: 8
          tasklistIds:
          - 8
          - 8
          completedBy: 5
          status: status
        included:
          companies:
            key:
              city: city
              industry:
                meta: '{}'
                id: 0
                type: type
              emailTwo: emailTwo
              industryId: 6
              isOwner: true
              addressTwo: addressTwo
              countryCode: countryCode
              emailThree: emailThree
              id: 1
              state: state
              fax: fax
              zip: zip
              profileText: profileText
              website: website
              clientUsers: 1
              companyNameUrl: companyNameUrl
              logoUrl: logoUrl
              phone: phone
              emailOne: emailOne
              name: name
              privateNotesText: privateNotesText
              accounts: 7
              addressOne: addressOne
              contacts: 1
              canSeePrivate: true
              cid: cid
          projects:
            key:
              replyByEmailEnabled: true
              startPage: startPage
              endDate: endDate
              overviewStartPage: overviewStartPage
              tagIds:
              - 6
              - 6
              customFieldValueIds:
              - 5
              - 5
              description: description
              minMaxAvailableDates:
                maxEndDate: maxEndDate
                minStartDate: minStartDate
                suggestedEndDate: suggestedEndDate
                suggestedStartDate: suggestedStartDate
                deadlinesFound: true
              ownerId: 8
              type: type
              createdAt: createdAt
              updateId: 6
              logo: logo
              company:
                meta: '{}'
                id: 0
                type: type
              id: 9
              financialBudget:
                meta: '{}'
                id: 0
                type: type
              updatedAt: updatedAt
              harvestTimersEnabled: true
              updatedBy: 1
              activePages:
                comments: true
                riskRegister: true
                list: true
                gantt: true
                billing: true
                notebooks: true
                files: true
                messages: true
                links: true
                time: true
                milestones: true
                board: true
                forms: true
                table: true
                tasks: true
              isStarred: true
              directFileUploadsEnabled: true
              isOnBoardingProject: true
              subStatus: subStatus
              isSampleProject: true
              tags:
              - meta: '{}'
                id: 0
                type: type
              - meta: '{}'
                id: 0
                type: type
              tasksStartPage: tasksStartPage
              financialBudgetId: 9
              privacyEnabled: true
              companyId: 1
              defaultPrivacy: defaultPrivacy
              customFieldValues:
              - meta: '{}'
                id: 0
                type: type
              - meta: '{}'
                id: 0
                type: type
              createdBy: 4
              notifyCommentIncludeCreator: true
              skipWeekends: true
              name: name
              projectOwnerId: 9
              notifyEveryone: true
              timeBudgetId: 3
              showAnnouncement: true
              category:
                meta: '{}'
                id: 0
                type: type
              integrations:
                xero:
                  connected: true
                  countryCode: countryCode
                  organisation: organisation
                  baseCurrency: baseCurrency
                  enabled: true
                oneDriveBusiness:
                  folder: folder
                  folderName: folderName
                  account: account
                  enabled: true
                sharepoint:
                  folder: folder
                  folderName: folderName
                  account: account
                  enabled: true
              ownedBy: 6
              categoryId: 7
              startDate: startDate
              status: status
              timeBudget:
                meta: '{}'
                id: 0
                type: type
          teams:
            key:
              teamLogo: teamLogo
              name: name
              id: 4
              teamLogoColor: teamLogoColor
              teamLogoIcon: teamLogoIcon
          tasklists:
            key:
              milestone:
                meta: '{}'
                id: 0
                type: type
              milestoneId: 5
              name: name
              project:
                meta: '{}'
                id: 0
                type: type
              id: 5
              newTaskDefaults:
                estimatedMinutes: 2
                dueDate: dueDate
                responisblePartyIds:
                  companies:
                  - meta: '{}'
                    id: 0
                    type: type
                  - meta: '{}'
                    id: 0
                    type: type
                  companyIds:
                  - 7
                  - 7
                  teams:
                  - meta: '{}'
                    id: 0
                    type: type
                  - meta: '{}'
                    id: 0
                    type: type
                  userIds:
                  - 3
                  - 3
                  teamIds:
                  - 9
                  - 9
                  users:
                  - meta: '{}'
                    id: 0
                    type: type
                  - meta: '{}'
                    id: 0
                    type: type
                priority: priority
                startDate: startDate
                tags:
                - 2
                - 2
              taskIds:
              - 7
              - 7
              projectId: 4
              tasks:
              - meta: '{}'
                id: 0
                type: type
              - meta: '{}'
                id: 0
                type: type
          tasks:
            key:
              parentTaskId: 9
              assigneeUserIds:
              - 1
              - 1
              dueDate: dueDate
              tagIds:
              - 1
              - 1
              displayOrder: 9
              description: description
              isPrivate: 8
              userPermissions:
                canComplete: true
                canEdit: true
                canViewEstTime: true
                canAddSubtasks: true
                canLogTime: true
              assigneeUsers:
              - meta: '{}'
                id: 0
                type: type
              - meta: '{}'
                id: 0
                type: type
              originalDueDate: '{}'
              assigneeCompanyIds:
              - 1
              - 1
              assigneeTeamIds:
              - 1
              - 1
              id: 6
              subTaskIds:
              - 6
              - 6
              updatedAt: updatedAt
              predecessorIds:
              - 6
              - 6
              createdByUserId: 1
              updatedBy: 6
              crmDealIds:
              - 4
              - 4
              assigneeCompanies:
              - meta: '{}'
                id: 0
                type: type
              - meta: '{}'
                id: 0
                type: type
              parentTask:
                meta: '{}'
                id: 0
                type: type
              hasDeskTickets: true
              priority: priority
              dateUpdated: dateUpdated
              assigneeTeams:
              - meta: '{}'
                id: 0
                type: type
              - meta: '{}'
                id: 0
                type: type
              dependencyIds:
              - 5
              - 5
              createdBy: 7
              latestUpdates:
              - field: field
                before: '{}'
                after: '{}'
              - field: field
                before: '{}'
                after: '{}'
              completedOn: completedOn
              name: name
              progress: 3
              estimateMinutes: 9
              tasklist:
                meta: '{}'
                id: 0
                type: type
              completedBy: 6
              startDate: startDate
              tasklistId: 2
              status: status
          users:
            key:
              lastName: lastName
              avatarUrl: avatarUrl
              isAdmin: true
              title: title
              type: type
              firstName: firstName
              companyId: 2
              workingHoursId: 5
              lengthOfDay: 6.878052220127876
              company:
                meta: '{}'
                id: 0
                type: type
              workingHour:
                meta: '{}'
                id: 0
                type: type
              id: 6
              email: email
          tags:
            key:
              color: color
              count: 0
              name: name
              project:
                meta: '{}'
                id: 0
                type: type
              id: 6
              projectId: 1
      properties:
        included:
          $ref: '#/components/schemas/milestone_MilestonesResponse_included'
        meta:
          $ref: '#/components/schemas/view.Meta'
        milestones:
          items:
            $ref: '#/components/schemas/view.Milestone'
          type: array
      title: MilestonesResponse
      type: object
    milestone.Response:
      description: Response contains information about a milestone.
      example:
        milestone:
          changeFollowers:
          - meta: '{}'
            id: 0
            type: type
          - meta: '{}'
            id: 0
            type: type
          creatorUserId: 8
          private: true
          userFollowingComments: true
          canEdit: true
          tagIds:
          - 4
          - 4
          commentFollowers:
          - meta: '{}'
            id: 0
            type: type
          - meta: '{}'
            id: 0
            type: type
          description: description
          project:
            meta: '{}'
            id: 0
            type: type
          tasklists:
          - meta: '{}'
            id: 0
            type: type
          - meta: '{}'
            id: 0
            type: type
          percentageTasksCompleted: 1
          createdOn: createdOn
          isDeleted: true
          originalDueDate: originalDueDate
          userFollowingChanges: true
          commentFollowerIds:
          - 0
          - 0
          lockdown:
            meta: '{}'
            id: 0
            type: type
          id: 4
          deadline: deadline
          numCommentsRead: 0
          updatedBy: 9
          reminder: true
          canComplete: true
          lockdownId: 3
          completerId: 4
          completed: true
          tags:
          - meta: '{}'
            id: 0
            type: type
          - meta: '{}'
            id: 0
            type: type
          changeFollowerIds:
          - 9
          - 9
          responsiblePartyIds:
          - 6
          - 6
          lastChangedOn: lastChangedOn
          responsibleParties:
          - meta: '{}'
            id: 0
            type: type
          - meta: '{}'
            id: 0
            type: type
          createdBy: 6
          latestUpdates:
          - field: field
            before: '{}'
            after: '{}'
          - field: field
            before: '{}'
            after: '{}'
          percentageComplete: 2
          commentsCount: 7
          completedOn: completedOn
          name: name
          projectId: 8
          tasklistIds:
          - 8
          - 8
          completedBy: 5
          status: status
        included:
          companies:
            key:
              city: city
              industry:
                meta: '{}'
                id: 0
                type: type
              emailTwo: emailTwo
              industryId: 6
              isOwner: true
              addressTwo: addressTwo
              countryCode: countryCode
              emailThree: emailThree
              id: 1
              state: state
              fax: fax
              zip: zip
              profileText: profileText
              website: website
              clientUsers: 1
              companyNameUrl: companyNameUrl
              logoUrl: logoUrl
              phone: phone
              emailOne: emailOne
              name: name
              privateNotesText: privateNotesText
              accounts: 7
              addressOne: addressOne
              contacts: 1
              canSeePrivate: true
              cid: cid
          projects:
            key:
              replyByEmailEnabled: true
              startPage: startPage
              endDate: endDate
              overviewStartPage: overviewStartPage
              tagIds:
              - 6
              - 6
              customFieldValueIds:
              - 5
              - 5
              description: description
              minMaxAvailableDates:
                maxEndDate: maxEndDate
                minStartDate: minStartDate
                suggestedEndDate: suggestedEndDate
                suggestedStartDate: suggestedStartDate
                deadlinesFound: true
              ownerId: 8
              type: type
              createdAt: createdAt
              updateId: 6
              logo: logo
              company:
                meta: '{}'
                id: 0
                type: type
              id: 9
              financialBudget:
                meta: '{}'
                id: 0
                type: type
              updatedAt: updatedAt
              harvestTimersEnabled: true
              updatedBy: 1
              activePages:
                comments: true
                riskRegister: true
                list: true
                gantt: true
                billing: true
                notebooks: true
                files: true
                messages: true
                links: true
                time: true
                milestones: true
                board: true
                forms: true
                table: true
                tasks: true
              isStarred: true
              directFileUploadsEnabled: true
              isOnBoardingProject: true
              subStatus: subStatus
              isSampleProject: true
              tags:
              - meta: '{}'
                id: 0
                type: type
              - meta: '{}'
                id: 0
                type: type
              tasksStartPage: tasksStartPage
              financialBudgetId: 9
              privacyEnabled: true
              companyId: 1
              defaultPrivacy: defaultPrivacy
              customFieldValues:
              - meta: '{}'
                id: 0
                type: type
              - meta: '{}'
                id: 0
                type: type
              createdBy: 4
              notifyCommentIncludeCreator: true
              skipWeekends: true
              name: name
              projectOwnerId: 9
              notifyEveryone: true
              timeBudgetId: 3
              showAnnouncement: true
              category:
                meta: '{}'
                id: 0
                type: type
              integrations:
                xero:
                  connected: true
                  countryCode: countryCode
                  organisation: organisation
                  baseCurrency: baseCurrency
                  enabled: true
                oneDriveBusiness:
                  folder: folder
                  folderName: folderName
                  account: account
                  enabled: true
                sharepoint:
                  folder: folder
                  folderName: folderName
                  account: account
                  enabled: true
              ownedBy: 6
              categoryId: 7
              startDate: startDate
              status: status
              timeBudget:
                meta: '{}'
                id: 0
                type: type
          teams:
            key:
              teamLogo: teamLogo
              name: name
              id: 4
              teamLogoColor: teamLogoColor
              teamLogoIcon: teamLogoIcon
          tasklists:
            key:
              milestone:
                meta: '{}'
                id: 0
                type: type
              milestoneId: 5
              name: name
              project:
                meta: '{}'
                id: 0
                type: type
              id: 5
              newTaskDefaults:
                estimatedMinutes: 2
                dueDate: dueDate
                responisblePartyIds:
                  companies:
                  - meta: '{}'
                    id: 0
                    type: type
                  - meta: '{}'
                    id: 0
                    type: type
                  companyIds:
                  - 7
                  - 7
                  teams:
                  - meta: '{}'
                    id: 0
                    type: type
                  - meta: '{}'
                    id: 0
                    type: type
                  userIds:
                  - 3
                  - 3
                  teamIds:
                  - 9
                  - 9
                  users:
                  - meta: '{}'
                    id: 0
                    type: type
                  - meta: '{}'
                    id: 0
                    type: type
                priority: priority
                startDate: startDate
                tags:
                - 2
                - 2
              taskIds:
              - 7
              - 7
              projectId: 4
              tasks:
              - meta: '{}'
                id: 0
                type: type
              - meta: '{}'
                id: 0
                type: type
          tasks:
            key:
              parentTaskId: 9
              assigneeUserIds:
              - 1
              - 1
              dueDate: dueDate
              tagIds:
              - 1
              - 1
              displayOrder: 9
              description: description
              isPrivate: 8
              userPermissions:
                canComplete: true
                canEdit: true
                canViewEstTime: true
                canAddSubtasks: true
                canLogTime: true
              assigneeUsers:
              - meta: '{}'
                id: 0
                type: type
              - meta: '{}'
                id: 0
                type: type
              originalDueDate: '{}'
              assigneeCompanyIds:
              - 1
              - 1
              assigneeTeamIds:
              - 1
              - 1
              id: 6
              subTaskIds:
              - 6
              - 6
              updatedAt: updatedAt
              predecessorIds:
              - 6
              - 6
              createdByUserId: 1
              updatedBy: 6
              crmDealIds:
              - 4
              - 4
              assigneeCompanies:
              - meta: '{}'
                id: 0
                type: type
              - meta: '{}'
                id: 0
                type: type
              parentTask:
                meta: '{}'
                id: 0
                type: type
              hasDeskTickets: true
              priority: priority
              dateUpdated: dateUpdated
              assigneeTeams:
              - meta: '{}'
                id: 0
                type: type
              - meta: '{}'
                id: 0
                type: type
              dependencyIds:
              - 5
              - 5
              createdBy: 7
              latestUpdates:
              - field: field
                before: '{}'
                after: '{}'
              - field: field
                before: '{}'
                after: '{}'
              completedOn: completedOn
              name: name
              progress: 3
              estimateMinutes: 9
              tasklist:
                meta: '{}'
                id: 0
                type: type
              completedBy: 6
              startDate: startDate
              tasklistId: 2
              status: status
          users:
            key:
              lastName: lastName
              avatarUrl: avatarUrl
              isAdmin: true
              title: title
              type: type
              firstName: firstName
              companyId: 2
              workingHoursId: 5
              lengthOfDay: 6.878052220127876
              company:
                meta: '{}'
                id: 0
                type: type
              workingHour:
                meta: '{}'
                id: 0
                type: type
              id: 6
              email: email
          tags:
            key:
              color: color
              count: 0
              name: name
              project:
                meta: '{}'
                id: 0
                type: type
              id: 6
              projectId: 1
      properties:
        included:
          $ref: '#/components/schemas/milestone_MilestonesResponse_included'
        milestone:
          $ref: '#/components/schemas/view.Milestone'
      title: Response
      type: object
    notebook.Notebook:
      description: Notebook contains all the information returned from a notebook.
      properties:
        categoryId:
          type: integer
        contents:
          type: string
        description:
          type: string
        isPrivate:
          type: boolean
        locked:
          type: boolean
        name:
          type: string
        newVersion:
          type: boolean
        notify:
          $ref: '#/components/schemas/payload.Notify'
        notifyCurrentUser:
          type: boolean
        privacy:
          $ref: '#/components/schemas/payload.UserGroups'
        secureContent:
          type: boolean
        sendDiff:
          type: boolean
        tagIds:
          items:
            type: integer
          type: array
        type:
          type: string
      title: Notebook
      type: object
    notebook.NotebooksResponse:
      description: NotebooksResponse contains information about a group of notebooks.
      example:
        meta:
          page:
            count: 6
            hasMore: true
            pageOffset: 3
            pageSize: 3
        notebooks:
        - changeFollowers:
            companies:
            - meta: '{}'
              id: 0
              type: type
            - meta: '{}'
              id: 0
              type: type
            companyIds:
            - 7
            - 7
            teams:
            - meta: '{}'
              id: 0
              type: type
            - meta: '{}'
              id: 0
              type: type
            userIds:
            - 3
            - 3
            teamIds:
            - 9
            - 9
            users:
            - meta: '{}'
              id: 0
              type: type
            - meta: '{}'
              id: 0
              type: type
          versionCount: 2
          createdByUserID: 8
          userFollowingComments: true
          tagIds:
          - 7
          - 7
          lockedAt: lockedAt
          commentFollowers:
            companies:
            - meta: '{}'
              id: 0
              type: type
            - meta: '{}'
              id: 0
              type: type
            companyIds:
            - 7
            - 7
            teams:
            - meta: '{}'
              id: 0
              type: type
            - meta: '{}'
              id: 0
              type: type
            userIds:
            - 3
            - 3
            teamIds:
            - 9
            - 9
            users:
            - meta: '{}'
              id: 0
              type: type
            - meta: '{}'
              id: 0
              type: type
          description: description
          privacy:
            companies:
            - meta: '{}'
              id: 0
              type: type
            - meta: '{}'
              id: 0
              type: type
            companyIds:
            - 7
            - 7
            teams:
            - meta: '{}'
              id: 0
              type: type
            - meta: '{}'
              id: 0
              type: type
            userIds:
            - 3
            - 3
            teamIds:
            - 9
            - 9
            users:
            - meta: '{}'
              id: 0
              type: type
            - meta: '{}'
              id: 0
              type: type
          project:
            meta: '{}'
            id: 0
            type: type
          isPrivate: true
          type: type
          deletedBy: 0
          deletedByUserID: 5
          createdAt: createdAt
          dateCreated: dateCreated
          latestVersionNo: 8
          lockedBy: 3
          userFollowingChanges: true
          lockdown:
            meta: '{}'
            id: 0
            type: type
          id: 5
          locked: true
          notebookVersionID: 3
          updatedAt: updatedAt
          updatedBy: 0
          readCommentsCount: 5
          lockdownId: 7
          updatedByUserID: 3
          contentHTML: contentHTML
          dateDeleted: dateDeleted
          dateUpdated: dateUpdated
          tags:
          - meta: '{}'
            id: 0
            type: type
          - meta: '{}'
            id: 0
            type: type
          secureContent: true
          deletedAt: deletedAt
          notebookVersionUpdatedDateTime: notebookVersionUpdatedDateTime
          deleted: true
          contents: contents
          createdBy: 9
          commentsCount: 3
          name: name
          notebookVersionCreatedDateTime: notebookVersionCreatedDateTime
          category:
            meta: '{}'
            id: 0
            type: type
          projectId: 9
          categoryId: 1
          notebookVersion:
            meta: '{}'
            id: 0
            type: type
        - changeFollowers:
            companies:
            - meta: '{}'
              id: 0
              type: type
            - meta: '{}'
              id: 0
              type: type
            companyIds:
            - 7
            - 7
            teams:
            - meta: '{}'
              id: 0
              type: type
            - meta: '{}'
              id: 0
              type: type
            userIds:
            - 3
            - 3
            teamIds:
            - 9
            - 9
            users:
            - meta: '{}'
              id: 0
              type: type
            - meta: '{}'
              id: 0
              type: type
          versionCount: 2
          createdByUserID: 8
          userFollowingComments: true
          tagIds:
          - 7
          - 7
          lockedAt: lockedAt
          commentFollowers:
            companies:
            - meta: '{}'
              id: 0
              type: type
            - meta: '{}'
              id: 0
              type: type
            companyIds:
            - 7
            - 7
            teams:
            - meta: '{}'
              id: 0
              type: type
            - meta: '{}'
              id: 0
              type: type
            userIds:
            - 3
            - 3
            teamIds:
            - 9
            - 9
            users:
            - meta: '{}'
              id: 0
              type: type
            - meta: '{}'
              id: 0
              type: type
          description: description
          privacy:
            companies:
            - meta: '{}'
              id: 0
              type: type
            - meta: '{}'
              id: 0
              type: type
            companyIds:
            - 7
            - 7
            teams:
            - meta: '{}'
              id: 0
              type: type
            - meta: '{}'
              id: 0
              type: type
            userIds:
            - 3
            - 3
            teamIds:
            - 9
            - 9
            users:
            - meta: '{}'
              id: 0
              type: type
            - meta: '{}'
              id: 0
              type: type
          project:
            meta: '{}'
            id: 0
            type: type
          isPrivate: true
          type: type
          deletedBy: 0
          deletedByUserID: 5
          createdAt: createdAt
          dateCreated: dateCreated
          latestVersionNo: 8
          lockedBy: 3
          userFollowingChanges: true
          lockdown:
            meta: '{}'
            id: 0
            type: type
          id: 5
          locked: true
          notebookVersionID: 3
          updatedAt: updatedAt
          updatedBy: 0
          readCommentsCount: 5
          lockdownId: 7
          updatedByUserID: 3
          contentHTML: contentHTML
          dateDeleted: dateDeleted
          dateUpdated: dateUpdated
          tags:
          - meta: '{}'
            id: 0
            type: type
          - meta: '{}'
            id: 0
            type: type
          secureContent: true
          deletedAt: deletedAt
          notebookVersionUpdatedDateTime: notebookVersionUpdatedDateTime
          deleted: true
          contents: contents
          createdBy: 9
          commentsCount: 3
          name: name
          notebookVersionCreatedDateTime: notebookVersionCreatedDateTime
          category:
            meta: '{}'
            id: 0
            type: type
          projectId: 9
          categoryId: 1
          notebookVersion:
            meta: '{}'
            id: 0
            type: type
        included:
          companies:
            key:
              city: city
              industry:
                meta: '{}'
                id: 0
                type: type
              emailTwo: emailTwo
              industryId: 6
              isOwner: true
              addressTwo: addressTwo
              countryCode: countryCode
              emailThree: emailThree
              id: 1
              state: state
              fax: fax
              zip: zip
              profileText: profileText
              website: website
              clientUsers: 1
              companyNameUrl: companyNameUrl
              logoUrl: logoUrl
              phone: phone
              emailOne: emailOne
              name: name
              privateNotesText: privateNotesText
              accounts: 7
              addressOne: addressOne
              contacts: 1
              canSeePrivate: true
              cid: cid
          projects:
            key:
              replyByEmailEnabled: true
              startPage: startPage
              endDate: endDate
              overviewStartPage: overviewStartPage
              tagIds:
              - 6
              - 6
              customFieldValueIds:
              - 5
              - 5
              description: description
              minMaxAvailableDates:
                maxEndDate: maxEndDate
                minStartDate: minStartDate
                suggestedEndDate: suggestedEndDate
                suggestedStartDate: suggestedStartDate
                deadlinesFound: true
              ownerId: 8
              type: type
              createdAt: createdAt
              updateId: 6
              logo: logo
              company:
                meta: '{}'
                id: 0
                type: type
              id: 9
              financialBudget:
                meta: '{}'
                id: 0
                type: type
              updatedAt: updatedAt
              harvestTimersEnabled: true
              updatedBy: 1
              activePages:
                comments: true
                riskRegister: true
                list: true
                gantt: true
                billing: true
                notebooks: true
                files: true
                messages: true
                links: true
                time: true
                milestones: true
                board: true
                forms: true
                table: true
                tasks: true
              isStarred: true
              directFileUploadsEnabled: true
              isOnBoardingProject: true
              subStatus: subStatus
              isSampleProject: true
              tags:
              - meta: '{}'
                id: 0
                type: type
              - meta: '{}'
                id: 0
                type: type
              tasksStartPage: tasksStartPage
              financialBudgetId: 9
              privacyEnabled: true
              companyId: 1
              defaultPrivacy: defaultPrivacy
              customFieldValues:
              - meta: '{}'
                id: 0
                type: type
              - meta: '{}'
                id: 0
                type: type
              createdBy: 4
              notifyCommentIncludeCreator: true
              skipWeekends: true
              name: name
              projectOwnerId: 9
              notifyEveryone: true
              timeBudgetId: 3
              showAnnouncement: true
              category:
                meta: '{}'
                id: 0
                type: type
              integrations:
                xero:
                  connected: true
                  countryCode: countryCode
                  organisation: organisation
                  baseCurrency: baseCurrency
                  enabled: true
                oneDriveBusiness:
                  folder: folder
                  folderName: folderName
                  account: account
                  enabled: true
                sharepoint:
                  folder: folder
                  folderName: folderName
                  account: account
                  enabled: true
              ownedBy: 6
              categoryId: 7
              startDate: startDate
              status: status
              timeBudget:
                meta: '{}'
                id: 0
                type: type
          teams:
            key:
              teamLogo: teamLogo
              name: name
              id: 4
              teamLogoColor: teamLogoColor
              teamLogoIcon: teamLogoIcon
          notebookCategories:
            key:
              elementsCount: 0
              parent:
                meta: '{}'
                id: 0
                type: type
              color: color
              name: name
              project:
                meta: '{}'
                id: 0
                type: type
              id: 6
              projectId: 5
              parentId: 1
          users:
            key:
              lastName: lastName
              avatarUrl: avatarUrl
              isAdmin: true
              title: title
              type: type
              firstName: firstName
              companyId: 2
              workingHoursId: 5
              lengthOfDay: 6.878052220127876
              company:
                meta: '{}'
                id: 0
                type: type
              workingHour:
                meta: '{}'
                id: 0
                type: type
              id: 6
              email: email
          tags:
            key:
              color: color
              count: 0
              name: name
              project:
                meta: '{}'
                id: 0
                type: type
              id: 6
              projectId: 1
      properties:
        included:
          $ref: '#/components/schemas/notebook_NotebooksResponse_included'
        meta:
          $ref: '#/components/schemas/view.Meta'
        notebooks:
          items:
            $ref: '#/components/schemas/view.Notebook'
          type: array
      title: NotebooksResponse
      type: object
    notebook.Request:
      description: Request contains information of a notebook to be created or updated.
      properties:
        notebook:
          $ref: '#/components/schemas/notebook.Notebook'
      title: Request
      type: object
    notebook.Response:
      description: Response contains information about a specific notebook.
      example:
        included:
          companies:
            key:
              city: city
              industry:
                meta: '{}'
                id: 0
                type: type
              emailTwo: emailTwo
              industryId: 6
              isOwner: true
              addressTwo: addressTwo
              countryCode: countryCode
              emailThree: emailThree
              id: 1
              state: state
              fax: fax
              zip: zip
              profileText: profileText
              website: website
              clientUsers: 1
              companyNameUrl: companyNameUrl
              logoUrl: logoUrl
              phone: phone
              emailOne: emailOne
              name: name
              privateNotesText: privateNotesText
              accounts: 7
              addressOne: addressOne
              contacts: 1
              canSeePrivate: true
              cid: cid
          projects:
            key:
              replyByEmailEnabled: true
              startPage: startPage
              endDate: endDate
              overviewStartPage: overviewStartPage
              tagIds:
              - 6
              - 6
              customFieldValueIds:
              - 5
              - 5
              description: description
              minMaxAvailableDates:
                maxEndDate: maxEndDate
                minStartDate: minStartDate
                suggestedEndDate: suggestedEndDate
                suggestedStartDate: suggestedStartDate
                deadlinesFound: true
              ownerId: 8
              type: type
              createdAt: createdAt
              updateId: 6
              logo: logo
              company:
                meta: '{}'
                id: 0
                type: type
              id: 9
              financialBudget:
                meta: '{}'
                id: 0
                type: type
              updatedAt: updatedAt
              harvestTimersEnabled: true
              updatedBy: 1
              activePages:
                comments: true
                riskRegister: true
                list: true
                gantt: true
                billing: true
                notebooks: true
                files: true
                messages: true
                links: true
                time: true
                milestones: true
                board: true
                forms: true
                table: true
                tasks: true
              isStarred: true
              directFileUploadsEnabled: true
              isOnBoardingProject: true
              subStatus: subStatus
              isSampleProject: true
              tags:
              - meta: '{}'
                id: 0
                type: type
              - meta: '{}'
                id: 0
                type: type
              tasksStartPage: tasksStartPage
              financialBudgetId: 9
              privacyEnabled: true
              companyId: 1
              defaultPrivacy: defaultPrivacy
              customFieldValues:
              - meta: '{}'
                id: 0
                type: type
              - meta: '{}'
                id: 0
                type: type
              createdBy: 4
              notifyCommentIncludeCreator: true
              skipWeekends: true
              name: name
              projectOwnerId: 9
              notifyEveryone: true
              timeBudgetId: 3
              showAnnouncement: true
              category:
                meta: '{}'
                id: 0
                type: type
              integrations:
                xero:
                  connected: true
                  countryCode: countryCode
                  organisation: organisation
                  baseCurrency: baseCurrency
                  enabled: true
                oneDriveBusiness:
                  folder: folder
                  folderName: folderName
                  account: account
                  enabled: true
                sharepoint:
                  folder: folder
                  folderName: folderName
                  account: account
                  enabled: true
              ownedBy: 6
              categoryId: 7
              startDate: startDate
              status: status
              timeBudget:
                meta: '{}'
                id: 0
                type: type
          teams:
            key:
              teamLogo: teamLogo
              name: name
              id: 4
              teamLogoColor: teamLogoColor
              teamLogoIcon: teamLogoIcon
          notebookCategories:
            key:
              elementsCount: 0
              parent:
                meta: '{}'
                id: 0
                type: type
              color: color
              name: name
              project:
                meta: '{}'
                id: 0
                type: type
              id: 6
              projectId: 5
              parentId: 1
          users:
            key:
              lastName: lastName
              avatarUrl: avatarUrl
              isAdmin: true
              title: title
              type: type
              firstName: firstName
              companyId: 2
              workingHoursId: 5
              lengthOfDay: 6.878052220127876
              company:
                meta: '{}'
                id: 0
                type: type
              workingHour:
                meta: '{}'
                id: 0
                type: type
              id: 6
              email: email
          tags:
            key:
              color: color
              count: 0
              name: name
              project:
                meta: '{}'
                id: 0
                type: type
              id: 6
              projectId: 1
        notebook:
          changeFollowers:
            companies:
            - meta: '{}'
              id: 0
              type: type
            - meta: '{}'
              id: 0
              type: type
            companyIds:
            - 7
            - 7
            teams:
            - meta: '{}'
              id: 0
              type: type
            - meta: '{}'
              id: 0
              type: type
            userIds:
            - 3
            - 3
            teamIds:
            - 9
            - 9
            users:
            - meta: '{}'
              id: 0
              type: type
            - meta: '{}'
              id: 0
              type: type
          versionCount: 2
          createdByUserID: 8
          userFollowingComments: true
          tagIds:
          - 7
          - 7
          lockedAt: lockedAt
          commentFollowers:
            companies:
            - meta: '{}'
              id: 0
              type: type
            - meta: '{}'
              id: 0
              type: type
            companyIds:
            - 7
            - 7
            teams:
            - meta: '{}'
              id: 0
              type: type
            - meta: '{}'
              id: 0
              type: type
            userIds:
            - 3
            - 3
            teamIds:
            - 9
            - 9
            users:
            - meta: '{}'
              id: 0
              type: type
            - meta: '{}'
              id: 0
              type: type
          description: description
          privacy:
            companies:
            - meta: '{}'
              id: 0
              type: type
            - meta: '{}'
              id: 0
              type: type
            companyIds:
            - 7
            - 7
            teams:
            - meta: '{}'
              id: 0
              type: type
            - meta: '{}'
              id: 0
              type: type
            userIds:
            - 3
            - 3
            teamIds:
            - 9
            - 9
            users:
            - meta: '{}'
              id: 0
              type: type
            - meta: '{}'
              id: 0
              type: type
          project:
            meta: '{}'
            id: 0
            type: type
          isPrivate: true
          type: type
          deletedBy: 0
          deletedByUserID: 5
          createdAt: createdAt
          dateCreated: dateCreated
          latestVersionNo: 8
          lockedBy: 3
          userFollowingChanges: true
          lockdown:
            meta: '{}'
            id: 0
            type: type
          id: 5
          locked: true
          notebookVersionID: 3
          updatedAt: updatedAt
          updatedBy: 0
          readCommentsCount: 5
          lockdownId: 7
          updatedByUserID: 3
          contentHTML: contentHTML
          dateDeleted: dateDeleted
          dateUpdated: dateUpdated
          tags:
          - meta: '{}'
            id: 0
            type: type
          - meta: '{}'
            id: 0
            type: type
          secureContent: true
          deletedAt: deletedAt
          notebookVersionUpdatedDateTime: notebookVersionUpdatedDateTime
          deleted: true
          contents: contents
          createdBy: 9
          commentsCount: 3
          name: name
          notebookVersionCreatedDateTime: notebookVersionCreatedDateTime
          category:
            meta: '{}'
            id: 0
            type: type
          projectId: 9
          categoryId: 1
          notebookVersion:
            meta: '{}'
            id: 0
            type: type
      properties:
        included:
          $ref: '#/components/schemas/notebook_NotebooksResponse_included'
        notebook:
          $ref: '#/components/schemas/view.Notebook'
      title: Response
      type: object
    notebook.VersionResponse:
      description: VersionResponse contains information about a specifc notebook version
      example:
        included:
          users:
            key:
              lastName: lastName
              avatarUrl: avatarUrl
              isAdmin: true
              title: title
              type: type
              firstName: firstName
              companyId: 2
              workingHoursId: 5
              lengthOfDay: 6.878052220127876
              company:
                meta: '{}'
                id: 0
                type: type
              workingHour:
                meta: '{}'
                id: 0
                type: type
              id: 6
              email: email
        version:
          createdAt: createdAt
          createdByUserID: 6
          versionId: 5
          dateCreated: dateCreated
          contents: contents
          createdBy: 0
          notebookId: 1
          contentHTML: contentHTML
          versionNumber: 5
          dateUpdated: dateUpdated
          notebook:
            meta: '{}'
            id: 0
            type: type
          updatedAt: updatedAt
      properties:
        included:
          $ref: '#/components/schemas/notebook_VersionResponse_included'
        version:
          $ref: '#/components/schemas/view.NotebookVersion'
      title: VersionResponse
      type: object
    notebook.VersionsResponse:
      description: VersionsResponse contains information about a group of notebook
        versions
      example:
        versions:
        - createdAt: createdAt
          createdByUserID: 6
          versionId: 5
          dateCreated: dateCreated
          contents: contents
          createdBy: 0
          notebookId: 1
          contentHTML: contentHTML
          versionNumber: 5
          dateUpdated: dateUpdated
          notebook:
            meta: '{}'
            id: 0
            type: type
          updatedAt: updatedAt
        - createdAt: createdAt
          createdByUserID: 6
          versionId: 5
          dateCreated: dateCreated
          contents: contents
          createdBy: 0
          notebookId: 1
          contentHTML: contentHTML
          versionNumber: 5
          dateUpdated: dateUpdated
          notebook:
            meta: '{}'
            id: 0
            type: type
          updatedAt: updatedAt
        included:
          users:
            key:
              lastName: lastName
              avatarUrl: avatarUrl
              isAdmin: true
              title: title
              type: type
              firstName: firstName
              companyId: 2
              workingHoursId: 5
              lengthOfDay: 6.878052220127876
              company:
                meta: '{}'
                id: 0
                type: type
              workingHour:
                meta: '{}'
                id: 0
                type: type
              id: 6
              email: email
      properties:
        included:
          $ref: '#/components/schemas/notebook_VersionResponse_included'
        versions:
          items:
            $ref: '#/components/schemas/view.NotebookVersion'
          type: array
      title: VersionsResponse
      type: object
    notification.ProjectBudgetNotification:
      description: ProjectBudgetNotification contains all the information returned
        from a notification.
      properties:
        budgetId:
          type: integer
        capacityThreshold:
          type: number
        companyIds:
          items:
            type: integer
          type: array
        id:
          type: integer
        notificationMedium:
          type: string
        projectId:
          type: integer
        teamIds:
          items:
            type: integer
          type: array
        userIds:
          items:
            type: integer
          type: array
      title: ProjectBudgetNotification
      type: object
    notification.Request:
      description: Request contains information of a notification to be created or
        updated.
      properties:
        notification:
          $ref: '#/components/schemas/notification.ProjectBudgetNotification'
      title: Request
      type: object
    notification.Response:
      description: Response contains information about a specific notification.
      example:
        notification:
          capacityThreshold: 0.8008281904610115
          notificationMedium: notificationMedium
          companies:
          - meta: '{}'
            id: 0
            type: type
          - meta: '{}'
            id: 0
            type: type
          companyIds:
          - 6
          - 6
          teams:
          - meta: '{}'
            id: 0
            type: type
          - meta: '{}'
            id: 0
            type: type
          userIds:
          - 5
          - 5
          id: 1
          teamIds:
          - 5
          - 5
          users:
          - meta: '{}'
            id: 0
            type: type
          - meta: '{}'
            id: 0
            type: type
      properties:
        notification:
          $ref: '#/components/schemas/view.ProjectBudgetNotification'
      title: Response
      type: object
    owner.ProjectMetricOwner:
      description: ProjectMetricOwner contains information about a specific owner.
      example:
        name: name
        value: 0
      properties:
        name:
          type: string
        value:
          type: integer
      title: ProjectMetricOwner
      type: object
    owner.ProjectMetricOwnersResponse:
      description: ProjectMetricOwnersResponse contains information about a group
        of owners.
      example:
        data:
        - name: name
          value: 0
        - name: name
          value: 0
        meta:
          page:
            count: 6
            hasMore: true
            pageOffset: 3
            pageSize: 3
      properties:
        data:
          items:
            $ref: '#/components/schemas/owner.ProjectMetricOwner'
          type: array
        meta:
          $ref: '#/components/schemas/view.Meta'
      title: ProjectMetricOwnersResponse
      type: object
    payload.Date:
      description: Date unmarshals represents a Unified API Spec date format.
      title: Date
      type: object
    payload.Notify:
      description: Notify defines the access lists.
      properties:
        ids:
          $ref: '#/components/schemas/payload.UserGroups'
        type:
          type: string
      title: Notify
      type: object
    payload.NullableInt64Slice:
      description: |-
        NullableInt64Slice implements json.Unmarshaler to allow testing between a
        value that explicitly set to null or omitted.
      properties:
        Null:
          type: boolean
        Set:
          type: boolean
        Value:
          items:
            type: integer
          type: array
      title: NullableInt64Slice
      type: object
    payload.NullableRRule:
      description: |-
        NullableRRule implements json.Unmarshaler to allow testing
        between a value that explicitly set to null or omitted.
      properties:
        Location:
          description: |-
            A Location maps time instants to the zone in use at that time.
            Typically, the Location represents the collection of time offsets
            in use in a geographical area. For many Locations the time offset varies
            depending on whether daylight savings time is in use at the time instant.
          title: Location
          type: object
        Null:
          type: boolean
        Set:
          type: boolean
      title: NullableRRule
      type: object
    payload.UserGroups:
      description: |-
        UserGroups are common lists for storing users, companies and teams ids
        together.
      properties:
        companyIds:
          $ref: '#/components/schemas/payload.NullableInt64Slice'
        teamIds:
          $ref: '#/components/schemas/payload.NullableInt64Slice'
        userIds:
          $ref: '#/components/schemas/payload.NullableInt64Slice'
      title: UserGroups
      type: object
    people.MultiResponse:
      description: MultiResponse contains information about a group of users.
      example:
        meta:
          page:
            count: 6
            hasMore: true
            pageOffset: 3
            pageSize: 3
        included:
          companies:
            key:
              city: city
              industry:
                meta: '{}'
                id: 0
                type: type
              emailTwo: emailTwo
              industryId: 6
              isOwner: true
              addressTwo: addressTwo
              countryCode: countryCode
              emailThree: emailThree
              id: 1
              state: state
              fax: fax
              zip: zip
              profileText: profileText
              website: website
              clientUsers: 1
              companyNameUrl: companyNameUrl
              logoUrl: logoUrl
              phone: phone
              emailOne: emailOne
              name: name
              privateNotesText: privateNotesText
              accounts: 7
              addressOne: addressOne
              contacts: 1
              canSeePrivate: true
              cid: cid
        people:
        - lastName: lastName
          avatarUrl: avatarUrl
          isAdmin: true
          title: title
          type: type
          firstName: firstName
          companyId: 2
          workingHoursId: 5
          lengthOfDay: 6.878052220127876
          company:
            meta: '{}'
            id: 0
            type: type
          workingHour:
            meta: '{}'
            id: 0
            type: type
          id: 6
          email: email
        - lastName: lastName
          avatarUrl: avatarUrl
          isAdmin: true
          title: title
          type: type
          firstName: firstName
          companyId: 2
          workingHoursId: 5
          lengthOfDay: 6.878052220127876
          company:
            meta: '{}'
            id: 0
            type: type
          workingHour:
            meta: '{}'
            id: 0
            type: type
          id: 6
          email: email
      properties:
        included:
          $ref: '#/components/schemas/people_MultiResponse_included'
        meta:
          $ref: '#/components/schemas/view.Meta'
        people:
          items:
            $ref: '#/components/schemas/view.User'
          type: array
      title: MultiResponse
      type: object
    people.Response:
      description: Response contains information about a user.
      example:
        person:
          lastName: lastName
          avatarUrl: avatarUrl
          isAdmin: true
          title: title
          type: type
          firstName: firstName
          companyId: 2
          workingHoursId: 5
          lengthOfDay: 6.878052220127876
          company:
            meta: '{}'
            id: 0
            type: type
          workingHour:
            meta: '{}'
            id: 0
            type: type
          id: 6
          email: email
        included:
          companies:
            key:
              city: city
              industry:
                meta: '{}'
                id: 0
                type: type
              emailTwo: emailTwo
              industryId: 6
              isOwner: true
              addressTwo: addressTwo
              countryCode: countryCode
              emailThree: emailThree
              id: 1
              state: state
              fax: fax
              zip: zip
              profileText: profileText
              website: website
              clientUsers: 1
              companyNameUrl: companyNameUrl
              logoUrl: logoUrl
              phone: phone
              emailOne: emailOne
              name: name
              privateNotesText: privateNotesText
              accounts: 7
              addressOne: addressOne
              contacts: 1
              canSeePrivate: true
              cid: cid
      properties:
        included:
          $ref: '#/components/schemas/people_MultiResponse_included'
        person:
          $ref: '#/components/schemas/view.User'
      title: Response
      type: object
    performance.PeopleMetricPerformance:
      description: PeopleMetricPerformance contains all the information returned from
        a performance.
      example:
        name: name
        value: 0
      properties:
        name:
          type: string
        value:
          type: integer
      title: PeopleMetricPerformance
      type: object
    performance.PeopleMetricPerformancesResponse:
      description: PeopleMetricPerformancesResponse contains information about a group
        of performances.
      example:
        data:
        - name: name
          value: 0
        - name: name
          value: 0
      properties:
        data:
          items:
            $ref: '#/components/schemas/performance.PeopleMetricPerformance'
          type: array
      title: PeopleMetricPerformancesResponse
      type: object
    planner.WorkloadPlanner:
      description: WorkloadPlanner contains all the information returned from a planner.
      example:
        capacities:
          key:
            lengthOfDayMinutes: 1.4658129805029452
            estimateMinutesTotal: 6.027456183070403
            tasks:
            - estimateMinutes: 5.962133916683182
              taskId: 5
            - estimateMinutes: 5.962133916683182
              taskId: 5
            capacity: 0.8008281904610115
        user:
          meta: '{}'
          id: 0
          type: type
        userId: 2
      properties:
        capacities:
          additionalProperties:
            $ref: '#/components/schemas/planner.WorkloadPlannerCapacity'
          type: object
        user:
          $ref: '#/components/schemas/view.Relationship'
        userId:
          type: integer
      title: WorkloadPlanner
      type: object
    planner.WorkloadPlannerCapacity:
      description: |-
        WorkloadPlannerCapacity contains the information regarding an user on a
        specific date.
      example:
        lengthOfDayMinutes: 1.4658129805029452
        estimateMinutesTotal: 6.027456183070403
        tasks:
        - estimateMinutes: 5.962133916683182
          taskId: 5
        - estimateMinutes: 5.962133916683182
          taskId: 5
        capacity: 0.8008281904610115
      properties:
        capacity:
          description: percentage
          type: number
        estimateMinutesTotal:
          type: number
        lengthOfDayMinutes:
          type: number
        tasks:
          items:
            $ref: '#/components/schemas/planner.WorkloadPlannerCapacityTask'
          type: array
      title: WorkloadPlannerCapacity
      type: object
    planner.WorkloadPlannerCapacityTask:
      description: |-
        WorkloadPlannerCapacityTask provides how many minutes should a user work in a
        task for a specific date.
      example:
        estimateMinutes: 5.962133916683182
        taskId: 5
      properties:
        estimateMinutes:
          type: number
        taskId:
          type: integer
      title: WorkloadPlannerCapacityTask
      type: object
    planner.WorkloadPlannersResponse:
      description: WorkloadPlannersResponse contains information about a group of
        planners.
      example:
        meta:
          page:
            count: 6
            hasMore: true
            pageOffset: 3
            pageSize: 3
        included:
          calendarEvents:
            key:
              dateLastUpdated: dateLastUpdated
              endDate: endDate
              projectUsersCanEdit: true
              createdDateTime: createdDateTime
              description: description
              project:
                meta: '{}'
                id: 0
                type: type
              updatedByUserId: 1
              currentUserAssociationType: currentUserAssociationType
              title: title
              type:
                meta: '{}'
                id: 0
                type: type
              sequenceId: 2
              deletedBy: 5
              allDay: true
              createdAt: createdAt
              id: 2
              updatedAt: updatedAt
              createdByUserId: 1
              updatedBy: 7
              attendeesCanEdit: true
              attendingUserIds:
              - 0
              - 0
              monthlyRepeatType: monthlyRepeatType
              dateDeleted: dateDeleted
              deletedByUserId: 5
              sequence:
                meta: '{}'
                id: 0
                type: type
              deletedAt: deletedAt
              deleted: true
              createdBy: 6
              ownerUserId: 9
              location: location
              showAsBusy: true
              typeId: 4
              additionalProperties: additionalProperties
              attendingUsers:
              - meta: '{}'
                id: 0
                type: type
              - meta: '{}'
                id: 0
                type: type
              ownedBy: 7
              projectId: 3
              privacyType: privacyType
              startDate: startDate
          companies:
            key:
              city: city
              industry:
                meta: '{}'
                id: 0
                type: type
              emailTwo: emailTwo
              industryId: 6
              isOwner: true
              addressTwo: addressTwo
              countryCode: countryCode
              emailThree: emailThree
              id: 1
              state: state
              fax: fax
              zip: zip
              profileText: profileText
              website: website
              clientUsers: 1
              companyNameUrl: companyNameUrl
              logoUrl: logoUrl
              phone: phone
              emailOne: emailOne
              name: name
              privateNotesText: privateNotesText
              accounts: 7
              addressOne: addressOne
              contacts: 1
              canSeePrivate: true
              cid: cid
          timelogs:
            key:
              tagIds:
              - 4
              - 4
              description: description
              loggedBy: 7
              project:
                meta: '{}'
                id: 0
                type: type
              deskTicketId: 6
              hasStartTime: true
              projectBillingInvoice:
                meta: '{}'
                id: 0
                type: type
              deletedBy: 6
              createdAt: createdAt
              dateCreated: dateCreated
              editedByUserId: 3
              invoiceNumber: invoiceNumber
              dateEdited: dateEdited
              id: 3
              loggedByUserId: 0
              updatedAt: updatedAt
              updatedBy: 3
              timeLogged: timeLogged
              minutes: 7
              billable: true
              userId: 3
              dateDeleted: dateDeleted
              deletedByUserId: 5
              tags:
              - meta: '{}'
                id: 0
                type: type
              - meta: '{}'
                id: 0
                type: type
              taskPreMove:
                meta: '{}'
                id: 0
                type: type
              taskIdPreMove: 7
              deletedAt: deletedAt
              deleted: true
              projectBillingInvoiceId: 6
              task:
                meta: '{}'
                id: 0
                type: type
              projectId: 0
              user:
                meta: '{}'
                id: 0
                type: type
              taskId: 8
          tasklists:
            key:
              milestone:
                meta: '{}'
                id: 0
                type: type
              milestoneId: 5
              name: name
              project:
                meta: '{}'
                id: 0
                type: type
              id: 5
              newTaskDefaults:
                estimatedMinutes: 2
                dueDate: dueDate
                responisblePartyIds:
                  companies:
                  - meta: '{}'
                    id: 0
                    type: type
                  - meta: '{}'
                    id: 0
                    type: type
                  companyIds:
                  - 7
                  - 7
                  teams:
                  - meta: '{}'
                    id: 0
                    type: type
                  - meta: '{}'
                    id: 0
                    type: type
                  userIds:
                  - 3
                  - 3
                  teamIds:
                  - 9
                  - 9
                  users:
                  - meta: '{}'
                    id: 0
                    type: type
                  - meta: '{}'
                    id: 0
                    type: type
                priority: priority
                startDate: startDate
                tags:
                - 2
                - 2
              taskIds:
              - 7
              - 7
              projectId: 4
              tasks:
              - meta: '{}'
                id: 0
                type: type
              - meta: '{}'
                id: 0
                type: type
          workingHourEntries:
            key:
              timezone: timezone
              taskHours: 5.637376656633329
              weekday: weekday
              startTime: startTime
              workingHour:
                meta: '{}'
                id: 0
                type: type
              endTime: endTime
              id: 5
              workingHourId: 2
          milestones:
            key:
              changeFollowers:
              - meta: '{}'
                id: 0
                type: type
              - meta: '{}'
                id: 0
                type: type
              creatorUserId: 8
              private: true
              userFollowingComments: true
              canEdit: true
              tagIds:
              - 4
              - 4
              commentFollowers:
              - meta: '{}'
                id: 0
                type: type
              - meta: '{}'
                id: 0
                type: type
              description: description
              project:
                meta: '{}'
                id: 0
                type: type
              tasklists:
              - meta: '{}'
                id: 0
                type: type
              - meta: '{}'
                id: 0
                type: type
              percentageTasksCompleted: 1
              createdOn: createdOn
              isDeleted: true
              originalDueDate: originalDueDate
              userFollowingChanges: true
              commentFollowerIds:
              - 0
              - 0
              lockdown:
                meta: '{}'
                id: 0
                type: type
              id: 4
              deadline: deadline
              numCommentsRead: 0
              updatedBy: 9
              reminder: true
              canComplete: true
              lockdownId: 3
              completerId: 4
              completed: true
              tags:
              - meta: '{}'
                id: 0
                type: type
              - meta: '{}'
                id: 0
                type: type
              changeFollowerIds:
              - 9
              - 9
              responsiblePartyIds:
              - 6
              - 6
              lastChangedOn: lastChangedOn
              responsibleParties:
              - meta: '{}'
                id: 0
                type: type
              - meta: '{}'
                id: 0
                type: type
              createdBy: 6
              latestUpdates:
              - field: field
                before: '{}'
                after: '{}'
              - field: field
                before: '{}'
                after: '{}'
              percentageComplete: 2
              commentsCount: 7
              completedOn: completedOn
              name: name
              projectId: 8
              tasklistIds:
              - 8
              - 8
              completedBy: 5
              status: status
          workingHours:
            key:
              createdAt: createdAt
              entries:
              - meta: '{}'
                id: 0
                type: type
              - meta: '{}'
                id: 0
                type: type
              entryIds:
              - 7
              - 7
              dateCreated: dateCreated
              name: name
              description: description
              id: 9
              objectId: 3
              dateUpdated: dateUpdated
              object:
                meta: '{}'
                id: 0
                type: type
              objectType: objectType
              updatedAt: updatedAt
          tasks:
            key:
              parentTaskId: 9
              assigneeUserIds:
              - 1
              - 1
              dueDate: dueDate
              tagIds:
              - 1
              - 1
              displayOrder: 9
              description: description
              isPrivate: 8
              userPermissions:
                canComplete: true
                canEdit: true
                canViewEstTime: true
                canAddSubtasks: true
                canLogTime: true
              assigneeUsers:
              - meta: '{}'
                id: 0
                type: type
              - meta: '{}'
                id: 0
                type: type
              originalDueDate: '{}'
              assigneeCompanyIds:
              - 1
              - 1
              assigneeTeamIds:
              - 1
              - 1
              id: 6
              subTaskIds:
              - 6
              - 6
              updatedAt: updatedAt
              predecessorIds:
              - 6
              - 6
              createdByUserId: 1
              updatedBy: 6
              crmDealIds:
              - 4
              - 4
              assigneeCompanies:
              - meta: '{}'
                id: 0
                type: type
              - meta: '{}'
                id: 0
                type: type
              parentTask:
                meta: '{}'
                id: 0
                type: type
              hasDeskTickets: true
              priority: priority
              dateUpdated: dateUpdated
              assigneeTeams:
              - meta: '{}'
                id: 0
                type: type
              - meta: '{}'
                id: 0
                type: type
              dependencyIds:
              - 5
              - 5
              createdBy: 7
              latestUpdates:
              - field: field
                before: '{}'
                after: '{}'
              - field: field
                before: '{}'
                after: '{}'
              completedOn: completedOn
              name: name
              progress: 3
              estimateMinutes: 9
              tasklist:
                meta: '{}'
                id: 0
                type: type
              completedBy: 6
              startDate: startDate
              tasklistId: 2
              status: status
          users:
            key:
              lastName: lastName
              avatarUrl: avatarUrl
              isAdmin: true
              title: title
              type: type
              firstName: firstName
              companyId: 2
              workingHoursId: 5
              lengthOfDay: 6.878052220127876
              company:
                meta: '{}'
                id: 0
                type: type
              workingHour:
                meta: '{}'
                id: 0
                type: type
              id: 6
              email: email
        planners:
        - capacities:
            key:
              lengthOfDayMinutes: 1.4658129805029452
              estimateMinutesTotal: 6.027456183070403
              tasks:
              - estimateMinutes: 5.962133916683182
                taskId: 5
              - estimateMinutes: 5.962133916683182
                taskId: 5
              capacity: 0.8008281904610115
          user:
            meta: '{}'
            id: 0
            type: type
          userId: 2
        - capacities:
            key:
              lengthOfDayMinutes: 1.4658129805029452
              estimateMinutesTotal: 6.027456183070403
              tasks:
              - estimateMinutes: 5.962133916683182
                taskId: 5
              - estimateMinutes: 5.962133916683182
                taskId: 5
              capacity: 0.8008281904610115
          user:
            meta: '{}'
            id: 0
            type: type
          userId: 2
      properties:
        included:
          $ref: '#/components/schemas/planner_WorkloadPlannersResponse_included'
        meta:
          $ref: '#/components/schemas/view.Meta'
        planners:
          items:
            $ref: '#/components/schemas/planner.WorkloadPlanner'
          type: array
      title: WorkloadPlannersResponse
      type: object
    project.BulkDeleteRequest:
      description: |-
        BulkDeleteRequest contains the ids of the customfields that should be
        removed.
      properties:
        customfieldProjectIds:
          items:
            type: integer
          type: array
      title: BulkDeleteRequest
      type: object
    project.BulkUpdateRequest:
      description: |-
        BulkUpdateRequest contains the the project custom field values that should be
        updated.
      properties:
        customfieldProjects:
          items:
            $ref: '#/components/schemas/project.EditCustomFieldProject'
          type: array
      title: BulkUpdateRequest
      type: object
    project.CustomFieldProject:
      description: CustomFieldProject contains all the information returned from a
        customfield.
      properties:
        customfieldId:
          type: integer
        value:
          type: object
      title: CustomFieldProject
      type: object
    project.CustomFieldProjectsResponse:
      description: |-
        CustomFieldProjectsResponse contains information about a group of
        project custom field values.
      example:
        meta:
          page:
            count: 6
            hasMore: true
            pageOffset: 3
            pageSize: 3
        customfieldProjects:
        - createdAt: createdAt
          customfieldId: 6
          customfield:
            meta: '{}'
            id: 0
            type: type
          createdBy: 0
          project:
            meta: '{}'
            id: 0
            type: type
          id: 1
          projectId: 5
          value: '{}'
        - createdAt: createdAt
          customfieldId: 6
          customfield:
            meta: '{}'
            id: 0
            type: type
          createdBy: 0
          project:
            meta: '{}'
            id: 0
            type: type
          id: 1
          projectId: 5
          value: '{}'
        included:
          projects:
            key:
              replyByEmailEnabled: true
              startPage: startPage
              endDate: endDate
              overviewStartPage: overviewStartPage
              tagIds:
              - 6
              - 6
              customFieldValueIds:
              - 5
              - 5
              description: description
              minMaxAvailableDates:
                maxEndDate: maxEndDate
                minStartDate: minStartDate
                suggestedEndDate: suggestedEndDate
                suggestedStartDate: suggestedStartDate
                deadlinesFound: true
              ownerId: 8
              type: type
              createdAt: createdAt
              updateId: 6
              logo: logo
              company:
                meta: '{}'
                id: 0
                type: type
              id: 9
              financialBudget:
                meta: '{}'
                id: 0
                type: type
              updatedAt: updatedAt
              harvestTimersEnabled: true
              updatedBy: 1
              activePages:
                comments: true
                riskRegister: true
                list: true
                gantt: true
                billing: true
                notebooks: true
                files: true
                messages: true
                links: true
                time: true
                milestones: true
                board: true
                forms: true
                table: true
                tasks: true
              isStarred: true
              directFileUploadsEnabled: true
              isOnBoardingProject: true
              subStatus: subStatus
              isSampleProject: true
              tags:
              - meta: '{}'
                id: 0
                type: type
              - meta: '{}'
                id: 0
                type: type
              tasksStartPage: tasksStartPage
              financialBudgetId: 9
              privacyEnabled: true
              companyId: 1
              defaultPrivacy: defaultPrivacy
              customFieldValues:
              - meta: '{}'
                id: 0
                type: type
              - meta: '{}'
                id: 0
                type: type
              createdBy: 4
              notifyCommentIncludeCreator: true
              skipWeekends: true
              name: name
              projectOwnerId: 9
              notifyEveryone: true
              timeBudgetId: 3
              showAnnouncement: true
              category:
                meta: '{}'
                id: 0
                type: type
              integrations:
                xero:
                  connected: true
                  countryCode: countryCode
                  organisation: organisation
                  baseCurrency: baseCurrency
                  enabled: true
                oneDriveBusiness:
                  folder: folder
                  folderName: folderName
                  account: account
                  enabled: true
                sharepoint:
                  folder: folder
                  folderName: folderName
                  account: account
                  enabled: true
              ownedBy: 6
              categoryId: 7
              startDate: startDate
              status: status
              timeBudget:
                meta: '{}'
                id: 0
                type: type
          customfields:
            key:
              createdByUserId: 6
              updatedBy: 7
              description: description
              project:
                meta: '{}'
                id: 0
                type: type
              isPrivate: true
              updatedByUserId: 9
              type: type
              deletedBy: 1
              deletedByUserId: 5
              required: true
              createdAt: createdAt
              deletedAt: deletedAt
              deleted: true
              createdBy: 0
              name: name
              options: '{}'
              visibilities: visibilities
              id: 5
              projectId: 2
              entity: entity
              updatedAt: updatedAt
      properties:
        customfieldProjects:
          items:
            $ref: '#/components/schemas/view.CustomFieldProject'
          type: array
        included:
          $ref: '#/components/schemas/project_CustomFieldProjectsResponse_included'
        meta:
          $ref: '#/components/schemas/view.Meta'
      title: CustomFieldProjectsResponse
      type: object
    project.EditCustomFieldProject:
      description: |-
        EditCustomFieldProject contains all the information to update a project
        custom field value.
      properties:
        customfieldId:
          type: integer
        id:
          type: integer
        value:
          type: object
      title: EditCustomFieldProject
      type: object
    project.FeatureOrder:
      description: |-
        FeatureOrder contains the information of the feature
        order to display in the UI for a project.
      example:
        settings: 1
        comments: 1
        numVisibleTabs: 1
        list: 2
        gantt: 2
        people: 1
        billing: 0
        risks: 7
        notebooks: 1
        files: 5
        messages: 4
        links: 3
        id: 7
        installationId: 9
        time: 5
        milestones: 7
        projectId: 6
        board: 6
        dashboard: 5
        table: 4
      properties:
        billing:
          type: integer
        board:
          type: integer
        comments:
          type: integer
        dashboard:
          type: integer
        files:
          type: integer
        gantt:
          type: integer
        id:
          type: integer
        installationId:
          type: integer
        links:
          type: integer
        list:
          type: integer
        messages:
          type: integer
        milestones:
          type: integer
        notebooks:
          type: integer
        numVisibleTabs:
          type: integer
        people:
          type: integer
        projectId:
          type: integer
        risks:
          type: integer
        settings:
          type: integer
        table:
          type: integer
        time:
          type: integer
      title: FeatureOrder
      type: object
    project.FeatureOrderResponse:
      description: |-
        FeatureOrderResponse is the api response containing
        information about the order to display the featues in the UI.
      example:
        featureOrder:
          settings: 1
          comments: 1
          numVisibleTabs: 1
          list: 2
          gantt: 2
          people: 1
          billing: 0
          risks: 7
          notebooks: 1
          files: 5
          messages: 4
          links: 3
          id: 7
          installationId: 9
          time: 5
          milestones: 7
          projectId: 6
          board: 6
          dashboard: 5
          table: 4
      properties:
        featureOrder:
          $ref: '#/components/schemas/project.FeatureOrder'
      title: FeatureOrderResponse
      type: object
    project.ProjectsResponse:
      description: ProjectsResponse contains information about a group of projects.
      example:
        projects:
        - replyByEmailEnabled: true
          startPage: startPage
          endDate: endDate
          overviewStartPage: overviewStartPage
          tagIds:
          - 6
          - 6
          customFieldValueIds:
          - 5
          - 5
          description: description
          minMaxAvailableDates:
            maxEndDate: maxEndDate
            minStartDate: minStartDate
            suggestedEndDate: suggestedEndDate
            suggestedStartDate: suggestedStartDate
            deadlinesFound: true
          ownerId: 8
          type: type
          createdAt: createdAt
          updateId: 6
          logo: logo
          company:
            meta: '{}'
            id: 0
            type: type
          id: 9
          financialBudget:
            meta: '{}'
            id: 0
            type: type
          updatedAt: updatedAt
          harvestTimersEnabled: true
          updatedBy: 1
          activePages:
            comments: true
            riskRegister: true
            list: true
            gantt: true
            billing: true
            notebooks: true
            files: true
            messages: true
            links: true
            time: true
            milestones: true
            board: true
            forms: true
            table: true
            tasks: true
          isStarred: true
          directFileUploadsEnabled: true
          isOnBoardingProject: true
          subStatus: subStatus
          isSampleProject: true
          tags:
          - meta: '{}'
            id: 0
            type: type
          - meta: '{}'
            id: 0
            type: type
          tasksStartPage: tasksStartPage
          financialBudgetId: 9
          privacyEnabled: true
          companyId: 1
          defaultPrivacy: defaultPrivacy
          customFieldValues:
          - meta: '{}'
            id: 0
            type: type
          - meta: '{}'
            id: 0
            type: type
          createdBy: 4
          notifyCommentIncludeCreator: true
          skipWeekends: true
          name: name
          projectOwnerId: 9
          notifyEveryone: true
          timeBudgetId: 3
          showAnnouncement: true
          category:
            meta: '{}'
            id: 0
            type: type
          integrations:
            xero:
              connected: true
              countryCode: countryCode
              organisation: organisation
              baseCurrency: baseCurrency
              enabled: true
            oneDriveBusiness:
              folder: folder
              folderName: folderName
              account: account
              enabled: true
            sharepoint:
              folder: folder
              folderName: folderName
              account: account
              enabled: true
          ownedBy: 6
          categoryId: 7
          startDate: startDate
          status: status
          timeBudget:
            meta: '{}'
            id: 0
            type: type
        - replyByEmailEnabled: true
          startPage: startPage
          endDate: endDate
          overviewStartPage: overviewStartPage
          tagIds:
          - 6
          - 6
          customFieldValueIds:
          - 5
          - 5
          description: description
          minMaxAvailableDates:
            maxEndDate: maxEndDate
            minStartDate: minStartDate
            suggestedEndDate: suggestedEndDate
            suggestedStartDate: suggestedStartDate
            deadlinesFound: true
          ownerId: 8
          type: type
          createdAt: createdAt
          updateId: 6
          logo: logo
          company:
            meta: '{}'
            id: 0
            type: type
          id: 9
          financialBudget:
            meta: '{}'
            id: 0
            type: type
          updatedAt: updatedAt
          harvestTimersEnabled: true
          updatedBy: 1
          activePages:
            comments: true
            riskRegister: true
            list: true
            gantt: true
            billing: true
            notebooks: true
            files: true
            messages: true
            links: true
            time: true
            milestones: true
            board: true
            forms: true
            table: true
            tasks: true
          isStarred: true
          directFileUploadsEnabled: true
          isOnBoardingProject: true
          subStatus: subStatus
          isSampleProject: true
          tags:
          - meta: '{}'
            id: 0
            type: type
          - meta: '{}'
            id: 0
            type: type
          tasksStartPage: tasksStartPage
          financialBudgetId: 9
          privacyEnabled: true
          companyId: 1
          defaultPrivacy: defaultPrivacy
          customFieldValues:
          - meta: '{}'
            id: 0
            type: type
          - meta: '{}'
            id: 0
            type: type
          createdBy: 4
          notifyCommentIncludeCreator: true
          skipWeekends: true
          name: name
          projectOwnerId: 9
          notifyEveryone: true
          timeBudgetId: 3
          showAnnouncement: true
          category:
            meta: '{}'
            id: 0
            type: type
          integrations:
            xero:
              connected: true
              countryCode: countryCode
              organisation: organisation
              baseCurrency: baseCurrency
              enabled: true
            oneDriveBusiness:
              folder: folder
              folderName: folderName
              account: account
              enabled: true
            sharepoint:
              folder: folder
              folderName: folderName
              account: account
              enabled: true
          ownedBy: 6
          categoryId: 7
          startDate: startDate
          status: status
          timeBudget:
            meta: '{}'
            id: 0
            type: type
        meta:
          page:
            count: 6
            hasMore: true
            pageOffset: 3
            pageSize: 3
        included:
          projectTaskStats:
            key:
              late: 6
              active: 1
              id: 1
              complete: 1
          companies:
            key:
              city: city
              industry:
                meta: '{}'
                id: 0
                type: type
              emailTwo: emailTwo
              industryId: 6
              isOwner: true
              addressTwo: addressTwo
              countryCode: countryCode
              emailThree: emailThree
              id: 1
              state: state
              fax: fax
              zip: zip
              profileText: profileText
              website: website
              clientUsers: 1
              companyNameUrl: companyNameUrl
              logoUrl: logoUrl
              phone: phone
              emailOne: emailOne
              name: name
              privateNotesText: privateNotesText
              accounts: 7
              addressOne: addressOne
              contacts: 1
              canSeePrivate: true
              cid: cid
          portfolioCards:
            key:
              columnId: 2
              column:
                meta: '{}'
                id: 0
                type: type
              project:
                meta: '{}'
                id: 0
                type: type
              id: 7
              projectId: 9
          projectBudgets:
            key:
              notificationIds:
              - 4
              - 4
              project:
                meta: '{}'
                id: 0
                type: type
              updatedByUserId: 1
              type: type
              deletedBy: 9
              capacity: 0
              createdAt: createdAt
              originatorBudgetId: 7
              dateCreated: dateCreated
              dateCompleted: dateCompleted
              repeatPeriod: 1
              id: 2
              updatedAt: updatedAt
              createdByUserId: 2
              repeatUnit: repeatUnit
              sequenceNumber: 6
              completedAt: completedAt
              expenseType: expenseType
              updatedBy: 7
              originatorBudget:
                meta: '{}'
                id: 0
                type: type
              repeatsRemaining: 1
              capacityUsed: 6
              timelogType: timelogType
              endDateTime: endDateTime
              dateDeleted: dateDeleted
              deletedByUserId: 3
              completedByUserId: 5
              dateUpdated: dateUpdated
              defaultRate: 7.061401241503109
              deletedAt: deletedAt
              isRepeating: true
              startDateTime: startDateTime
              createdBy: 5
              currencyCode: currencyCode
              projectId: 1
              completedBy: 1
              notifications:
              - meta: '{}'
                id: 0
                type: type
              - meta: '{}'
                id: 0
                type: type
              status: status
          projectUpdates:
            key:
              likeFromUsers:
              - meta: '{}'
                id: 0
                type: type
              - meta: '{}'
                id: 0
                type: type
              color: color
              health: 4
              project:
                meta: '{}'
                id: 0
                type: type
              deletedBy: 1
              healthLabel: healthLabel
              createdAt: createdAt
              deletedAt: deletedAt
              deleted: true
              likeFromUserIDs:
              - 9
              - 9
              createdBy: 7
              reactions:
                mine: mine
                counts:
                  joy: 6
                  like: 5
                  dislike: 1
                  frown: 2
                  heart: 6
              id: 5
              text: text
              projectId: 9
              updatedAt: updatedAt
          projectCategories:
            key:
              parent:
                meta: '{}'
                id: 0
                type: type
              color: color
              count: 2
              name: name
              id: 4
              parentId: 7
          portfolioColumns:
            key:
              color: color
              name: name
              id: 3
          portfolioBoards:
            key:
              color: color
              name: name
              id: 5
          customfieldProjects:
            key:
              createdAt: createdAt
              customfieldId: 6
              customfield:
                meta: '{}'
                id: 0
                type: type
              createdBy: 0
              project:
                meta: '{}'
                id: 0
                type: type
              id: 1
              projectId: 5
              value: '{}'
          customfields:
            key:
              createdByUserId: 6
              updatedBy: 7
              description: description
              project:
                meta: '{}'
                id: 0
                type: type
              isPrivate: true
              updatedByUserId: 9
              type: type
              deletedBy: 1
              deletedByUserId: 5
              required: true
              createdAt: createdAt
              deletedAt: deletedAt
              deleted: true
              createdBy: 0
              name: name
              options: '{}'
              visibilities: visibilities
              id: 5
              projectId: 2
              entity: entity
              updatedAt: updatedAt
          users:
            key:
              lastName: lastName
              avatarUrl: avatarUrl
              isAdmin: true
              title: title
              type: type
              firstName: firstName
              companyId: 2
              workingHoursId: 5
              lengthOfDay: 6.878052220127876
              company:
                meta: '{}'
                id: 0
                type: type
              workingHour:
                meta: '{}'
                id: 0
                type: type
              id: 6
              email: email
          tags:
            key:
              color: color
              count: 0
              name: name
              project:
                meta: '{}'
                id: 0
                type: type
              id: 6
              projectId: 1
      properties:
        included:
          $ref: '#/components/schemas/project_ProjectsResponse_included'
        meta:
          $ref: '#/components/schemas/view.Meta'
        projects:
          items:
            $ref: '#/components/schemas/view.Project'
          type: array
      title: ProjectsResponse
      type: object
    project.Request:
      description: Request contains information of a customfield to be created or
        updated.
      properties:
        customfieldProject:
          $ref: '#/components/schemas/project.CustomFieldProject'
      title: Request
      type: object
    project.Response:
      description: Response contains information about a specific project custom field
        value.
      example:
        customfieldProject:
          createdAt: createdAt
          customfieldId: 6
          customfield:
            meta: '{}'
            id: 0
            type: type
          createdBy: 0
          project:
            meta: '{}'
            id: 0
            type: type
          id: 1
          projectId: 5
          value: '{}'
      properties:
        customfieldProject:
          $ref: '#/components/schemas/view.CustomFieldProject'
      title: Response
      type: object
    project.SampleProjectsResponse:
      description: SampleProjectsResponse contains information about a group of sample
        projects.
      example:
        projects:
        - code: code
          icon: icon
          name: name
          description: description
          id: 6
          imagePreview: imagePreview
          categoryId: 0
          content: '{}'
        - code: code
          icon: icon
          name: name
          description: description
          id: 6
          imagePreview: imagePreview
          categoryId: 0
          content: '{}'
        meta:
          page:
            count: 6
            hasMore: true
            pageOffset: 3
            pageSize: 3
        included:
          projectCategories:
            key:
              parent:
                meta: '{}'
                id: 0
                type: type
              color: color
              count: 2
              name: name
              id: 4
              parentId: 7
      properties:
        included:
          $ref: '#/components/schemas/project_SampleProjectsResponse_included'
        meta:
          $ref: '#/components/schemas/view.Meta'
        projects:
          items:
            $ref: '#/components/schemas/view.SampleProject'
          type: array
      title: SampleProjectsResponse
      type: object
    project.SingleResponse:
      description: SingleResponse contains information about a project.
      example:
        project:
          replyByEmailEnabled: true
          startPage: startPage
          endDate: endDate
          overviewStartPage: overviewStartPage
          tagIds:
          - 6
          - 6
          customFieldValueIds:
          - 5
          - 5
          description: description
          minMaxAvailableDates:
            maxEndDate: maxEndDate
            minStartDate: minStartDate
            suggestedEndDate: suggestedEndDate
            suggestedStartDate: suggestedStartDate
            deadlinesFound: true
          ownerId: 8
          type: type
          createdAt: createdAt
          updateId: 6
          logo: logo
          company:
            meta: '{}'
            id: 0
            type: type
          id: 9
          financialBudget:
            meta: '{}'
            id: 0
            type: type
          updatedAt: updatedAt
          harvestTimersEnabled: true
          updatedBy: 1
          activePages:
            comments: true
            riskRegister: true
            list: true
            gantt: true
            billing: true
            notebooks: true
            files: true
            messages: true
            links: true
            time: true
            milestones: true
            board: true
            forms: true
            table: true
            tasks: true
          isStarred: true
          directFileUploadsEnabled: true
          isOnBoardingProject: true
          subStatus: subStatus
          isSampleProject: true
          tags:
          - meta: '{}'
            id: 0
            type: type
          - meta: '{}'
            id: 0
            type: type
          tasksStartPage: tasksStartPage
          financialBudgetId: 9
          privacyEnabled: true
          companyId: 1
          defaultPrivacy: defaultPrivacy
          customFieldValues:
          - meta: '{}'
            id: 0
            type: type
          - meta: '{}'
            id: 0
            type: type
          createdBy: 4
          notifyCommentIncludeCreator: true
          skipWeekends: true
          name: name
          projectOwnerId: 9
          notifyEveryone: true
          timeBudgetId: 3
          showAnnouncement: true
          category:
            meta: '{}'
            id: 0
            type: type
          integrations:
            xero:
              connected: true
              countryCode: countryCode
              organisation: organisation
              baseCurrency: baseCurrency
              enabled: true
            oneDriveBusiness:
              folder: folder
              folderName: folderName
              account: account
              enabled: true
            sharepoint:
              folder: folder
              folderName: folderName
              account: account
              enabled: true
          ownedBy: 6
          categoryId: 7
          startDate: startDate
          status: status
          timeBudget:
            meta: '{}'
            id: 0
            type: type
        included:
          projectTaskStats:
            key:
              late: 6
              active: 1
              id: 1
              complete: 1
          companies:
            key:
              city: city
              industry:
                meta: '{}'
                id: 0
                type: type
              emailTwo: emailTwo
              industryId: 6
              isOwner: true
              addressTwo: addressTwo
              countryCode: countryCode
              emailThree: emailThree
              id: 1
              state: state
              fax: fax
              zip: zip
              profileText: profileText
              website: website
              clientUsers: 1
              companyNameUrl: companyNameUrl
              logoUrl: logoUrl
              phone: phone
              emailOne: emailOne
              name: name
              privateNotesText: privateNotesText
              accounts: 7
              addressOne: addressOne
              contacts: 1
              canSeePrivate: true
              cid: cid
          portfolioCards:
            key:
              columnId: 2
              column:
                meta: '{}'
                id: 0
                type: type
              project:
                meta: '{}'
                id: 0
                type: type
              id: 7
              projectId: 9
          projectBudgets:
            key:
              notificationIds:
              - 4
              - 4
              project:
                meta: '{}'
                id: 0
                type: type
              updatedByUserId: 1
              type: type
              deletedBy: 9
              capacity: 0
              createdAt: createdAt
              originatorBudgetId: 7
              dateCreated: dateCreated
              dateCompleted: dateCompleted
              repeatPeriod: 1
              id: 2
              updatedAt: updatedAt
              createdByUserId: 2
              repeatUnit: repeatUnit
              sequenceNumber: 6
              completedAt: completedAt
              expenseType: expenseType
              updatedBy: 7
              originatorBudget:
                meta: '{}'
                id: 0
                type: type
              repeatsRemaining: 1
              capacityUsed: 6
              timelogType: timelogType
              endDateTime: endDateTime
              dateDeleted: dateDeleted
              deletedByUserId: 3
              completedByUserId: 5
              dateUpdated: dateUpdated
              defaultRate: 7.061401241503109
              deletedAt: deletedAt
              isRepeating: true
              startDateTime: startDateTime
              createdBy: 5
              currencyCode: currencyCode
              projectId: 1
              completedBy: 1
              notifications:
              - meta: '{}'
                id: 0
                type: type
              - meta: '{}'
                id: 0
                type: type
              status: status
          projectUpdates:
            key:
              likeFromUsers:
              - meta: '{}'
                id: 0
                type: type
              - meta: '{}'
                id: 0
                type: type
              color: color
              health: 4
              project:
                meta: '{}'
                id: 0
                type: type
              deletedBy: 1
              healthLabel: healthLabel
              createdAt: createdAt
              deletedAt: deletedAt
              deleted: true
              likeFromUserIDs:
              - 9
              - 9
              createdBy: 7
              reactions:
                mine: mine
                counts:
                  joy: 6
                  like: 5
                  dislike: 1
                  frown: 2
                  heart: 6
              id: 5
              text: text
              projectId: 9
              updatedAt: updatedAt
          projectCategories:
            key:
              parent:
                meta: '{}'
                id: 0
                type: type
              color: color
              count: 2
              name: name
              id: 4
              parentId: 7
          portfolioColumns:
            key:
              color: color
              name: name
              id: 3
          portfolioBoards:
            key:
              color: color
              name: name
              id: 5
          customfieldProjects:
            key:
              createdAt: createdAt
              customfieldId: 6
              customfield:
                meta: '{}'
                id: 0
                type: type
              createdBy: 0
              project:
                meta: '{}'
                id: 0
                type: type
              id: 1
              projectId: 5
              value: '{}'
          customfields:
            key:
              createdByUserId: 6
              updatedBy: 7
              description: description
              project:
                meta: '{}'
                id: 0
                type: type
              isPrivate: true
              updatedByUserId: 9
              type: type
              deletedBy: 1
              deletedByUserId: 5
              required: true
              createdAt: createdAt
              deletedAt: deletedAt
              deleted: true
              createdBy: 0
              name: name
              options: '{}'
              visibilities: visibilities
              id: 5
              projectId: 2
              entity: entity
              updatedAt: updatedAt
          users:
            key:
              lastName: lastName
              avatarUrl: avatarUrl
              isAdmin: true
              title: title
              type: type
              firstName: firstName
              companyId: 2
              workingHoursId: 5
              lengthOfDay: 6.878052220127876
              company:
                meta: '{}'
                id: 0
                type: type
              workingHour:
                meta: '{}'
                id: 0
                type: type
              id: 6
              email: email
          tags:
            key:
              color: color
              count: 0
              name: name
              project:
                meta: '{}'
                id: 0
                type: type
              id: 6
              projectId: 1
      properties:
        included:
          $ref: '#/components/schemas/project_ProjectsResponse_included'
        project:
          $ref: '#/components/schemas/view.Project'
      title: SingleResponse
      type: object
    rates.InstallationUserRateResponse:
      description: InstallationUserRateResponse contains info about a set of users
        installation rates
      example:
        userRates:
        - installationRate: 0
          user:
            meta: '{}'
            id: 0
            type: type
          userId: 6
        - installationRate: 0
          user:
            meta: '{}'
            id: 0
            type: type
          userId: 6
      properties:
        userRates:
          items:
            $ref: '#/components/schemas/view.InstallationUserRate'
          type: array
      title: InstallationUserRateResponse
      type: object
    rates.RateResponse:
      description: RateResponse contains information about a specific rate.
      example:
        rate: 0
      properties:
        rate:
          type: integer
      title: RateResponse
      type: object
    rates.Request:
      description: Request contains information of a rates to be created or updated.
      properties:
        rate:
          type: integer
      title: Request
      type: object
    risk.Risk:
      description: Risk represents a view of a risk.
      example:
        createdByUserId: 6
        lastChangedByUserId: 5
        updatedBy: 3
        impactCost: true
        probability: probability
        canEdit: true
        impact: impact
        project:
          meta: '{}'
          id: 0
          type: type
        source: source
        impactPerformance: true
        createdOn: createdOn
        mitigationPlan: mitigationPlan
        result: 9
        createdAt: createdAt
        impactValue: 5
        deleted: true
        lastChangedOn: lastChangedOn
        createdBy: 0
        impactSchedule: true
        probabilityValue: 2
        id: 1
        projectId: 7
        status: status
        updatedAt: updatedAt
      properties:
        canEdit:
          type: boolean
        createdAt:
          type: string
        createdBy:
          type: integer
        createdByUserId:
          type: integer
        createdOn:
          type: string
        deleted:
          type: boolean
        id:
          type: integer
        impact:
          type: string
        impactCost:
          type: boolean
        impactPerformance:
          type: boolean
        impactSchedule:
          type: boolean
        impactValue:
          type: integer
        lastChangedByUserId:
          type: integer
        lastChangedOn:
          type: string
        mitigationPlan:
          type: string
        probability:
          type: string
        probabilityValue:
          type: integer
        project:
          $ref: '#/components/schemas/view.Relationship'
        projectId:
          type: integer
        result:
          type: integer
        source:
          type: string
        status:
          type: string
        updatedAt:
          type: string
        updatedBy:
          type: integer
      title: Risk
      type: object
    risk.RisksResponse:
      description: |-
        RisksResponse contains all the information returned when sending a GET
        request to the risk endpoint.
      example:
        risks:
        - createdByUserId: 6
          lastChangedByUserId: 5
          updatedBy: 3
          impactCost: true
          probability: probability
          canEdit: true
          impact: impact
          project:
            meta: '{}'
            id: 0
            type: type
          source: source
          impactPerformance: true
          createdOn: createdOn
          mitigationPlan: mitigationPlan
          result: 9
          createdAt: createdAt
          impactValue: 5
          deleted: true
          lastChangedOn: lastChangedOn
          createdBy: 0
          impactSchedule: true
          probabilityValue: 2
          id: 1
          projectId: 7
          status: status
          updatedAt: updatedAt
        - createdByUserId: 6
          lastChangedByUserId: 5
          updatedBy: 3
          impactCost: true
          probability: probability
          canEdit: true
          impact: impact
          project:
            meta: '{}'
            id: 0
            type: type
          source: source
          impactPerformance: true
          createdOn: createdOn
          mitigationPlan: mitigationPlan
          result: 9
          createdAt: createdAt
          impactValue: 5
          deleted: true
          lastChangedOn: lastChangedOn
          createdBy: 0
          impactSchedule: true
          probabilityValue: 2
          id: 1
          projectId: 7
          status: status
          updatedAt: updatedAt
        meta:
          page:
            count: 6
            hasMore: true
            pageOffset: 3
            pageSize: 3
        included:
          companies:
            key:
              city: city
              industry:
                meta: '{}'
                id: 0
                type: type
              emailTwo: emailTwo
              industryId: 6
              isOwner: true
              addressTwo: addressTwo
              countryCode: countryCode
              emailThree: emailThree
              id: 1
              state: state
              fax: fax
              zip: zip
              profileText: profileText
              website: website
              clientUsers: 1
              companyNameUrl: companyNameUrl
              logoUrl: logoUrl
              phone: phone
              emailOne: emailOne
              name: name
              privateNotesText: privateNotesText
              accounts: 7
              addressOne: addressOne
              contacts: 1
              canSeePrivate: true
              cid: cid
          projects:
            key:
              replyByEmailEnabled: true
              startPage: startPage
              endDate: endDate
              overviewStartPage: overviewStartPage
              tagIds:
              - 6
              - 6
              customFieldValueIds:
              - 5
              - 5
              description: description
              minMaxAvailableDates:
                maxEndDate: maxEndDate
                minStartDate: minStartDate
                suggestedEndDate: suggestedEndDate
                suggestedStartDate: suggestedStartDate
                deadlinesFound: true
              ownerId: 8
              type: type
              createdAt: createdAt
              updateId: 6
              logo: logo
              company:
                meta: '{}'
                id: 0
                type: type
              id: 9
              financialBudget:
                meta: '{}'
                id: 0
                type: type
              updatedAt: updatedAt
              harvestTimersEnabled: true
              updatedBy: 1
              activePages:
                comments: true
                riskRegister: true
                list: true
                gantt: true
                billing: true
                notebooks: true
                files: true
                messages: true
                links: true
                time: true
                milestones: true
                board: true
                forms: true
                table: true
                tasks: true
              isStarred: true
              directFileUploadsEnabled: true
              isOnBoardingProject: true
              subStatus: subStatus
              isSampleProject: true
              tags:
              - meta: '{}'
                id: 0
                type: type
              - meta: '{}'
                id: 0
                type: type
              tasksStartPage: tasksStartPage
              financialBudgetId: 9
              privacyEnabled: true
              companyId: 1
              defaultPrivacy: defaultPrivacy
              customFieldValues:
              - meta: '{}'
                id: 0
                type: type
              - meta: '{}'
                id: 0
                type: type
              createdBy: 4
              notifyCommentIncludeCreator: true
              skipWeekends: true
              name: name
              projectOwnerId: 9
              notifyEveryone: true
              timeBudgetId: 3
              showAnnouncement: true
              category:
                meta: '{}'
                id: 0
                type: type
              integrations:
                xero:
                  connected: true
                  countryCode: countryCode
                  organisation: organisation
                  baseCurrency: baseCurrency
                  enabled: true
                oneDriveBusiness:
                  folder: folder
                  folderName: folderName
                  account: account
                  enabled: true
                sharepoint:
                  folder: folder
                  folderName: folderName
                  account: account
                  enabled: true
              ownedBy: 6
              categoryId: 7
              startDate: startDate
              status: status
              timeBudget:
                meta: '{}'
                id: 0
                type: type
          users:
            key:
              lastName: lastName
              avatarUrl: avatarUrl
              isAdmin: true
              title: title
              type: type
              firstName: firstName
              companyId: 2
              workingHoursId: 5
              lengthOfDay: 6.878052220127876
              company:
                meta: '{}'
                id: 0
                type: type
              workingHour:
                meta: '{}'
                id: 0
                type: type
              id: 6
              email: email
      properties:
        included:
          $ref: '#/components/schemas/activity_ActivitiesResponse_included'
        meta:
          $ref: '#/components/schemas/view.Meta'
        risks:
          items:
            $ref: '#/components/schemas/risk.Risk'
          type: array
      title: RisksResponse
      type: object
    schedule.ProjectSchedulesResponse:
      description: ProjectSchedulesResponse contains information about a group of
        schedules.
      example:
        meta:
          page:
            count: 6
            hasMore: true
            pageOffset: 3
            pageSize: 3
        included:
          calendarEvents:
            key:
              dateLastUpdated: dateLastUpdated
              endDate: endDate
              projectUsersCanEdit: true
              createdDateTime: createdDateTime
              description: description
              project:
                meta: '{}'
                id: 0
                type: type
              updatedByUserId: 1
              currentUserAssociationType: currentUserAssociationType
              title: title
              type:
                meta: '{}'
                id: 0
                type: type
              sequenceId: 2
              deletedBy: 5
              allDay: true
              createdAt: createdAt
              id: 2
              updatedAt: updatedAt
              createdByUserId: 1
              updatedBy: 7
              attendeesCanEdit: true
              attendingUserIds:
              - 0
              - 0
              monthlyRepeatType: monthlyRepeatType
              dateDeleted: dateDeleted
              deletedByUserId: 5
              sequence:
                meta: '{}'
                id: 0
                type: type
              deletedAt: deletedAt
              deleted: true
              createdBy: 6
              ownerUserId: 9
              location: location
              showAsBusy: true
              typeId: 4
              additionalProperties: additionalProperties
              attendingUsers:
              - meta: '{}'
                id: 0
                type: type
              - meta: '{}'
                id: 0
                type: type
              ownedBy: 7
              projectId: 3
              privacyType: privacyType
              startDate: startDate
          companies:
            key:
              city: city
              industry:
                meta: '{}'
                id: 0
                type: type
              emailTwo: emailTwo
              industryId: 6
              isOwner: true
              addressTwo: addressTwo
              countryCode: countryCode
              emailThree: emailThree
              id: 1
              state: state
              fax: fax
              zip: zip
              profileText: profileText
              website: website
              clientUsers: 1
              companyNameUrl: companyNameUrl
              logoUrl: logoUrl
              phone: phone
              emailOne: emailOne
              name: name
              privateNotesText: privateNotesText
              accounts: 7
              addressOne: addressOne
              contacts: 1
              canSeePrivate: true
              cid: cid
          projects:
            key:
              replyByEmailEnabled: true
              startPage: startPage
              endDate: endDate
              overviewStartPage: overviewStartPage
              tagIds:
              - 6
              - 6
              customFieldValueIds:
              - 5
              - 5
              description: description
              minMaxAvailableDates:
                maxEndDate: maxEndDate
                minStartDate: minStartDate
                suggestedEndDate: suggestedEndDate
                suggestedStartDate: suggestedStartDate
                deadlinesFound: true
              ownerId: 8
              type: type
              createdAt: createdAt
              updateId: 6
              logo: logo
              company:
                meta: '{}'
                id: 0
                type: type
              id: 9
              financialBudget:
                meta: '{}'
                id: 0
                type: type
              updatedAt: updatedAt
              harvestTimersEnabled: true
              updatedBy: 1
              activePages:
                comments: true
                riskRegister: true
                list: true
                gantt: true
                billing: true
                notebooks: true
                files: true
                messages: true
                links: true
                time: true
                milestones: true
                board: true
                forms: true
                table: true
                tasks: true
              isStarred: true
              directFileUploadsEnabled: true
              isOnBoardingProject: true
              subStatus: subStatus
              isSampleProject: true
              tags:
              - meta: '{}'
                id: 0
                type: type
              - meta: '{}'
                id: 0
                type: type
              tasksStartPage: tasksStartPage
              financialBudgetId: 9
              privacyEnabled: true
              companyId: 1
              defaultPrivacy: defaultPrivacy
              customFieldValues:
              - meta: '{}'
                id: 0
                type: type
              - meta: '{}'
                id: 0
                type: type
              createdBy: 4
              notifyCommentIncludeCreator: true
              skipWeekends: true
              name: name
              projectOwnerId: 9
              notifyEveryone: true
              timeBudgetId: 3
              showAnnouncement: true
              category:
                meta: '{}'
                id: 0
                type: type
              integrations:
                xero:
                  connected: true
                  countryCode: countryCode
                  organisation: organisation
                  baseCurrency: baseCurrency
                  enabled: true
                oneDriveBusiness:
                  folder: folder
                  folderName: folderName
                  account: account
                  enabled: true
                sharepoint:
                  folder: folder
                  folderName: folderName
                  account: account
                  enabled: true
              ownedBy: 6
              categoryId: 7
              startDate: startDate
              status: status
              timeBudget:
                meta: '{}'
                id: 0
                type: type
          allocations:
            key:
              updatedBy: 4
              color: color
              description: description
              project:
                meta: '{}'
                id: 0
                type: type
              startedAt: '{}'
              availableDuration: 1
              title: title
              deletedBy: 5
              hoursPerDay: 7.061401241503109
              duration: 2
              createdAt: createdAt
              distributeType: distributeType
              deletedAt: deletedAt
              createdBy: 5
              endedAt: '{}'
              installation:
                meta: '{}'
                id: 0
                type: type
              id: 9
              installationId: 3
              assignedUser:
                meta: '{}'
                id: 0
                type: type
              projectId: 2
              assignedUserID: 6
              recurringRule: recurringRule
              status: status
              updatedAt: updatedAt
          timelogs:
            key:
              tagIds:
              - 4
              - 4
              description: description
              loggedBy: 7
              project:
                meta: '{}'
                id: 0
                type: type
              deskTicketId: 6
              hasStartTime: true
              projectBillingInvoice:
                meta: '{}'
                id: 0
                type: type
              deletedBy: 6
              createdAt: createdAt
              dateCreated: dateCreated
              editedByUserId: 3
              invoiceNumber: invoiceNumber
              dateEdited: dateEdited
              id: 3
              loggedByUserId: 0
              updatedAt: updatedAt
              updatedBy: 3
              timeLogged: timeLogged
              minutes: 7
              billable: true
              userId: 3
              dateDeleted: dateDeleted
              deletedByUserId: 5
              tags:
              - meta: '{}'
                id: 0
                type: type
              - meta: '{}'
                id: 0
                type: type
              taskPreMove:
                meta: '{}'
                id: 0
                type: type
              taskIdPreMove: 7
              deletedAt: deletedAt
              deleted: true
              projectBillingInvoiceId: 6
              task:
                meta: '{}'
                id: 0
                type: type
              projectId: 0
              user:
                meta: '{}'
                id: 0
                type: type
              taskId: 8
          milestones:
            key:
              changeFollowers:
              - meta: '{}'
                id: 0
                type: type
              - meta: '{}'
                id: 0
                type: type
              creatorUserId: 8
              private: true
              userFollowingComments: true
              canEdit: true
              tagIds:
              - 4
              - 4
              commentFollowers:
              - meta: '{}'
                id: 0
                type: type
              - meta: '{}'
                id: 0
                type: type
              description: description
              project:
                meta: '{}'
                id: 0
                type: type
              tasklists:
              - meta: '{}'
                id: 0
                type: type
              - meta: '{}'
                id: 0
                type: type
              percentageTasksCompleted: 1
              createdOn: createdOn
              isDeleted: true
              originalDueDate: originalDueDate
              userFollowingChanges: true
              commentFollowerIds:
              - 0
              - 0
              lockdown:
                meta: '{}'
                id: 0
                type: type
              id: 4
              deadline: deadline
              numCommentsRead: 0
              updatedBy: 9
              reminder: true
              canComplete: true
              lockdownId: 3
              completerId: 4
              completed: true
              tags:
              - meta: '{}'
                id: 0
                type: type
              - meta: '{}'
                id: 0
                type: type
              changeFollowerIds:
              - 9
              - 9
              responsiblePartyIds:
              - 6
              - 6
              lastChangedOn: lastChangedOn
              responsibleParties:
              - meta: '{}'
                id: 0
                type: type
              - meta: '{}'
                id: 0
                type: type
              createdBy: 6
              latestUpdates:
              - field: field
                before: '{}'
                after: '{}'
              - field: field
                before: '{}'
                after: '{}'
              percentageComplete: 2
              commentsCount: 7
              completedOn: completedOn
              name: name
              projectId: 8
              tasklistIds:
              - 8
              - 8
              completedBy: 5
              status: status
          users:
            key:
              lastName: lastName
              avatarUrl: avatarUrl
              isAdmin: true
              title: title
              type: type
              firstName: firstName
              companyId: 2
              workingHoursId: 5
              lengthOfDay: 6.878052220127876
              company:
                meta: '{}'
                id: 0
                type: type
              workingHour:
                meta: '{}'
                id: 0
                type: type
              id: 6
              email: email
        projectSchedules:
        - budgetIds:
          - 6
          - 6
          schedule:
            key:
              allocations:
              - meta: '{}'
                id: 0
                type: type
              - meta: '{}'
                id: 0
                type: type
              timelogIds:
              - 4
              - 4
              timelogs:
              - meta: '{}'
                id: 0
                type: type
              - meta: '{}'
                id: 0
                type: type
              milestoneIds:
              - 2
              - 2
              allocatedMinutes: 2
              loggedMinutes: 3
              unavailableMinutes: 7
              allocationIds:
              - 7
              - 7
              milestones:
              - meta: '{}'
                id: 0
                type: type
              - meta: '{}'
                id: 0
                type: type
              eventIds:
              - 9
              - 9
              events:
              - meta: '{}'
                id: 0
                type: type
              - meta: '{}'
                id: 0
                type: type
          budgets:
          - meta: '{}'
            id: 0
            type: type
          - meta: '{}'
            id: 0
            type: type
          unavailableTotalMinutes: 1
          userIds:
          - 1
          - 1
          project:
            meta: '{}'
            id: 0
            type: type
          allocatedTotalMinutes: 0
          projectId: 5
          loggedTotalMinutes: 5
          users:
          - meta: '{}'
            id: 0
            type: type
          - meta: '{}'
            id: 0
            type: type
          budgetMinutes: 1
        - budgetIds:
          - 6
          - 6
          schedule:
            key:
              allocations:
              - meta: '{}'
                id: 0
                type: type
              - meta: '{}'
                id: 0
                type: type
              timelogIds:
              - 4
              - 4
              timelogs:
              - meta: '{}'
                id: 0
                type: type
              - meta: '{}'
                id: 0
                type: type
              milestoneIds:
              - 2
              - 2
              allocatedMinutes: 2
              loggedMinutes: 3
              unavailableMinutes: 7
              allocationIds:
              - 7
              - 7
              milestones:
              - meta: '{}'
                id: 0
                type: type
              - meta: '{}'
                id: 0
                type: type
              eventIds:
              - 9
              - 9
              events:
              - meta: '{}'
                id: 0
                type: type
              - meta: '{}'
                id: 0
                type: type
          budgets:
          - meta: '{}'
            id: 0
            type: type
          - meta: '{}'
            id: 0
            type: type
          unavailableTotalMinutes: 1
          userIds:
          - 1
          - 1
          project:
            meta: '{}'
            id: 0
            type: type
          allocatedTotalMinutes: 0
          projectId: 5
          loggedTotalMinutes: 5
          users:
          - meta: '{}'
            id: 0
            type: type
          - meta: '{}'
            id: 0
            type: type
          budgetMinutes: 1
      properties:
        included:
          $ref: '#/components/schemas/schedule_ProjectSchedulesResponse_included'
        meta:
          $ref: '#/components/schemas/view.Meta'
        projectSchedules:
          items:
            $ref: '#/components/schemas/view.ProjectSchedule'
          type: array
      title: ProjectSchedulesResponse
      type: object
    schedule.UserSchedulesResponse:
      description: UserSchedulesResponse contains information about a group of schedules.
      example:
        meta:
          page:
            count: 6
            hasMore: true
            pageOffset: 3
            pageSize: 3
        included:
          calendarEvents:
            key:
              dateLastUpdated: dateLastUpdated
              endDate: endDate
              projectUsersCanEdit: true
              createdDateTime: createdDateTime
              description: description
              project:
                meta: '{}'
                id: 0
                type: type
              updatedByUserId: 1
              currentUserAssociationType: currentUserAssociationType
              title: title
              type:
                meta: '{}'
                id: 0
                type: type
              sequenceId: 2
              deletedBy: 5
              allDay: true
              createdAt: createdAt
              id: 2
              updatedAt: updatedAt
              createdByUserId: 1
              updatedBy: 7
              attendeesCanEdit: true
              attendingUserIds:
              - 0
              - 0
              monthlyRepeatType: monthlyRepeatType
              dateDeleted: dateDeleted
              deletedByUserId: 5
              sequence:
                meta: '{}'
                id: 0
                type: type
              deletedAt: deletedAt
              deleted: true
              createdBy: 6
              ownerUserId: 9
              location: location
              showAsBusy: true
              typeId: 4
              additionalProperties: additionalProperties
              attendingUsers:
              - meta: '{}'
                id: 0
                type: type
              - meta: '{}'
                id: 0
                type: type
              ownedBy: 7
              projectId: 3
              privacyType: privacyType
              startDate: startDate
          companies:
            key:
              city: city
              industry:
                meta: '{}'
                id: 0
                type: type
              emailTwo: emailTwo
              industryId: 6
              isOwner: true
              addressTwo: addressTwo
              countryCode: countryCode
              emailThree: emailThree
              id: 1
              state: state
              fax: fax
              zip: zip
              profileText: profileText
              website: website
              clientUsers: 1
              companyNameUrl: companyNameUrl
              logoUrl: logoUrl
              phone: phone
              emailOne: emailOne
              name: name
              privateNotesText: privateNotesText
              accounts: 7
              addressOne: addressOne
              contacts: 1
              canSeePrivate: true
              cid: cid
          projects:
            key:
              replyByEmailEnabled: true
              startPage: startPage
              endDate: endDate
              overviewStartPage: overviewStartPage
              tagIds:
              - 6
              - 6
              customFieldValueIds:
              - 5
              - 5
              description: description
              minMaxAvailableDates:
                maxEndDate: maxEndDate
                minStartDate: minStartDate
                suggestedEndDate: suggestedEndDate
                suggestedStartDate: suggestedStartDate
                deadlinesFound: true
              ownerId: 8
              type: type
              createdAt: createdAt
              updateId: 6
              logo: logo
              company:
                meta: '{}'
                id: 0
                type: type
              id: 9
              financialBudget:
                meta: '{}'
                id: 0
                type: type
              updatedAt: updatedAt
              harvestTimersEnabled: true
              updatedBy: 1
              activePages:
                comments: true
                riskRegister: true
                list: true
                gantt: true
                billing: true
                notebooks: true
                files: true
                messages: true
                links: true
                time: true
                milestones: true
                board: true
                forms: true
                table: true
                tasks: true
              isStarred: true
              directFileUploadsEnabled: true
              isOnBoardingProject: true
              subStatus: subStatus
              isSampleProject: true
              tags:
              - meta: '{}'
                id: 0
                type: type
              - meta: '{}'
                id: 0
                type: type
              tasksStartPage: tasksStartPage
              financialBudgetId: 9
              privacyEnabled: true
              companyId: 1
              defaultPrivacy: defaultPrivacy
              customFieldValues:
              - meta: '{}'
                id: 0
                type: type
              - meta: '{}'
                id: 0
                type: type
              createdBy: 4
              notifyCommentIncludeCreator: true
              skipWeekends: true
              name: name
              projectOwnerId: 9
              notifyEveryone: true
              timeBudgetId: 3
              showAnnouncement: true
              category:
                meta: '{}'
                id: 0
                type: type
              integrations:
                xero:
                  connected: true
                  countryCode: countryCode
                  organisation: organisation
                  baseCurrency: baseCurrency
                  enabled: true
                oneDriveBusiness:
                  folder: folder
                  folderName: folderName
                  account: account
                  enabled: true
                sharepoint:
                  folder: folder
                  folderName: folderName
                  account: account
                  enabled: true
              ownedBy: 6
              categoryId: 7
              startDate: startDate
              status: status
              timeBudget:
                meta: '{}'
                id: 0
                type: type
          allocations:
            key:
              updatedBy: 4
              color: color
              description: description
              project:
                meta: '{}'
                id: 0
                type: type
              startedAt: '{}'
              availableDuration: 1
              title: title
              deletedBy: 5
              hoursPerDay: 7.061401241503109
              duration: 2
              createdAt: createdAt
              distributeType: distributeType
              deletedAt: deletedAt
              createdBy: 5
              endedAt: '{}'
              installation:
                meta: '{}'
                id: 0
                type: type
              id: 9
              installationId: 3
              assignedUser:
                meta: '{}'
                id: 0
                type: type
              projectId: 2
              assignedUserID: 6
              recurringRule: recurringRule
              status: status
              updatedAt: updatedAt
          timelogs:
            key:
              tagIds:
              - 4
              - 4
              description: description
              loggedBy: 7
              project:
                meta: '{}'
                id: 0
                type: type
              deskTicketId: 6
              hasStartTime: true
              projectBillingInvoice:
                meta: '{}'
                id: 0
                type: type
              deletedBy: 6
              createdAt: createdAt
              dateCreated: dateCreated
              editedByUserId: 3
              invoiceNumber: invoiceNumber
              dateEdited: dateEdited
              id: 3
              loggedByUserId: 0
              updatedAt: updatedAt
              updatedBy: 3
              timeLogged: timeLogged
              minutes: 7
              billable: true
              userId: 3
              dateDeleted: dateDeleted
              deletedByUserId: 5
              tags:
              - meta: '{}'
                id: 0
                type: type
              - meta: '{}'
                id: 0
                type: type
              taskPreMove:
                meta: '{}'
                id: 0
                type: type
              taskIdPreMove: 7
              deletedAt: deletedAt
              deleted: true
              projectBillingInvoiceId: 6
              task:
                meta: '{}'
                id: 0
                type: type
              projectId: 0
              user:
                meta: '{}'
                id: 0
                type: type
              taskId: 8
          users:
            key:
              lastName: lastName
              avatarUrl: avatarUrl
              isAdmin: true
              title: title
              type: type
              firstName: firstName
              companyId: 2
              workingHoursId: 5
              lengthOfDay: 6.878052220127876
              company:
                meta: '{}'
                id: 0
                type: type
              workingHour:
                meta: '{}'
                id: 0
                type: type
              id: 6
              email: email
        userSchedules:
        - schedule:
            key:
              allocations:
              - meta: '{}'
                id: 0
                type: type
              - meta: '{}'
                id: 0
                type: type
              timelogIds:
              - 9
              - 9
              timelogs:
              - meta: '{}'
                id: 0
                type: type
              - meta: '{}'
                id: 0
                type: type
              allocatedMinutes: 5
              loggedMinutes: 7
              unavailableMinutes: 3
              allocationIds:
              - 5
              - 5
              eventIds:
              - 2
              - 2
              events:
              - meta: '{}'
                id: 0
                type: type
              - meta: '{}'
                id: 0
                type: type
          projects:
          - meta: '{}'
            id: 0
            type: type
          - meta: '{}'
            id: 0
            type: type
          unavailableTotalMinutes: 2
          allocatedTotalMinutes: 0
          projectIds:
          - 1
          - 1
          user:
            meta: '{}'
            id: 0
            type: type
          userId: 4
          loggedTotalMinutes: 6
        - schedule:
            key:
              allocations:
              - meta: '{}'
                id: 0
                type: type
              - meta: '{}'
                id: 0
                type: type
              timelogIds:
              - 9
              - 9
              timelogs:
              - meta: '{}'
                id: 0
                type: type
              - meta: '{}'
                id: 0
                type: type
              allocatedMinutes: 5
              loggedMinutes: 7
              unavailableMinutes: 3
              allocationIds:
              - 5
              - 5
              eventIds:
              - 2
              - 2
              events:
              - meta: '{}'
                id: 0
                type: type
              - meta: '{}'
                id: 0
                type: type
          projects:
          - meta: '{}'
            id: 0
            type: type
          - meta: '{}'
            id: 0
            type: type
          unavailableTotalMinutes: 2
          allocatedTotalMinutes: 0
          projectIds:
          - 1
          - 1
          user:
            meta: '{}'
            id: 0
            type: type
          userId: 4
          loggedTotalMinutes: 6
      properties:
        included:
          $ref: '#/components/schemas/schedule_UserSchedulesResponse_included'
        meta:
          $ref: '#/components/schemas/view.Meta'
        userSchedules:
          items:
            $ref: '#/components/schemas/view.UserSchedule'
          type: array
      title: UserSchedulesResponse
      type: object
    setting.AppSetting:
      description: AppSetting contains all the information returned from a setting.
      properties:
        value:
          type: string
      title: AppSetting
      type: object
    setting.Request:
      description: Request contains information of a setting to be created or updated.
      properties:
        appsetting:
          $ref: '#/components/schemas/setting.AppSetting'
      title: Request
      type: object
    setting.Response:
      description: Response contains information about a specific setting.
      example:
        appsetting:
          isSecret: true
          defaultValue: defaultValue
          displayName: displayName
          name: name
          id: 6
          type: STRING
          value: value
      properties:
        appsetting:
          $ref: '#/components/schemas/view.AppSetting'
      title: Response
      type: object
    status.TimelineResponse:
      description: TimelineResponse contains information about a group of statuses.
      example:
        meta:
          page:
            count: 6
            hasMore: true
            pageOffset: 3
            pageSize: 3
        statuses:
        - dateTime: dateTime
          deleted: true
          emoji: emoji
          dateLastUpdated: dateLastUpdated
          ipAddress: ipAddress
          id: 0
          text: text
          user:
            meta: '{}'
            id: 0
            type: type
          userId: 6
          updatedAt: updatedAt
        - dateTime: dateTime
          deleted: true
          emoji: emoji
          dateLastUpdated: dateLastUpdated
          ipAddress: ipAddress
          id: 0
          text: text
          user:
            meta: '{}'
            id: 0
            type: type
          userId: 6
          updatedAt: updatedAt
        included:
          userEvents:
            key:
              clockedIn: true
          users:
            key:
              lastName: lastName
              avatarUrl: avatarUrl
              isAdmin: true
              title: title
              type: type
              firstName: firstName
              companyId: 2
              workingHoursId: 5
              lengthOfDay: 6.878052220127876
              company:
                meta: '{}'
                id: 0
                type: type
              workingHour:
                meta: '{}'
                id: 0
                type: type
              id: 6
              email: email
      properties:
        included:
          $ref: '#/components/schemas/status_TimelineResponse_included'
        meta:
          $ref: '#/components/schemas/view.Meta'
        statuses:
          items:
            $ref: '#/components/schemas/view.Status'
          type: array
      title: TimelineResponse
      type: object
    summary.ColumnCardResponse:
      description: ColumnCardResponse contains counters from column's cards.
      example:
        archived: 1
        count: 5
        active: 6
        completed: 5
      properties:
        active:
          type: integer
        archived:
          type: integer
        completed:
          type: integer
        count:
          type: integer
      title: ColumnCardResponse
      type: object
    summary.ColumnDataResponse:
      description: ColumnDataResponse contains information of a specific column.
      example:
        estimatedTime:
          archived: 7
          total: 3
          active: 2
          completed: 9
        cards:
          archived: 1
          count: 5
          active: 6
          completed: 5
        color: color
        name: name
        id: 2
      properties:
        cards:
          $ref: '#/components/schemas/summary.ColumnCardResponse'
        color:
          type: string
        estimatedTime:
          $ref: '#/components/schemas/summary.ColumnEstimatedResponse'
        id:
          type: integer
        name:
          type: string
      title: ColumnDataResponse
      type: object
    summary.ColumnEstimatedResponse:
      description: |-
        ColumnEstimatedResponse contains estimated counters about the
        columns's state.
      example:
        archived: 7
        total: 3
        active: 2
        completed: 9
      properties:
        active:
          type: integer
        archived:
          type: integer
        completed:
          type: integer
        total:
          type: integer
      title: ColumnEstimatedResponse
      type: object
    summary.ColumnResponse:
      description: ColumnResponse contains counters for columns.
      example:
        data:
        - estimatedTime:
            archived: 7
            total: 3
            active: 2
            completed: 9
          cards:
            archived: 1
            count: 5
            active: 6
            completed: 5
          color: color
          name: name
          id: 2
        - estimatedTime:
            archived: 7
            total: 3
            active: 2
            completed: 9
          cards:
            archived: 1
            count: 5
            active: 6
            completed: 5
          color: color
          name: name
          id: 2
        count: 0
      properties:
        count:
          type: integer
        data:
          items:
            $ref: '#/components/schemas/summary.ColumnDataResponse'
          type: array
      title: ColumnResponse
      type: object
    summary.EventResponse:
      description: EventResponse contains counters for events.
      example:
        today: 4
        upcoming: 7
      properties:
        today:
          type: integer
        upcoming:
          type: integer
      title: EventResponse
      type: object
    summary.HealthResponse:
      description: HealthResponse contains counters for health.
      example:
        "0": 1
        "1": 1
        "2": 1
        "3": 6
      properties:
        "0":
          type: integer
        "1":
          type: integer
        "2":
          type: integer
        "3":
          type: integer
      title: HealthResponse
      type: object
    summary.MilestoneCountsResponse:
      description: MilestoneCountsResponse contains counters for milestones.
      example:
        late: 4
        today: 5
        active: 7
        complete: 1
        upcoming: 9
      properties:
        active:
          type: integer
        complete:
          type: integer
        late:
          type: integer
        today:
          type: integer
        upcoming:
          type: integer
      title: MilestoneCountsResponse
      type: object
    summary.MilestoneResponse:
      description: MilestoneResponse contains groups of counter for milestones.
      example:
        mine:
          late: 4
          today: 5
          active: 7
          complete: 1
          upcoming: 9
        everyone:
          late: 4
          today: 5
          active: 7
          complete: 1
          upcoming: 9
      properties:
        everyone:
          $ref: '#/components/schemas/summary.MilestoneCountsResponse'
        mine:
          $ref: '#/components/schemas/summary.MilestoneCountsResponse'
      title: MilestoneResponse
      type: object
    summary.ProjectResponse:
      description: |-
        ProjectResponse contains all the information returned when sending
        a GET request to the summary endpoint (project).
      example:
        risks:
          total: 9
          pending: 8
          closed: 9
          open: 6
        unread:
          comments: 3
          messages: 3
        columns:
          data:
          - estimatedTime:
              archived: 7
              total: 3
              active: 2
              completed: 9
            cards:
              archived: 1
              count: 5
              active: 6
              completed: 5
            color: color
            name: name
            id: 2
          - estimatedTime:
              archived: 7
              total: 3
              active: 2
              completed: 9
            cards:
              archived: 1
              count: 5
              active: 6
              completed: 5
            color: color
            name: name
            id: 2
          count: 0
        health:
          "0": 1
          "1": 1
          "2": 1
          "3": 6
        time:
          all:
            totals:
              billableMinsSum: 6
              billedMinsSum: 0
              nonBilledMinsSum: 8
              totalMinsSum: 7
              nonBillableMinsSum: 4
            estimates:
              totalWithTimeLoggedEstimatedMins: 7
              completedMinsEstimated: 7
              totalMinsEstimated: 0
              activeMinsEstimated: 3
          mine:
            totals:
              billableMinsSum: 6
              billedMinsSum: 0
              nonBilledMinsSum: 8
              totalMinsSum: 7
              nonBillableMinsSum: 4
            estimates:
              totalWithTimeLoggedEstimatedMins: 7
              completedMinsEstimated: 7
              totalMinsEstimated: 0
              activeMinsEstimated: 3
        milestones:
          mine:
            late: 4
            today: 5
            active: 7
            complete: 1
            upcoming: 9
          everyone:
            late: 4
            today: 5
            active: 7
            complete: 1
            upcoming: 9
        events:
          today: 4
          upcoming: 7
        tasks:
          mine:
            late: 6
            today: 6
            active: 1
            started: 5
            complete: 2
            upcoming: 3
            nodate: 6
          everyone:
            late: 6
            today: 6
            active: 1
            started: 5
            complete: 2
            upcoming: 3
            nodate: 6
          user:
            late: 6
            today: 6
            active: 1
            started: 5
            complete: 2
            upcoming: 3
            nodate: 6
        since:
          dateTime: dateTime
          tasksCreated: 6
          tasksComplete: 3
          events: 6
      properties:
        columns:
          $ref: '#/components/schemas/summary.ColumnResponse'
        events:
          $ref: '#/components/schemas/summary.EventResponse'
        health:
          $ref: '#/components/schemas/summary.HealthResponse'
        milestones:
          $ref: '#/components/schemas/summary.MilestoneResponse'
        risks:
          $ref: '#/components/schemas/summary.RiskResponse'
        since:
          $ref: '#/components/schemas/summary.SinceResponse'
        tasks:
          $ref: '#/components/schemas/summary.ProjectTasksResponse'
        time:
          $ref: '#/components/schemas/summary.TimeResponse'
        unread:
          $ref: '#/components/schemas/summary.UnreadResponse'
      title: ProjectResponse
      type: object
    summary.ProjectTasksResponse:
      description: ProjectTasksResponse contains groups of counters tasks.
      example:
        mine:
          late: 6
          today: 6
          active: 1
          started: 5
          complete: 2
          upcoming: 3
          nodate: 6
        everyone:
          late: 6
          today: 6
          active: 1
          started: 5
          complete: 2
          upcoming: 3
          nodate: 6
        user:
          late: 6
          today: 6
          active: 1
          started: 5
          complete: 2
          upcoming: 3
          nodate: 6
      properties:
        everyone:
          $ref: '#/components/schemas/summary.TaskResponse'
        mine:
          $ref: '#/components/schemas/summary.TaskResponse'
        user:
          $ref: '#/components/schemas/summary.TaskResponse'
      title: ProjectTasksResponse
      type: object
    summary.Response:
      description: |-
        Response contains all the information returned when sending a GET
        request to the summary endpoint (dashboard).
      example:
        risks:
          total: 9
          pending: 8
          closed: 9
          open: 6
        unread:
          comments: 3
          messages: 3
        columns:
          data:
          - estimatedTime:
              archived: 7
              total: 3
              active: 2
              completed: 9
            cards:
              archived: 1
              count: 5
              active: 6
              completed: 5
            color: color
            name: name
            id: 2
          - estimatedTime:
              archived: 7
              total: 3
              active: 2
              completed: 9
            cards:
              archived: 1
              count: 5
              active: 6
              completed: 5
            color: color
            name: name
            id: 2
          count: 0
        health:
          "0": 1
          "1": 1
          "2": 1
          "3": 6
        time:
          totals:
            billableMinsSum: 6
            billedMinsSum: 0
            nonBilledMinsSum: 8
            totalMinsSum: 7
            nonBillableMinsSum: 4
          estimates:
            totalWithTimeLoggedEstimatedMins: 7
            completedMinsEstimated: 7
            totalMinsEstimated: 0
            activeMinsEstimated: 3
        milestones:
          late: 4
          today: 5
          active: 7
          complete: 1
          upcoming: 9
        events:
          today: 4
          upcoming: 7
        tasks:
          late: 6
          today: 6
          active: 1
          started: 5
          complete: 2
          upcoming: 3
          nodate: 6
        since:
          dateTime: dateTime
          tasksCreated: 6
          tasksComplete: 3
          events: 6
      properties:
        columns:
          $ref: '#/components/schemas/summary.ColumnResponse'
        events:
          $ref: '#/components/schemas/summary.EventResponse'
        health:
          $ref: '#/components/schemas/summary.HealthResponse'
        milestones:
          $ref: '#/components/schemas/summary.MilestoneCountsResponse'
        risks:
          $ref: '#/components/schemas/summary.RiskResponse'
        since:
          $ref: '#/components/schemas/summary.SinceResponse'
        tasks:
          $ref: '#/components/schemas/summary.TaskResponse'
        time:
          $ref: '#/components/schemas/summary.TimeCounterResponse'
        unread:
          $ref: '#/components/schemas/summary.UnreadResponse'
      title: Response
      type: object
    summary.RiskResponse:
      description: RiskResponse contains counters for risks.
      example:
        total: 9
        pending: 8
        closed: 9
        open: 6
      properties:
        closed:
          type: integer
        open:
          type: integer
        pending:
          type: integer
        total:
          type: integer
      title: RiskResponse
      type: object
    summary.SinceResponse:
      description: SinceResponse contains counters for since.
      example:
        dateTime: dateTime
        tasksCreated: 6
        tasksComplete: 3
        events: 6
      properties:
        dateTime:
          type: string
        events:
          type: integer
        tasksComplete:
          type: integer
        tasksCreated:
          type: integer
      title: SinceResponse
      type: object
    summary.TaskResponse:
      description: TaskResponse contains counters for tasks.
      example:
        late: 6
        today: 6
        active: 1
        started: 5
        complete: 2
        upcoming: 3
        nodate: 6
      properties:
        active:
          type: integer
        complete:
          type: integer
        late:
          type: integer
        nodate:
          type: integer
        started:
          type: integer
        today:
          type: integer
        upcoming:
          type: integer
      title: TaskResponse
      type: object
    summary.TimeCounterEstimateResponse:
      description: TimeCounterEstimateResponse contains estimate counters for times.
      example:
        totalWithTimeLoggedEstimatedMins: 7
        completedMinsEstimated: 7
        totalMinsEstimated: 0
        activeMinsEstimated: 3
      properties:
        activeMinsEstimated:
          type: integer
        completedMinsEstimated:
          type: integer
        totalMinsEstimated:
          type: integer
        totalWithTimeLoggedEstimatedMins:
          type: integer
      title: TimeCounterEstimateResponse
      type: object
    summary.TimeCounterResponse:
      description: TimeCounterResponse contains counters for times.
      example:
        totals:
          billableMinsSum: 6
          billedMinsSum: 0
          nonBilledMinsSum: 8
          totalMinsSum: 7
          nonBillableMinsSum: 4
        estimates:
          totalWithTimeLoggedEstimatedMins: 7
          completedMinsEstimated: 7
          totalMinsEstimated: 0
          activeMinsEstimated: 3
      properties:
        estimates:
          $ref: '#/components/schemas/summary.TimeCounterEstimateResponse'
        totals:
          $ref: '#/components/schemas/summary.TimeCounterTotalResponse'
      title: TimeCounterResponse
      type: object
    summary.TimeCounterTotalResponse:
      description: TimeCounterTotalResponse contains total counters for times.
      example:
        billableMinsSum: 6
        billedMinsSum: 0
        nonBilledMinsSum: 8
        totalMinsSum: 7
        nonBillableMinsSum: 4
      properties:
        billableMinsSum:
          type: integer
        billedMinsSum:
          type: integer
        nonBillableMinsSum:
          type: integer
        nonBilledMinsSum:
          type: integer
        totalMinsSum:
          type: integer
      title: TimeCounterTotalResponse
      type: object
    summary.TimeResponse:
      description: TimeResponse contains counters for times' groups.
      example:
        all:
          totals:
            billableMinsSum: 6
            billedMinsSum: 0
            nonBilledMinsSum: 8
            totalMinsSum: 7
            nonBillableMinsSum: 4
          estimates:
            totalWithTimeLoggedEstimatedMins: 7
            completedMinsEstimated: 7
            totalMinsEstimated: 0
            activeMinsEstimated: 3
        mine:
          totals:
            billableMinsSum: 6
            billedMinsSum: 0
            nonBilledMinsSum: 8
            totalMinsSum: 7
            nonBillableMinsSum: 4
          estimates:
            totalWithTimeLoggedEstimatedMins: 7
            completedMinsEstimated: 7
            totalMinsEstimated: 0
            activeMinsEstimated: 3
      properties:
        all:
          $ref: '#/components/schemas/summary.TimeCounterResponse'
        mine:
          $ref: '#/components/schemas/summary.TimeCounterResponse'
      title: TimeResponse
      type: object
    summary.UnreadResponse:
      description: UnreadResponse contains counters for unread objects.
      example:
        comments: 3
        messages: 3
      properties:
        comments:
          type: integer
        messages:
          type: integer
      title: UnreadResponse
      type: object
    tag.BulkDeleteRequest:
      description: BulkDeleteRequest contains the ids of the tags that should be removed.
      properties:
        tagIds:
          items:
            type: integer
          type: array
        tagNames:
          type: string
      title: BulkDeleteRequest
      type: object
    tag.Request:
      description: Request contains information of a tag to be created or updated.
      properties:
        tag:
          $ref: '#/components/schemas/tag.Tag'
      title: Request
      type: object
    tag.Response:
      description: Response contains information about a specific tag.
      example:
        tag:
          color: color
          count: 0
          name: name
          project:
            meta: '{}'
            id: 0
            type: type
          id: 6
          projectId: 1
      properties:
        tag:
          $ref: '#/components/schemas/view.Tag'
      title: Response
      type: object
    tag.Tag:
      description: Tag contains all the information returned from a tag.
      properties:
        color:
          type: string
        name:
          type: string
        projectId:
          type: integer
      title: Tag
      type: object
    tag.TagsResponse:
      description: TagsResponse contains information about a group of tags.
      example:
        meta:
          page:
            count: 6
            hasMore: true
            pageOffset: 3
            pageSize: 3
        tags:
        - color: color
          count: 0
          name: name
          project:
            meta: '{}'
            id: 0
            type: type
          id: 6
          projectId: 1
        - color: color
          count: 0
          name: name
          project:
            meta: '{}'
            id: 0
            type: type
          id: 6
          projectId: 1
      properties:
        meta:
          $ref: '#/components/schemas/view.Meta'
        tags:
          items:
            $ref: '#/components/schemas/view.Tag'
          type: array
      title: TagsResponse
      type: object
    task.BulkDeleteRequest:
      description: |-
        BulkDeleteRequest contains the ids of the customfields that should be
        removed.
      properties:
        customfieldTaskIds:
          items:
            type: integer
          type: array
      title: BulkDeleteRequest
      type: object
    task.BulkUpdateRequest:
      description: |-
        BulkUpdateRequest contains the the task custom field values that should be
        updated.
      properties:
        customfieldTasks:
          items:
            $ref: '#/components/schemas/task.EditCustomFieldTask'
          type: array
      title: BulkUpdateRequest
      type: object
    task.Card:
      description: Card stores information about the card created with the task.
      properties:
        columnId:
          type: integer
      title: Card
      type: object
    task.CustomFieldTask:
      description: CustomFieldTask contains all the information returned from a customfield.
      properties:
        customfieldId:
          type: integer
        value:
          type: object
      title: CustomFieldTask
      type: object
    task.CustomFieldTasksResponse:
      description: |-
        CustomFieldTasksResponse contains information about a group of
        task custom field values.
      example:
        customfieldTasks:
        - createdAt: createdAt
          customfieldId: 6
          customfield:
            meta: '{}'
            id: 0
            type: type
          task:
            meta: '{}'
            id: 0
            type: type
          createdBy: 0
          id: 1
          value: '{}'
          taskId: 5
        - createdAt: createdAt
          customfieldId: 6
          customfield:
            meta: '{}'
            id: 0
            type: type
          task:
            meta: '{}'
            id: 0
            type: type
          createdBy: 0
          id: 1
          value: '{}'
          taskId: 5
        meta:
          page:
            count: 6
            hasMore: true
            pageOffset: 3
            pageSize: 3
        included:
          customfields:
            key:
              createdByUserId: 6
              updatedBy: 7
              description: description
              project:
                meta: '{}'
                id: 0
                type: type
              isPrivate: true
              updatedByUserId: 9
              type: type
              deletedBy: 1
              deletedByUserId: 5
              required: true
              createdAt: createdAt
              deletedAt: deletedAt
              deleted: true
              createdBy: 0
              name: name
              options: '{}'
              visibilities: visibilities
              id: 5
              projectId: 2
              entity: entity
              updatedAt: updatedAt
          tasks:
            key:
              parentTaskId: 9
              assigneeUserIds:
              - 1
              - 1
              dueDate: dueDate
              tagIds:
              - 1
              - 1
              displayOrder: 9
              description: description
              isPrivate: 8
              userPermissions:
                canComplete: true
                canEdit: true
                canViewEstTime: true
                canAddSubtasks: true
                canLogTime: true
              assigneeUsers:
              - meta: '{}'
                id: 0
                type: type
              - meta: '{}'
                id: 0
                type: type
              originalDueDate: '{}'
              assigneeCompanyIds:
              - 1
              - 1
              assigneeTeamIds:
              - 1
              - 1
              id: 6
              subTaskIds:
              - 6
              - 6
              updatedAt: updatedAt
              predecessorIds:
              - 6
              - 6
              createdByUserId: 1
              updatedBy: 6
              crmDealIds:
              - 4
              - 4
              assigneeCompanies:
              - meta: '{}'
                id: 0
                type: type
              - meta: '{}'
                id: 0
                type: type
              parentTask:
                meta: '{}'
                id: 0
                type: type
              hasDeskTickets: true
              priority: priority
              dateUpdated: dateUpdated
              assigneeTeams:
              - meta: '{}'
                id: 0
                type: type
              - meta: '{}'
                id: 0
                type: type
              dependencyIds:
              - 5
              - 5
              createdBy: 7
              latestUpdates:
              - field: field
                before: '{}'
                after: '{}'
              - field: field
                before: '{}'
                after: '{}'
              completedOn: completedOn
              name: name
              progress: 3
              estimateMinutes: 9
              tasklist:
                meta: '{}'
                id: 0
                type: type
              completedBy: 6
              startDate: startDate
              tasklistId: 2
              status: status
      properties:
        customfieldTasks:
          items:
            $ref: '#/components/schemas/view.CustomFieldTask'
          type: array
        included:
          $ref: '#/components/schemas/task_CustomFieldTasksResponse_included'
        meta:
          $ref: '#/components/schemas/view.Meta'
      title: CustomFieldTasksResponse
      type: object
    task.EditCustomFieldTask:
      description: |-
        EditCustomFieldTask contains all the information to update a task
        custom field value.
      properties:
        customfieldId:
          type: integer
        id:
          type: integer
        value:
          type: object
      title: EditCustomFieldTask
      type: object
    task.File:
      description: File stores information about a uploaded file.
      properties:
        categoryId:
          type: integer
        id:
          type: integer
      title: File
      type: object
    task.PendingFile:
      description: PendingFile stores information about a file uploaded on-the-fly.
      properties:
        categoryId:
          type: integer
        reference:
          type: string
      title: PendingFile
      type: object
    task.Predecessor:
      description: Predecessor stores information about task predecessors.
      properties:
        id:
          type: integer
        type:
          type: string
      title: Predecessor
      type: object
    task.Reminder:
      description: Reminder stores all necessary information to create a task reminder.
      properties:
        isRelative:
          type: boolean
        note:
          type: string
        peopleAssigned:
          type: boolean
        relativeNumberDays:
          type: integer
        remindAt:
          type: string
        type:
          type: string
        userId:
          type: integer
        usingOffsetDueDate:
          type: boolean
      title: Reminder
      type: object
    task.RepeatOptions:
      description: RepeatOptions stores recurring information for the task.
      properties:
        duration:
          type: integer
        endsAt:
          description: Date unmarshals represents a Unified API Spec date format.
          title: Date
          type: object
        frequency:
          type: string
        monthlyRepeatType:
          type: string
        selectedDays:
          type: string
      title: RepeatOptions
      type: object
    task.Request:
      description: Request contains information of a task to be created or updated.
      properties:
        attachmentOptions:
          $ref: '#/components/schemas/task_Request_attachmentOptions'
        attachments:
          $ref: '#/components/schemas/task_Request_attachments'
        card:
          $ref: '#/components/schemas/task.Card'
        predecessors:
          items:
            $ref: '#/components/schemas/task.Predecessor'
          type: array
        tags:
          items:
            $ref: '#/components/schemas/tag.Tag'
          type: array
        task:
          $ref: '#/components/schemas/task.Task'
        taskOptions:
          $ref: '#/components/schemas/task_Request_taskOptions'
      title: Request
      type: object
    task.Response:
      description: Response contains information about a specific task.
      example:
        task:
          parentTaskId: 9
          assigneeUserIds:
          - 1
          - 1
          dueDate: dueDate
          tagIds:
          - 1
          - 1
          displayOrder: 9
          description: description
          isPrivate: 8
          userPermissions:
            canComplete: true
            canEdit: true
            canViewEstTime: true
            canAddSubtasks: true
            canLogTime: true
          assigneeUsers:
          - meta: '{}'
            id: 0
            type: type
          - meta: '{}'
            id: 0
            type: type
          originalDueDate: '{}'
          assigneeCompanyIds:
          - 1
          - 1
          assigneeTeamIds:
          - 1
          - 1
          id: 6
          subTaskIds:
          - 6
          - 6
          updatedAt: updatedAt
          predecessorIds:
          - 6
          - 6
          createdByUserId: 1
          updatedBy: 6
          crmDealIds:
          - 4
          - 4
          assigneeCompanies:
          - meta: '{}'
            id: 0
            type: type
          - meta: '{}'
            id: 0
            type: type
          parentTask:
            meta: '{}'
            id: 0
            type: type
          hasDeskTickets: true
          priority: priority
          dateUpdated: dateUpdated
          assigneeTeams:
          - meta: '{}'
            id: 0
            type: type
          - meta: '{}'
            id: 0
            type: type
          dependencyIds:
          - 5
          - 5
          createdBy: 7
          latestUpdates:
          - field: field
            before: '{}'
            after: '{}'
          - field: field
            before: '{}'
            after: '{}'
          completedOn: completedOn
          name: name
          progress: 3
          estimateMinutes: 9
          tasklist:
            meta: '{}'
            id: 0
            type: type
          completedBy: 6
          startDate: startDate
          tasklistId: 2
          status: status
        included:
          companies:
            key:
              city: city
              industry:
                meta: '{}'
                id: 0
                type: type
              emailTwo: emailTwo
              industryId: 6
              isOwner: true
              addressTwo: addressTwo
              countryCode: countryCode
              emailThree: emailThree
              id: 1
              state: state
              fax: fax
              zip: zip
              profileText: profileText
              website: website
              clientUsers: 1
              companyNameUrl: companyNameUrl
              logoUrl: logoUrl
              phone: phone
              emailOne: emailOne
              name: name
              privateNotesText: privateNotesText
              accounts: 7
              addressOne: addressOne
              contacts: 1
              canSeePrivate: true
              cid: cid
          cards:
            key:
              archived: true
              archivedAt: archivedAt
              createdAt: createdAt
              createBy:
                meta: '{}'
                id: 0
                type: type
              deletedAt: deletedAt
              visible: true
              displayOrder: 0
              deleteBy:
                meta: '{}'
                id: 0
                type: type
              id: 6
              archivedBy:
                meta: '{}'
                id: 0
                type: type
              status: status
              updatedAt: updatedAt
          comments:
            key:
              id: 0
              title: title
              objectId: 6
              object:
                meta: '{}'
                id: 0
                type: type
              objectType: objectType
          projects:
            key:
              replyByEmailEnabled: true
              startPage: startPage
              endDate: endDate
              overviewStartPage: overviewStartPage
              tagIds:
              - 6
              - 6
              customFieldValueIds:
              - 5
              - 5
              description: description
              minMaxAvailableDates:
                maxEndDate: maxEndDate
                minStartDate: minStartDate
                suggestedEndDate: suggestedEndDate
                suggestedStartDate: suggestedStartDate
                deadlinesFound: true
              ownerId: 8
              type: type
              createdAt: createdAt
              updateId: 6
              logo: logo
              company:
                meta: '{}'
                id: 0
                type: type
              id: 9
              financialBudget:
                meta: '{}'
                id: 0
                type: type
              updatedAt: updatedAt
              harvestTimersEnabled: true
              updatedBy: 1
              activePages:
                comments: true
                riskRegister: true
                list: true
                gantt: true
                billing: true
                notebooks: true
                files: true
                messages: true
                links: true
                time: true
                milestones: true
                board: true
                forms: true
                table: true
                tasks: true
              isStarred: true
              directFileUploadsEnabled: true
              isOnBoardingProject: true
              subStatus: subStatus
              isSampleProject: true
              tags:
              - meta: '{}'
                id: 0
                type: type
              - meta: '{}'
                id: 0
                type: type
              tasksStartPage: tasksStartPage
              financialBudgetId: 9
              privacyEnabled: true
              companyId: 1
              defaultPrivacy: defaultPrivacy
              customFieldValues:
              - meta: '{}'
                id: 0
                type: type
              - meta: '{}'
                id: 0
                type: type
              createdBy: 4
              notifyCommentIncludeCreator: true
              skipWeekends: true
              name: name
              projectOwnerId: 9
              notifyEveryone: true
              timeBudgetId: 3
              showAnnouncement: true
              category:
                meta: '{}'
                id: 0
                type: type
              integrations:
                xero:
                  connected: true
                  countryCode: countryCode
                  organisation: organisation
                  baseCurrency: baseCurrency
                  enabled: true
                oneDriveBusiness:
                  folder: folder
                  folderName: folderName
                  account: account
                  enabled: true
                sharepoint:
                  folder: folder
                  folderName: folderName
                  account: account
                  enabled: true
              ownedBy: 6
              categoryId: 7
              startDate: startDate
              status: status
              timeBudget:
                meta: '{}'
                id: 0
                type: type
          teams:
            key:
              teamLogo: teamLogo
              name: name
              id: 4
              teamLogoColor: teamLogoColor
              teamLogoIcon: teamLogoIcon
          columns:
            key:
              settings:
                reminders: true
                private: true
                comments: true
                tickets: true
                recurring: true
                subtasklabel: true
                subtasktext: true
                avatar: true
                endAt: true
                priority: true
                dependencies: true
                tags: true
                estimatedtime: true
                followers: true
                name: true
                files: true
                progress: true
                assignee: true
                tasklist: true
                time: true
                startAt: true
              color: color
              displayOrder: 0
              project:
                meta: '{}'
                id: 0
                type: type
              sort: sort
              createdAt: createdAt
              deletedAt: deletedAt
              deleted: true
              defaultTasklist:
                meta: '{}'
                id: 0
                type: type
              stats:
                estimatedTime: 5
                total: 2
                active: 1
                completed: 5
              sortOrder: sortOrder
              name: name
              hasTriggers: true
              id: 6
              updatedAt: updatedAt
          tasklists:
            key:
              milestone:
                meta: '{}'
                id: 0
                type: type
              milestoneId: 5
              name: name
              project:
                meta: '{}'
                id: 0
                type: type
              id: 5
              newTaskDefaults:
                estimatedMinutes: 2
                dueDate: dueDate
                responisblePartyIds:
                  companies:
                  - meta: '{}'
                    id: 0
                    type: type
                  - meta: '{}'
                    id: 0
                    type: type
                  companyIds:
                  - 7
                  - 7
                  teams:
                  - meta: '{}'
                    id: 0
                    type: type
                  - meta: '{}'
                    id: 0
                    type: type
                  userIds:
                  - 3
                  - 3
                  teamIds:
                  - 9
                  - 9
                  users:
                  - meta: '{}'
                    id: 0
                    type: type
                  - meta: '{}'
                    id: 0
                    type: type
                priority: priority
                startDate: startDate
                tags:
                - 2
                - 2
              taskIds:
              - 7
              - 7
              projectId: 4
              tasks:
              - meta: '{}'
                id: 0
                type: type
              - meta: '{}'
                id: 0
                type: type
          timeTotals:
            key:
              billableLoggedMinutes: 1
              loggedMinutes: 5
              billedloggedMinutes: 5
          milestones:
            key:
              changeFollowers:
              - meta: '{}'
                id: 0
                type: type
              - meta: '{}'
                id: 0
                type: type
              creatorUserId: 8
              private: true
              userFollowingComments: true
              canEdit: true
              tagIds:
              - 4
              - 4
              commentFollowers:
              - meta: '{}'
                id: 0
                type: type
              - meta: '{}'
                id: 0
                type: type
              description: description
              project:
                meta: '{}'
                id: 0
                type: type
              tasklists:
              - meta: '{}'
                id: 0
                type: type
              - meta: '{}'
                id: 0
                type: type
              percentageTasksCompleted: 1
              createdOn: createdOn
              isDeleted: true
              originalDueDate: originalDueDate
              userFollowingChanges: true
              commentFollowerIds:
              - 0
              - 0
              lockdown:
                meta: '{}'
                id: 0
                type: type
              id: 4
              deadline: deadline
              numCommentsRead: 0
              updatedBy: 9
              reminder: true
              canComplete: true
              lockdownId: 3
              completerId: 4
              completed: true
              tags:
              - meta: '{}'
                id: 0
                type: type
              - meta: '{}'
                id: 0
                type: type
              changeFollowerIds:
              - 9
              - 9
              responsiblePartyIds:
              - 6
              - 6
              lastChangedOn: lastChangedOn
              responsibleParties:
              - meta: '{}'
                id: 0
                type: type
              - meta: '{}'
                id: 0
                type: type
              createdBy: 6
              latestUpdates:
              - field: field
                before: '{}'
                after: '{}'
              - field: field
                before: '{}'
                after: '{}'
              percentageComplete: 2
              commentsCount: 7
              completedOn: completedOn
              name: name
              projectId: 8
              tasklistIds:
              - 8
              - 8
              completedBy: 5
              status: status
          users:
            key:
              lastName: lastName
              avatarUrl: avatarUrl
              isAdmin: true
              title: title
              type: type
              firstName: firstName
              companyId: 2
              workingHoursId: 5
              lengthOfDay: 6.878052220127876
              company:
                meta: '{}'
                id: 0
                type: type
              workingHour:
                meta: '{}'
                id: 0
                type: type
              id: 6
              email: email
          tags:
            key:
              color: color
              count: 0
              name: name
              project:
                meta: '{}'
                id: 0
                type: type
              id: 6
              projectId: 1
      properties:
        included:
          $ref: '#/components/schemas/task_Response_included'
        task:
          $ref: '#/components/schemas/view.Task'
      title: Response
      type: object
    task.Task:
      description: Task contains all the information returned from a task.
      properties:
        assignees:
          $ref: '#/components/schemas/payload.UserGroups'
        attachmentIds:
          items:
            type: integer
          type: array
        changeFollowers:
          $ref: '#/components/schemas/payload.UserGroups'
        commentFollowers:
          $ref: '#/components/schemas/payload.UserGroups'
        createdAt:
          type: string
        createdBy:
          type: integer
        crmDealIds:
          items:
            type: integer
          type: array
        customFields:
          items:
            $ref: '#/components/schemas/task.CustomFieldTask'
          type: array
        description:
          type: string
        dueAt:
          description: Date unmarshals represents a Unified API Spec date format.
          title: Date
          type: object
        estimatedMinutes:
          type: integer
        grantAccessTo:
          $ref: '#/components/schemas/payload.UserGroups'
        name:
          type: string
        parentTaskId:
          type: integer
        priority:
          type: string
        private:
          type: boolean
        progress:
          type: integer
        reminders:
          items:
            $ref: '#/components/schemas/task.Reminder'
          type: array
        repeatOptions:
          $ref: '#/components/schemas/task.RepeatOptions'
        startAt:
          description: Date unmarshals represents a Unified API Spec date format.
          title: Date
          type: object
        status:
          type: string
        tagIds:
          items:
            type: integer
          type: array
        tasklistId:
          type: integer
        templateRoleName:
          type: string
        ticketId:
          type: integer
      title: Task
      type: object
    task.TasksResponse:
      description: TasksResponse contains information about a group of tasks.
      example:
        meta:
          page:
            count: 6
            hasMore: true
            pageOffset: 3
            pageSize: 3
        included:
          companies:
            key:
              city: city
              industry:
                meta: '{}'
                id: 0
                type: type
              emailTwo: emailTwo
              industryId: 6
              isOwner: true
              addressTwo: addressTwo
              countryCode: countryCode
              emailThree: emailThree
              id: 1
              state: state
              fax: fax
              zip: zip
              profileText: profileText
              website: website
              clientUsers: 1
              companyNameUrl: companyNameUrl
              logoUrl: logoUrl
              phone: phone
              emailOne: emailOne
              name: name
              privateNotesText: privateNotesText
              accounts: 7
              addressOne: addressOne
              contacts: 1
              canSeePrivate: true
              cid: cid
          cards:
            key:
              archived: true
              archivedAt: archivedAt
              createdAt: createdAt
              createBy:
                meta: '{}'
                id: 0
                type: type
              deletedAt: deletedAt
              visible: true
              displayOrder: 0
              deleteBy:
                meta: '{}'
                id: 0
                type: type
              id: 6
              archivedBy:
                meta: '{}'
                id: 0
                type: type
              status: status
              updatedAt: updatedAt
          comments:
            key:
              id: 0
              title: title
              objectId: 6
              object:
                meta: '{}'
                id: 0
                type: type
              objectType: objectType
          projects:
            key:
              replyByEmailEnabled: true
              startPage: startPage
              endDate: endDate
              overviewStartPage: overviewStartPage
              tagIds:
              - 6
              - 6
              customFieldValueIds:
              - 5
              - 5
              description: description
              minMaxAvailableDates:
                maxEndDate: maxEndDate
                minStartDate: minStartDate
                suggestedEndDate: suggestedEndDate
                suggestedStartDate: suggestedStartDate
                deadlinesFound: true
              ownerId: 8
              type: type
              createdAt: createdAt
              updateId: 6
              logo: logo
              company:
                meta: '{}'
                id: 0
                type: type
              id: 9
              financialBudget:
                meta: '{}'
                id: 0
                type: type
              updatedAt: updatedAt
              harvestTimersEnabled: true
              updatedBy: 1
              activePages:
                comments: true
                riskRegister: true
                list: true
                gantt: true
                billing: true
                notebooks: true
                files: true
                messages: true
                links: true
                time: true
                milestones: true
                board: true
                forms: true
                table: true
                tasks: true
              isStarred: true
              directFileUploadsEnabled: true
              isOnBoardingProject: true
              subStatus: subStatus
              isSampleProject: true
              tags:
              - meta: '{}'
                id: 0
                type: type
              - meta: '{}'
                id: 0
                type: type
              tasksStartPage: tasksStartPage
              financialBudgetId: 9
              privacyEnabled: true
              companyId: 1
              defaultPrivacy: defaultPrivacy
              customFieldValues:
              - meta: '{}'
                id: 0
                type: type
              - meta: '{}'
                id: 0
                type: type
              createdBy: 4
              notifyCommentIncludeCreator: true
              skipWeekends: true
              name: name
              projectOwnerId: 9
              notifyEveryone: true
              timeBudgetId: 3
              showAnnouncement: true
              category:
                meta: '{}'
                id: 0
                type: type
              integrations:
                xero:
                  connected: true
                  countryCode: countryCode
                  organisation: organisation
                  baseCurrency: baseCurrency
                  enabled: true
                oneDriveBusiness:
                  folder: folder
                  folderName: folderName
                  account: account
                  enabled: true
                sharepoint:
                  folder: folder
                  folderName: folderName
                  account: account
                  enabled: true
              ownedBy: 6
              categoryId: 7
              startDate: startDate
              status: status
              timeBudget:
                meta: '{}'
                id: 0
                type: type
          teams:
            key:
              teamLogo: teamLogo
              name: name
              id: 4
              teamLogoColor: teamLogoColor
              teamLogoIcon: teamLogoIcon
          columns:
            key:
              settings:
                reminders: true
                private: true
                comments: true
                tickets: true
                recurring: true
                subtasklabel: true
                subtasktext: true
                avatar: true
                endAt: true
                priority: true
                dependencies: true
                tags: true
                estimatedtime: true
                followers: true
                name: true
                files: true
                progress: true
                assignee: true
                tasklist: true
                time: true
                startAt: true
              color: color
              displayOrder: 0
              project:
                meta: '{}'
                id: 0
                type: type
              sort: sort
              createdAt: createdAt
              deletedAt: deletedAt
              deleted: true
              defaultTasklist:
                meta: '{}'
                id: 0
                type: type
              stats:
                estimatedTime: 5
                total: 2
                active: 1
                completed: 5
              sortOrder: sortOrder
              name: name
              hasTriggers: true
              id: 6
              updatedAt: updatedAt
          tasklists:
            key:
              milestone:
                meta: '{}'
                id: 0
                type: type
              milestoneId: 5
              name: name
              project:
                meta: '{}'
                id: 0
                type: type
              id: 5
              newTaskDefaults:
                estimatedMinutes: 2
                dueDate: dueDate
                responisblePartyIds:
                  companies:
                  - meta: '{}'
                    id: 0
                    type: type
                  - meta: '{}'
                    id: 0
                    type: type
                  companyIds:
                  - 7
                  - 7
                  teams:
                  - meta: '{}'
                    id: 0
                    type: type
                  - meta: '{}'
                    id: 0
                    type: type
                  userIds:
                  - 3
                  - 3
                  teamIds:
                  - 9
                  - 9
                  users:
                  - meta: '{}'
                    id: 0
                    type: type
                  - meta: '{}'
                    id: 0
                    type: type
                priority: priority
                startDate: startDate
                tags:
                - 2
                - 2
              taskIds:
              - 7
              - 7
              projectId: 4
              tasks:
              - meta: '{}'
                id: 0
                type: type
              - meta: '{}'
                id: 0
                type: type
          timeTotals:
            key:
              billableLoggedMinutes: 1
              loggedMinutes: 5
              billedloggedMinutes: 5
          milestones:
            key:
              changeFollowers:
              - meta: '{}'
                id: 0
                type: type
              - meta: '{}'
                id: 0
                type: type
              creatorUserId: 8
              private: true
              userFollowingComments: true
              canEdit: true
              tagIds:
              - 4
              - 4
              commentFollowers:
              - meta: '{}'
                id: 0
                type: type
              - meta: '{}'
                id: 0
                type: type
              description: description
              project:
                meta: '{}'
                id: 0
                type: type
              tasklists:
              - meta: '{}'
                id: 0
                type: type
              - meta: '{}'
                id: 0
                type: type
              percentageTasksCompleted: 1
              createdOn: createdOn
              isDeleted: true
              originalDueDate: originalDueDate
              userFollowingChanges: true
              commentFollowerIds:
              - 0
              - 0
              lockdown:
                meta: '{}'
                id: 0
                type: type
              id: 4
              deadline: deadline
              numCommentsRead: 0
              updatedBy: 9
              reminder: true
              canComplete: true
              lockdownId: 3
              completerId: 4
              completed: true
              tags:
              - meta: '{}'
                id: 0
                type: type
              - meta: '{}'
                id: 0
                type: type
              changeFollowerIds:
              - 9
              - 9
              responsiblePartyIds:
              - 6
              - 6
              lastChangedOn: lastChangedOn
              responsibleParties:
              - meta: '{}'
                id: 0
                type: type
              - meta: '{}'
                id: 0
                type: type
              createdBy: 6
              latestUpdates:
              - field: field
                before: '{}'
                after: '{}'
              - field: field
                before: '{}'
                after: '{}'
              percentageComplete: 2
              commentsCount: 7
              completedOn: completedOn
              name: name
              projectId: 8
              tasklistIds:
              - 8
              - 8
              completedBy: 5
              status: status
          users:
            key:
              lastName: lastName
              avatarUrl: avatarUrl
              isAdmin: true
              title: title
              type: type
              firstName: firstName
              companyId: 2
              workingHoursId: 5
              lengthOfDay: 6.878052220127876
              company:
                meta: '{}'
                id: 0
                type: type
              workingHour:
                meta: '{}'
                id: 0
                type: type
              id: 6
              email: email
          tags:
            key:
              color: color
              count: 0
              name: name
              project:
                meta: '{}'
                id: 0
                type: type
              id: 6
              projectId: 1
        tasks:
        - parentTaskId: 9
          assigneeUserIds:
          - 1
          - 1
          dueDate: dueDate
          tagIds:
          - 1
          - 1
          displayOrder: 9
          description: description
          isPrivate: 8
          userPermissions:
            canComplete: true
            canEdit: true
            canViewEstTime: true
            canAddSubtasks: true
            canLogTime: true
          assigneeUsers:
          - meta: '{}'
            id: 0
            type: type
          - meta: '{}'
            id: 0
            type: type
          originalDueDate: '{}'
          assigneeCompanyIds:
          - 1
          - 1
          assigneeTeamIds:
          - 1
          - 1
          id: 6
          subTaskIds:
          - 6
          - 6
          updatedAt: updatedAt
          predecessorIds:
          - 6
          - 6
          createdByUserId: 1
          updatedBy: 6
          crmDealIds:
          - 4
          - 4
          assigneeCompanies:
          - meta: '{}'
            id: 0
            type: type
          - meta: '{}'
            id: 0
            type: type
          parentTask:
            meta: '{}'
            id: 0
            type: type
          hasDeskTickets: true
          priority: priority
          dateUpdated: dateUpdated
          assigneeTeams:
          - meta: '{}'
            id: 0
            type: type
          - meta: '{}'
            id: 0
            type: type
          dependencyIds:
          - 5
          - 5
          createdBy: 7
          latestUpdates:
          - field: field
            before: '{}'
            after: '{}'
          - field: field
            before: '{}'
            after: '{}'
          completedOn: completedOn
          name: name
          progress: 3
          estimateMinutes: 9
          tasklist:
            meta: '{}'
            id: 0
            type: type
          completedBy: 6
          startDate: startDate
          tasklistId: 2
          status: status
        - parentTaskId: 9
          assigneeUserIds:
          - 1
          - 1
          dueDate: dueDate
          tagIds:
          - 1
          - 1
          displayOrder: 9
          description: description
          isPrivate: 8
          userPermissions:
            canComplete: true
            canEdit: true
            canViewEstTime: true
            canAddSubtasks: true
            canLogTime: true
          assigneeUsers:
          - meta: '{}'
            id: 0
            type: type
          - meta: '{}'
            id: 0
            type: type
          originalDueDate: '{}'
          assigneeCompanyIds:
          - 1
          - 1
          assigneeTeamIds:
          - 1
          - 1
          id: 6
          subTaskIds:
          - 6
          - 6
          updatedAt: updatedAt
          predecessorIds:
          - 6
          - 6
          createdByUserId: 1
          updatedBy: 6
          crmDealIds:
          - 4
          - 4
          assigneeCompanies:
          - meta: '{}'
            id: 0
            type: type
          - meta: '{}'
            id: 0
            type: type
          parentTask:
            meta: '{}'
            id: 0
            type: type
          hasDeskTickets: true
          priority: priority
          dateUpdated: dateUpdated
          assigneeTeams:
          - meta: '{}'
            id: 0
            type: type
          - meta: '{}'
            id: 0
            type: type
          dependencyIds:
          - 5
          - 5
          createdBy: 7
          latestUpdates:
          - field: field
            before: '{}'
            after: '{}'
          - field: field
            before: '{}'
            after: '{}'
          completedOn: completedOn
          name: name
          progress: 3
          estimateMinutes: 9
          tasklist:
            meta: '{}'
            id: 0
            type: type
          completedBy: 6
          startDate: startDate
          tasklistId: 2
          status: status
      properties:
        included:
          $ref: '#/components/schemas/task_Response_included'
        meta:
          $ref: '#/components/schemas/view.Meta'
        tasks:
          items:
            $ref: '#/components/schemas/view.Task'
          type: array
      title: TasksResponse
      type: object
    time.Location:
      description: |-
        A Location maps time instants to the zone in use at that time.
        Typically, the Location represents the collection of time offsets
        in use in a geographical area. For many Locations the time offset varies
        depending on whether daylight savings time is in use at the time instant.
      title: Location
      type: object
    timelog.TimelogsResponse:
      description: TimelogsResponse contains information about a group of timelogs.
      example:
        timelogs:
        - tagIds:
          - 4
          - 4
          description: description
          loggedBy: 7
          project:
            meta: '{}'
            id: 0
            type: type
          deskTicketId: 6
          hasStartTime: true
          projectBillingInvoice:
            meta: '{}'
            id: 0
            type: type
          deletedBy: 6
          createdAt: createdAt
          dateCreated: dateCreated
          editedByUserId: 3
          invoiceNumber: invoiceNumber
          dateEdited: dateEdited
          id: 3
          loggedByUserId: 0
          updatedAt: updatedAt
          updatedBy: 3
          timeLogged: timeLogged
          minutes: 7
          billable: true
          userId: 3
          dateDeleted: dateDeleted
          deletedByUserId: 5
          tags:
          - meta: '{}'
            id: 0
            type: type
          - meta: '{}'
            id: 0
            type: type
          taskPreMove:
            meta: '{}'
            id: 0
            type: type
          taskIdPreMove: 7
          deletedAt: deletedAt
          deleted: true
          projectBillingInvoiceId: 6
          task:
            meta: '{}'
            id: 0
            type: type
          projectId: 0
          user:
            meta: '{}'
            id: 0
            type: type
          taskId: 8
        - tagIds:
          - 4
          - 4
          description: description
          loggedBy: 7
          project:
            meta: '{}'
            id: 0
            type: type
          deskTicketId: 6
          hasStartTime: true
          projectBillingInvoice:
            meta: '{}'
            id: 0
            type: type
          deletedBy: 6
          createdAt: createdAt
          dateCreated: dateCreated
          editedByUserId: 3
          invoiceNumber: invoiceNumber
          dateEdited: dateEdited
          id: 3
          loggedByUserId: 0
          updatedAt: updatedAt
          updatedBy: 3
          timeLogged: timeLogged
          minutes: 7
          billable: true
          userId: 3
          dateDeleted: dateDeleted
          deletedByUserId: 5
          tags:
          - meta: '{}'
            id: 0
            type: type
          - meta: '{}'
            id: 0
            type: type
          taskPreMove:
            meta: '{}'
            id: 0
            type: type
          taskIdPreMove: 7
          deletedAt: deletedAt
          deleted: true
          projectBillingInvoiceId: 6
          task:
            meta: '{}'
            id: 0
            type: type
          projectId: 0
          user:
            meta: '{}'
            id: 0
            type: type
          taskId: 8
        meta:
          page:
            count: 6
            hasMore: true
            pageOffset: 3
            pageSize: 3
        included:
          projects:
            key:
              replyByEmailEnabled: true
              startPage: startPage
              endDate: endDate
              overviewStartPage: overviewStartPage
              tagIds:
              - 6
              - 6
              customFieldValueIds:
              - 5
              - 5
              description: description
              minMaxAvailableDates:
                maxEndDate: maxEndDate
                minStartDate: minStartDate
                suggestedEndDate: suggestedEndDate
                suggestedStartDate: suggestedStartDate
                deadlinesFound: true
              ownerId: 8
              type: type
              createdAt: createdAt
              updateId: 6
              logo: logo
              company:
                meta: '{}'
                id: 0
                type: type
              id: 9
              financialBudget:
                meta: '{}'
                id: 0
                type: type
              updatedAt: updatedAt
              harvestTimersEnabled: true
              updatedBy: 1
              activePages:
                comments: true
                riskRegister: true
                list: true
                gantt: true
                billing: true
                notebooks: true
                files: true
                messages: true
                links: true
                time: true
                milestones: true
                board: true
                forms: true
                table: true
                tasks: true
              isStarred: true
              directFileUploadsEnabled: true
              isOnBoardingProject: true
              subStatus: subStatus
              isSampleProject: true
              tags:
              - meta: '{}'
                id: 0
                type: type
              - meta: '{}'
                id: 0
                type: type
              tasksStartPage: tasksStartPage
              financialBudgetId: 9
              privacyEnabled: true
              companyId: 1
              defaultPrivacy: defaultPrivacy
              customFieldValues:
              - meta: '{}'
                id: 0
                type: type
              - meta: '{}'
                id: 0
                type: type
              createdBy: 4
              notifyCommentIncludeCreator: true
              skipWeekends: true
              name: name
              projectOwnerId: 9
              notifyEveryone: true
              timeBudgetId: 3
              showAnnouncement: true
              category:
                meta: '{}'
                id: 0
                type: type
              integrations:
                xero:
                  connected: true
                  countryCode: countryCode
                  organisation: organisation
                  baseCurrency: baseCurrency
                  enabled: true
                oneDriveBusiness:
                  folder: folder
                  folderName: folderName
                  account: account
                  enabled: true
                sharepoint:
                  folder: folder
                  folderName: folderName
                  account: account
                  enabled: true
              ownedBy: 6
              categoryId: 7
              startDate: startDate
              status: status
              timeBudget:
                meta: '{}'
                id: 0
                type: type
          tasklists:
            key:
              milestone:
                meta: '{}'
                id: 0
                type: type
              milestoneId: 5
              name: name
              project:
                meta: '{}'
                id: 0
                type: type
              id: 5
              newTaskDefaults:
                estimatedMinutes: 2
                dueDate: dueDate
                responisblePartyIds:
                  companies:
                  - meta: '{}'
                    id: 0
                    type: type
                  - meta: '{}'
                    id: 0
                    type: type
                  companyIds:
                  - 7
                  - 7
                  teams:
                  - meta: '{}'
                    id: 0
                    type: type
                  - meta: '{}'
                    id: 0
                    type: type
                  userIds:
                  - 3
                  - 3
                  teamIds:
                  - 9
                  - 9
                  users:
                  - meta: '{}'
                    id: 0
                    type: type
                  - meta: '{}'
                    id: 0
                    type: type
                priority: priority
                startDate: startDate
                tags:
                - 2
                - 2
              taskIds:
              - 7
              - 7
              projectId: 4
              tasks:
              - meta: '{}'
                id: 0
                type: type
              - meta: '{}'
                id: 0
                type: type
          tasks:
            key:
              parentTaskId: 9
              assigneeUserIds:
              - 1
              - 1
              dueDate: dueDate
              tagIds:
              - 1
              - 1
              displayOrder: 9
              description: description
              isPrivate: 8
              userPermissions:
                canComplete: true
                canEdit: true
                canViewEstTime: true
                canAddSubtasks: true
                canLogTime: true
              assigneeUsers:
              - meta: '{}'
                id: 0
                type: type
              - meta: '{}'
                id: 0
                type: type
              originalDueDate: '{}'
              assigneeCompanyIds:
              - 1
              - 1
              assigneeTeamIds:
              - 1
              - 1
              id: 6
              subTaskIds:
              - 6
              - 6
              updatedAt: updatedAt
              predecessorIds:
              - 6
              - 6
              createdByUserId: 1
              updatedBy: 6
              crmDealIds:
              - 4
              - 4
              assigneeCompanies:
              - meta: '{}'
                id: 0
                type: type
              - meta: '{}'
                id: 0
                type: type
              parentTask:
                meta: '{}'
                id: 0
                type: type
              hasDeskTickets: true
              priority: priority
              dateUpdated: dateUpdated
              assigneeTeams:
              - meta: '{}'
                id: 0
                type: type
              - meta: '{}'
                id: 0
                type: type
              dependencyIds:
              - 5
              - 5
              createdBy: 7
              latestUpdates:
              - field: field
                before: '{}'
                after: '{}'
              - field: field
                before: '{}'
                after: '{}'
              completedOn: completedOn
              name: name
              progress: 3
              estimateMinutes: 9
              tasklist:
                meta: '{}'
                id: 0
                type: type
              completedBy: 6
              startDate: startDate
              tasklistId: 2
              status: status
          users:
            key:
              lastName: lastName
              avatarUrl: avatarUrl
              isAdmin: true
              title: title
              type: type
              firstName: firstName
              companyId: 2
              workingHoursId: 5
              lengthOfDay: 6.878052220127876
              company:
                meta: '{}'
                id: 0
                type: type
              workingHour:
                meta: '{}'
                id: 0
                type: type
              id: 6
              email: email
          tags:
            key:
              color: color
              count: 0
              name: name
              project:
                meta: '{}'
                id: 0
                type: type
              id: 6
              projectId: 1
      properties:
        included:
          $ref: '#/components/schemas/timelog_TimelogsResponse_included'
        meta:
          $ref: '#/components/schemas/view.Meta'
        timelogs:
          items:
            $ref: '#/components/schemas/view.Timelog'
          type: array
      title: TimelogsResponse
      type: object
    timelog.TotalsResponse:
      description: TotalsResponse contains information about timelog totals.
      example:
        time-totals:
          estimatedMinutes: 0
          minutesBillable: 7
          estimatedMinutesWithLoggedTime: 5
          estimatedMinutesCompleted: 1
          estimatedMinutesActive: 6
          minutes: 2
          minutesNonBilled: 2
          estimatedMinutesFiltered: 5
          minutesBilled: 9
          minutesNonBillable: 3
      properties:
        time-totals:
          $ref: '#/components/schemas/view.TimelogTotals'
      title: TotalsResponse
      type: object
    timer.DeleteRequest:
      description: |-
        DeleteRequest contains the whether or not a timer should be hard deleted
        or soft deleted. Hard delete will remove the timer row from the DB and
        remove its timer intervals. Soft delete will just mark it as deleted.
      properties:
        hardDelete:
          type: boolean
      title: DeleteRequest
      type: object
    timer.Request:
      description: Request contains information of a timer to be created or updated.
      properties:
        timer:
          $ref: '#/components/schemas/timer.Timer'
      title: Request
      type: object
    timer.Response:
      description: |-
        Response contains the information returned when sending a PUT/POST
        request to the timers endpoint, or GET request for a single item by ID
      example:
        timer:
          timerLastIntervalEnd: timerLastIntervalEnd
          description: description
          project:
            meta: '{}'
            id: 0
            type: type
          billable: true
          userId: 9
          duration: 0
          running: true
          createdAt: createdAt
          deletedAt: deletedAt
          intervals:
          - duration: 1
            from: from
            id: 5
            to: to
          - duration: 1
            from: from
            id: 5
            to: to
          deleted: true
          task:
            meta: '{}'
            id: 0
            type: type
          timeLogId: 7
          lastStartedAt: lastStartedAt
          timelog:
            meta: '{}'
            id: 0
            type: type
          serverTime: serverTime
          id: 6
          projectId: 5
          user:
            meta: '{}'
            id: 0
            type: type
          taskId: 2
          updatedAt: updatedAt
        included:
          projects:
            key:
              replyByEmailEnabled: true
              startPage: startPage
              endDate: endDate
              overviewStartPage: overviewStartPage
              tagIds:
              - 6
              - 6
              customFieldValueIds:
              - 5
              - 5
              description: description
              minMaxAvailableDates:
                maxEndDate: maxEndDate
                minStartDate: minStartDate
                suggestedEndDate: suggestedEndDate
                suggestedStartDate: suggestedStartDate
                deadlinesFound: true
              ownerId: 8
              type: type
              createdAt: createdAt
              updateId: 6
              logo: logo
              company:
                meta: '{}'
                id: 0
                type: type
              id: 9
              financialBudget:
                meta: '{}'
                id: 0
                type: type
              updatedAt: updatedAt
              harvestTimersEnabled: true
              updatedBy: 1
              activePages:
                comments: true
                riskRegister: true
                list: true
                gantt: true
                billing: true
                notebooks: true
                files: true
                messages: true
                links: true
                time: true
                milestones: true
                board: true
                forms: true
                table: true
                tasks: true
              isStarred: true
              directFileUploadsEnabled: true
              isOnBoardingProject: true
              subStatus: subStatus
              isSampleProject: true
              tags:
              - meta: '{}'
                id: 0
                type: type
              - meta: '{}'
                id: 0
                type: type
              tasksStartPage: tasksStartPage
              financialBudgetId: 9
              privacyEnabled: true
              companyId: 1
              defaultPrivacy: defaultPrivacy
              customFieldValues:
              - meta: '{}'
                id: 0
                type: type
              - meta: '{}'
                id: 0
                type: type
              createdBy: 4
              notifyCommentIncludeCreator: true
              skipWeekends: true
              name: name
              projectOwnerId: 9
              notifyEveryone: true
              timeBudgetId: 3
              showAnnouncement: true
              category:
                meta: '{}'
                id: 0
                type: type
              integrations:
                xero:
                  connected: true
                  countryCode: countryCode
                  organisation: organisation
                  baseCurrency: baseCurrency
                  enabled: true
                oneDriveBusiness:
                  folder: folder
                  folderName: folderName
                  account: account
                  enabled: true
                sharepoint:
                  folder: folder
                  folderName: folderName
                  account: account
                  enabled: true
              ownedBy: 6
              categoryId: 7
              startDate: startDate
              status: status
              timeBudget:
                meta: '{}'
                id: 0
                type: type
          tasklists:
            key:
              milestone:
                meta: '{}'
                id: 0
                type: type
              milestoneId: 5
              name: name
              project:
                meta: '{}'
                id: 0
                type: type
              id: 5
              newTaskDefaults:
                estimatedMinutes: 2
                dueDate: dueDate
                responisblePartyIds:
                  companies:
                  - meta: '{}'
                    id: 0
                    type: type
                  - meta: '{}'
                    id: 0
                    type: type
                  companyIds:
                  - 7
                  - 7
                  teams:
                  - meta: '{}'
                    id: 0
                    type: type
                  - meta: '{}'
                    id: 0
                    type: type
                  userIds:
                  - 3
                  - 3
                  teamIds:
                  - 9
                  - 9
                  users:
                  - meta: '{}'
                    id: 0
                    type: type
                  - meta: '{}'
                    id: 0
                    type: type
                priority: priority
                startDate: startDate
                tags:
                - 2
                - 2
              taskIds:
              - 7
              - 7
              projectId: 4
              tasks:
              - meta: '{}'
                id: 0
                type: type
              - meta: '{}'
                id: 0
                type: type
          tasks:
            key:
              parentTaskId: 9
              assigneeUserIds:
              - 1
              - 1
              dueDate: dueDate
              tagIds:
              - 1
              - 1
              displayOrder: 9
              description: description
              isPrivate: 8
              userPermissions:
                canComplete: true
                canEdit: true
                canViewEstTime: true
                canAddSubtasks: true
                canLogTime: true
              assigneeUsers:
              - meta: '{}'
                id: 0
                type: type
              - meta: '{}'
                id: 0
                type: type
              originalDueDate: '{}'
              assigneeCompanyIds:
              - 1
              - 1
              assigneeTeamIds:
              - 1
              - 1
              id: 6
              subTaskIds:
              - 6
              - 6
              updatedAt: updatedAt
              predecessorIds:
              - 6
              - 6
              createdByUserId: 1
              updatedBy: 6
              crmDealIds:
              - 4
              - 4
              assigneeCompanies:
              - meta: '{}'
                id: 0
                type: type
              - meta: '{}'
                id: 0
                type: type
              parentTask:
                meta: '{}'
                id: 0
                type: type
              hasDeskTickets: true
              priority: priority
              dateUpdated: dateUpdated
              assigneeTeams:
              - meta: '{}'
                id: 0
                type: type
              - meta: '{}'
                id: 0
                type: type
              dependencyIds:
              - 5
              - 5
              createdBy: 7
              latestUpdates:
              - field: field
                before: '{}'
                after: '{}'
              - field: field
                before: '{}'
                after: '{}'
              completedOn: completedOn
              name: name
              progress: 3
              estimateMinutes: 9
              tasklist:
                meta: '{}'
                id: 0
                type: type
              completedBy: 6
              startDate: startDate
              tasklistId: 2
              status: status
          users:
            key:
              lastName: lastName
              avatarUrl: avatarUrl
              isAdmin: true
              title: title
              type: type
              firstName: firstName
              companyId: 2
              workingHoursId: 5
              lengthOfDay: 6.878052220127876
              company:
                meta: '{}'
                id: 0
                type: type
              workingHour:
                meta: '{}'
                id: 0
                type: type
              id: 6
              email: email
      properties:
        included:
          $ref: '#/components/schemas/timer_Response_included'
        timer:
          $ref: '#/components/schemas/view.Timer'
      title: Response
      type: object
    timer.Timer:
      description: Timer contains all the information returned from a timer.
      properties:
        description:
          type: string
        isBillable:
          type: boolean
        isRunning:
          type: boolean
        projectId:
          type: integer
        seconds:
          type: integer
        stopRunningTimers:
          type: boolean
        taskId:
          type: integer
      title: Timer
      type: object
    timer.TimersResponse:
      description: |-
        TimersResponse contains all the information returned when sending a GET
        request to the timers endpoint.
      example:
        timers:
        - timerLastIntervalEnd: timerLastIntervalEnd
          description: description
          project:
            meta: '{}'
            id: 0
            type: type
          billable: true
          userId: 9
          duration: 0
          running: true
          createdAt: createdAt
          deletedAt: deletedAt
          intervals:
          - duration: 1
            from: from
            id: 5
            to: to
          - duration: 1
            from: from
            id: 5
            to: to
          deleted: true
          task:
            meta: '{}'
            id: 0
            type: type
          timeLogId: 7
          lastStartedAt: lastStartedAt
          timelog:
            meta: '{}'
            id: 0
            type: type
          serverTime: serverTime
          id: 6
          projectId: 5
          user:
            meta: '{}'
            id: 0
            type: type
          taskId: 2
          updatedAt: updatedAt
        - timerLastIntervalEnd: timerLastIntervalEnd
          description: description
          project:
            meta: '{}'
            id: 0
            type: type
          billable: true
          userId: 9
          duration: 0
          running: true
          createdAt: createdAt
          deletedAt: deletedAt
          intervals:
          - duration: 1
            from: from
            id: 5
            to: to
          - duration: 1
            from: from
            id: 5
            to: to
          deleted: true
          task:
            meta: '{}'
            id: 0
            type: type
          timeLogId: 7
          lastStartedAt: lastStartedAt
          timelog:
            meta: '{}'
            id: 0
            type: type
          serverTime: serverTime
          id: 6
          projectId: 5
          user:
            meta: '{}'
            id: 0
            type: type
          taskId: 2
          updatedAt: updatedAt
        meta:
          page:
            count: 6
            hasMore: true
            pageOffset: 3
            pageSize: 3
        included:
          projects:
            key:
              replyByEmailEnabled: true
              startPage: startPage
              endDate: endDate
              overviewStartPage: overviewStartPage
              tagIds:
              - 6
              - 6
              customFieldValueIds:
              - 5
              - 5
              description: description
              minMaxAvailableDates:
                maxEndDate: maxEndDate
                minStartDate: minStartDate
                suggestedEndDate: suggestedEndDate
                suggestedStartDate: suggestedStartDate
                deadlinesFound: true
              ownerId: 8
              type: type
              createdAt: createdAt
              updateId: 6
              logo: logo
              company:
                meta: '{}'
                id: 0
                type: type
              id: 9
              financialBudget:
                meta: '{}'
                id: 0
                type: type
              updatedAt: updatedAt
              harvestTimersEnabled: true
              updatedBy: 1
              activePages:
                comments: true
                riskRegister: true
                list: true
                gantt: true
                billing: true
                notebooks: true
                files: true
                messages: true
                links: true
                time: true
                milestones: true
                board: true
                forms: true
                table: true
                tasks: true
              isStarred: true
              directFileUploadsEnabled: true
              isOnBoardingProject: true
              subStatus: subStatus
              isSampleProject: true
              tags:
              - meta: '{}'
                id: 0
                type: type
              - meta: '{}'
                id: 0
                type: type
              tasksStartPage: tasksStartPage
              financialBudgetId: 9
              privacyEnabled: true
              companyId: 1
              defaultPrivacy: defaultPrivacy
              customFieldValues:
              - meta: '{}'
                id: 0
                type: type
              - meta: '{}'
                id: 0
                type: type
              createdBy: 4
              notifyCommentIncludeCreator: true
              skipWeekends: true
              name: name
              projectOwnerId: 9
              notifyEveryone: true
              timeBudgetId: 3
              showAnnouncement: true
              category:
                meta: '{}'
                id: 0
                type: type
              integrations:
                xero:
                  connected: true
                  countryCode: countryCode
                  organisation: organisation
                  baseCurrency: baseCurrency
                  enabled: true
                oneDriveBusiness:
                  folder: folder
                  folderName: folderName
                  account: account
                  enabled: true
                sharepoint:
                  folder: folder
                  folderName: folderName
                  account: account
                  enabled: true
              ownedBy: 6
              categoryId: 7
              startDate: startDate
              status: status
              timeBudget:
                meta: '{}'
                id: 0
                type: type
          tasklists:
            key:
              milestone:
                meta: '{}'
                id: 0
                type: type
              milestoneId: 5
              name: name
              project:
                meta: '{}'
                id: 0
                type: type
              id: 5
              newTaskDefaults:
                estimatedMinutes: 2
                dueDate: dueDate
                responisblePartyIds:
                  companies:
                  - meta: '{}'
                    id: 0
                    type: type
                  - meta: '{}'
                    id: 0
                    type: type
                  companyIds:
                  - 7
                  - 7
                  teams:
                  - meta: '{}'
                    id: 0
                    type: type
                  - meta: '{}'
                    id: 0
                    type: type
                  userIds:
                  - 3
                  - 3
                  teamIds:
                  - 9
                  - 9
                  users:
                  - meta: '{}'
                    id: 0
                    type: type
                  - meta: '{}'
                    id: 0
                    type: type
                priority: priority
                startDate: startDate
                tags:
                - 2
                - 2
              taskIds:
              - 7
              - 7
              projectId: 4
              tasks:
              - meta: '{}'
                id: 0
                type: type
              - meta: '{}'
                id: 0
                type: type
          tasks:
            key:
              parentTaskId: 9
              assigneeUserIds:
              - 1
              - 1
              dueDate: dueDate
              tagIds:
              - 1
              - 1
              displayOrder: 9
              description: description
              isPrivate: 8
              userPermissions:
                canComplete: true
                canEdit: true
                canViewEstTime: true
                canAddSubtasks: true
                canLogTime: true
              assigneeUsers:
              - meta: '{}'
                id: 0
                type: type
              - meta: '{}'
                id: 0
                type: type
              originalDueDate: '{}'
              assigneeCompanyIds:
              - 1
              - 1
              assigneeTeamIds:
              - 1
              - 1
              id: 6
              subTaskIds:
              - 6
              - 6
              updatedAt: updatedAt
              predecessorIds:
              - 6
              - 6
              createdByUserId: 1
              updatedBy: 6
              crmDealIds:
              - 4
              - 4
              assigneeCompanies:
              - meta: '{}'
                id: 0
                type: type
              - meta: '{}'
                id: 0
                type: type
              parentTask:
                meta: '{}'
                id: 0
                type: type
              hasDeskTickets: true
              priority: priority
              dateUpdated: dateUpdated
              assigneeTeams:
              - meta: '{}'
                id: 0
                type: type
              - meta: '{}'
                id: 0
                type: type
              dependencyIds:
              - 5
              - 5
              createdBy: 7
              latestUpdates:
              - field: field
                before: '{}'
                after: '{}'
              - field: field
                before: '{}'
                after: '{}'
              completedOn: completedOn
              name: name
              progress: 3
              estimateMinutes: 9
              tasklist:
                meta: '{}'
                id: 0
                type: type
              completedBy: 6
              startDate: startDate
              tasklistId: 2
              status: status
          users:
            key:
              lastName: lastName
              avatarUrl: avatarUrl
              isAdmin: true
              title: title
              type: type
              firstName: firstName
              companyId: 2
              workingHoursId: 5
              lengthOfDay: 6.878052220127876
              company:
                meta: '{}'
                id: 0
                type: type
              workingHour:
                meta: '{}'
                id: 0
                type: type
              id: 6
              email: email
      properties:
        included:
          $ref: '#/components/schemas/timer_Response_included'
        meta:
          $ref: '#/components/schemas/view.Meta'
        timers:
          items:
            $ref: '#/components/schemas/view.Timer'
          type: array
      title: TimersResponse
      type: object
    token.FormToken:
      description: FormToken contains all the information returned from a token.
      properties:
        expires:
          type: boolean
        expiryDate:
          type: string
        state:
          type: string
      title: FormToken
      type: object
    token.Request:
      description: Request contains information of a token to be created or updated.
      properties:
        token:
          $ref: '#/components/schemas/token.FormToken'
      title: Request
      type: object
    token.Response:
      description: Response contains information about a specific token.
      example:
        token:
          expires: true
          updatedBy:
            meta: '{}'
            id: 0
            type: type
          canonicalURL: canonicalURL
          deletedBy:
            meta: '{}'
            id: 0
            type: type
          expiryDate: expiryDate
          createdAt: createdAt
          deletedAt: deletedAt
          form:
            meta: '{}'
            id: 0
            type: type
          createdBy:
            meta: '{}'
            id: 0
            type: type
          installation:
            meta: '{}'
            id: 0
            type: type
          id: 0
          state: state
          value: value
          updatedAt: updatedAt
      properties:
        token:
          $ref: '#/components/schemas/view.FormToken'
      title: Response
      type: object
    unbilled.ProjectMetricUnbilledResponse:
      description: |-
        ProjectMetricUnbilledResponse contains information about a group of unbilled
        invoices.
      example:
        data:
          value: 0
      properties:
        data:
          $ref: '#/components/schemas/invoice_ProjectMetricInvoicesResponse_data'
      title: ProjectMetricUnbilledResponse
      type: object
    update.ProjectUpdatesResponse:
      description: ProjectUpdatesResponse contains information about a group of updates.
      example:
        projectUpdates:
        - likeFromUsers:
          - meta: '{}'
            id: 0
            type: type
          - meta: '{}'
            id: 0
            type: type
          color: color
          health: 4
          project:
            meta: '{}'
            id: 0
            type: type
          deletedBy: 1
          healthLabel: healthLabel
          createdAt: createdAt
          deletedAt: deletedAt
          deleted: true
          likeFromUserIDs:
          - 9
          - 9
          createdBy: 7
          reactions:
            mine: mine
            counts:
              joy: 6
              like: 5
              dislike: 1
              frown: 2
              heart: 6
          id: 5
          text: text
          projectId: 9
          updatedAt: updatedAt
        - likeFromUsers:
          - meta: '{}'
            id: 0
            type: type
          - meta: '{}'
            id: 0
            type: type
          color: color
          health: 4
          project:
            meta: '{}'
            id: 0
            type: type
          deletedBy: 1
          healthLabel: healthLabel
          createdAt: createdAt
          deletedAt: deletedAt
          deleted: true
          likeFromUserIDs:
          - 9
          - 9
          createdBy: 7
          reactions:
            mine: mine
            counts:
              joy: 6
              like: 5
              dislike: 1
              frown: 2
              heart: 6
          id: 5
          text: text
          projectId: 9
          updatedAt: updatedAt
        meta:
          page:
            count: 6
            hasMore: true
            pageOffset: 3
            pageSize: 3
        included:
          projects:
            key:
              replyByEmailEnabled: true
              startPage: startPage
              endDate: endDate
              overviewStartPage: overviewStartPage
              tagIds:
              - 6
              - 6
              customFieldValueIds:
              - 5
              - 5
              description: description
              minMaxAvailableDates:
                maxEndDate: maxEndDate
                minStartDate: minStartDate
                suggestedEndDate: suggestedEndDate
                suggestedStartDate: suggestedStartDate
                deadlinesFound: true
              ownerId: 8
              type: type
              createdAt: createdAt
              updateId: 6
              logo: logo
              company:
                meta: '{}'
                id: 0
                type: type
              id: 9
              financialBudget:
                meta: '{}'
                id: 0
                type: type
              updatedAt: updatedAt
              harvestTimersEnabled: true
              updatedBy: 1
              activePages:
                comments: true
                riskRegister: true
                list: true
                gantt: true
                billing: true
                notebooks: true
                files: true
                messages: true
                links: true
                time: true
                milestones: true
                board: true
                forms: true
                table: true
                tasks: true
              isStarred: true
              directFileUploadsEnabled: true
              isOnBoardingProject: true
              subStatus: subStatus
              isSampleProject: true
              tags:
              - meta: '{}'
                id: 0
                type: type
              - meta: '{}'
                id: 0
                type: type
              tasksStartPage: tasksStartPage
              financialBudgetId: 9
              privacyEnabled: true
              companyId: 1
              defaultPrivacy: defaultPrivacy
              customFieldValues:
              - meta: '{}'
                id: 0
                type: type
              - meta: '{}'
                id: 0
                type: type
              createdBy: 4
              notifyCommentIncludeCreator: true
              skipWeekends: true
              name: name
              projectOwnerId: 9
              notifyEveryone: true
              timeBudgetId: 3
              showAnnouncement: true
              category:
                meta: '{}'
                id: 0
                type: type
              integrations:
                xero:
                  connected: true
                  countryCode: countryCode
                  organisation: organisation
                  baseCurrency: baseCurrency
                  enabled: true
                oneDriveBusiness:
                  folder: folder
                  folderName: folderName
                  account: account
                  enabled: true
                sharepoint:
                  folder: folder
                  folderName: folderName
                  account: account
                  enabled: true
              ownedBy: 6
              categoryId: 7
              startDate: startDate
              status: status
              timeBudget:
                meta: '{}'
                id: 0
                type: type
          users:
            key:
              lastName: lastName
              avatarUrl: avatarUrl
              isAdmin: true
              title: title
              type: type
              firstName: firstName
              companyId: 2
              workingHoursId: 5
              lengthOfDay: 6.878052220127876
              company:
                meta: '{}'
                id: 0
                type: type
              workingHour:
                meta: '{}'
                id: 0
                type: type
              id: 6
              email: email
      properties:
        included:
          $ref: '#/components/schemas/calendar_EventsResponse_included'
        meta:
          $ref: '#/components/schemas/view.Meta'
        projectUpdates:
          items:
            $ref: '#/components/schemas/view.ProjectUpdate'
          type: array
      title: ProjectUpdatesResponse
      type: object
    usercost.Request:
      description: Request contains information of a usercost to be created or updated.
      properties:
        cost:
          type: integer
      title: Request
      type: object
    usercost.Response:
      description: Response contains information about a specific usercost.
      example:
        usercost:
          cost: 0
          user:
            meta: '{}'
            id: 0
            type: type
          userId: 6
      properties:
        usercost:
          $ref: '#/components/schemas/view.Usercost'
      title: Response
      type: object
    utilization.Response:
      description: Response contains information about a specific availability.
      example:
        meta:
          page:
            count: 6
            hasMore: true
            pageOffset: 3
            pageSize: 3
        utilization:
        - data:
          - estimatedMinutes: 5
            billableMinutes: 1
            endDate: '{}'
            allocatedMinutes: 0
            loggedMinutes: 5
            unavailableMinutes: 2
            availableMinutes: 6
            startDate: '{}'
            unbillableMinutes: 7
          - estimatedMinutes: 5
            billableMinutes: 1
            endDate: '{}'
            allocatedMinutes: 0
            loggedMinutes: 5
            unavailableMinutes: 2
            availableMinutes: 6
            startDate: '{}'
            unbillableMinutes: 7
          user:
            meta: '{}'
            id: 0
            type: type
          userId: 9
        - data:
          - estimatedMinutes: 5
            billableMinutes: 1
            endDate: '{}'
            allocatedMinutes: 0
            loggedMinutes: 5
            unavailableMinutes: 2
            availableMinutes: 6
            startDate: '{}'
            unbillableMinutes: 7
          - estimatedMinutes: 5
            billableMinutes: 1
            endDate: '{}'
            allocatedMinutes: 0
            loggedMinutes: 5
            unavailableMinutes: 2
            availableMinutes: 6
            startDate: '{}'
            unbillableMinutes: 7
          user:
            meta: '{}'
            id: 0
            type: type
          userId: 9
        included:
          users:
            key:
              lastName: lastName
              avatarUrl: avatarUrl
              isAdmin: true
              title: title
              type: type
              firstName: firstName
              companyId: 2
              workingHoursId: 5
              lengthOfDay: 6.878052220127876
              company:
                meta: '{}'
                id: 0
                type: type
              workingHour:
                meta: '{}'
                id: 0
                type: type
              id: 6
              email: email
      properties:
        included:
          $ref: '#/components/schemas/notebook_VersionResponse_included'
        meta:
          $ref: '#/components/schemas/view.Meta'
        utilization:
          items:
            $ref: '#/components/schemas/view.UserUtilization'
          type: array
      title: Response
      type: object
    view.Allocation:
      description: Allocation contains all the information returned from a allocation.
      example:
        updatedBy: 4
        color: color
        description: description
        project:
          meta: '{}'
          id: 0
          type: type
        startedAt: '{}'
        availableDuration: 1
        title: title
        deletedBy: 5
        hoursPerDay: 7.061401241503109
        duration: 2
        createdAt: createdAt
        distributeType: distributeType
        deletedAt: deletedAt
        createdBy: 5
        endedAt: '{}'
        installation:
          meta: '{}'
          id: 0
          type: type
        id: 9
        installationId: 3
        assignedUser:
          meta: '{}'
          id: 0
          type: type
        projectId: 2
        assignedUserID: 6
        recurringRule: recurringRule
        status: status
        updatedAt: updatedAt
      properties:
        assignedUser:
          $ref: '#/components/schemas/view.Relationship'
        assignedUserID:
          type: integer
        availableDuration:
          description: in minutes
          type: integer
        color:
          type: string
        createdAt:
          type: string
        createdBy:
          type: integer
        deletedAt:
          type: string
        deletedBy:
          type: integer
        description:
          type: string
        distributeType:
          type: string
        duration:
          description: in minutes
          type: integer
        endedAt:
          description: Date represents a Unified API Spec date format.
          title: Date
          type: object
        hoursPerDay:
          type: number
        id:
          type: integer
        installation:
          $ref: '#/components/schemas/view.Relationship'
        installationId:
          type: integer
        project:
          $ref: '#/components/schemas/view.Relationship'
        projectId:
          type: integer
        recurringRule:
          type: string
        startedAt:
          description: Date represents a Unified API Spec date format.
          title: Date
          type: object
        status:
          type: string
        title:
          type: string
        updatedAt:
          type: string
        updatedBy:
          type: integer
      title: Allocation
      type: object
    view.App:
      description: App contains all the information returned from a app.
      example:
        code: code
        isVerified: true
        isInstalled: true
        verifiedAt: verifiedAt
        description: description
        shortDescription: shortDescription
        isUninstallable: true
        logoURL: logoURL
        url: url
        createdAt: createdAt
        baseUrl: baseUrl
        appsettings:
        - meta: '{}'
          id: 0
          type: type
        - meta: '{}'
          id: 0
          type: type
        name: name
        publisher:
          meta: '{}'
          id: 0
          type: type
        id: 0
        updatedAt: updatedAt
      properties:
        appsettings:
          description: |-
            Settings is an optional list of config settings for the App
            can be used to build up an options panel
          items:
            $ref: '#/components/schemas/view.Relationship'
          type: array
        baseUrl:
          description: BaseURL is the CDN location for the latest version of the App
          type: string
        code:
          description: Code is a text unique identifier slug for the App
          type: string
        createdAt:
          description: CreatedAt is the date the app was created
          type: string
        description:
          description: Description is a detailed description of the App
          type: string
        id:
          description: ID is the unique identifier for the App
          type: integer
        isInstalled:
          description: IsInstalled denotes if the app can be used by the installation
          type: boolean
        isUninstallable:
          description: |-
            IsUninstallable denotes if the app can be removed, some apps are
            added by default and can't be removed.
          type: boolean
        isVerified:
          description: IsVerified denotes if the App has been verified by Teamwork
            for usage
          type: boolean
        logoURL:
          description: LogoURL is the URL to the Apps logo if it has one
          type: string
        name:
          description: name is the human readable name
          type: string
        publisher:
          $ref: '#/components/schemas/view.Relationship'
        shortDescription:
          description: ShortDescription is a snippet of information detailing the
            app
          type: string
        updatedAt:
          description: CreatedAt is the date the app was last updated
          type: string
        url:
          description: URL is the location of the App feature page on the marketplace
          type: string
        verifiedAt:
          description: VerifiedAt, if provided, is the date the App was verified by
            Teamwork
          type: string
      title: App
      type: object
    view.AppSetting:
      description: AppSetting contains all the information returned from a setting.
      example:
        isSecret: true
        defaultValue: defaultValue
        displayName: displayName
        name: name
        id: 6
        type: STRING
        value: value
      properties:
        defaultValue:
          description: DefaultValue is the value returned if Value is empty.
          type: string
        displayName:
          description: DisplayName is what the user should see when presented with
            the setting name.
          type: string
        id:
          description: ID is the unique identifier for the setting.
          type: integer
        isSecret:
          description: IsSecret if true the DefaultValue and Value fields will be
            redacted.
          type: boolean
        name:
          description: Name is the code name for the setting - usually not displayed
            to a user.
          type: string
        type:
          description: Type.
          enum:
          - STRING
          - INT
          type: string
        value:
          description: Value is the current value for the setting - if empty DefaultValue
            is used.
          type: string
      title: AppSetting
      type: object
    view.Audit:
      description: Audit represents the changes of a field.
      example:
        field: field
        before: '{}'
        after: '{}'
      properties:
        after:
          type: object
        before:
          type: object
        field:
          type: string
      title: Audit
      type: object
    view.Banner:
      description: Banner contains all the information returned from a form banner.
      example:
        x: 0.8008281904610115
        y: 6.027456183070403
        url: url
      properties:
        url:
          type: string
        x:
          type: number
        y:
          type: number
      title: Banner
      type: object
    view.BoardColumn:
      description: BoardColumn contains all the information returned from a column.
      example:
        settings:
          reminders: true
          private: true
          comments: true
          tickets: true
          recurring: true
          subtasklabel: true
          subtasktext: true
          avatar: true
          endAt: true
          priority: true
          dependencies: true
          tags: true
          estimatedtime: true
          followers: true
          name: true
          files: true
          progress: true
          assignee: true
          tasklist: true
          time: true
          startAt: true
        color: color
        displayOrder: 0
        project:
          meta: '{}'
          id: 0
          type: type
        sort: sort
        createdAt: createdAt
        deletedAt: deletedAt
        deleted: true
        defaultTasklist:
          meta: '{}'
          id: 0
          type: type
        stats:
          estimatedTime: 5
          total: 2
          active: 1
          completed: 5
        sortOrder: sortOrder
        name: name
        hasTriggers: true
        id: 6
        updatedAt: updatedAt
      properties:
        color:
          type: string
        createdAt:
          type: string
        defaultTasklist:
          $ref: '#/components/schemas/view.Relationship'
        deleted:
          type: boolean
        deletedAt:
          type: string
        displayOrder:
          type: integer
        hasTriggers:
          type: boolean
        id:
          type: integer
        name:
          type: string
        project:
          $ref: '#/components/schemas/view.Relationship'
        settings:
          $ref: '#/components/schemas/view.BoardColumnSettings'
        sort:
          type: string
        sortOrder:
          type: string
        stats:
          $ref: '#/components/schemas/view.ColumnStats'
        updatedAt:
          type: string
      title: BoardColumn
      type: object
    view.BoardColumnSettings:
      description: BoardColumnSettings contains all the settings for a column.
      example:
        reminders: true
        private: true
        comments: true
        tickets: true
        recurring: true
        subtasklabel: true
        subtasktext: true
        avatar: true
        endAt: true
        priority: true
        dependencies: true
        tags: true
        estimatedtime: true
        followers: true
        name: true
        files: true
        progress: true
        assignee: true
        tasklist: true
        time: true
        startAt: true
      properties:
        assignee:
          type: boolean
        avatar:
          type: boolean
        comments:
          type: boolean
        dependencies:
          type: boolean
        endAt:
          type: boolean
        estimatedtime:
          type: boolean
        files:
          type: boolean
        followers:
          type: boolean
        name:
          type: boolean
        priority:
          type: boolean
        private:
          type: boolean
        progress:
          type: boolean
        recurring:
          type: boolean
        reminders:
          type: boolean
        startAt:
          type: boolean
        subtasklabel:
          type: boolean
        subtasktext:
          type: boolean
        tags:
          type: boolean
        tasklist:
          type: boolean
        tickets:
          type: boolean
        time:
          type: boolean
      title: BoardColumnSettings
      type: object
    view.CalendarEvent:
      description: CalendarEvent contains all the information returned from a calendar
        event.
      example:
        dateLastUpdated: dateLastUpdated
        endDate: endDate
        projectUsersCanEdit: true
        createdDateTime: createdDateTime
        description: description
        project:
          meta: '{}'
          id: 0
          type: type
        updatedByUserId: 1
        currentUserAssociationType: currentUserAssociationType
        title: title
        type:
          meta: '{}'
          id: 0
          type: type
        sequenceId: 2
        deletedBy: 5
        allDay: true
        createdAt: createdAt
        id: 2
        updatedAt: updatedAt
        createdByUserId: 1
        updatedBy: 7
        attendeesCanEdit: true
        attendingUserIds:
        - 0
        - 0
        monthlyRepeatType: monthlyRepeatType
        dateDeleted: dateDeleted
        deletedByUserId: 5
        sequence:
          meta: '{}'
          id: 0
          type: type
        deletedAt: deletedAt
        deleted: true
        createdBy: 6
        ownerUserId: 9
        location: location
        showAsBusy: true
        typeId: 4
        additionalProperties: additionalProperties
        attendingUsers:
        - meta: '{}'
          id: 0
          type: type
        - meta: '{}'
          id: 0
          type: type
        ownedBy: 7
        projectId: 3
        privacyType: privacyType
        startDate: startDate
      properties:
        additionalProperties:
          type: string
        allDay:
          type: boolean
        attendeesCanEdit:
          type: boolean
        attendingUserIds:
          items:
            type: integer
          type: array
        attendingUsers:
          items:
            $ref: '#/components/schemas/view.Relationship'
          type: array
        createdAt:
          type: string
        createdBy:
          type: integer
        createdByUserId:
          type: integer
        createdDateTime:
          type: string
        currentUserAssociationType:
          type: string
        dateDeleted:
          type: string
        dateLastUpdated:
          type: string
        deleted:
          type: boolean
        deletedAt:
          type: string
        deletedBy:
          type: integer
        deletedByUserId:
          type: integer
        description:
          type: string
        endDate:
          type: string
        id:
          type: integer
        location:
          type: string
        monthlyRepeatType:
          type: string
        ownedBy:
          type: integer
        ownerUserId:
          type: integer
        privacyType:
          type: string
        project:
          $ref: '#/components/schemas/view.Relationship'
        projectId:
          type: integer
        projectUsersCanEdit:
          type: boolean
        sequence:
          $ref: '#/components/schemas/view.Relationship'
        sequenceId:
          type: integer
        showAsBusy:
          type: boolean
        startDate:
          type: string
        title:
          type: string
        type:
          $ref: '#/components/schemas/view.Relationship'
        typeId:
          type: integer
        updatedAt:
          type: string
        updatedBy:
          type: integer
        updatedByUserId:
          type: integer
      title: CalendarEvent
      type: object
    view.Change:
      description: Change contains all the information returned from a change.
      example:
        parent:
          meta: '{}'
          id: 0
          type: type
        lastUpdatedDate: lastUpdatedDate
        id: 0
        parentId: 6
      properties:
        id:
          type: integer
        lastUpdatedDate:
          type: string
        parent:
          $ref: '#/components/schemas/view.Relationship'
        parentId:
          type: integer
      title: Change
      type: object
    view.ColumnStats:
      description: ColumnStats contains stats about a column
      example:
        estimatedTime: 5
        total: 2
        active: 1
        completed: 5
      properties:
        active:
          type: integer
        completed:
          type: integer
        estimatedTime:
          type: integer
        total:
          type: integer
      title: ColumnStats
      type: object
    view.Comment:
      description: Comment contains all the information returned from a comment.
      example:
        id: 0
        title: title
        objectId: 6
        object:
          meta: '{}'
          id: 0
          type: type
        objectType: objectType
      properties:
        id:
          type: integer
        object:
          $ref: '#/components/schemas/view.Relationship'
        objectId:
          type: integer
        objectType:
          type: string
        title:
          type: string
      title: Comment
      type: object
    view.Company:
      description: Company contains all the information returned from a company.
      example:
        city: city
        industry:
          meta: '{}'
          id: 0
          type: type
        emailTwo: emailTwo
        industryId: 6
        isOwner: true
        addressTwo: addressTwo
        countryCode: countryCode
        emailThree: emailThree
        id: 1
        state: state
        fax: fax
        zip: zip
        profileText: profileText
        website: website
        clientUsers: 1
        companyNameUrl: companyNameUrl
        logoUrl: logoUrl
        phone: phone
        emailOne: emailOne
        name: name
        privateNotesText: privateNotesText
        accounts: 7
        addressOne: addressOne
        contacts: 1
        canSeePrivate: true
        cid: cid
      properties:
        accounts:
          type: integer
        addressOne:
          type: string
        addressTwo:
          type: string
        canSeePrivate:
          type: boolean
        cid:
          type: string
        city:
          type: string
        clientUsers:
          type: integer
        companyNameUrl:
          type: string
        contacts:
          type: integer
        countryCode:
          type: string
        emailOne:
          type: string
        emailThree:
          type: string
        emailTwo:
          type: string
        fax:
          type: string
        id:
          type: integer
        industry:
          $ref: '#/components/schemas/view.Relationship'
        industryId:
          type: integer
        isOwner:
          type: boolean
        logoUrl:
          type: string
        name:
          type: string
        phone:
          type: string
        privateNotesText:
          type: string
        profileText:
          type: string
        state:
          type: string
        website:
          type: string
        zip:
          type: string
      title: Company
      type: object
    view.Content:
      description: Content contains all the information returned from a form token.
      example:
        name: name
        banner:
          x: 0.8008281904610115
          y: 6.027456183070403
          url: url
        description: description
        definition: definition
        state: state
        version: 1
      properties:
        banner:
          $ref: '#/components/schemas/view.Banner'
        definition:
          type: string
        description:
          type: string
        name:
          type: string
        state:
          type: string
        version:
          type: integer
      title: Content
      type: object
    view.Country:
      description: Country represents all the information returned from a country.
      example:
        eu: true
        country: country
        code: code
        vatName: vatName
        phoneCode: phoneCode
        vatPercent: 0
      properties:
        code:
          type: string
        country:
          type: string
        eu:
          type: boolean
        phoneCode:
          type: string
        vatName:
          type: string
        vatPercent:
          type: integer
      title: Country
      type: object
    view.CustomField:
      description: CustomField contains all the information returned from a custom
        field.
      example:
        createdByUserId: 6
        updatedBy: 7
        description: description
        project:
          meta: '{}'
          id: 0
          type: type
        isPrivate: true
        updatedByUserId: 9
        type: type
        deletedBy: 1
        deletedByUserId: 5
        required: true
        createdAt: createdAt
        deletedAt: deletedAt
        deleted: true
        createdBy: 0
        name: name
        options: '{}'
        visibilities: visibilities
        id: 5
        projectId: 2
        entity: entity
        updatedAt: updatedAt
      properties:
        createdAt:
          type: string
        createdBy:
          type: integer
        createdByUserId:
          type: integer
        deleted:
          type: boolean
        deletedAt:
          type: string
        deletedBy:
          type: integer
        deletedByUserId:
          type: integer
        description:
          type: string
        entity:
          type: string
        id:
          type: integer
        isPrivate:
          type: boolean
        name:
          type: string
        options:
          type: object
        project:
          $ref: '#/components/schemas/view.Relationship'
        projectId:
          type: integer
        required:
          type: boolean
        type:
          type: string
        updatedAt:
          type: string
        updatedBy:
          type: integer
        updatedByUserId:
          type: integer
        visibilities:
          type: string
      title: CustomField
      type: object
    view.CustomFieldProject:
      description: |-
        CustomFieldProject contains all the information returned from a project
        customfield value.
      example:
        createdAt: createdAt
        customfieldId: 6
        customfield:
          meta: '{}'
          id: 0
          type: type
        createdBy: 0
        project:
          meta: '{}'
          id: 0
          type: type
        id: 1
        projectId: 5
        value: '{}'
      properties:
        createdAt:
          type: string
        createdBy:
          type: integer
        customfield:
          $ref: '#/components/schemas/view.Relationship'
        customfieldId:
          type: integer
        id:
          type: integer
        project:
          $ref: '#/components/schemas/view.Relationship'
        projectId:
          type: integer
        value:
          type: object
      title: CustomFieldProject
      type: object
    view.CustomFieldTask:
      description: |-
        CustomFieldTask contains all the information returned from a task customfield
        value.
      example:
        createdAt: createdAt
        customfieldId: 6
        customfield:
          meta: '{}'
          id: 0
          type: type
        task:
          meta: '{}'
          id: 0
          type: type
        createdBy: 0
        id: 1
        value: '{}'
        taskId: 5
      properties:
        createdAt:
          type: string
        createdBy:
          type: integer
        customfield:
          $ref: '#/components/schemas/view.Relationship'
        customfieldId:
          type: integer
        id:
          type: integer
        task:
          $ref: '#/components/schemas/view.Relationship'
        taskId:
          type: integer
        value:
          type: object
      title: CustomFieldTask
      type: object
    view.Date:
      description: Date represents a Unified API Spec date format.
      title: Date
      type: object
    view.Error:
      description: Error describes an API error.
      properties:
        code:
          description: Code is an application-specific error code.
          type: string
        detail:
          description: |-
            Detail is a human-readable explanation specific to this occurrence of the
            problem.
          type: string
        id:
          description: ID is a reference for this exact instance of the error.
          type: string
        meta:
          description: Meta contains tags that are useful to detect specific issues.
          properties: {}
          type: object
        title:
          description: Title is a short, human-readable summary of the problem.
          type: string
      title: Error
      type: object
    view.ErrorResponse:
      description: ErrorResponse defines how []Error should be marshaled to JSON.
      properties:
        errors:
          items:
            $ref: '#/components/schemas/view.Error'
          type: array
      title: ErrorResponse
      type: object
    view.FilePermissions:
      description: FilePermissions determine the permissions associated with a file.
      example:
        canEdit: true
        canDelete: true
        canAddFiles: true
      properties:
        canAddFiles:
          type: boolean
        canDelete:
          type: boolean
        canEdit:
          type: boolean
      title: FilePermissions
      type: object
    view.Fileversion:
      description: Fileversion contains all the information returned from a fileversion.
      example:
        commentsCountRead: 8
        displayName: displayName
        description: description
        project:
          meta: '{}'
          id: 0
          type: type
        fileVersionId: 3
        originalName: originalName
        file:
          meta: '{}'
          id: 0
          type: type
        size: 7
        commentsCount: 4
        name: name
        versionNo: 3
        reactions:
          mine: mine
          counts:
            joy: 6
            like: 5
            dislike: 1
            frown: 2
            heart: 6
        projectId: 3
        uploadedBy: 5
        fileId: 7
        status: status
      properties:
        commentsCount:
          type: integer
        commentsCountRead:
          type: integer
        description:
          type: string
        displayName:
          type: string
        file:
          $ref: '#/components/schemas/view.Relationship'
        fileId:
          type: integer
        fileVersionId:
          type: integer
        name:
          type: string
        originalName:
          type: string
        project:
          $ref: '#/components/schemas/view.Relationship'
        projectId:
          type: integer
        reactions:
          $ref: '#/components/schemas/view.ReactionsForObject'
        size:
          type: integer
        status:
          type: string
        uploadedBy:
          type: integer
        versionNo:
          type: integer
      title: Fileversion
      type: object
    view.Form:
      description: Form contains all the information returned from a form.
      example:
        updatedBy:
          meta: '{}'
          id: 0
          type: type
        hostObject:
          meta: '{}'
          id: 0
          type: type
        content:
          name: name
          banner:
            x: 0.8008281904610115
            y: 6.027456183070403
            url: url
          description: description
          definition: definition
          state: state
          version: 1
        deletedBy:
          meta: '{}'
          id: 0
          type: type
        token:
          canonicalURL: canonicalURL
          value: value
        createdAt: createdAt
        deletedAt: deletedAt
        createdBy:
          meta: '{}'
          id: 0
          type: type
        installation:
          meta: '{}'
          id: 0
          type: type
        promptAdditionalSubmissions: true
        taskTitleFieldId: taskTitleFieldId
        id: 5
        state: state
        isShared: true
        confirmationMessage: confirmationMessage
        updatedAt: updatedAt
      properties:
        confirmationMessage:
          type: string
        content:
          $ref: '#/components/schemas/view.Content'
        createdAt:
          type: string
        createdBy:
          $ref: '#/components/schemas/view.Relationship'
        deletedAt:
          type: string
        deletedBy:
          $ref: '#/components/schemas/view.Relationship'
        hostObject:
          $ref: '#/components/schemas/view.Relationship'
        id:
          type: integer
        installation:
          $ref: '#/components/schemas/view.Relationship'
        isShared:
          type: boolean
        promptAdditionalSubmissions:
          type: boolean
        state:
          type: string
        taskTitleFieldId:
          type: string
        token:
          $ref: '#/components/schemas/view.Token'
        updatedAt:
          type: string
        updatedBy:
          $ref: '#/components/schemas/view.Relationship'
      title: Form
      type: object
    view.FormAssignee:
      description: FormAssignee contains all the information returned from a assignee.
      example:
        id: 0
        type: type
      properties:
        id:
          type: integer
        type:
          type: string
      title: FormAssignee
      type: object
    view.FormToken:
      description: FormToken contains all the information returned from a token.
      example:
        expires: true
        updatedBy:
          meta: '{}'
          id: 0
          type: type
        canonicalURL: canonicalURL
        deletedBy:
          meta: '{}'
          id: 0
          type: type
        expiryDate: expiryDate
        createdAt: createdAt
        deletedAt: deletedAt
        form:
          meta: '{}'
          id: 0
          type: type
        createdBy:
          meta: '{}'
          id: 0
          type: type
        installation:
          meta: '{}'
          id: 0
          type: type
        id: 0
        state: state
        value: value
        updatedAt: updatedAt
      properties:
        canonicalURL:
          type: string
        createdAt:
          type: string
        createdBy:
          $ref: '#/components/schemas/view.Relationship'
        deletedAt:
          type: string
        deletedBy:
          $ref: '#/components/schemas/view.Relationship'
        expires:
          type: boolean
        expiryDate:
          type: string
        form:
          $ref: '#/components/schemas/view.Relationship'
        id:
          type: integer
        installation:
          $ref: '#/components/schemas/view.Relationship'
        state:
          type: string
        updatedAt:
          type: string
        updatedBy:
          $ref: '#/components/schemas/view.Relationship'
        value:
          type: string
      title: FormToken
      type: object
    view.Industry:
      description: Industry contains all the information returned from an industry.
      example:
        industryCategory:
          meta: '{}'
          id: 0
          type: type
        industryCategoryId: 5
        isPublished: true
        displayOrder: 6
        name: name
        id: 1
        isActive: true
      properties:
        displayOrder:
          type: integer
        id:
          type: integer
        industryCategory:
          $ref: '#/components/schemas/view.Relationship'
        industryCategoryId:
          type: integer
        isActive:
          type: boolean
        isPublished:
          type: boolean
        name:
          type: string
      title: Industry
      type: object
    view.InstallationUserRate:
      description: InstallationUserRate contains information about a users installation
        rate
      example:
        installationRate: 0
        user:
          meta: '{}'
          id: 0
          type: type
        userId: 6
      properties:
        installationRate:
          type: integer
        user:
          $ref: '#/components/schemas/view.Relationship'
        userId:
          type: integer
      title: InstallationUserRate
      type: object
    view.LinkItem:
      description: LinkItem contains all the information returned from a link item.
      example:
        code: code
        updatedBy: 9
        description: description
        project:
          meta: '{}'
          id: 0
          type: type
        isPrivate: true
        title: title
        deletedBy: 6
        createdAt: createdAt
        deletedAt: deletedAt
        deleted: true
        createdBy: 0
        provider: provider
        width: 0
        id: 4
        category:
          meta: '{}'
          id: 0
          type: type
        projectId: 7
        categoryId: 4
        forceNewWindow: 4
        height: 1
        updatedAt: updatedAt
      properties:
        category:
          $ref: '#/components/schemas/view.Relationship'
        categoryId:
          type: integer
        code:
          type: string
        createdAt:
          type: string
        createdBy:
          type: integer
        deleted:
          type: boolean
        deletedAt:
          type: string
        deletedBy:
          type: integer
        description:
          type: string
        forceNewWindow:
          type: integer
        height:
          type: integer
        id:
          type: integer
        isPrivate:
          type: boolean
        project:
          $ref: '#/components/schemas/view.Relationship'
        projectId:
          type: integer
        provider:
          type: string
        title:
          type: string
        updatedAt:
          type: string
        updatedBy:
          type: integer
        width:
          type: integer
      title: LinkItem
      type: object
    view.Lockdown:
      description: Lockdown contains all the information returned from a lockdown.
      example:
        itemID: 6
        item:
          meta: '{}'
          id: 0
          type: type
        itemType: itemType
        id: 0
        grantAccessTo:
          companies:
          - meta: '{}'
            id: 0
            type: type
          - meta: '{}'
            id: 0
            type: type
          companyIds:
          - 7
          - 7
          teams:
          - meta: '{}'
            id: 0
            type: type
          - meta: '{}'
            id: 0
            type: type
          userIds:
          - 3
          - 3
          teamIds:
          - 9
          - 9
          users:
          - meta: '{}'
            id: 0
            type: type
          - meta: '{}'
            id: 0
            type: type
        user:
          meta: '{}'
          id: 0
          type: type
        userID: 1
        updatedAt: updatedAt
      properties:
        grantAccessTo:
          $ref: '#/components/schemas/view.UserGroups'
        id:
          type: integer
        item:
          $ref: '#/components/schemas/view.Relationship'
        itemID:
          type: integer
        itemType:
          type: string
        updatedAt:
          type: string
        user:
          $ref: '#/components/schemas/view.Relationship'
        userID:
          type: integer
      title: Lockdown
      type: object
    view.Meta:
      description: Meta represents the Unified API meta object.
      example:
        page:
          count: 6
          hasMore: true
          pageOffset: 3
          pageSize: 3
      properties:
        page:
          $ref: '#/components/schemas/view.MetaPage'
      title: Meta
      type: object
    view.MetaPage:
      description: MetaPage represents the Unified API page meta object.
      example:
        count: 6
        hasMore: true
        pageOffset: 3
        pageSize: 3
      properties:
        count:
          type: integer
        hasMore:
          type: boolean
        pageOffset:
          type: integer
        pageSize:
          type: integer
      title: MetaPage
      type: object
    view.Milestone:
      description: Milestone contains all the information returned from a milestone.
      example:
        changeFollowers:
        - meta: '{}'
          id: 0
          type: type
        - meta: '{}'
          id: 0
          type: type
        creatorUserId: 8
        private: true
        userFollowingComments: true
        canEdit: true
        tagIds:
        - 4
        - 4
        commentFollowers:
        - meta: '{}'
          id: 0
          type: type
        - meta: '{}'
          id: 0
          type: type
        description: description
        project:
          meta: '{}'
          id: 0
          type: type
        tasklists:
        - meta: '{}'
          id: 0
          type: type
        - meta: '{}'
          id: 0
          type: type
        percentageTasksCompleted: 1
        createdOn: createdOn
        isDeleted: true
        originalDueDate: originalDueDate
        userFollowingChanges: true
        commentFollowerIds:
        - 0
        - 0
        lockdown:
          meta: '{}'
          id: 0
          type: type
        id: 4
        deadline: deadline
        numCommentsRead: 0
        updatedBy: 9
        reminder: true
        canComplete: true
        lockdownId: 3
        completerId: 4
        completed: true
        tags:
        - meta: '{}'
          id: 0
          type: type
        - meta: '{}'
          id: 0
          type: type
        changeFollowerIds:
        - 9
        - 9
        responsiblePartyIds:
        - 6
        - 6
        lastChangedOn: lastChangedOn
        responsibleParties:
        - meta: '{}'
          id: 0
          type: type
        - meta: '{}'
          id: 0
          type: type
        createdBy: 6
        latestUpdates:
        - field: field
          before: '{}'
          after: '{}'
        - field: field
          before: '{}'
          after: '{}'
        percentageComplete: 2
        commentsCount: 7
        completedOn: completedOn
        name: name
        projectId: 8
        tasklistIds:
        - 8
        - 8
        completedBy: 5
        status: status
      properties:
        canComplete:
          type: boolean
        canEdit:
          description: permissions
          type: boolean
        changeFollowerIds:
          items:
            type: integer
          type: array
        changeFollowers:
          items:
            $ref: '#/components/schemas/view.Relationship'
          type: array
        commentFollowerIds:
          items:
            type: integer
          type: array
        commentFollowers:
          items:
            $ref: '#/components/schemas/view.Relationship'
          type: array
        commentsCount:
          type: integer
        completed:
          type: boolean
        completedBy:
          type: integer
        completedOn:
          type: string
        completerId:
          type: integer
        createdBy:
          type: integer
        createdOn:
          type: string
        creatorUserId:
          type: integer
        deadline:
          type: string
        description:
          type: string
        id:
          type: integer
        isDeleted:
          type: boolean
        lastChangedOn:
          type: string
        latestUpdates:
          items:
            $ref: '#/components/schemas/view.Audit'
          type: array
        lockdown:
          $ref: '#/components/schemas/view.Relationship'
        lockdownId:
          type: integer
        name:
          type: string
        numCommentsRead:
          type: integer
        originalDueDate:
          type: string
        percentageComplete:
          type: integer
        percentageTasksCompleted:
          type: integer
        private:
          type: boolean
        project:
          $ref: '#/components/schemas/view.Relationship'
        projectId:
          type: integer
        reminder:
          type: boolean
        responsibleParties:
          items:
            $ref: '#/components/schemas/view.Relationship'
          type: array
        responsiblePartyIds:
          description: optional fields that are returned only when querying a milestone
            endpoint
          items:
            type: integer
          type: array
        status:
          type: string
        tagIds:
          items:
            type: integer
          type: array
        tags:
          items:
            $ref: '#/components/schemas/view.Relationship'
          type: array
        tasklistIds:
          items:
            type: integer
          type: array
        tasklists:
          items:
            $ref: '#/components/schemas/view.Relationship'
          type: array
        updatedBy:
          type: integer
        userFollowingChanges:
          type: boolean
        userFollowingComments:
          type: boolean
      title: Milestone
      type: object
    view.NewTaskDefaults:
      description: NewTaskDefaults contains new task defaults for the default tasklist
      example:
        estimatedMinutes: 2
        dueDate: dueDate
        responisblePartyIds:
          companies:
          - meta: '{}'
            id: 0
            type: type
          - meta: '{}'
            id: 0
            type: type
          companyIds:
          - 7
          - 7
          teams:
          - meta: '{}'
            id: 0
            type: type
          - meta: '{}'
            id: 0
            type: type
          userIds:
          - 3
          - 3
          teamIds:
          - 9
          - 9
          users:
          - meta: '{}'
            id: 0
            type: type
          - meta: '{}'
            id: 0
            type: type
        priority: priority
        startDate: startDate
        tags:
        - 2
        - 2
      properties:
        dueDate:
          type: string
        estimatedMinutes:
          type: integer
        priority:
          type: string
        responisblePartyIds:
          $ref: '#/components/schemas/view.UserGroups'
        startDate:
          type: string
        tags:
          items:
            type: integer
          type: array
      title: NewTaskDefaults
      type: object
    view.Notebook:
      description: Notebook contains all the information returned from a notebook.
      example:
        changeFollowers:
          companies:
          - meta: '{}'
            id: 0
            type: type
          - meta: '{}'
            id: 0
            type: type
          companyIds:
          - 7
          - 7
          teams:
          - meta: '{}'
            id: 0
            type: type
          - meta: '{}'
            id: 0
            type: type
          userIds:
          - 3
          - 3
          teamIds:
          - 9
          - 9
          users:
          - meta: '{}'
            id: 0
            type: type
          - meta: '{}'
            id: 0
            type: type
        versionCount: 2
        createdByUserID: 8
        userFollowingComments: true
        tagIds:
        - 7
        - 7
        lockedAt: lockedAt
        commentFollowers:
          companies:
          - meta: '{}'
            id: 0
            type: type
          - meta: '{}'
            id: 0
            type: type
          companyIds:
          - 7
          - 7
          teams:
          - meta: '{}'
            id: 0
            type: type
          - meta: '{}'
            id: 0
            type: type
          userIds:
          - 3
          - 3
          teamIds:
          - 9
          - 9
          users:
          - meta: '{}'
            id: 0
            type: type
          - meta: '{}'
            id: 0
            type: type
        description: description
        privacy:
          companies:
          - meta: '{}'
            id: 0
            type: type
          - meta: '{}'
            id: 0
            type: type
          companyIds:
          - 7
          - 7
          teams:
          - meta: '{}'
            id: 0
            type: type
          - meta: '{}'
            id: 0
            type: type
          userIds:
          - 3
          - 3
          teamIds:
          - 9
          - 9
          users:
          - meta: '{}'
            id: 0
            type: type
          - meta: '{}'
            id: 0
            type: type
        project:
          meta: '{}'
          id: 0
          type: type
        isPrivate: true
        type: type
        deletedBy: 0
        deletedByUserID: 5
        createdAt: createdAt
        dateCreated: dateCreated
        latestVersionNo: 8
        lockedBy: 3
        userFollowingChanges: true
        lockdown:
          meta: '{}'
          id: 0
          type: type
        id: 5
        locked: true
        notebookVersionID: 3
        updatedAt: updatedAt
        updatedBy: 0
        readCommentsCount: 5
        lockdownId: 7
        updatedByUserID: 3
        contentHTML: contentHTML
        dateDeleted: dateDeleted
        dateUpdated: dateUpdated
        tags:
        - meta: '{}'
          id: 0
          type: type
        - meta: '{}'
          id: 0
          type: type
        secureContent: true
        deletedAt: deletedAt
        notebookVersionUpdatedDateTime: notebookVersionUpdatedDateTime
        deleted: true
        contents: contents
        createdBy: 9
        commentsCount: 3
        name: name
        notebookVersionCreatedDateTime: notebookVersionCreatedDateTime
        category:
          meta: '{}'
          id: 0
          type: type
        projectId: 9
        categoryId: 1
        notebookVersion:
          meta: '{}'
          id: 0
          type: type
      properties:
        category:
          $ref: '#/components/schemas/view.Relationship'
        categoryId:
          type: integer
        changeFollowers:
          $ref: '#/components/schemas/view.UserGroups'
        commentFollowers:
          $ref: '#/components/schemas/view.UserGroups'
        commentsCount:
          type: integer
        contentHTML:
          type: string
        contents:
          type: string
        createdAt:
          type: string
        createdBy:
          type: integer
        createdByUserID:
          type: integer
        dateCreated:
          type: string
        dateDeleted:
          type: string
        dateUpdated:
          type: string
        deleted:
          type: boolean
        deletedAt:
          type: string
        deletedBy:
          type: integer
        deletedByUserID:
          type: integer
        description:
          type: string
        id:
          type: integer
        isPrivate:
          type: boolean
        latestVersionNo:
          type: integer
        lockdown:
          $ref: '#/components/schemas/view.Relationship'
        lockdownId:
          type: integer
        locked:
          type: boolean
        lockedAt:
          type: string
        lockedBy:
          type: integer
        name:
          type: string
        notebookVersion:
          $ref: '#/components/schemas/view.Relationship'
        notebookVersionCreatedDateTime:
          type: string
        notebookVersionID:
          type: integer
        notebookVersionUpdatedDateTime:
          type: string
        privacy:
          $ref: '#/components/schemas/view.UserGroups'
        project:
          $ref: '#/components/schemas/view.Relationship'
        projectId:
          type: integer
        readCommentsCount:
          type: integer
        secureContent:
          type: boolean
        tagIds:
          items:
            type: integer
          type: array
        tags:
          items:
            $ref: '#/components/schemas/view.Relationship'
          type: array
        type:
          type: string
        updatedAt:
          type: string
        updatedBy:
          type: integer
        updatedByUserID:
          type: integer
        userFollowingChanges:
          type: boolean
        userFollowingComments:
          type: boolean
        versionCount:
          type: integer
      title: Notebook
      type: object
    view.NotebookCategory:
      description: NotebookCategory contains all the information returned from a notebook
        category.
      example:
        elementsCount: 0
        parent:
          meta: '{}'
          id: 0
          type: type
        color: color
        name: name
        project:
          meta: '{}'
          id: 0
          type: type
        id: 6
        projectId: 5
        parentId: 1
      properties:
        color:
          type: string
        elementsCount:
          type: integer
        id:
          type: integer
        name:
          type: string
        parent:
          $ref: '#/components/schemas/view.Relationship'
        parentId:
          type: integer
        project:
          $ref: '#/components/schemas/view.Relationship'
        projectId:
          type: integer
      title: NotebookCategory
      type: object
    view.NotebookVersion:
      description: NotebookVersion contains all the information returned from a notebook
        version.
      example:
        createdAt: createdAt
        createdByUserID: 6
        versionId: 5
        dateCreated: dateCreated
        contents: contents
        createdBy: 0
        notebookId: 1
        contentHTML: contentHTML
        versionNumber: 5
        dateUpdated: dateUpdated
        notebook:
          meta: '{}'
          id: 0
          type: type
        updatedAt: updatedAt
      properties:
        contentHTML:
          type: string
        contents:
          type: string
        createdAt:
          type: string
        createdBy:
          type: integer
        createdByUserID:
          type: integer
        dateCreated:
          type: string
        dateUpdated:
          type: string
        notebook:
          $ref: '#/components/schemas/view.Relationship'
        notebookId:
          type: integer
        updatedAt:
          type: string
        versionId:
          type: integer
        versionNumber:
          type: integer
      title: NotebookVersion
      type: object
    view.PortfolioBoard:
      description: PortfolioBoard contains all the information returned from a portfolio
        board.
      example:
        color: color
        name: name
        id: 5
      properties:
        color:
          type: string
        id:
          type: integer
        name:
          type: string
      title: PortfolioBoard
      type: object
    view.PortfolioCard:
      description: |-
        PortfolioCard contains all the information returned from a portfolio
        column.
      example:
        columnId: 2
        column:
          meta: '{}'
          id: 0
          type: type
        project:
          meta: '{}'
          id: 0
          type: type
        id: 7
        projectId: 9
      properties:
        column:
          $ref: '#/components/schemas/view.Relationship'
        columnId:
          type: integer
        id:
          type: integer
        project:
          $ref: '#/components/schemas/view.Relationship'
        projectId:
          type: integer
      title: PortfolioCard
      type: object
    view.PortfolioColumn:
      description: |-
        PortfolioColumn contains all the information returned from a portfolio
        column.
      example:
        color: color
        name: name
        id: 3
      properties:
        color:
          type: string
        id:
          type: integer
        name:
          type: string
      title: PortfolioColumn
      type: object
    view.Project:
      description: Project contains all the information returned from a project.
      example:
        replyByEmailEnabled: true
        startPage: startPage
        endDate: endDate
        overviewStartPage: overviewStartPage
        tagIds:
        - 6
        - 6
        customFieldValueIds:
        - 5
        - 5
        description: description
        minMaxAvailableDates:
          maxEndDate: maxEndDate
          minStartDate: minStartDate
          suggestedEndDate: suggestedEndDate
          suggestedStartDate: suggestedStartDate
          deadlinesFound: true
        ownerId: 8
        type: type
        createdAt: createdAt
        updateId: 6
        logo: logo
        company:
          meta: '{}'
          id: 0
          type: type
        id: 9
        financialBudget:
          meta: '{}'
          id: 0
          type: type
        updatedAt: updatedAt
        harvestTimersEnabled: true
        updatedBy: 1
        activePages:
          comments: true
          riskRegister: true
          list: true
          gantt: true
          billing: true
          notebooks: true
          files: true
          messages: true
          links: true
          time: true
          milestones: true
          board: true
          forms: true
          table: true
          tasks: true
        isStarred: true
        directFileUploadsEnabled: true
        isOnBoardingProject: true
        subStatus: subStatus
        isSampleProject: true
        tags:
        - meta: '{}'
          id: 0
          type: type
        - meta: '{}'
          id: 0
          type: type
        tasksStartPage: tasksStartPage
        financialBudgetId: 9
        privacyEnabled: true
        companyId: 1
        defaultPrivacy: defaultPrivacy
        customFieldValues:
        - meta: '{}'
          id: 0
          type: type
        - meta: '{}'
          id: 0
          type: type
        createdBy: 4
        notifyCommentIncludeCreator: true
        skipWeekends: true
        name: name
        projectOwnerId: 9
        notifyEveryone: true
        timeBudgetId: 3
        showAnnouncement: true
        category:
          meta: '{}'
          id: 0
          type: type
        integrations:
          xero:
            connected: true
            countryCode: countryCode
            organisation: organisation
            baseCurrency: baseCurrency
            enabled: true
          oneDriveBusiness:
            folder: folder
            folderName: folderName
            account: account
            enabled: true
          sharepoint:
            folder: folder
            folderName: folderName
            account: account
            enabled: true
        ownedBy: 6
        categoryId: 7
        startDate: startDate
        status: status
        timeBudget:
          meta: '{}'
          id: 0
          type: type
      properties:
        activePages:
          $ref: '#/components/schemas/view_Project_activePages'
        category:
          $ref: '#/components/schemas/view.Relationship'
        categoryId:
          type: integer
        company:
          $ref: '#/components/schemas/view.Relationship'
        companyId:
          type: integer
        createdAt:
          type: string
        createdBy:
          type: integer
        customFieldValueIds:
          items:
            type: integer
          type: array
        customFieldValues:
          items:
            $ref: '#/components/schemas/view.Relationship'
          type: array
        defaultPrivacy:
          type: string
        description:
          type: string
        directFileUploadsEnabled:
          type: boolean
        endDate:
          type: string
        financialBudget:
          $ref: '#/components/schemas/view.Relationship'
        financialBudgetId:
          type: integer
        harvestTimersEnabled:
          type: boolean
        id:
          type: integer
        integrations:
          $ref: '#/components/schemas/view_Project_integrations'
        isOnBoardingProject:
          type: boolean
        isSampleProject:
          type: boolean
        isStarred:
          type: boolean
        logo:
          type: string
        minMaxAvailableDates:
          $ref: '#/components/schemas/view.ProjectMinMaxAvailableDates'
        name:
          type: string
        notifyCommentIncludeCreator:
          type: boolean
        notifyEveryone:
          type: boolean
        overviewStartPage:
          type: string
        ownedBy:
          type: integer
        ownerId:
          type: integer
        privacyEnabled:
          type: boolean
        projectOwnerId:
          type: integer
        replyByEmailEnabled:
          type: boolean
        showAnnouncement:
          type: boolean
        skipWeekends:
          type: boolean
        startDate:
          type: string
        startPage:
          type: string
        status:
          type: string
        subStatus:
          type: string
        tagIds:
          items:
            type: integer
          type: array
        tags:
          items:
            $ref: '#/components/schemas/view.Relationship'
          type: array
        tasksStartPage:
          type: string
        timeBudget:
          $ref: '#/components/schemas/view.Relationship'
        timeBudgetId:
          type: integer
        type:
          type: string
        updateId:
          type: integer
        updatedAt:
          type: string
        updatedBy:
          type: integer
      title: Project
      type: object
    view.ProjectBudget:
      description: ProjectBudget contains all the information returned from a budget.
      example:
        notificationIds:
        - 4
        - 4
        project:
          meta: '{}'
          id: 0
          type: type
        updatedByUserId: 1
        type: type
        deletedBy: 9
        capacity: 0
        createdAt: createdAt
        originatorBudgetId: 7
        dateCreated: dateCreated
        dateCompleted: dateCompleted
        repeatPeriod: 1
        id: 2
        updatedAt: updatedAt
        createdByUserId: 2
        repeatUnit: repeatUnit
        sequenceNumber: 6
        completedAt: completedAt
        expenseType: expenseType
        updatedBy: 7
        originatorBudget:
          meta: '{}'
          id: 0
          type: type
        repeatsRemaining: 1
        capacityUsed: 6
        timelogType: timelogType
        endDateTime: endDateTime
        dateDeleted: dateDeleted
        deletedByUserId: 3
        completedByUserId: 5
        dateUpdated: dateUpdated
        defaultRate: 7.061401241503109
        deletedAt: deletedAt
        isRepeating: true
        startDateTime: startDateTime
        createdBy: 5
        currencyCode: currencyCode
        projectId: 1
        completedBy: 1
        notifications:
        - meta: '{}'
          id: 0
          type: type
        - meta: '{}'
          id: 0
          type: type
        status: status
      properties:
        capacity:
          type: integer
        capacityUsed:
          type: integer
        completedAt:
          type: string
        completedBy:
          type: integer
        completedByUserId:
          type: integer
        createdAt:
          type: string
        createdBy:
          type: integer
        createdByUserId:
          type: integer
        currencyCode:
          type: string
        dateCompleted:
          type: string
        dateCreated:
          type: string
        dateDeleted:
          type: string
        dateUpdated:
          type: string
        defaultRate:
          type: number
        deletedAt:
          type: string
        deletedBy:
          type: integer
        deletedByUserId:
          type: integer
        endDateTime:
          type: string
        expenseType:
          type: string
        id:
          type: integer
        isRepeating:
          type: boolean
        notificationIds:
          items:
            type: integer
          type: array
        notifications:
          items:
            $ref: '#/components/schemas/view.Relationship'
          type: array
        originatorBudget:
          $ref: '#/components/schemas/view.Relationship'
        originatorBudgetId:
          type: integer
        project:
          $ref: '#/components/schemas/view.Relationship'
        projectId:
          type: integer
        repeatPeriod:
          type: integer
        repeatUnit:
          type: string
        repeatsRemaining:
          type: integer
        sequenceNumber:
          type: integer
        startDateTime:
          type: string
        status:
          type: string
        timelogType:
          type: string
        type:
          type: string
        updatedAt:
          type: string
        updatedBy:
          type: integer
        updatedByUserId:
          type: integer
      title: ProjectBudget
      type: object
    view.ProjectBudgetNotification:
      description: ProjectBudgetNotification contains all the information returned
        from a notification.
      example:
        capacityThreshold: 0.8008281904610115
        notificationMedium: notificationMedium
        companies:
        - meta: '{}'
          id: 0
          type: type
        - meta: '{}'
          id: 0
          type: type
        companyIds:
        - 6
        - 6
        teams:
        - meta: '{}'
          id: 0
          type: type
        - meta: '{}'
          id: 0
          type: type
        userIds:
        - 5
        - 5
        id: 1
        teamIds:
        - 5
        - 5
        users:
        - meta: '{}'
          id: 0
          type: type
        - meta: '{}'
          id: 0
          type: type
      properties:
        capacityThreshold:
          type: number
        companies:
          items:
            $ref: '#/components/schemas/view.Relationship'
          type: array
        companyIds:
          items:
            type: integer
          type: array
        id:
          type: integer
        notificationMedium:
          type: string
        teamIds:
          items:
            type: integer
          type: array
        teams:
          items:
            $ref: '#/components/schemas/view.Relationship'
          type: array
        userIds:
          items:
            type: integer
          type: array
        users:
          items:
            $ref: '#/components/schemas/view.Relationship'
          type: array
      title: ProjectBudgetNotification
      type: object
    view.ProjectCategory:
      description: |-
        ProjectCategory contains all the information returned from a project
        category.
      example:
        parent:
          meta: '{}'
          id: 0
          type: type
        color: color
        count: 2
        name: name
        id: 4
        parentId: 7
      properties:
        color:
          type: string
        count:
          type: integer
        id:
          type: integer
        name:
          type: string
        parent:
          $ref: '#/components/schemas/view.Relationship'
        parentId:
          type: integer
      title: ProjectCategory
      type: object
    view.ProjectFile:
      description: ProjectFile contains all the information returned from a file.
      example:
        changeFollowers:
          companies:
          - meta: '{}'
            id: 0
            type: type
          - meta: '{}'
            id: 0
            type: type
          companyIds:
          - 7
          - 7
          teams:
          - meta: '{}'
            id: 0
            type: type
          - meta: '{}'
            id: 0
            type: type
          userIds:
          - 3
          - 3
          teamIds:
          - 9
          - 9
          users:
          - meta: '{}'
            id: 0
            type: type
          - meta: '{}'
            id: 0
            type: type
        commentsCountRead: 4
        previewURL: previewURL
        displayName: displayName
        tagIds:
        - 0
        - 0
        downloadURL: downloadURL
        commentFollowers:
          companies:
          - meta: '{}'
            id: 0
            type: type
          - meta: '{}'
            id: 0
            type: type
          companyIds:
          - 7
          - 7
          teams:
          - meta: '{}'
            id: 0
            type: type
          - meta: '{}'
            id: 0
            type: type
          userIds:
          - 3
          - 3
          teamIds:
          - 9
          - 9
          users:
          - meta: '{}'
            id: 0
            type: type
          - meta: '{}'
            id: 0
            type: type
        description: description
        project:
          meta: '{}'
          id: 0
          type: type
        isPrivate: 9
        numLikes: 3
        uploadedDate: uploadedDate
        deletedBy: 5
        uploadedByUserID: 6
        originalName: originalName
        lockedBy: 9
        isLocked: true
        lockdown:
          meta: '{}'
          id: 0
          type: type
        id: 9
        thumbURL: thumbURL
        uploadedBy: 7
        updatedAt: updatedAt
        latestFileVersionNo: 6
        lockdownId: 8
        lockedByUserId: 6
        relatedItems:
          comments:
          - 6
          - 6
          messages:
          - 3
          - 3
          tasks:
          - 3
          - 3
        fileSource: fileSource
        lockedDate: lockedDate
        version:
          meta: '{}'
          id: 0
          type: type
        tags:
        - meta: '{}'
          id: 0
          type: type
        - meta: '{}'
          id: 0
          type: type
        deletedAt: deletedAt
        versionId: 0
        size: 7
        versions:
        - commentsCountRead: 8
          displayName: displayName
          description: description
          project:
            meta: '{}'
            id: 0
            type: type
          fileVersionId: 3
          originalName: originalName
          file:
            meta: '{}'
            id: 0
            type: type
          size: 7
          commentsCount: 4
          name: name
          versionNo: 3
          reactions:
            mine: mine
            counts:
              joy: 6
              like: 5
              dislike: 1
              frown: 2
              heart: 6
          projectId: 3
          uploadedBy: 5
          fileId: 7
          status: status
        - commentsCountRead: 8
          displayName: displayName
          description: description
          project:
            meta: '{}'
            id: 0
            type: type
          fileVersionId: 3
          originalName: originalName
          file:
            meta: '{}'
            id: 0
            type: type
          size: 7
          commentsCount: 4
          name: name
          versionNo: 3
          reactions:
            mine: mine
            counts:
              joy: 6
              like: 5
              dislike: 1
              frown: 2
              heart: 6
          projectId: 3
          uploadedBy: 5
          fileId: 7
          status: status
        commentsCount: 1
        reactions:
          mine: mine
          counts:
            joy: 6
            like: 5
            dislike: 1
            frown: 2
            heart: 6
        category:
          meta: '{}'
          id: 0
          type: type
        projectId: 6
        categoryId: 7
        status: status
      properties:
        category:
          $ref: '#/components/schemas/view.Relationship'
        categoryId:
          type: integer
        changeFollowers:
          $ref: '#/components/schemas/view.UserGroups'
        commentFollowers:
          $ref: '#/components/schemas/view.UserGroups'
        commentsCount:
          type: integer
        commentsCountRead:
          type: integer
        deletedAt:
          type: string
        deletedBy:
          type: integer
        description:
          type: string
        displayName:
          type: string
        downloadURL:
          type: string
        fileSource:
          type: string
        id:
          type: integer
        isLocked:
          type: boolean
        isPrivate:
          description: |-
            IsPrivate can have the values 0 for public, 1 for private and 2 for
            inherited.
          type: integer
        latestFileVersionNo:
          type: integer
        lockdown:
          $ref: '#/components/schemas/view.Relationship'
        lockdownId:
          type: integer
        lockedBy:
          type: integer
        lockedByUserId:
          type: integer
        lockedDate:
          type: string
        numLikes:
          type: integer
        originalName:
          type: string
        previewURL:
          type: string
        project:
          $ref: '#/components/schemas/view.Relationship'
        projectId:
          type: integer
        reactions:
          $ref: '#/components/schemas/view.ReactionsForObject'
        relatedItems:
          $ref: '#/components/schemas/view.RelatedItems'
        size:
          type: integer
        status:
          type: string
        tagIds:
          items:
            type: integer
          type: array
        tags:
          items:
            $ref: '#/components/schemas/view.Relationship'
          type: array
        thumbURL:
          type: string
        updatedAt:
          type: string
        uploadedBy:
          type: integer
        uploadedByUserID:
          type: integer
        uploadedDate:
          type: string
        version:
          $ref: '#/components/schemas/view.Relationship'
        versionId:
          type: integer
        versions:
          items:
            $ref: '#/components/schemas/view.Fileversion'
          type: array
      title: ProjectFile
      type: object
    view.ProjectFileCategory:
      description: |-
        ProjectFileCategory contains all the information returned from a file
        category.
      example:
        parent:
          meta: '{}'
          id: 0
          type: type
        color: color
        name: name
        project:
          meta: '{}'
          id: 0
          type: type
        id: 1
        projectId: 5
        parentId: 5
      properties:
        color:
          type: string
        id:
          type: integer
        name:
          type: string
        parent:
          $ref: '#/components/schemas/view.Relationship'
        parentId:
          type: integer
        project:
          $ref: '#/components/schemas/view.Relationship'
        projectId:
          type: integer
      title: ProjectFileCategory
      type: object
    view.ProjectMessage:
      description: ProjectMessage contains all the information returned from a project
        message.
      example:
        post:
          meta: '{}'
          id: 0
          type: type
        id: 2
        postId: 7
        title: title
      properties:
        id:
          type: integer
        post:
          $ref: '#/components/schemas/view.Relationship'
        postId:
          type: integer
        title:
          type: string
      title: ProjectMessage
      type: object
    view.ProjectMinMaxAvailableDates:
      description: |-
        ProjectMinMaxAvailableDates shows suggested start and
        end dates for a project
      example:
        maxEndDate: maxEndDate
        minStartDate: minStartDate
        suggestedEndDate: suggestedEndDate
        suggestedStartDate: suggestedStartDate
        deadlinesFound: true
      properties:
        deadlinesFound:
          type: boolean
        maxEndDate:
          type: string
        minStartDate:
          type: string
        suggestedEndDate:
          type: string
        suggestedStartDate:
          type: string
      title: ProjectMinMaxAvailableDates
      type: object
    view.ProjectSchedule:
      description: |-
        ProjectSchedule contains all the information returned from a project
        schedule.
      example:
        budgetIds:
        - 6
        - 6
        schedule:
          key:
            allocations:
            - meta: '{}'
              id: 0
              type: type
            - meta: '{}'
              id: 0
              type: type
            timelogIds:
            - 4
            - 4
            timelogs:
            - meta: '{}'
              id: 0
              type: type
            - meta: '{}'
              id: 0
              type: type
            milestoneIds:
            - 2
            - 2
            allocatedMinutes: 2
            loggedMinutes: 3
            unavailableMinutes: 7
            allocationIds:
            - 7
            - 7
            milestones:
            - meta: '{}'
              id: 0
              type: type
            - meta: '{}'
              id: 0
              type: type
            eventIds:
            - 9
            - 9
            events:
            - meta: '{}'
              id: 0
              type: type
            - meta: '{}'
              id: 0
              type: type
        budgets:
        - meta: '{}'
          id: 0
          type: type
        - meta: '{}'
          id: 0
          type: type
        unavailableTotalMinutes: 1
        userIds:
        - 1
        - 1
        project:
          meta: '{}'
          id: 0
          type: type
        allocatedTotalMinutes: 0
        projectId: 5
        loggedTotalMinutes: 5
        users:
        - meta: '{}'
          id: 0
          type: type
        - meta: '{}'
          id: 0
          type: type
        budgetMinutes: 1
      properties:
        allocatedTotalMinutes:
          type: integer
        budgetIds:
          items:
            type: integer
          type: array
        budgetMinutes:
          type: integer
        budgets:
          items:
            $ref: '#/components/schemas/view.Relationship'
          type: array
        loggedTotalMinutes:
          type: integer
        project:
          $ref: '#/components/schemas/view.Relationship'
        projectId:
          type: integer
        schedule:
          additionalProperties:
            $ref: '#/components/schemas/view.ProjectScheduleEntry'
          type: object
        unavailableTotalMinutes:
          type: integer
        userIds:
          items:
            type: integer
          type: array
        users:
          items:
            $ref: '#/components/schemas/view.Relationship'
          type: array
      title: ProjectSchedule
      type: object
    view.ProjectScheduleEntry:
      description: ProjectScheduleEntry contains all the project summary on a specific
        date.
      example:
        allocations:
        - meta: '{}'
          id: 0
          type: type
        - meta: '{}'
          id: 0
          type: type
        timelogIds:
        - 4
        - 4
        timelogs:
        - meta: '{}'
          id: 0
          type: type
        - meta: '{}'
          id: 0
          type: type
        milestoneIds:
        - 2
        - 2
        allocatedMinutes: 2
        loggedMinutes: 3
        unavailableMinutes: 7
        allocationIds:
        - 7
        - 7
        milestones:
        - meta: '{}'
          id: 0
          type: type
        - meta: '{}'
          id: 0
          type: type
        eventIds:
        - 9
        - 9
        events:
        - meta: '{}'
          id: 0
          type: type
        - meta: '{}'
          id: 0
          type: type
      properties:
        allocatedMinutes:
          type: integer
        allocationIds:
          items:
            type: integer
          type: array
        allocations:
          items:
            $ref: '#/components/schemas/view.Relationship'
          type: array
        eventIds:
          items:
            type: integer
          type: array
        events:
          items:
            $ref: '#/components/schemas/view.Relationship'
          type: array
        loggedMinutes:
          type: integer
        milestoneIds:
          items:
            type: integer
          type: array
        milestones:
          items:
            $ref: '#/components/schemas/view.Relationship'
          type: array
        timelogIds:
          items:
            type: integer
          type: array
        timelogs:
          items:
            $ref: '#/components/schemas/view.Relationship'
          type: array
        unavailableMinutes:
          type: integer
      title: ProjectScheduleEntry
      type: object
    view.ProjectTaskStats:
      description: ProjectTaskStats shows basic task stats for a project
      example:
        late: 6
        active: 1
        id: 1
        complete: 1
      properties:
        active:
          type: integer
        complete:
          type: integer
        id:
          type: integer
        late:
          type: integer
      title: ProjectTaskStats
      type: object
    view.ProjectUpdate:
      description: ProjectUpdate contains all the information returned from a update.
      example:
        likeFromUsers:
        - meta: '{}'
          id: 0
          type: type
        - meta: '{}'
          id: 0
          type: type
        color: color
        health: 4
        project:
          meta: '{}'
          id: 0
          type: type
        deletedBy: 1
        healthLabel: healthLabel
        createdAt: createdAt
        deletedAt: deletedAt
        deleted: true
        likeFromUserIDs:
        - 9
        - 9
        createdBy: 7
        reactions:
          mine: mine
          counts:
            joy: 6
            like: 5
            dislike: 1
            frown: 2
            heart: 6
        id: 5
        text: text
        projectId: 9
        updatedAt: updatedAt
      properties:
        color:
          type: string
        createdAt:
          type: string
        createdBy:
          type: integer
        deleted:
          type: boolean
        deletedAt:
          type: string
        deletedBy:
          type: integer
        health:
          type: integer
        healthLabel:
          type: string
        id:
          type: integer
        likeFromUserIDs:
          items:
            type: integer
          type: array
        likeFromUsers:
          items:
            $ref: '#/components/schemas/view.Relationship'
          type: array
        project:
          $ref: '#/components/schemas/view.Relationship'
        projectId:
          type: integer
        reactions:
          $ref: '#/components/schemas/view.ReactionsForObject'
        text:
          type: string
        updatedAt:
          type: string
      title: ProjectUpdate
      type: object
    view.PublicForm:
      description: PublicForm is a publically viewable version of Form
      example:
        banner:
          x: 0.8008281904610115
          y: 6.027456183070403
          url: url
        promptAdditionalSubmissions: true
        content:
          name: name
          banner:
            x: 0.8008281904610115
            y: 6.027456183070403
            url: url
          description: description
          definition: definition
          state: state
          version: 1
        confirmationMessage: confirmationMessage
        token:
          canonicalURL: canonicalURL
          value: value
      properties:
        banner:
          $ref: '#/components/schemas/view.Banner'
        confirmationMessage:
          type: string
        content:
          $ref: '#/components/schemas/view.Content'
        promptAdditionalSubmissions:
          type: boolean
        token:
          $ref: '#/components/schemas/view.Token'
      title: PublicForm
      type: object
    view.Reaction:
      description: Reaction is a reaction item type.
      example:
        installation:
          meta: '{}'
          id: 0
          type: type
        postedDateTime: postedDateTime
        installationId: 1
        type: type
        user:
          meta: '{}'
          id: 0
          type: type
        userId: 1
        objectId: 1
        object:
          meta: '{}'
          id: 0
          type: type
        objectType: objectType
      properties:
        installation:
          $ref: '#/components/schemas/view.Relationship'
        installationId:
          type: integer
        object:
          $ref: '#/components/schemas/view.Relationship'
        objectId:
          type: integer
        objectType:
          type: string
        postedDateTime:
          type: string
        type:
          type: string
        user:
          $ref: '#/components/schemas/view.Relationship'
        userId:
          type: integer
      title: Reaction
      type: object
    view.ReactionsForObject:
      description: ReactionsForObject contains all reactions information of a specific
        object.
      example:
        mine: mine
        counts:
          joy: 6
          like: 5
          dislike: 1
          frown: 2
          heart: 6
      properties:
        counts:
          $ref: '#/components/schemas/view.ReactionsForObjectCounter'
        mine:
          type: string
      title: ReactionsForObject
      type: object
    view.ReactionsForObjectCounter:
      description: |-
        ReactionsForObjectCounter contains the reactions counter of a specific
        object.
      example:
        joy: 6
        like: 5
        dislike: 1
        frown: 2
        heart: 6
      properties:
        dislike:
          type: integer
        frown:
          type: integer
        heart:
          type: integer
        joy:
          type: integer
        like:
          type: integer
      title: ReactionsForObjectCounter
      type: object
    view.RelatedItems:
      description: RelatedItems represents the items a file can be related to.
      example:
        comments:
        - 6
        - 6
        messages:
        - 3
        - 3
        tasks:
        - 3
        - 3
      properties:
        comments:
          items:
            type: integer
          type: array
        messages:
          items:
            type: integer
          type: array
        tasks:
          items:
            type: integer
          type: array
      title: RelatedItems
      type: object
    view.Relationship:
      description: Relationship describes the relation between the main entity and
        a sideload type.
      example:
        meta: '{}'
        id: 0
        type: type
      properties:
        id:
          type: integer
        meta:
          properties: {}
          type: object
        type:
          type: string
      title: Relationship
      type: object
    view.SampleProject:
      description: SampleProject contains all the sample project information.
      example:
        code: code
        icon: icon
        name: name
        description: description
        id: 6
        imagePreview: imagePreview
        categoryId: 0
        content: '{}'
      properties:
        categoryId:
          type: integer
        code:
          type: string
        content:
          type: object
        description:
          type: string
        icon:
          type: string
        id:
          type: integer
        imagePreview:
          type: string
        name:
          type: string
      title: SampleProject
      type: object
    view.ScheduleEntry:
      description: ScheduleEntry contains the summary on a specific date.
      example:
        allocations:
        - meta: '{}'
          id: 0
          type: type
        - meta: '{}'
          id: 0
          type: type
        timelogIds:
        - 9
        - 9
        timelogs:
        - meta: '{}'
          id: 0
          type: type
        - meta: '{}'
          id: 0
          type: type
        allocatedMinutes: 5
        loggedMinutes: 7
        unavailableMinutes: 3
        allocationIds:
        - 5
        - 5
        eventIds:
        - 2
        - 2
        events:
        - meta: '{}'
          id: 0
          type: type
        - meta: '{}'
          id: 0
          type: type
      properties:
        allocatedMinutes:
          type: integer
        allocationIds:
          items:
            type: integer
          type: array
        allocations:
          items:
            $ref: '#/components/schemas/view.Relationship'
          type: array
        eventIds:
          items:
            type: integer
          type: array
        events:
          items:
            $ref: '#/components/schemas/view.Relationship'
          type: array
        loggedMinutes:
          type: integer
        timelogIds:
          items:
            type: integer
          type: array
        timelogs:
          items:
            $ref: '#/components/schemas/view.Relationship'
          type: array
        unavailableMinutes:
          type: integer
      title: ScheduleEntry
      type: object
    view.Status:
      description: Status contains all the information returned from a status.
      example:
        dateTime: dateTime
        deleted: true
        emoji: emoji
        dateLastUpdated: dateLastUpdated
        ipAddress: ipAddress
        id: 0
        text: text
        user:
          meta: '{}'
          id: 0
          type: type
        userId: 6
        updatedAt: updatedAt
      properties:
        dateLastUpdated:
          type: string
        dateTime:
          type: string
        deleted:
          type: boolean
        emoji:
          type: string
        id:
          type: integer
        ipAddress:
          type: string
        text:
          type: string
        updatedAt:
          type: string
        user:
          $ref: '#/components/schemas/view.Relationship'
        userId:
          type: integer
      title: Status
      type: object
    view.Tag:
      description: Tag contains all the information returned from a tag.
      example:
        color: color
        count: 0
        name: name
        project:
          meta: '{}'
          id: 0
          type: type
        id: 6
        projectId: 1
      properties:
        color:
          type: string
        count:
          type: integer
        id:
          type: integer
        name:
          type: string
        project:
          $ref: '#/components/schemas/view.Relationship'
        projectId:
          type: integer
      title: Tag
      type: object
    view.Task:
      description: Task defines how entity.Task should be rendered.
      example:
        parentTaskId: 9
        assigneeUserIds:
        - 1
        - 1
        dueDate: dueDate
        tagIds:
        - 1
        - 1
        displayOrder: 9
        description: description
        isPrivate: 8
        userPermissions:
          canComplete: true
          canEdit: true
          canViewEstTime: true
          canAddSubtasks: true
          canLogTime: true
        assigneeUsers:
        - meta: '{}'
          id: 0
          type: type
        - meta: '{}'
          id: 0
          type: type
        originalDueDate: '{}'
        assigneeCompanyIds:
        - 1
        - 1
        assigneeTeamIds:
        - 1
        - 1
        id: 6
        subTaskIds:
        - 6
        - 6
        updatedAt: updatedAt
        predecessorIds:
        - 6
        - 6
        createdByUserId: 1
        updatedBy: 6
        crmDealIds:
        - 4
        - 4
        assigneeCompanies:
        - meta: '{}'
          id: 0
          type: type
        - meta: '{}'
          id: 0
          type: type
        parentTask:
          meta: '{}'
          id: 0
          type: type
        hasDeskTickets: true
        priority: priority
        dateUpdated: dateUpdated
        assigneeTeams:
        - meta: '{}'
          id: 0
          type: type
        - meta: '{}'
          id: 0
          type: type
        dependencyIds:
        - 5
        - 5
        createdBy: 7
        latestUpdates:
        - field: field
          before: '{}'
          after: '{}'
        - field: field
          before: '{}'
          after: '{}'
        completedOn: completedOn
        name: name
        progress: 3
        estimateMinutes: 9
        tasklist:
          meta: '{}'
          id: 0
          type: type
        completedBy: 6
        startDate: startDate
        tasklistId: 2
        status: status
      properties:
        assigneeCompanies:
          items:
            $ref: '#/components/schemas/view.Relationship'
          type: array
        assigneeCompanyIds:
          items:
            type: integer
          type: array
        assigneeTeamIds:
          items:
            type: integer
          type: array
        assigneeTeams:
          items:
            $ref: '#/components/schemas/view.Relationship'
          type: array
        assigneeUserIds:
          items:
            type: integer
          type: array
        assigneeUsers:
          items:
            $ref: '#/components/schemas/view.Relationship'
          type: array
        completedBy:
          type: integer
        completedOn:
          type: string
        createdBy:
          type: integer
        createdByUserId:
          type: integer
        crmDealIds:
          items:
            type: integer
          type: array
        dateUpdated:
          type: string
        dependencyIds:
          items:
            type: integer
          type: array
        description:
          type: string
        displayOrder:
          type: integer
        dueDate:
          type: string
        estimateMinutes:
          type: integer
        hasDeskTickets:
          type: boolean
        id:
          type: integer
        isPrivate:
          type: integer
        latestUpdates:
          items:
            $ref: '#/components/schemas/view.Audit'
          type: array
        name:
          type: string
        originalDueDate:
          description: Date represents a Unified API Spec date format.
          title: Date
          type: object
        parentTask:
          $ref: '#/components/schemas/view.Relationship'
        parentTaskId:
          type: integer
        predecessorIds:
          items:
            type: integer
          type: array
        priority:
          type: string
        progress:
          type: integer
        startDate:
          type: string
        status:
          type: string
        subTaskIds:
          items:
            type: integer
          type: array
        tagIds:
          items:
            type: integer
          type: array
        tasklist:
          $ref: '#/components/schemas/view.Relationship'
        tasklistId:
          type: integer
        updatedAt:
          type: string
        updatedBy:
          type: integer
        userPermissions:
          $ref: '#/components/schemas/view.TaskPermissions'
      title: Task
      type: object
    view.TaskCard:
      description: TaskCard contains all the information returned from a card.
      example:
        archived: true
        archivedAt: archivedAt
        createdAt: createdAt
        createBy:
          meta: '{}'
          id: 0
          type: type
        deletedAt: deletedAt
        visible: true
        displayOrder: 0
        deleteBy:
          meta: '{}'
          id: 0
          type: type
        id: 6
        archivedBy:
          meta: '{}'
          id: 0
          type: type
        status: status
        updatedAt: updatedAt
      properties:
        archived:
          type: boolean
        archivedAt:
          type: string
        archivedBy:
          $ref: '#/components/schemas/view.Relationship'
        createBy:
          $ref: '#/components/schemas/view.Relationship'
        createdAt:
          type: string
        deleteBy:
          $ref: '#/components/schemas/view.Relationship'
        deletedAt:
          type: string
        displayOrder:
          type: integer
        id:
          type: integer
        status:
          type: string
        updatedAt:
          type: string
        visible:
          type: boolean
      title: TaskCard
      type: object
    view.TaskPermissions:
      description: TaskPermissions is a user specific set of task permissions
      example:
        canComplete: true
        canEdit: true
        canViewEstTime: true
        canAddSubtasks: true
        canLogTime: true
      properties:
        canAddSubtasks:
          type: boolean
        canComplete:
          type: boolean
        canEdit:
          type: boolean
        canLogTime:
          type: boolean
        canViewEstTime:
          type: boolean
      title: TaskPermissions
      type: object
    view.TaskTimeTotals:
      description: TaskTimeTotals contains time total info for a task
      example:
        billableLoggedMinutes: 1
        loggedMinutes: 5
        billedloggedMinutes: 5
      properties:
        billableLoggedMinutes:
          type: integer
        billedloggedMinutes:
          type: integer
        loggedMinutes:
          type: integer
      title: TaskTimeTotals
      type: object
    view.Tasklist:
      description: Tasklist contains all the information returned from a tasklist.
      example:
        milestone:
          meta: '{}'
          id: 0
          type: type
        milestoneId: 5
        name: name
        project:
          meta: '{}'
          id: 0
          type: type
        id: 5
        newTaskDefaults:
          estimatedMinutes: 2
          dueDate: dueDate
          responisblePartyIds:
            companies:
            - meta: '{}'
              id: 0
              type: type
            - meta: '{}'
              id: 0
              type: type
            companyIds:
            - 7
            - 7
            teams:
            - meta: '{}'
              id: 0
              type: type
            - meta: '{}'
              id: 0
              type: type
            userIds:
            - 3
            - 3
            teamIds:
            - 9
            - 9
            users:
            - meta: '{}'
              id: 0
              type: type
            - meta: '{}'
              id: 0
              type: type
          priority: priority
          startDate: startDate
          tags:
          - 2
          - 2
        taskIds:
        - 7
        - 7
        projectId: 4
        tasks:
        - meta: '{}'
          id: 0
          type: type
        - meta: '{}'
          id: 0
          type: type
      properties:
        id:
          type: integer
        milestone:
          $ref: '#/components/schemas/view.Relationship'
        milestoneId:
          type: integer
        name:
          type: string
        newTaskDefaults:
          $ref: '#/components/schemas/view.NewTaskDefaults'
        project:
          $ref: '#/components/schemas/view.Relationship'
        projectId:
          type: integer
        taskIds:
          items:
            type: integer
          type: array
        tasks:
          items:
            $ref: '#/components/schemas/view.Relationship'
          type: array
      title: Tasklist
      type: object
    view.Team:
      description: Team contains all the information returned from a team.
      example:
        teamLogo: teamLogo
        name: name
        id: 4
        teamLogoColor: teamLogoColor
        teamLogoIcon: teamLogoIcon
      properties:
        id:
          type: integer
        name:
          type: string
        teamLogo:
          type: string
        teamLogoColor:
          type: string
        teamLogoIcon:
          type: string
      title: Team
      type: object
    view.Timelog:
      description: Timelog contains all the information returned from a timelog.
      example:
        tagIds:
        - 4
        - 4
        description: description
        loggedBy: 7
        project:
          meta: '{}'
          id: 0
          type: type
        deskTicketId: 6
        hasStartTime: true
        projectBillingInvoice:
          meta: '{}'
          id: 0
          type: type
        deletedBy: 6
        createdAt: createdAt
        dateCreated: dateCreated
        editedByUserId: 3
        invoiceNumber: invoiceNumber
        dateEdited: dateEdited
        id: 3
        loggedByUserId: 0
        updatedAt: updatedAt
        updatedBy: 3
        timeLogged: timeLogged
        minutes: 7
        billable: true
        userId: 3
        dateDeleted: dateDeleted
        deletedByUserId: 5
        tags:
        - meta: '{}'
          id: 0
          type: type
        - meta: '{}'
          id: 0
          type: type
        taskPreMove:
          meta: '{}'
          id: 0
          type: type
        taskIdPreMove: 7
        deletedAt: deletedAt
        deleted: true
        projectBillingInvoiceId: 6
        task:
          meta: '{}'
          id: 0
          type: type
        projectId: 0
        user:
          meta: '{}'
          id: 0
          type: type
        taskId: 8
      properties:
        billable:
          type: boolean
        createdAt:
          type: string
        dateCreated:
          type: string
        dateDeleted:
          type: string
        dateEdited:
          type: string
        deleted:
          type: boolean
        deletedAt:
          type: string
        deletedBy:
          type: integer
        deletedByUserId:
          type: integer
        description:
          type: string
        deskTicketId:
          type: integer
        editedByUserId:
          type: integer
        hasStartTime:
          type: boolean
        id:
          type: integer
        invoiceNumber:
          type: string
        loggedBy:
          type: integer
        loggedByUserId:
          type: integer
        minutes:
          type: integer
        project:
          $ref: '#/components/schemas/view.Relationship'
        projectBillingInvoice:
          $ref: '#/components/schemas/view.Relationship'
        projectBillingInvoiceId:
          type: integer
        projectId:
          type: integer
        tagIds:
          items:
            type: integer
          type: array
        tags:
          items:
            $ref: '#/components/schemas/view.Relationship'
          type: array
        task:
          $ref: '#/components/schemas/view.Relationship'
        taskId:
          type: integer
        taskIdPreMove:
          type: integer
        taskPreMove:
          $ref: '#/components/schemas/view.Relationship'
        timeLogged:
          type: string
        updatedAt:
          type: string
        updatedBy:
          type: integer
        user:
          $ref: '#/components/schemas/view.Relationship'
        userId:
          type: integer
      title: Timelog
      type: object
    view.TimelogTotals:
      description: TimelogTotals contains all the information returned for timelog
        totals.
      example:
        estimatedMinutes: 0
        minutesBillable: 7
        estimatedMinutesWithLoggedTime: 5
        estimatedMinutesCompleted: 1
        estimatedMinutesActive: 6
        minutes: 2
        minutesNonBilled: 2
        estimatedMinutesFiltered: 5
        minutesBilled: 9
        minutesNonBillable: 3
      properties:
        estimatedMinutes:
          type: integer
        estimatedMinutesActive:
          type: integer
        estimatedMinutesCompleted:
          type: integer
        estimatedMinutesFiltered:
          type: integer
        estimatedMinutesWithLoggedTime:
          type: integer
        minutes:
          type: integer
        minutesBillable:
          type: integer
        minutesBilled:
          type: integer
        minutesNonBillable:
          type: integer
        minutesNonBilled:
          type: integer
      title: TimelogTotals
      type: object
    view.Timer:
      description: Timer contains all the information returned from a timer.
      example:
        timerLastIntervalEnd: timerLastIntervalEnd
        description: description
        project:
          meta: '{}'
          id: 0
          type: type
        billable: true
        userId: 9
        duration: 0
        running: true
        createdAt: createdAt
        deletedAt: deletedAt
        intervals:
        - duration: 1
          from: from
          id: 5
          to: to
        - duration: 1
          from: from
          id: 5
          to: to
        deleted: true
        task:
          meta: '{}'
          id: 0
          type: type
        timeLogId: 7
        lastStartedAt: lastStartedAt
        timelog:
          meta: '{}'
          id: 0
          type: type
        serverTime: serverTime
        id: 6
        projectId: 5
        user:
          meta: '{}'
          id: 0
          type: type
        taskId: 2
        updatedAt: updatedAt
      properties:
        billable:
          type: boolean
        createdAt:
          type: string
        deleted:
          type: boolean
        deletedAt:
          type: string
        description:
          type: string
        duration:
          type: integer
        id:
          type: integer
        intervals:
          items:
            $ref: '#/components/schemas/view.TimerInterval'
          type: array
        lastStartedAt:
          type: string
        project:
          $ref: '#/components/schemas/view.Relationship'
        projectId:
          type: integer
        running:
          type: boolean
        serverTime:
          type: string
        task:
          $ref: '#/components/schemas/view.Relationship'
        taskId:
          type: integer
        timeLogId:
          type: integer
        timelog:
          $ref: '#/components/schemas/view.Relationship'
        timerLastIntervalEnd:
          type: string
        updatedAt:
          type: string
        user:
          $ref: '#/components/schemas/view.Relationship'
        userId:
          type: integer
      title: Timer
      type: object
    view.TimerInterval:
      description: |-
        TimerInterval contains all the information returned from a timer
        interval.
      example:
        duration: 1
        from: from
        id: 5
        to: to
      properties:
        duration:
          type: integer
        from:
          type: string
        id:
          type: integer
        to:
          type: string
      title: TimerInterval
      type: object
    view.Token:
      description: Token contains all the information returned from a form token.
      example:
        canonicalURL: canonicalURL
        value: value
      properties:
        canonicalURL:
          type: string
        value:
          type: string
      title: Token
      type: object
    view.User:
      description: User contains all the information returned from an user.
      example:
        lastName: lastName
        avatarUrl: avatarUrl
        isAdmin: true
        title: title
        type: type
        firstName: firstName
        companyId: 2
        workingHoursId: 5
        lengthOfDay: 6.878052220127876
        company:
          meta: '{}'
          id: 0
          type: type
        workingHour:
          meta: '{}'
          id: 0
          type: type
        id: 6
        email: email
      properties:
        avatarUrl:
          type: string
        company:
          $ref: '#/components/schemas/view.Relationship'
        companyId:
          type: integer
        email:
          type: string
        firstName:
          type: string
        id:
          type: integer
        isAdmin:
          type: boolean
        lastName:
          type: string
        lengthOfDay:
          type: number
        title:
          type: string
        type:
          type: string
        workingHour:
          $ref: '#/components/schemas/view.Relationship'
        workingHoursId:
          type: integer
      title: User
      type: object
    view.UserAvailability:
      description: UserAvailability contains all the information returned from a availability.
      example:
        dates:
          key:
            unavailableEventIds:
            - 6
            - 6
            availableMinutes: 0
        user:
          meta: '{}'
          id: 0
          type: type
        userId: 1
      properties:
        dates:
          additionalProperties:
            $ref: '#/components/schemas/view.UserAvailabilityDate'
          type: object
        user:
          $ref: '#/components/schemas/view.Relationship'
        userId:
          type: integer
      title: UserAvailability
      type: object
    view.UserAvailabilityDate:
      description: UserAvailabilityDate stores the user availability for a specific
        date.
      example:
        unavailableEventIds:
        - 6
        - 6
        availableMinutes: 0
      properties:
        availableMinutes:
          type: integer
        unavailableEventIds:
          items:
            type: integer
          type: array
      title: UserAvailabilityDate
      type: object
    view.UserDashboard:
      description: UserDashboard contains all the information returned from a dashboard.
      example:
        color: color
        dashboardSettingIds:
        - 6
        - 6
        displayOrder: 1
        description: description
        project:
          meta: '{}'
          id: 0
          type: type
        dashboardPanelIds:
        - 0
        - 0
        title: title
        userId: 2
        createdAt: createdAt
        deletedAt: deletedAt
        isDefault: true
        deleted: true
        dashboardPanels:
        - meta: '{}'
          id: 0
          type: type
        - meta: '{}'
          id: 0
          type: type
        dashboardSettings:
        - meta: '{}'
          id: 0
          type: type
        - meta: '{}'
          id: 0
          type: type
        id: 5
        projectId: 5
        user:
          meta: '{}'
          id: 0
          type: type
        updatedAt: updatedAt
      properties:
        color:
          type: string
        createdAt:
          type: string
        dashboardPanelIds:
          items:
            type: integer
          type: array
        dashboardPanels:
          items:
            $ref: '#/components/schemas/view.Relationship'
          type: array
        dashboardSettingIds:
          items:
            type: integer
          type: array
        dashboardSettings:
          items:
            $ref: '#/components/schemas/view.Relationship'
          type: array
        deleted:
          type: boolean
        deletedAt:
          type: string
        description:
          type: string
        displayOrder:
          type: integer
        id:
          type: integer
        isDefault:
          type: boolean
        project:
          $ref: '#/components/schemas/view.Relationship'
        projectId:
          type: integer
        title:
          type: string
        updatedAt:
          type: string
        user:
          $ref: '#/components/schemas/view.Relationship'
        userId:
          type: integer
      title: UserDashboard
      type: object
    view.UserDashboardPanel:
      description: |-
        UserDashboardPanel contains all the information returned from a dashboard
        panel.
      example:
        dashboardId: 2
        displayOrder: 7
        name: name
        id: 1
        type: type
        dashboardPanelSettingIds:
        - 4
        - 4
      properties:
        dashboardId:
          type: integer
        dashboardPanelSettingIds:
          items:
            type: integer
          type: array
        displayOrder:
          type: integer
        id:
          type: integer
        name:
          type: string
        type:
          type: string
      title: UserDashboardPanel
      type: object
    view.UserDashboardPanelSetting:
      description: |-
        UserDashboardPanelSetting contains all the information returned from a dashboard
        panel.
      example:
        dashboardId: 7
        dashboardPanelId: 9
        name: name
        id: 3
        value: value
      properties:
        dashboardId:
          type: integer
        dashboardPanelId:
          type: integer
        id:
          type: integer
        name:
          type: string
        value:
          type: string
      title: UserDashboardPanelSetting
      type: object
    view.UserDashboardSetting:
      description: |-
        UserDashboardSetting contains all the information returned from a dashboard
        setting.
      example:
        dashboardId: 1
        name: name
        id: 1
        value: value
      properties:
        dashboardId:
          type: integer
        id:
          type: integer
        name:
          type: string
        value:
          type: string
      title: UserDashboardSetting
      type: object
    view.UserEvents:
      description: |-
        UserEvents contains status details from other project
        features related with a user.
      example:
        clockedIn: true
      properties:
        clockedIn:
          type: boolean
      title: UserEvents
      type: object
    view.UserGroups:
      description: |-
        UserGroups are common lists for storing users, companies and teams ids
        together.
      example:
        companies:
        - meta: '{}'
          id: 0
          type: type
        - meta: '{}'
          id: 0
          type: type
        companyIds:
        - 7
        - 7
        teams:
        - meta: '{}'
          id: 0
          type: type
        - meta: '{}'
          id: 0
          type: type
        userIds:
        - 3
        - 3
        teamIds:
        - 9
        - 9
        users:
        - meta: '{}'
          id: 0
          type: type
        - meta: '{}'
          id: 0
          type: type
      properties:
        companies:
          items:
            $ref: '#/components/schemas/view.Relationship'
          type: array
        companyIds:
          items:
            type: integer
          type: array
        teamIds:
          items:
            type: integer
          type: array
        teams:
          items:
            $ref: '#/components/schemas/view.Relationship'
          type: array
        userIds:
          items:
            type: integer
          type: array
        users:
          items:
            $ref: '#/components/schemas/view.Relationship'
          type: array
      title: UserGroups
      type: object
    view.UserSchedule:
      description: UserSchedule contains all the information returned from a user
        schedule.
      example:
        schedule:
          key:
            allocations:
            - meta: '{}'
              id: 0
              type: type
            - meta: '{}'
              id: 0
              type: type
            timelogIds:
            - 9
            - 9
            timelogs:
            - meta: '{}'
              id: 0
              type: type
            - meta: '{}'
              id: 0
              type: type
            allocatedMinutes: 5
            loggedMinutes: 7
            unavailableMinutes: 3
            allocationIds:
            - 5
            - 5
            eventIds:
            - 2
            - 2
            events:
            - meta: '{}'
              id: 0
              type: type
            - meta: '{}'
              id: 0
              type: type
        projects:
        - meta: '{}'
          id: 0
          type: type
        - meta: '{}'
          id: 0
          type: type
        unavailableTotalMinutes: 2
        allocatedTotalMinutes: 0
        projectIds:
        - 1
        - 1
        user:
          meta: '{}'
          id: 0
          type: type
        userId: 4
        loggedTotalMinutes: 6
      properties:
        allocatedTotalMinutes:
          type: integer
        loggedTotalMinutes:
          type: integer
        projectIds:
          items:
            type: integer
          type: array
        projects:
          items:
            $ref: '#/components/schemas/view.Relationship'
          type: array
        schedule:
          additionalProperties:
            $ref: '#/components/schemas/view.ScheduleEntry'
          type: object
        unavailableTotalMinutes:
          type: integer
        user:
          $ref: '#/components/schemas/view.Relationship'
        userId:
          type: integer
      title: UserSchedule
      type: object
    view.UserUtilization:
      description: UserUtilization contains all the information returned from a utilization.
      example:
        data:
        - estimatedMinutes: 5
          billableMinutes: 1
          endDate: '{}'
          allocatedMinutes: 0
          loggedMinutes: 5
          unavailableMinutes: 2
          availableMinutes: 6
          startDate: '{}'
          unbillableMinutes: 7
        - estimatedMinutes: 5
          billableMinutes: 1
          endDate: '{}'
          allocatedMinutes: 0
          loggedMinutes: 5
          unavailableMinutes: 2
          availableMinutes: 6
          startDate: '{}'
          unbillableMinutes: 7
        user:
          meta: '{}'
          id: 0
          type: type
        userId: 9
      properties:
        data:
          items:
            $ref: '#/components/schemas/view.UserUtilizationData'
          type: array
        user:
          $ref: '#/components/schemas/view.Relationship'
        userId:
          type: integer
      title: UserUtilization
      type: object
    view.UserUtilizationData:
      description: UserUtilizationData stores the user utilization on a specific period.
      example:
        estimatedMinutes: 5
        billableMinutes: 1
        endDate: '{}'
        allocatedMinutes: 0
        loggedMinutes: 5
        unavailableMinutes: 2
        availableMinutes: 6
        startDate: '{}'
        unbillableMinutes: 7
      properties:
        allocatedMinutes:
          type: integer
        availableMinutes:
          type: integer
        billableMinutes:
          type: integer
        endDate:
          description: Date represents a Unified API Spec date format.
          title: Date
          type: object
        estimatedMinutes:
          type: integer
        loggedMinutes:
          type: integer
        startDate:
          description: Date represents a Unified API Spec date format.
          title: Date
          type: object
        unavailableMinutes:
          type: integer
        unbillableMinutes:
          type: integer
      title: UserUtilizationData
      type: object
    view.Usercost:
      description: Usercost contains all the information returned from a usercost.
      example:
        cost: 0
        user:
          meta: '{}'
          id: 0
          type: type
        userId: 6
      properties:
        cost:
          type: integer
        user:
          $ref: '#/components/schemas/view.Relationship'
        userId:
          type: integer
      title: Usercost
      type: object
    view.WorkingHour:
      description: WorkingHour stores the the working hours of an entity (user, team,
        etc).
      example:
        createdAt: createdAt
        entries:
        - meta: '{}'
          id: 0
          type: type
        - meta: '{}'
          id: 0
          type: type
        entryIds:
        - 7
        - 7
        dateCreated: dateCreated
        name: name
        description: description
        id: 9
        objectId: 3
        dateUpdated: dateUpdated
        object:
          meta: '{}'
          id: 0
          type: type
        objectType: objectType
        updatedAt: updatedAt
      properties:
        createdAt:
          type: string
        dateCreated:
          type: string
        dateUpdated:
          type: string
        description:
          type: string
        entries:
          items:
            $ref: '#/components/schemas/view.Relationship'
          type: array
        entryIds:
          items:
            type: integer
          type: array
        id:
          type: integer
        name:
          type: string
        object:
          $ref: '#/components/schemas/view.Relationship'
        objectId:
          type: integer
        objectType:
          type: string
        updatedAt:
          type: string
      title: WorkingHour
      type: object
    view.WorkingHourEntry:
      description: WorkingHourEntry stores weekday working hour data.
      example:
        timezone: timezone
        taskHours: 5.637376656633329
        weekday: weekday
        startTime: startTime
        workingHour:
          meta: '{}'
          id: 0
          type: type
        endTime: endTime
        id: 5
        workingHourId: 2
      properties:
        endTime:
          type: string
        id:
          type: integer
        startTime:
          type: string
        taskHours:
          type: number
        timezone:
          type: string
        weekday:
          type: string
        workingHour:
          $ref: '#/components/schemas/view.Relationship'
        workingHourId:
          type: integer
      title: WorkingHourEntry
      type: object
    activity_ActivitiesResponse_included:
      example:
        companies:
          key:
            city: city
            industry:
              meta: '{}'
              id: 0
              type: type
            emailTwo: emailTwo
            industryId: 6
            isOwner: true
            addressTwo: addressTwo
            countryCode: countryCode
            emailThree: emailThree
            id: 1
            state: state
            fax: fax
            zip: zip
            profileText: profileText
            website: website
            clientUsers: 1
            companyNameUrl: companyNameUrl
            logoUrl: logoUrl
            phone: phone
            emailOne: emailOne
            name: name
            privateNotesText: privateNotesText
            accounts: 7
            addressOne: addressOne
            contacts: 1
            canSeePrivate: true
            cid: cid
        projects:
          key:
            replyByEmailEnabled: true
            startPage: startPage
            endDate: endDate
            overviewStartPage: overviewStartPage
            tagIds:
            - 6
            - 6
            customFieldValueIds:
            - 5
            - 5
            description: description
            minMaxAvailableDates:
              maxEndDate: maxEndDate
              minStartDate: minStartDate
              suggestedEndDate: suggestedEndDate
              suggestedStartDate: suggestedStartDate
              deadlinesFound: true
            ownerId: 8
            type: type
            createdAt: createdAt
            updateId: 6
            logo: logo
            company:
              meta: '{}'
              id: 0
              type: type
            id: 9
            financialBudget:
              meta: '{}'
              id: 0
              type: type
            updatedAt: updatedAt
            harvestTimersEnabled: true
            updatedBy: 1
            activePages:
              comments: true
              riskRegister: true
              list: true
              gantt: true
              billing: true
              notebooks: true
              files: true
              messages: true
              links: true
              time: true
              milestones: true
              board: true
              forms: true
              table: true
              tasks: true
            isStarred: true
            directFileUploadsEnabled: true
            isOnBoardingProject: true
            subStatus: subStatus
            isSampleProject: true
            tags:
            - meta: '{}'
              id: 0
              type: type
            - meta: '{}'
              id: 0
              type: type
            tasksStartPage: tasksStartPage
            financialBudgetId: 9
            privacyEnabled: true
            companyId: 1
            defaultPrivacy: defaultPrivacy
            customFieldValues:
            - meta: '{}'
              id: 0
              type: type
            - meta: '{}'
              id: 0
              type: type
            createdBy: 4
            notifyCommentIncludeCreator: true
            skipWeekends: true
            name: name
            projectOwnerId: 9
            notifyEveryone: true
            timeBudgetId: 3
            showAnnouncement: true
            category:
              meta: '{}'
              id: 0
              type: type
            integrations:
              xero:
                connected: true
                countryCode: countryCode
                organisation: organisation
                baseCurrency: baseCurrency
                enabled: true
              oneDriveBusiness:
                folder: folder
                folderName: folderName
                account: account
                enabled: true
              sharepoint:
                folder: folder
                folderName: folderName
                account: account
                enabled: true
            ownedBy: 6
            categoryId: 7
            startDate: startDate
            status: status
            timeBudget:
              meta: '{}'
              id: 0
              type: type
        users:
          key:
            lastName: lastName
            avatarUrl: avatarUrl
            isAdmin: true
            title: title
            type: type
            firstName: firstName
            companyId: 2
            workingHoursId: 5
            lengthOfDay: 6.878052220127876
            company:
              meta: '{}'
              id: 0
              type: type
            workingHour:
              meta: '{}'
              id: 0
              type: type
            id: 6
            email: email
      properties:
        companies:
          additionalProperties:
            $ref: '#/components/schemas/view.Company'
          type: object
        projects:
          additionalProperties:
            $ref: '#/components/schemas/view.Project'
          type: object
        users:
          additionalProperties:
            $ref: '#/components/schemas/view.User'
          type: object
      type: object
    app_AppsResponse_included:
      example:
        appsettings:
          key:
            isSecret: true
            defaultValue: defaultValue
            displayName: displayName
            name: name
            id: 6
            type: STRING
            value: value
      properties:
        appsettings:
          additionalProperties:
            $ref: '#/components/schemas/view.AppSetting'
          type: object
      type: object
    assignee_FormAssigneesResponse_included:
      example:
        companies:
          key:
            city: city
            industry:
              meta: '{}'
              id: 0
              type: type
            emailTwo: emailTwo
            industryId: 6
            isOwner: true
            addressTwo: addressTwo
            countryCode: countryCode
            emailThree: emailThree
            id: 1
            state: state
            fax: fax
            zip: zip
            profileText: profileText
            website: website
            clientUsers: 1
            companyNameUrl: companyNameUrl
            logoUrl: logoUrl
            phone: phone
            emailOne: emailOne
            name: name
            privateNotesText: privateNotesText
            accounts: 7
            addressOne: addressOne
            contacts: 1
            canSeePrivate: true
            cid: cid
        projects:
          key:
            replyByEmailEnabled: true
            startPage: startPage
            endDate: endDate
            overviewStartPage: overviewStartPage
            tagIds:
            - 6
            - 6
            customFieldValueIds:
            - 5
            - 5
            description: description
            minMaxAvailableDates:
              maxEndDate: maxEndDate
              minStartDate: minStartDate
              suggestedEndDate: suggestedEndDate
              suggestedStartDate: suggestedStartDate
              deadlinesFound: true
            ownerId: 8
            type: type
            createdAt: createdAt
            updateId: 6
            logo: logo
            company:
              meta: '{}'
              id: 0
              type: type
            id: 9
            financialBudget:
              meta: '{}'
              id: 0
              type: type
            updatedAt: updatedAt
            harvestTimersEnabled: true
            updatedBy: 1
            activePages:
              comments: true
              riskRegister: true
              list: true
              gantt: true
              billing: true
              notebooks: true
              files: true
              messages: true
              links: true
              time: true
              milestones: true
              board: true
              forms: true
              table: true
              tasks: true
            isStarred: true
            directFileUploadsEnabled: true
            isOnBoardingProject: true
            subStatus: subStatus
            isSampleProject: true
            tags:
            - meta: '{}'
              id: 0
              type: type
            - meta: '{}'
              id: 0
              type: type
            tasksStartPage: tasksStartPage
            financialBudgetId: 9
            privacyEnabled: true
            companyId: 1
            defaultPrivacy: defaultPrivacy
            customFieldValues:
            - meta: '{}'
              id: 0
              type: type
            - meta: '{}'
              id: 0
              type: type
            createdBy: 4
            notifyCommentIncludeCreator: true
            skipWeekends: true
            name: name
            projectOwnerId: 9
            notifyEveryone: true
            timeBudgetId: 3
            showAnnouncement: true
            category:
              meta: '{}'
              id: 0
              type: type
            integrations:
              xero:
                connected: true
                countryCode: countryCode
                organisation: organisation
                baseCurrency: baseCurrency
                enabled: true
              oneDriveBusiness:
                folder: folder
                folderName: folderName
                account: account
                enabled: true
              sharepoint:
                folder: folder
                folderName: folderName
                account: account
                enabled: true
            ownedBy: 6
            categoryId: 7
            startDate: startDate
            status: status
            timeBudget:
              meta: '{}'
              id: 0
              type: type
        teams:
          key:
            teamLogo: teamLogo
            name: name
            id: 4
            teamLogoColor: teamLogoColor
            teamLogoIcon: teamLogoIcon
        users:
          key:
            lastName: lastName
            avatarUrl: avatarUrl
            isAdmin: true
            title: title
            type: type
            firstName: firstName
            companyId: 2
            workingHoursId: 5
            lengthOfDay: 6.878052220127876
            company:
              meta: '{}'
              id: 0
              type: type
            workingHour:
              meta: '{}'
              id: 0
              type: type
            id: 6
            email: email
      properties:
        companies:
          additionalProperties:
            $ref: '#/components/schemas/view.Company'
          type: object
        projects:
          additionalProperties:
            $ref: '#/components/schemas/view.Project'
          type: object
        teams:
          additionalProperties:
            $ref: '#/components/schemas/view.Team'
          type: object
        users:
          additionalProperties:
            $ref: '#/components/schemas/view.User'
          type: object
      type: object
    availability_Response_included:
      example:
        calendarEvents:
          key:
            dateLastUpdated: dateLastUpdated
            endDate: endDate
            projectUsersCanEdit: true
            createdDateTime: createdDateTime
            description: description
            project:
              meta: '{}'
              id: 0
              type: type
            updatedByUserId: 1
            currentUserAssociationType: currentUserAssociationType
            title: title
            type:
              meta: '{}'
              id: 0
              type: type
            sequenceId: 2
            deletedBy: 5
            allDay: true
            createdAt: createdAt
            id: 2
            updatedAt: updatedAt
            createdByUserId: 1
            updatedBy: 7
            attendeesCanEdit: true
            attendingUserIds:
            - 0
            - 0
            monthlyRepeatType: monthlyRepeatType
            dateDeleted: dateDeleted
            deletedByUserId: 5
            sequence:
              meta: '{}'
              id: 0
              type: type
            deletedAt: deletedAt
            deleted: true
            createdBy: 6
            ownerUserId: 9
            location: location
            showAsBusy: true
            typeId: 4
            additionalProperties: additionalProperties
            attendingUsers:
            - meta: '{}'
              id: 0
              type: type
            - meta: '{}'
              id: 0
              type: type
            ownedBy: 7
            projectId: 3
            privacyType: privacyType
            startDate: startDate
        workingHourEntries:
          key:
            timezone: timezone
            taskHours: 5.637376656633329
            weekday: weekday
            startTime: startTime
            workingHour:
              meta: '{}'
              id: 0
              type: type
            endTime: endTime
            id: 5
            workingHourId: 2
        workingHours:
          key:
            createdAt: createdAt
            entries:
            - meta: '{}'
              id: 0
              type: type
            - meta: '{}'
              id: 0
              type: type
            entryIds:
            - 7
            - 7
            dateCreated: dateCreated
            name: name
            description: description
            id: 9
            objectId: 3
            dateUpdated: dateUpdated
            object:
              meta: '{}'
              id: 0
              type: type
            objectType: objectType
            updatedAt: updatedAt
        users:
          key:
            lastName: lastName
            avatarUrl: avatarUrl
            isAdmin: true
            title: title
            type: type
            firstName: firstName
            companyId: 2
            workingHoursId: 5
            lengthOfDay: 6.878052220127876
            company:
              meta: '{}'
              id: 0
              type: type
            workingHour:
              meta: '{}'
              id: 0
              type: type
            id: 6
            email: email
      properties:
        calendarEvents:
          additionalProperties:
            $ref: '#/components/schemas/view.CalendarEvent'
          type: object
        users:
          additionalProperties:
            $ref: '#/components/schemas/view.User'
          type: object
        workingHourEntries:
          additionalProperties:
            $ref: '#/components/schemas/view.WorkingHourEntry'
          type: object
        workingHours:
          additionalProperties:
            $ref: '#/components/schemas/view.WorkingHour'
          type: object
      type: object
    budget_ProjectBudgetsResponse_included:
      example:
        companies:
          key:
            city: city
            industry:
              meta: '{}'
              id: 0
              type: type
            emailTwo: emailTwo
            industryId: 6
            isOwner: true
            addressTwo: addressTwo
            countryCode: countryCode
            emailThree: emailThree
            id: 1
            state: state
            fax: fax
            zip: zip
            profileText: profileText
            website: website
            clientUsers: 1
            companyNameUrl: companyNameUrl
            logoUrl: logoUrl
            phone: phone
            emailOne: emailOne
            name: name
            privateNotesText: privateNotesText
            accounts: 7
            addressOne: addressOne
            contacts: 1
            canSeePrivate: true
            cid: cid
        projects:
          key:
            replyByEmailEnabled: true
            startPage: startPage
            endDate: endDate
            overviewStartPage: overviewStartPage
            tagIds:
            - 6
            - 6
            customFieldValueIds:
            - 5
            - 5
            description: description
            minMaxAvailableDates:
              maxEndDate: maxEndDate
              minStartDate: minStartDate
              suggestedEndDate: suggestedEndDate
              suggestedStartDate: suggestedStartDate
              deadlinesFound: true
            ownerId: 8
            type: type
            createdAt: createdAt
            updateId: 6
            logo: logo
            company:
              meta: '{}'
              id: 0
              type: type
            id: 9
            financialBudget:
              meta: '{}'
              id: 0
              type: type
            updatedAt: updatedAt
            harvestTimersEnabled: true
            updatedBy: 1
            activePages:
              comments: true
              riskRegister: true
              list: true
              gantt: true
              billing: true
              notebooks: true
              files: true
              messages: true
              links: true
              time: true
              milestones: true
              board: true
              forms: true
              table: true
              tasks: true
            isStarred: true
            directFileUploadsEnabled: true
            isOnBoardingProject: true
            subStatus: subStatus
            isSampleProject: true
            tags:
            - meta: '{}'
              id: 0
              type: type
            - meta: '{}'
              id: 0
              type: type
            tasksStartPage: tasksStartPage
            financialBudgetId: 9
            privacyEnabled: true
            companyId: 1
            defaultPrivacy: defaultPrivacy
            customFieldValues:
            - meta: '{}'
              id: 0
              type: type
            - meta: '{}'
              id: 0
              type: type
            createdBy: 4
            notifyCommentIncludeCreator: true
            skipWeekends: true
            name: name
            projectOwnerId: 9
            notifyEveryone: true
            timeBudgetId: 3
            showAnnouncement: true
            category:
              meta: '{}'
              id: 0
              type: type
            integrations:
              xero:
                connected: true
                countryCode: countryCode
                organisation: organisation
                baseCurrency: baseCurrency
                enabled: true
              oneDriveBusiness:
                folder: folder
                folderName: folderName
                account: account
                enabled: true
              sharepoint:
                folder: folder
                folderName: folderName
                account: account
                enabled: true
            ownedBy: 6
            categoryId: 7
            startDate: startDate
            status: status
            timeBudget:
              meta: '{}'
              id: 0
              type: type
        teams:
          key:
            teamLogo: teamLogo
            name: name
            id: 4
            teamLogoColor: teamLogoColor
            teamLogoIcon: teamLogoIcon
        notifications:
          key:
            capacityThreshold: 0.8008281904610115
            notificationMedium: notificationMedium
            companies:
            - meta: '{}'
              id: 0
              type: type
            - meta: '{}'
              id: 0
              type: type
            companyIds:
            - 6
            - 6
            teams:
            - meta: '{}'
              id: 0
              type: type
            - meta: '{}'
              id: 0
              type: type
            userIds:
            - 5
            - 5
            id: 1
            teamIds:
            - 5
            - 5
            users:
            - meta: '{}'
              id: 0
              type: type
            - meta: '{}'
              id: 0
              type: type
        users:
          key:
            lastName: lastName
            avatarUrl: avatarUrl
            isAdmin: true
            title: title
            type: type
            firstName: firstName
            companyId: 2
            workingHoursId: 5
            lengthOfDay: 6.878052220127876
            company:
              meta: '{}'
              id: 0
              type: type
            workingHour:
              meta: '{}'
              id: 0
              type: type
            id: 6
            email: email
      properties:
        companies:
          additionalProperties:
            $ref: '#/components/schemas/view.Company'
          type: object
        notifications:
          additionalProperties:
            $ref: '#/components/schemas/view.ProjectBudgetNotification'
          type: object
        projects:
          additionalProperties:
            $ref: '#/components/schemas/view.Project'
          type: object
        teams:
          additionalProperties:
            $ref: '#/components/schemas/view.Team'
          type: object
        users:
          additionalProperties:
            $ref: '#/components/schemas/view.User'
          type: object
      type: object
    calendar_EventsResponse_included:
      example:
        projects:
          key:
            replyByEmailEnabled: true
            startPage: startPage
            endDate: endDate
            overviewStartPage: overviewStartPage
            tagIds:
            - 6
            - 6
            customFieldValueIds:
            - 5
            - 5
            description: description
            minMaxAvailableDates:
              maxEndDate: maxEndDate
              minStartDate: minStartDate
              suggestedEndDate: suggestedEndDate
              suggestedStartDate: suggestedStartDate
              deadlinesFound: true
            ownerId: 8
            type: type
            createdAt: createdAt
            updateId: 6
            logo: logo
            company:
              meta: '{}'
              id: 0
              type: type
            id: 9
            financialBudget:
              meta: '{}'
              id: 0
              type: type
            updatedAt: updatedAt
            harvestTimersEnabled: true
            updatedBy: 1
            activePages:
              comments: true
              riskRegister: true
              list: true
              gantt: true
              billing: true
              notebooks: true
              files: true
              messages: true
              links: true
              time: true
              milestones: true
              board: true
              forms: true
              table: true
              tasks: true
            isStarred: true
            directFileUploadsEnabled: true
            isOnBoardingProject: true
            subStatus: subStatus
            isSampleProject: true
            tags:
            - meta: '{}'
              id: 0
              type: type
            - meta: '{}'
              id: 0
              type: type
            tasksStartPage: tasksStartPage
            financialBudgetId: 9
            privacyEnabled: true
            companyId: 1
            defaultPrivacy: defaultPrivacy
            customFieldValues:
            - meta: '{}'
              id: 0
              type: type
            - meta: '{}'
              id: 0
              type: type
            createdBy: 4
            notifyCommentIncludeCreator: true
            skipWeekends: true
            name: name
            projectOwnerId: 9
            notifyEveryone: true
            timeBudgetId: 3
            showAnnouncement: true
            category:
              meta: '{}'
              id: 0
              type: type
            integrations:
              xero:
                connected: true
                countryCode: countryCode
                organisation: organisation
                baseCurrency: baseCurrency
                enabled: true
              oneDriveBusiness:
                folder: folder
                folderName: folderName
                account: account
                enabled: true
              sharepoint:
                folder: folder
                folderName: folderName
                account: account
                enabled: true
            ownedBy: 6
            categoryId: 7
            startDate: startDate
            status: status
            timeBudget:
              meta: '{}'
              id: 0
              type: type
        users:
          key:
            lastName: lastName
            avatarUrl: avatarUrl
            isAdmin: true
            title: title
            type: type
            firstName: firstName
            companyId: 2
            workingHoursId: 5
            lengthOfDay: 6.878052220127876
            company:
              meta: '{}'
              id: 0
              type: type
            workingHour:
              meta: '{}'
              id: 0
              type: type
            id: 6
            email: email
      properties:
        projects:
          additionalProperties:
            $ref: '#/components/schemas/view.Project'
          type: object
        users:
          additionalProperties:
            $ref: '#/components/schemas/view.User'
          type: object
      type: object
    column_BoardColumnMeta_user:
      example:
        canEdit: true
        canAddCards: true
      properties:
        canAddCards:
          type: boolean
        canEdit:
          type: boolean
      type: object
    column_Response_included:
      example:
        tasklists:
          key:
            milestone:
              meta: '{}'
              id: 0
              type: type
            milestoneId: 5
            name: name
            project:
              meta: '{}'
              id: 0
              type: type
            id: 5
            newTaskDefaults:
              estimatedMinutes: 2
              dueDate: dueDate
              responisblePartyIds:
                companies:
                - meta: '{}'
                  id: 0
                  type: type
                - meta: '{}'
                  id: 0
                  type: type
                companyIds:
                - 7
                - 7
                teams:
                - meta: '{}'
                  id: 0
                  type: type
                - meta: '{}'
                  id: 0
                  type: type
                userIds:
                - 3
                - 3
                teamIds:
                - 9
                - 9
                users:
                - meta: '{}'
                  id: 0
                  type: type
                - meta: '{}'
                  id: 0
                  type: type
              priority: priority
              startDate: startDate
              tags:
              - 2
              - 2
            taskIds:
            - 7
            - 7
            projectId: 4
            tasks:
            - meta: '{}'
              id: 0
              type: type
            - meta: '{}'
              id: 0
              type: type
      properties:
        tasklists:
          additionalProperties:
            $ref: '#/components/schemas/view.Tasklist'
          type: object
      type: object
    comment_CommentsResponse_included:
      example:
        companies:
          key:
            city: city
            industry:
              meta: '{}'
              id: 0
              type: type
            emailTwo: emailTwo
            industryId: 6
            isOwner: true
            addressTwo: addressTwo
            countryCode: countryCode
            emailThree: emailThree
            id: 1
            state: state
            fax: fax
            zip: zip
            profileText: profileText
            website: website
            clientUsers: 1
            companyNameUrl: companyNameUrl
            logoUrl: logoUrl
            phone: phone
            emailOne: emailOne
            name: name
            privateNotesText: privateNotesText
            accounts: 7
            addressOne: addressOne
            contacts: 1
            canSeePrivate: true
            cid: cid
        projects:
          key:
            replyByEmailEnabled: true
            startPage: startPage
            endDate: endDate
            overviewStartPage: overviewStartPage
            tagIds:
            - 6
            - 6
            customFieldValueIds:
            - 5
            - 5
            description: description
            minMaxAvailableDates:
              maxEndDate: maxEndDate
              minStartDate: minStartDate
              suggestedEndDate: suggestedEndDate
              suggestedStartDate: suggestedStartDate
              deadlinesFound: true
            ownerId: 8
            type: type
            createdAt: createdAt
            updateId: 6
            logo: logo
            company:
              meta: '{}'
              id: 0
              type: type
            id: 9
            financialBudget:
              meta: '{}'
              id: 0
              type: type
            updatedAt: updatedAt
            harvestTimersEnabled: true
            updatedBy: 1
            activePages:
              comments: true
              riskRegister: true
              list: true
              gantt: true
              billing: true
              notebooks: true
              files: true
              messages: true
              links: true
              time: true
              milestones: true
              board: true
              forms: true
              table: true
              tasks: true
            isStarred: true
            directFileUploadsEnabled: true
            isOnBoardingProject: true
            subStatus: subStatus
            isSampleProject: true
            tags:
            - meta: '{}'
              id: 0
              type: type
            - meta: '{}'
              id: 0
              type: type
            tasksStartPage: tasksStartPage
            financialBudgetId: 9
            privacyEnabled: true
            companyId: 1
            defaultPrivacy: defaultPrivacy
            customFieldValues:
            - meta: '{}'
              id: 0
              type: type
            - meta: '{}'
              id: 0
              type: type
            createdBy: 4
            notifyCommentIncludeCreator: true
            skipWeekends: true
            name: name
            projectOwnerId: 9
            notifyEveryone: true
            timeBudgetId: 3
            showAnnouncement: true
            category:
              meta: '{}'
              id: 0
              type: type
            integrations:
              xero:
                connected: true
                countryCode: countryCode
                organisation: organisation
                baseCurrency: baseCurrency
                enabled: true
              oneDriveBusiness:
                folder: folder
                folderName: folderName
                account: account
                enabled: true
              sharepoint:
                folder: folder
                folderName: folderName
                account: account
                enabled: true
            ownedBy: 6
            categoryId: 7
            startDate: startDate
            status: status
            timeBudget:
              meta: '{}'
              id: 0
              type: type
        notebooks:
          key:
            changeFollowers:
              companies:
              - meta: '{}'
                id: 0
                type: type
              - meta: '{}'
                id: 0
                type: type
              companyIds:
              - 7
              - 7
              teams:
              - meta: '{}'
                id: 0
                type: type
              - meta: '{}'
                id: 0
                type: type
              userIds:
              - 3
              - 3
              teamIds:
              - 9
              - 9
              users:
              - meta: '{}'
                id: 0
                type: type
              - meta: '{}'
                id: 0
                type: type
            versionCount: 2
            createdByUserID: 8
            userFollowingComments: true
            tagIds:
            - 7
            - 7
            lockedAt: lockedAt
            commentFollowers:
              companies:
              - meta: '{}'
                id: 0
                type: type
              - meta: '{}'
                id: 0
                type: type
              companyIds:
              - 7
              - 7
              teams:
              - meta: '{}'
                id: 0
                type: type
              - meta: '{}'
                id: 0
                type: type
              userIds:
              - 3
              - 3
              teamIds:
              - 9
              - 9
              users:
              - meta: '{}'
                id: 0
                type: type
              - meta: '{}'
                id: 0
                type: type
            description: description
            privacy:
              companies:
              - meta: '{}'
                id: 0
                type: type
              - meta: '{}'
                id: 0
                type: type
              companyIds:
              - 7
              - 7
              teams:
              - meta: '{}'
                id: 0
                type: type
              - meta: '{}'
                id: 0
                type: type
              userIds:
              - 3
              - 3
              teamIds:
              - 9
              - 9
              users:
              - meta: '{}'
                id: 0
                type: type
              - meta: '{}'
                id: 0
                type: type
            project:
              meta: '{}'
              id: 0
              type: type
            isPrivate: true
            type: type
            deletedBy: 0
            deletedByUserID: 5
            createdAt: createdAt
            dateCreated: dateCreated
            latestVersionNo: 8
            lockedBy: 3
            userFollowingChanges: true
            lockdown:
              meta: '{}'
              id: 0
              type: type
            id: 5
            locked: true
            notebookVersionID: 3
            updatedAt: updatedAt
            updatedBy: 0
            readCommentsCount: 5
            lockdownId: 7
            updatedByUserID: 3
            contentHTML: contentHTML
            dateDeleted: dateDeleted
            dateUpdated: dateUpdated
            tags:
            - meta: '{}'
              id: 0
              type: type
            - meta: '{}'
              id: 0
              type: type
            secureContent: true
            deletedAt: deletedAt
            notebookVersionUpdatedDateTime: notebookVersionUpdatedDateTime
            deleted: true
            contents: contents
            createdBy: 9
            commentsCount: 3
            name: name
            notebookVersionCreatedDateTime: notebookVersionCreatedDateTime
            category:
              meta: '{}'
              id: 0
              type: type
            projectId: 9
            categoryId: 1
            notebookVersion:
              meta: '{}'
              id: 0
              type: type
        fileversions:
          key:
            commentsCountRead: 8
            displayName: displayName
            description: description
            project:
              meta: '{}'
              id: 0
              type: type
            fileVersionId: 3
            originalName: originalName
            file:
              meta: '{}'
              id: 0
              type: type
            size: 7
            commentsCount: 4
            name: name
            versionNo: 3
            reactions:
              mine: mine
              counts:
                joy: 6
                like: 5
                dislike: 1
                frown: 2
                heart: 6
            projectId: 3
            uploadedBy: 5
            fileId: 7
            status: status
        files:
          key:
            changeFollowers:
              companies:
              - meta: '{}'
                id: 0
                type: type
              - meta: '{}'
                id: 0
                type: type
              companyIds:
              - 7
              - 7
              teams:
              - meta: '{}'
                id: 0
                type: type
              - meta: '{}'
                id: 0
                type: type
              userIds:
              - 3
              - 3
              teamIds:
              - 9
              - 9
              users:
              - meta: '{}'
                id: 0
                type: type
              - meta: '{}'
                id: 0
                type: type
            commentsCountRead: 4
            previewURL: previewURL
            displayName: displayName
            tagIds:
            - 0
            - 0
            downloadURL: downloadURL
            commentFollowers:
              companies:
              - meta: '{}'
                id: 0
                type: type
              - meta: '{}'
                id: 0
                type: type
              companyIds:
              - 7
              - 7
              teams:
              - meta: '{}'
                id: 0
                type: type
              - meta: '{}'
                id: 0
                type: type
              userIds:
              - 3
              - 3
              teamIds:
              - 9
              - 9
              users:
              - meta: '{}'
                id: 0
                type: type
              - meta: '{}'
                id: 0
                type: type
            description: description
            project:
              meta: '{}'
              id: 0
              type: type
            isPrivate: 9
            numLikes: 3
            uploadedDate: uploadedDate
            deletedBy: 5
            uploadedByUserID: 6
            originalName: originalName
            lockedBy: 9
            isLocked: true
            lockdown:
              meta: '{}'
              id: 0
              type: type
            id: 9
            thumbURL: thumbURL
            uploadedBy: 7
            updatedAt: updatedAt
            latestFileVersionNo: 6
            lockdownId: 8
            lockedByUserId: 6
            relatedItems:
              comments:
              - 6
              - 6
              messages:
              - 3
              - 3
              tasks:
              - 3
              - 3
            fileSource: fileSource
            lockedDate: lockedDate
            version:
              meta: '{}'
              id: 0
              type: type
            tags:
            - meta: '{}'
              id: 0
              type: type
            - meta: '{}'
              id: 0
              type: type
            deletedAt: deletedAt
            versionId: 0
            size: 7
            versions:
            - commentsCountRead: 8
              displayName: displayName
              description: description
              project:
                meta: '{}'
                id: 0
                type: type
              fileVersionId: 3
              originalName: originalName
              file:
                meta: '{}'
                id: 0
                type: type
              size: 7
              commentsCount: 4
              name: name
              versionNo: 3
              reactions:
                mine: mine
                counts:
                  joy: 6
                  like: 5
                  dislike: 1
                  frown: 2
                  heart: 6
              projectId: 3
              uploadedBy: 5
              fileId: 7
              status: status
            - commentsCountRead: 8
              displayName: displayName
              description: description
              project:
                meta: '{}'
                id: 0
                type: type
              fileVersionId: 3
              originalName: originalName
              file:
                meta: '{}'
                id: 0
                type: type
              size: 7
              commentsCount: 4
              name: name
              versionNo: 3
              reactions:
                mine: mine
                counts:
                  joy: 6
                  like: 5
                  dislike: 1
                  frown: 2
                  heart: 6
              projectId: 3
              uploadedBy: 5
              fileId: 7
              status: status
            commentsCount: 1
            reactions:
              mine: mine
              counts:
                joy: 6
                like: 5
                dislike: 1
                frown: 2
                heart: 6
            category:
              meta: '{}'
              id: 0
              type: type
            projectId: 6
            categoryId: 7
            status: status
        links:
          key:
            code: code
            updatedBy: 9
            description: description
            project:
              meta: '{}'
              id: 0
              type: type
            isPrivate: true
            title: title
            deletedBy: 6
            createdAt: createdAt
            deletedAt: deletedAt
            deleted: true
            createdBy: 0
            provider: provider
            width: 0
            id: 4
            category:
              meta: '{}'
              id: 0
              type: type
            projectId: 7
            categoryId: 4
            forceNewWindow: 4
            height: 1
            updatedAt: updatedAt
        milestones:
          key:
            changeFollowers:
            - meta: '{}'
              id: 0
              type: type
            - meta: '{}'
              id: 0
              type: type
            creatorUserId: 8
            private: true
            userFollowingComments: true
            canEdit: true
            tagIds:
            - 4
            - 4
            commentFollowers:
            - meta: '{}'
              id: 0
              type: type
            - meta: '{}'
              id: 0
              type: type
            description: description
            project:
              meta: '{}'
              id: 0
              type: type
            tasklists:
            - meta: '{}'
              id: 0
              type: type
            - meta: '{}'
              id: 0
              type: type
            percentageTasksCompleted: 1
            createdOn: createdOn
            isDeleted: true
            originalDueDate: originalDueDate
            userFollowingChanges: true
            commentFollowerIds:
            - 0
            - 0
            lockdown:
              meta: '{}'
              id: 0
              type: type
            id: 4
            deadline: deadline
            numCommentsRead: 0
            updatedBy: 9
            reminder: true
            canComplete: true
            lockdownId: 3
            completerId: 4
            completed: true
            tags:
            - meta: '{}'
              id: 0
              type: type
            - meta: '{}'
              id: 0
              type: type
            changeFollowerIds:
            - 9
            - 9
            responsiblePartyIds:
            - 6
            - 6
            lastChangedOn: lastChangedOn
            responsibleParties:
            - meta: '{}'
              id: 0
              type: type
            - meta: '{}'
              id: 0
              type: type
            createdBy: 6
            latestUpdates:
            - field: field
              before: '{}'
              after: '{}'
            - field: field
              before: '{}'
              after: '{}'
            percentageComplete: 2
            commentsCount: 7
            completedOn: completedOn
            name: name
            projectId: 8
            tasklistIds:
            - 8
            - 8
            completedBy: 5
            status: status
        tasks:
          key:
            parentTaskId: 9
            assigneeUserIds:
            - 1
            - 1
            dueDate: dueDate
            tagIds:
            - 1
            - 1
            displayOrder: 9
            description: description
            isPrivate: 8
            userPermissions:
              canComplete: true
              canEdit: true
              canViewEstTime: true
              canAddSubtasks: true
              canLogTime: true
            assigneeUsers:
            - meta: '{}'
              id: 0
              type: type
            - meta: '{}'
              id: 0
              type: type
            originalDueDate: '{}'
            assigneeCompanyIds:
            - 1
            - 1
            assigneeTeamIds:
            - 1
            - 1
            id: 6
            subTaskIds:
            - 6
            - 6
            updatedAt: updatedAt
            predecessorIds:
            - 6
            - 6
            createdByUserId: 1
            updatedBy: 6
            crmDealIds:
            - 4
            - 4
            assigneeCompanies:
            - meta: '{}'
              id: 0
              type: type
            - meta: '{}'
              id: 0
              type: type
            parentTask:
              meta: '{}'
              id: 0
              type: type
            hasDeskTickets: true
            priority: priority
            dateUpdated: dateUpdated
            assigneeTeams:
            - meta: '{}'
              id: 0
              type: type
            - meta: '{}'
              id: 0
              type: type
            dependencyIds:
            - 5
            - 5
            createdBy: 7
            latestUpdates:
            - field: field
              before: '{}'
              after: '{}'
            - field: field
              before: '{}'
              after: '{}'
            completedOn: completedOn
            name: name
            progress: 3
            estimateMinutes: 9
            tasklist:
              meta: '{}'
              id: 0
              type: type
            completedBy: 6
            startDate: startDate
            tasklistId: 2
            status: status
        users:
          key:
            lastName: lastName
            avatarUrl: avatarUrl
            isAdmin: true
            title: title
            type: type
            firstName: firstName
            companyId: 2
            workingHoursId: 5
            lengthOfDay: 6.878052220127876
            company:
              meta: '{}'
              id: 0
              type: type
            workingHour:
              meta: '{}'
              id: 0
              type: type
            id: 6
            email: email
      properties:
        companies:
          additionalProperties:
            $ref: '#/components/schemas/view.Company'
          type: object
        files:
          additionalProperties:
            $ref: '#/components/schemas/view.ProjectFile'
          type: object
        fileversions:
          additionalProperties:
            $ref: '#/components/schemas/view.Fileversion'
          type: object
        links:
          additionalProperties:
            $ref: '#/components/schemas/view.LinkItem'
          type: object
        milestones:
          additionalProperties:
            $ref: '#/components/schemas/view.Milestone'
          type: object
        notebooks:
          additionalProperties:
            $ref: '#/components/schemas/view.Notebook'
          type: object
        projects:
          additionalProperties:
            $ref: '#/components/schemas/view.Project'
          type: object
        tasks:
          additionalProperties:
            $ref: '#/components/schemas/view.Task'
          type: object
        users:
          additionalProperties:
            $ref: '#/components/schemas/view.User'
          type: object
      type: object
    company_Response_included:
      example:
        industries:
          key:
            industryCategory:
              meta: '{}'
              id: 0
              type: type
            industryCategoryId: 5
            isPublished: true
            displayOrder: 6
            name: name
            id: 1
            isActive: true
        countries:
          key:
            eu: true
            country: country
            code: code
            vatName: vatName
            phoneCode: phoneCode
            vatPercent: 0
        tags:
          key:
            color: color
            count: 0
            name: name
            project:
              meta: '{}'
              id: 0
              type: type
            id: 6
            projectId: 1
      properties:
        countries:
          additionalProperties:
            $ref: '#/components/schemas/view.Country'
          type: object
        industries:
          additionalProperties:
            $ref: '#/components/schemas/view.Industry'
          type: object
        tags:
          additionalProperties:
            $ref: '#/components/schemas/view.Tag'
          type: object
      type: object
    dashboard_UserDashboardsResponse_included:
      example:
        projects:
          key:
            replyByEmailEnabled: true
            startPage: startPage
            endDate: endDate
            overviewStartPage: overviewStartPage
            tagIds:
            - 6
            - 6
            customFieldValueIds:
            - 5
            - 5
            description: description
            minMaxAvailableDates:
              maxEndDate: maxEndDate
              minStartDate: minStartDate
              suggestedEndDate: suggestedEndDate
              suggestedStartDate: suggestedStartDate
              deadlinesFound: true
            ownerId: 8
            type: type
            createdAt: createdAt
            updateId: 6
            logo: logo
            company:
              meta: '{}'
              id: 0
              type: type
            id: 9
            financialBudget:
              meta: '{}'
              id: 0
              type: type
            updatedAt: updatedAt
            harvestTimersEnabled: true
            updatedBy: 1
            activePages:
              comments: true
              riskRegister: true
              list: true
              gantt: true
              billing: true
              notebooks: true
              files: true
              messages: true
              links: true
              time: true
              milestones: true
              board: true
              forms: true
              table: true
              tasks: true
            isStarred: true
            directFileUploadsEnabled: true
            isOnBoardingProject: true
            subStatus: subStatus
            isSampleProject: true
            tags:
            - meta: '{}'
              id: 0
              type: type
            - meta: '{}'
              id: 0
              type: type
            tasksStartPage: tasksStartPage
            financialBudgetId: 9
            privacyEnabled: true
            companyId: 1
            defaultPrivacy: defaultPrivacy
            customFieldValues:
            - meta: '{}'
              id: 0
              type: type
            - meta: '{}'
              id: 0
              type: type
            createdBy: 4
            notifyCommentIncludeCreator: true
            skipWeekends: true
            name: name
            projectOwnerId: 9
            notifyEveryone: true
            timeBudgetId: 3
            showAnnouncement: true
            category:
              meta: '{}'
              id: 0
              type: type
            integrations:
              xero:
                connected: true
                countryCode: countryCode
                organisation: organisation
                baseCurrency: baseCurrency
                enabled: true
              oneDriveBusiness:
                folder: folder
                folderName: folderName
                account: account
                enabled: true
              sharepoint:
                folder: folder
                folderName: folderName
                account: account
                enabled: true
            ownedBy: 6
            categoryId: 7
            startDate: startDate
            status: status
            timeBudget:
              meta: '{}'
              id: 0
              type: type
        dashboardPanelSettings:
          key:
            dashboardId: 7
            dashboardPanelId: 9
            name: name
            id: 3
            value: value
        dashboardPanels:
          key:
            dashboardId: 2
            displayOrder: 7
            name: name
            id: 1
            type: type
            dashboardPanelSettingIds:
            - 4
            - 4
        dashboardSettings:
          key:
            dashboardId: 1
            name: name
            id: 1
            value: value
        users:
          key:
            lastName: lastName
            avatarUrl: avatarUrl
            isAdmin: true
            title: title
            type: type
            firstName: firstName
            companyId: 2
            workingHoursId: 5
            lengthOfDay: 6.878052220127876
            company:
              meta: '{}'
              id: 0
              type: type
            workingHour:
              meta: '{}'
              id: 0
              type: type
            id: 6
            email: email
      properties:
        dashboardPanelSettings:
          additionalProperties:
            $ref: '#/components/schemas/view.UserDashboardPanelSetting'
          type: object
        dashboardPanels:
          additionalProperties:
            $ref: '#/components/schemas/view.UserDashboardPanel'
          type: object
        dashboardSettings:
          additionalProperties:
            $ref: '#/components/schemas/view.UserDashboardSetting'
          type: object
        projects:
          additionalProperties:
            $ref: '#/components/schemas/view.Project'
          type: object
        users:
          additionalProperties:
            $ref: '#/components/schemas/view.User'
          type: object
      type: object
    file_AvailableResponse_available:
      example:
        bytes: 0
      properties:
        bytes:
          type: integer
      type: object
    file_ProjectFilesResponse_included:
      example:
        comments:
          key:
            id: 0
            title: title
            objectId: 6
            object:
              meta: '{}'
              id: 0
              type: type
            objectType: objectType
        projects:
          key:
            replyByEmailEnabled: true
            startPage: startPage
            endDate: endDate
            overviewStartPage: overviewStartPage
            tagIds:
            - 6
            - 6
            customFieldValueIds:
            - 5
            - 5
            description: description
            minMaxAvailableDates:
              maxEndDate: maxEndDate
              minStartDate: minStartDate
              suggestedEndDate: suggestedEndDate
              suggestedStartDate: suggestedStartDate
              deadlinesFound: true
            ownerId: 8
            type: type
            createdAt: createdAt
            updateId: 6
            logo: logo
            company:
              meta: '{}'
              id: 0
              type: type
            id: 9
            financialBudget:
              meta: '{}'
              id: 0
              type: type
            updatedAt: updatedAt
            harvestTimersEnabled: true
            updatedBy: 1
            activePages:
              comments: true
              riskRegister: true
              list: true
              gantt: true
              billing: true
              notebooks: true
              files: true
              messages: true
              links: true
              time: true
              milestones: true
              board: true
              forms: true
              table: true
              tasks: true
            isStarred: true
            directFileUploadsEnabled: true
            isOnBoardingProject: true
            subStatus: subStatus
            isSampleProject: true
            tags:
            - meta: '{}'
              id: 0
              type: type
            - meta: '{}'
              id: 0
              type: type
            tasksStartPage: tasksStartPage
            financialBudgetId: 9
            privacyEnabled: true
            companyId: 1
            defaultPrivacy: defaultPrivacy
            customFieldValues:
            - meta: '{}'
              id: 0
              type: type
            - meta: '{}'
              id: 0
              type: type
            createdBy: 4
            notifyCommentIncludeCreator: true
            skipWeekends: true
            name: name
            projectOwnerId: 9
            notifyEveryone: true
            timeBudgetId: 3
            showAnnouncement: true
            category:
              meta: '{}'
              id: 0
              type: type
            integrations:
              xero:
                connected: true
                countryCode: countryCode
                organisation: organisation
                baseCurrency: baseCurrency
                enabled: true
              oneDriveBusiness:
                folder: folder
                folderName: folderName
                account: account
                enabled: true
              sharepoint:
                folder: folder
                folderName: folderName
                account: account
                enabled: true
            ownedBy: 6
            categoryId: 7
            startDate: startDate
            status: status
            timeBudget:
              meta: '{}'
              id: 0
              type: type
        permissions:
          key:
            canEdit: true
            canDelete: true
            canAddFiles: true
        fileCategories:
          key:
            parent:
              meta: '{}'
              id: 0
              type: type
            color: color
            name: name
            project:
              meta: '{}'
              id: 0
              type: type
            id: 1
            projectId: 5
            parentId: 5
        messages:
          key:
            post:
              meta: '{}'
              id: 0
              type: type
            id: 2
            postId: 7
            title: title
        tasks:
          key:
            parentTaskId: 9
            assigneeUserIds:
            - 1
            - 1
            dueDate: dueDate
            tagIds:
            - 1
            - 1
            displayOrder: 9
            description: description
            isPrivate: 8
            userPermissions:
              canComplete: true
              canEdit: true
              canViewEstTime: true
              canAddSubtasks: true
              canLogTime: true
            assigneeUsers:
            - meta: '{}'
              id: 0
              type: type
            - meta: '{}'
              id: 0
              type: type
            originalDueDate: '{}'
            assigneeCompanyIds:
            - 1
            - 1
            assigneeTeamIds:
            - 1
            - 1
            id: 6
            subTaskIds:
            - 6
            - 6
            updatedAt: updatedAt
            predecessorIds:
            - 6
            - 6
            createdByUserId: 1
            updatedBy: 6
            crmDealIds:
            - 4
            - 4
            assigneeCompanies:
            - meta: '{}'
              id: 0
              type: type
            - meta: '{}'
              id: 0
              type: type
            parentTask:
              meta: '{}'
              id: 0
              type: type
            hasDeskTickets: true
            priority: priority
            dateUpdated: dateUpdated
            assigneeTeams:
            - meta: '{}'
              id: 0
              type: type
            - meta: '{}'
              id: 0
              type: type
            dependencyIds:
            - 5
            - 5
            createdBy: 7
            latestUpdates:
            - field: field
              before: '{}'
              after: '{}'
            - field: field
              before: '{}'
              after: '{}'
            completedOn: completedOn
            name: name
            progress: 3
            estimateMinutes: 9
            tasklist:
              meta: '{}'
              id: 0
              type: type
            completedBy: 6
            startDate: startDate
            tasklistId: 2
            status: status
        users:
          key:
            lastName: lastName
            avatarUrl: avatarUrl
            isAdmin: true
            title: title
            type: type
            firstName: firstName
            companyId: 2
            workingHoursId: 5
            lengthOfDay: 6.878052220127876
            company:
              meta: '{}'
              id: 0
              type: type
            workingHour:
              meta: '{}'
              id: 0
              type: type
            id: 6
            email: email
        tags:
          key:
            color: color
            count: 0
            name: name
            project:
              meta: '{}'
              id: 0
              type: type
            id: 6
            projectId: 1
      properties:
        comments:
          additionalProperties:
            $ref: '#/components/schemas/view.Comment'
          type: object
        fileCategories:
          additionalProperties:
            $ref: '#/components/schemas/view.ProjectFileCategory'
          type: object
        messages:
          additionalProperties:
            $ref: '#/components/schemas/view.ProjectMessage'
          type: object
        permissions:
          additionalProperties:
            $ref: '#/components/schemas/view.FilePermissions'
          type: object
        projects:
          additionalProperties:
            $ref: '#/components/schemas/view.Project'
          type: object
        tags:
          additionalProperties:
            $ref: '#/components/schemas/view.Tag'
          type: object
        tasks:
          additionalProperties:
            $ref: '#/components/schemas/view.Task'
          type: object
        users:
          additionalProperties:
            $ref: '#/components/schemas/view.User'
          type: object
      type: object
    file_UsageResponse_filesUsage:
      example:
        totalRemainingAsText: totalRemainingAsText
        total: 5
        projects:
        - total: 1
          totalAsText: totalAsText
          project:
            meta: '{}'
            id: 0
            type: type
          projectId: 6
        - total: 1
          totalAsText: totalAsText
          project:
            meta: '{}'
            id: 0
            type: type
          projectId: 6
        totalAllowedAsText: totalAllowedAsText
        totalAsText: totalAsText
        overuse: 0
        totalAllowed: 5
        overuseAsText: overuseAsText
        totalRemaining: 2
      properties:
        overuse:
          type: integer
        overuseAsText:
          type: string
        projects:
          items:
            $ref: '#/components/schemas/file.ProjectUsage'
          type: array
        total:
          type: integer
        totalAllowed:
          type: integer
        totalAllowedAsText:
          type: string
        totalAsText:
          type: string
        totalRemaining:
          type: integer
        totalRemainingAsText:
          type: string
      type: object
    file_UsageResponse_included:
      example:
        projects:
          key:
            replyByEmailEnabled: true
            startPage: startPage
            endDate: endDate
            overviewStartPage: overviewStartPage
            tagIds:
            - 6
            - 6
            customFieldValueIds:
            - 5
            - 5
            description: description
            minMaxAvailableDates:
              maxEndDate: maxEndDate
              minStartDate: minStartDate
              suggestedEndDate: suggestedEndDate
              suggestedStartDate: suggestedStartDate
              deadlinesFound: true
            ownerId: 8
            type: type
            createdAt: createdAt
            updateId: 6
            logo: logo
            company:
              meta: '{}'
              id: 0
              type: type
            id: 9
            financialBudget:
              meta: '{}'
              id: 0
              type: type
            updatedAt: updatedAt
            harvestTimersEnabled: true
            updatedBy: 1
            activePages:
              comments: true
              riskRegister: true
              list: true
              gantt: true
              billing: true
              notebooks: true
              files: true
              messages: true
              links: true
              time: true
              milestones: true
              board: true
              forms: true
              table: true
              tasks: true
            isStarred: true
            directFileUploadsEnabled: true
            isOnBoardingProject: true
            subStatus: subStatus
            isSampleProject: true
            tags:
            - meta: '{}'
              id: 0
              type: type
            - meta: '{}'
              id: 0
              type: type
            tasksStartPage: tasksStartPage
            financialBudgetId: 9
            privacyEnabled: true
            companyId: 1
            defaultPrivacy: defaultPrivacy
            customFieldValues:
            - meta: '{}'
              id: 0
              type: type
            - meta: '{}'
              id: 0
              type: type
            createdBy: 4
            notifyCommentIncludeCreator: true
            skipWeekends: true
            name: name
            projectOwnerId: 9
            notifyEveryone: true
            timeBudgetId: 3
            showAnnouncement: true
            category:
              meta: '{}'
              id: 0
              type: type
            integrations:
              xero:
                connected: true
                countryCode: countryCode
                organisation: organisation
                baseCurrency: baseCurrency
                enabled: true
              oneDriveBusiness:
                folder: folder
                folderName: folderName
                account: account
                enabled: true
              sharepoint:
                folder: folder
                folderName: folderName
                account: account
                enabled: true
            ownedBy: 6
            categoryId: 7
            startDate: startDate
            status: status
            timeBudget:
              meta: '{}'
              id: 0
              type: type
      properties:
        projects:
          additionalProperties:
            $ref: '#/components/schemas/view.Project'
          type: object
      type: object
    fileversion_Response_included:
      example:
        projects:
          key:
            replyByEmailEnabled: true
            startPage: startPage
            endDate: endDate
            overviewStartPage: overviewStartPage
            tagIds:
            - 6
            - 6
            customFieldValueIds:
            - 5
            - 5
            description: description
            minMaxAvailableDates:
              maxEndDate: maxEndDate
              minStartDate: minStartDate
              suggestedEndDate: suggestedEndDate
              suggestedStartDate: suggestedStartDate
              deadlinesFound: true
            ownerId: 8
            type: type
            createdAt: createdAt
            updateId: 6
            logo: logo
            company:
              meta: '{}'
              id: 0
              type: type
            id: 9
            financialBudget:
              meta: '{}'
              id: 0
              type: type
            updatedAt: updatedAt
            harvestTimersEnabled: true
            updatedBy: 1
            activePages:
              comments: true
              riskRegister: true
              list: true
              gantt: true
              billing: true
              notebooks: true
              files: true
              messages: true
              links: true
              time: true
              milestones: true
              board: true
              forms: true
              table: true
              tasks: true
            isStarred: true
            directFileUploadsEnabled: true
            isOnBoardingProject: true
            subStatus: subStatus
            isSampleProject: true
            tags:
            - meta: '{}'
              id: 0
              type: type
            - meta: '{}'
              id: 0
              type: type
            tasksStartPage: tasksStartPage
            financialBudgetId: 9
            privacyEnabled: true
            companyId: 1
            defaultPrivacy: defaultPrivacy
            customFieldValues:
            - meta: '{}'
              id: 0
              type: type
            - meta: '{}'
              id: 0
              type: type
            createdBy: 4
            notifyCommentIncludeCreator: true
            skipWeekends: true
            name: name
            projectOwnerId: 9
            notifyEveryone: true
            timeBudgetId: 3
            showAnnouncement: true
            category:
              meta: '{}'
              id: 0
              type: type
            integrations:
              xero:
                connected: true
                countryCode: countryCode
                organisation: organisation
                baseCurrency: baseCurrency
                enabled: true
              oneDriveBusiness:
                folder: folder
                folderName: folderName
                account: account
                enabled: true
              sharepoint:
                folder: folder
                folderName: folderName
                account: account
                enabled: true
            ownedBy: 6
            categoryId: 7
            startDate: startDate
            status: status
            timeBudget:
              meta: '{}'
              id: 0
              type: type
        files:
          key:
            changeFollowers:
              companies:
              - meta: '{}'
                id: 0
                type: type
              - meta: '{}'
                id: 0
                type: type
              companyIds:
              - 7
              - 7
              teams:
              - meta: '{}'
                id: 0
                type: type
              - meta: '{}'
                id: 0
                type: type
              userIds:
              - 3
              - 3
              teamIds:
              - 9
              - 9
              users:
              - meta: '{}'
                id: 0
                type: type
              - meta: '{}'
                id: 0
                type: type
            commentsCountRead: 4
            previewURL: previewURL
            displayName: displayName
            tagIds:
            - 0
            - 0
            downloadURL: downloadURL
            commentFollowers:
              companies:
              - meta: '{}'
                id: 0
                type: type
              - meta: '{}'
                id: 0
                type: type
              companyIds:
              - 7
              - 7
              teams:
              - meta: '{}'
                id: 0
                type: type
              - meta: '{}'
                id: 0
                type: type
              userIds:
              - 3
              - 3
              teamIds:
              - 9
              - 9
              users:
              - meta: '{}'
                id: 0
                type: type
              - meta: '{}'
                id: 0
                type: type
            description: description
            project:
              meta: '{}'
              id: 0
              type: type
            isPrivate: 9
            numLikes: 3
            uploadedDate: uploadedDate
            deletedBy: 5
            uploadedByUserID: 6
            originalName: originalName
            lockedBy: 9
            isLocked: true
            lockdown:
              meta: '{}'
              id: 0
              type: type
            id: 9
            thumbURL: thumbURL
            uploadedBy: 7
            updatedAt: updatedAt
            latestFileVersionNo: 6
            lockdownId: 8
            lockedByUserId: 6
            relatedItems:
              comments:
              - 6
              - 6
              messages:
              - 3
              - 3
              tasks:
              - 3
              - 3
            fileSource: fileSource
            lockedDate: lockedDate
            version:
              meta: '{}'
              id: 0
              type: type
            tags:
            - meta: '{}'
              id: 0
              type: type
            - meta: '{}'
              id: 0
              type: type
            deletedAt: deletedAt
            versionId: 0
            size: 7
            versions:
            - commentsCountRead: 8
              displayName: displayName
              description: description
              project:
                meta: '{}'
                id: 0
                type: type
              fileVersionId: 3
              originalName: originalName
              file:
                meta: '{}'
                id: 0
                type: type
              size: 7
              commentsCount: 4
              name: name
              versionNo: 3
              reactions:
                mine: mine
                counts:
                  joy: 6
                  like: 5
                  dislike: 1
                  frown: 2
                  heart: 6
              projectId: 3
              uploadedBy: 5
              fileId: 7
              status: status
            - commentsCountRead: 8
              displayName: displayName
              description: description
              project:
                meta: '{}'
                id: 0
                type: type
              fileVersionId: 3
              originalName: originalName
              file:
                meta: '{}'
                id: 0
                type: type
              size: 7
              commentsCount: 4
              name: name
              versionNo: 3
              reactions:
                mine: mine
                counts:
                  joy: 6
                  like: 5
                  dislike: 1
                  frown: 2
                  heart: 6
              projectId: 3
              uploadedBy: 5
              fileId: 7
              status: status
            commentsCount: 1
            reactions:
              mine: mine
              counts:
                joy: 6
                like: 5
                dislike: 1
                frown: 2
                heart: 6
            category:
              meta: '{}'
              id: 0
              type: type
            projectId: 6
            categoryId: 7
            status: status
        users:
          key:
            lastName: lastName
            avatarUrl: avatarUrl
            isAdmin: true
            title: title
            type: type
            firstName: firstName
            companyId: 2
            workingHoursId: 5
            lengthOfDay: 6.878052220127876
            company:
              meta: '{}'
              id: 0
              type: type
            workingHour:
              meta: '{}'
              id: 0
              type: type
            id: 6
            email: email
      properties:
        files:
          additionalProperties:
            $ref: '#/components/schemas/view.ProjectFile'
          type: object
        projects:
          additionalProperties:
            $ref: '#/components/schemas/view.Project'
          type: object
        users:
          additionalProperties:
            $ref: '#/components/schemas/view.User'
          type: object
      type: object
    invoice_ProjectMetricInvoicesResponse_data:
      example:
        value: 0
      properties:
        value:
          type: integer
      type: object
    lockdown_Response_included:
      example:
        companies:
          key:
            city: city
            industry:
              meta: '{}'
              id: 0
              type: type
            emailTwo: emailTwo
            industryId: 6
            isOwner: true
            addressTwo: addressTwo
            countryCode: countryCode
            emailThree: emailThree
            id: 1
            state: state
            fax: fax
            zip: zip
            profileText: profileText
            website: website
            clientUsers: 1
            companyNameUrl: companyNameUrl
            logoUrl: logoUrl
            phone: phone
            emailOne: emailOne
            name: name
            privateNotesText: privateNotesText
            accounts: 7
            addressOne: addressOne
            contacts: 1
            canSeePrivate: true
            cid: cid
        comments:
          key:
            id: 0
            title: title
            objectId: 6
            object:
              meta: '{}'
              id: 0
              type: type
            objectType: objectType
        teams:
          key:
            teamLogo: teamLogo
            name: name
            id: 4
            teamLogoColor: teamLogoColor
            teamLogoIcon: teamLogoIcon
        notebooks:
          key:
            changeFollowers:
              companies:
              - meta: '{}'
                id: 0
                type: type
              - meta: '{}'
                id: 0
                type: type
              companyIds:
              - 7
              - 7
              teams:
              - meta: '{}'
                id: 0
                type: type
              - meta: '{}'
                id: 0
                type: type
              userIds:
              - 3
              - 3
              teamIds:
              - 9
              - 9
              users:
              - meta: '{}'
                id: 0
                type: type
              - meta: '{}'
                id: 0
                type: type
            versionCount: 2
            createdByUserID: 8
            userFollowingComments: true
            tagIds:
            - 7
            - 7
            lockedAt: lockedAt
            commentFollowers:
              companies:
              - meta: '{}'
                id: 0
                type: type
              - meta: '{}'
                id: 0
                type: type
              companyIds:
              - 7
              - 7
              teams:
              - meta: '{}'
                id: 0
                type: type
              - meta: '{}'
                id: 0
                type: type
              userIds:
              - 3
              - 3
              teamIds:
              - 9
              - 9
              users:
              - meta: '{}'
                id: 0
                type: type
              - meta: '{}'
                id: 0
                type: type
            description: description
            privacy:
              companies:
              - meta: '{}'
                id: 0
                type: type
              - meta: '{}'
                id: 0
                type: type
              companyIds:
              - 7
              - 7
              teams:
              - meta: '{}'
                id: 0
                type: type
              - meta: '{}'
                id: 0
                type: type
              userIds:
              - 3
              - 3
              teamIds:
              - 9
              - 9
              users:
              - meta: '{}'
                id: 0
                type: type
              - meta: '{}'
                id: 0
                type: type
            project:
              meta: '{}'
              id: 0
              type: type
            isPrivate: true
            type: type
            deletedBy: 0
            deletedByUserID: 5
            createdAt: createdAt
            dateCreated: dateCreated
            latestVersionNo: 8
            lockedBy: 3
            userFollowingChanges: true
            lockdown:
              meta: '{}'
              id: 0
              type: type
            id: 5
            locked: true
            notebookVersionID: 3
            updatedAt: updatedAt
            updatedBy: 0
            readCommentsCount: 5
            lockdownId: 7
            updatedByUserID: 3
            contentHTML: contentHTML
            dateDeleted: dateDeleted
            dateUpdated: dateUpdated
            tags:
            - meta: '{}'
              id: 0
              type: type
            - meta: '{}'
              id: 0
              type: type
            secureContent: true
            deletedAt: deletedAt
            notebookVersionUpdatedDateTime: notebookVersionUpdatedDateTime
            deleted: true
            contents: contents
            createdBy: 9
            commentsCount: 3
            name: name
            notebookVersionCreatedDateTime: notebookVersionCreatedDateTime
            category:
              meta: '{}'
              id: 0
              type: type
            projectId: 9
            categoryId: 1
            notebookVersion:
              meta: '{}'
              id: 0
              type: type
        files:
          key:
            changeFollowers:
              companies:
              - meta: '{}'
                id: 0
                type: type
              - meta: '{}'
                id: 0
                type: type
              companyIds:
              - 7
              - 7
              teams:
              - meta: '{}'
                id: 0
                type: type
              - meta: '{}'
                id: 0
                type: type
              userIds:
              - 3
              - 3
              teamIds:
              - 9
              - 9
              users:
              - meta: '{}'
                id: 0
                type: type
              - meta: '{}'
                id: 0
                type: type
            commentsCountRead: 4
            previewURL: previewURL
            displayName: displayName
            tagIds:
            - 0
            - 0
            downloadURL: downloadURL
            commentFollowers:
              companies:
              - meta: '{}'
                id: 0
                type: type
              - meta: '{}'
                id: 0
                type: type
              companyIds:
              - 7
              - 7
              teams:
              - meta: '{}'
                id: 0
                type: type
              - meta: '{}'
                id: 0
                type: type
              userIds:
              - 3
              - 3
              teamIds:
              - 9
              - 9
              users:
              - meta: '{}'
                id: 0
                type: type
              - meta: '{}'
                id: 0
                type: type
            description: description
            project:
              meta: '{}'
              id: 0
              type: type
            isPrivate: 9
            numLikes: 3
            uploadedDate: uploadedDate
            deletedBy: 5
            uploadedByUserID: 6
            originalName: originalName
            lockedBy: 9
            isLocked: true
            lockdown:
              meta: '{}'
              id: 0
              type: type
            id: 9
            thumbURL: thumbURL
            uploadedBy: 7
            updatedAt: updatedAt
            latestFileVersionNo: 6
            lockdownId: 8
            lockedByUserId: 6
            relatedItems:
              comments:
              - 6
              - 6
              messages:
              - 3
              - 3
              tasks:
              - 3
              - 3
            fileSource: fileSource
            lockedDate: lockedDate
            version:
              meta: '{}'
              id: 0
              type: type
            tags:
            - meta: '{}'
              id: 0
              type: type
            - meta: '{}'
              id: 0
              type: type
            deletedAt: deletedAt
            versionId: 0
            size: 7
            versions:
            - commentsCountRead: 8
              displayName: displayName
              description: description
              project:
                meta: '{}'
                id: 0
                type: type
              fileVersionId: 3
              originalName: originalName
              file:
                meta: '{}'
                id: 0
                type: type
              size: 7
              commentsCount: 4
              name: name
              versionNo: 3
              reactions:
                mine: mine
                counts:
                  joy: 6
                  like: 5
                  dislike: 1
                  frown: 2
                  heart: 6
              projectId: 3
              uploadedBy: 5
              fileId: 7
              status: status
            - commentsCountRead: 8
              displayName: displayName
              description: description
              project:
                meta: '{}'
                id: 0
                type: type
              fileVersionId: 3
              originalName: originalName
              file:
                meta: '{}'
                id: 0
                type: type
              size: 7
              commentsCount: 4
              name: name
              versionNo: 3
              reactions:
                mine: mine
                counts:
                  joy: 6
                  like: 5
                  dislike: 1
                  frown: 2
                  heart: 6
              projectId: 3
              uploadedBy: 5
              fileId: 7
              status: status
            commentsCount: 1
            reactions:
              mine: mine
              counts:
                joy: 6
                like: 5
                dislike: 1
                frown: 2
                heart: 6
            category:
              meta: '{}'
              id: 0
              type: type
            projectId: 6
            categoryId: 7
            status: status
        messages:
          key:
            post:
              meta: '{}'
              id: 0
              type: type
            id: 2
            postId: 7
            title: title
        links:
          key:
            code: code
            updatedBy: 9
            description: description
            project:
              meta: '{}'
              id: 0
              type: type
            isPrivate: true
            title: title
            deletedBy: 6
            createdAt: createdAt
            deletedAt: deletedAt
            deleted: true
            createdBy: 0
            provider: provider
            width: 0
            id: 4
            category:
              meta: '{}'
              id: 0
              type: type
            projectId: 7
            categoryId: 4
            forceNewWindow: 4
            height: 1
            updatedAt: updatedAt
        tasklists:
          key:
            milestone:
              meta: '{}'
              id: 0
              type: type
            milestoneId: 5
            name: name
            project:
              meta: '{}'
              id: 0
              type: type
            id: 5
            newTaskDefaults:
              estimatedMinutes: 2
              dueDate: dueDate
              responisblePartyIds:
                companies:
                - meta: '{}'
                  id: 0
                  type: type
                - meta: '{}'
                  id: 0
                  type: type
                companyIds:
                - 7
                - 7
                teams:
                - meta: '{}'
                  id: 0
                  type: type
                - meta: '{}'
                  id: 0
                  type: type
                userIds:
                - 3
                - 3
                teamIds:
                - 9
                - 9
                users:
                - meta: '{}'
                  id: 0
                  type: type
                - meta: '{}'
                  id: 0
                  type: type
              priority: priority
              startDate: startDate
              tags:
              - 2
              - 2
            taskIds:
            - 7
            - 7
            projectId: 4
            tasks:
            - meta: '{}'
              id: 0
              type: type
            - meta: '{}'
              id: 0
              type: type
        milestones:
          key:
            changeFollowers:
            - meta: '{}'
              id: 0
              type: type
            - meta: '{}'
              id: 0
              type: type
            creatorUserId: 8
            private: true
            userFollowingComments: true
            canEdit: true
            tagIds:
            - 4
            - 4
            commentFollowers:
            - meta: '{}'
              id: 0
              type: type
            - meta: '{}'
              id: 0
              type: type
            description: description
            project:
              meta: '{}'
              id: 0
              type: type
            tasklists:
            - meta: '{}'
              id: 0
              type: type
            - meta: '{}'
              id: 0
              type: type
            percentageTasksCompleted: 1
            createdOn: createdOn
            isDeleted: true
            originalDueDate: originalDueDate
            userFollowingChanges: true
            commentFollowerIds:
            - 0
            - 0
            lockdown:
              meta: '{}'
              id: 0
              type: type
            id: 4
            deadline: deadline
            numCommentsRead: 0
            updatedBy: 9
            reminder: true
            canComplete: true
            lockdownId: 3
            completerId: 4
            completed: true
            tags:
            - meta: '{}'
              id: 0
              type: type
            - meta: '{}'
              id: 0
              type: type
            changeFollowerIds:
            - 9
            - 9
            responsiblePartyIds:
            - 6
            - 6
            lastChangedOn: lastChangedOn
            responsibleParties:
            - meta: '{}'
              id: 0
              type: type
            - meta: '{}'
              id: 0
              type: type
            createdBy: 6
            latestUpdates:
            - field: field
              before: '{}'
              after: '{}'
            - field: field
              before: '{}'
              after: '{}'
            percentageComplete: 2
            commentsCount: 7
            completedOn: completedOn
            name: name
            projectId: 8
            tasklistIds:
            - 8
            - 8
            completedBy: 5
            status: status
        tasks:
          key:
            parentTaskId: 9
            assigneeUserIds:
            - 1
            - 1
            dueDate: dueDate
            tagIds:
            - 1
            - 1
            displayOrder: 9
            description: description
            isPrivate: 8
            userPermissions:
              canComplete: true
              canEdit: true
              canViewEstTime: true
              canAddSubtasks: true
              canLogTime: true
            assigneeUsers:
            - meta: '{}'
              id: 0
              type: type
            - meta: '{}'
              id: 0
              type: type
            originalDueDate: '{}'
            assigneeCompanyIds:
            - 1
            - 1
            assigneeTeamIds:
            - 1
            - 1
            id: 6
            subTaskIds:
            - 6
            - 6
            updatedAt: updatedAt
            predecessorIds:
            - 6
            - 6
            createdByUserId: 1
            updatedBy: 6
            crmDealIds:
            - 4
            - 4
            assigneeCompanies:
            - meta: '{}'
              id: 0
              type: type
            - meta: '{}'
              id: 0
              type: type
            parentTask:
              meta: '{}'
              id: 0
              type: type
            hasDeskTickets: true
            priority: priority
            dateUpdated: dateUpdated
            assigneeTeams:
            - meta: '{}'
              id: 0
              type: type
            - meta: '{}'
              id: 0
              type: type
            dependencyIds:
            - 5
            - 5
            createdBy: 7
            latestUpdates:
            - field: field
              before: '{}'
              after: '{}'
            - field: field
              before: '{}'
              after: '{}'
            completedOn: completedOn
            name: name
            progress: 3
            estimateMinutes: 9
            tasklist:
              meta: '{}'
              id: 0
              type: type
            completedBy: 6
            startDate: startDate
            tasklistId: 2
            status: status
        users:
          key:
            lastName: lastName
            avatarUrl: avatarUrl
            isAdmin: true
            title: title
            type: type
            firstName: firstName
            companyId: 2
            workingHoursId: 5
            lengthOfDay: 6.878052220127876
            company:
              meta: '{}'
              id: 0
              type: type
            workingHour:
              meta: '{}'
              id: 0
              type: type
            id: 6
            email: email
      properties:
        comments:
          additionalProperties:
            $ref: '#/components/schemas/view.Comment'
          type: object
        companies:
          additionalProperties:
            $ref: '#/components/schemas/view.Company'
          type: object
        files:
          additionalProperties:
            $ref: '#/components/schemas/view.ProjectFile'
          type: object
        links:
          additionalProperties:
            $ref: '#/components/schemas/view.LinkItem'
          type: object
        messages:
          additionalProperties:
            $ref: '#/components/schemas/view.ProjectMessage'
          type: object
        milestones:
          additionalProperties:
            $ref: '#/components/schemas/view.Milestone'
          type: object
        notebooks:
          additionalProperties:
            $ref: '#/components/schemas/view.Notebook'
          type: object
        tasklists:
          additionalProperties:
            $ref: '#/components/schemas/view.Tasklist'
          type: object
        tasks:
          additionalProperties:
            $ref: '#/components/schemas/view.Task'
          type: object
        teams:
          additionalProperties:
            $ref: '#/components/schemas/view.Team'
          type: object
        users:
          additionalProperties:
            $ref: '#/components/schemas/view.User'
          type: object
      type: object
    milestone_MilestonesResponse_included:
      example:
        companies:
          key:
            city: city
            industry:
              meta: '{}'
              id: 0
              type: type
            emailTwo: emailTwo
            industryId: 6
            isOwner: true
            addressTwo: addressTwo
            countryCode: countryCode
            emailThree: emailThree
            id: 1
            state: state
            fax: fax
            zip: zip
            profileText: profileText
            website: website
            clientUsers: 1
            companyNameUrl: companyNameUrl
            logoUrl: logoUrl
            phone: phone
            emailOne: emailOne
            name: name
            privateNotesText: privateNotesText
            accounts: 7
            addressOne: addressOne
            contacts: 1
            canSeePrivate: true
            cid: cid
        projects:
          key:
            replyByEmailEnabled: true
            startPage: startPage
            endDate: endDate
            overviewStartPage: overviewStartPage
            tagIds:
            - 6
            - 6
            customFieldValueIds:
            - 5
            - 5
            description: description
            minMaxAvailableDates:
              maxEndDate: maxEndDate
              minStartDate: minStartDate
              suggestedEndDate: suggestedEndDate
              suggestedStartDate: suggestedStartDate
              deadlinesFound: true
            ownerId: 8
            type: type
            createdAt: createdAt
            updateId: 6
            logo: logo
            company:
              meta: '{}'
              id: 0
              type: type
            id: 9
            financialBudget:
              meta: '{}'
              id: 0
              type: type
            updatedAt: updatedAt
            harvestTimersEnabled: true
            updatedBy: 1
            activePages:
              comments: true
              riskRegister: true
              list: true
              gantt: true
              billing: true
              notebooks: true
              files: true
              messages: true
              links: true
              time: true
              milestones: true
              board: true
              forms: true
              table: true
              tasks: true
            isStarred: true
            directFileUploadsEnabled: true
            isOnBoardingProject: true
            subStatus: subStatus
            isSampleProject: true
            tags:
            - meta: '{}'
              id: 0
              type: type
            - meta: '{}'
              id: 0
              type: type
            tasksStartPage: tasksStartPage
            financialBudgetId: 9
            privacyEnabled: true
            companyId: 1
            defaultPrivacy: defaultPrivacy
            customFieldValues:
            - meta: '{}'
              id: 0
              type: type
            - meta: '{}'
              id: 0
              type: type
            createdBy: 4
            notifyCommentIncludeCreator: true
            skipWeekends: true
            name: name
            projectOwnerId: 9
            notifyEveryone: true
            timeBudgetId: 3
            showAnnouncement: true
            category:
              meta: '{}'
              id: 0
              type: type
            integrations:
              xero:
                connected: true
                countryCode: countryCode
                organisation: organisation
                baseCurrency: baseCurrency
                enabled: true
              oneDriveBusiness:
                folder: folder
                folderName: folderName
                account: account
                enabled: true
              sharepoint:
                folder: folder
                folderName: folderName
                account: account
                enabled: true
            ownedBy: 6
            categoryId: 7
            startDate: startDate
            status: status
            timeBudget:
              meta: '{}'
              id: 0
              type: type
        teams:
          key:
            teamLogo: teamLogo
            name: name
            id: 4
            teamLogoColor: teamLogoColor
            teamLogoIcon: teamLogoIcon
        tasklists:
          key:
            milestone:
              meta: '{}'
              id: 0
              type: type
            milestoneId: 5
            name: name
            project:
              meta: '{}'
              id: 0
              type: type
            id: 5
            newTaskDefaults:
              estimatedMinutes: 2
              dueDate: dueDate
              responisblePartyIds:
                companies:
                - meta: '{}'
                  id: 0
                  type: type
                - meta: '{}'
                  id: 0
                  type: type
                companyIds:
                - 7
                - 7
                teams:
                - meta: '{}'
                  id: 0
                  type: type
                - meta: '{}'
                  id: 0
                  type: type
                userIds:
                - 3
                - 3
                teamIds:
                - 9
                - 9
                users:
                - meta: '{}'
                  id: 0
                  type: type
                - meta: '{}'
                  id: 0
                  type: type
              priority: priority
              startDate: startDate
              tags:
              - 2
              - 2
            taskIds:
            - 7
            - 7
            projectId: 4
            tasks:
            - meta: '{}'
              id: 0
              type: type
            - meta: '{}'
              id: 0
              type: type
        tasks:
          key:
            parentTaskId: 9
            assigneeUserIds:
            - 1
            - 1
            dueDate: dueDate
            tagIds:
            - 1
            - 1
            displayOrder: 9
            description: description
            isPrivate: 8
            userPermissions:
              canComplete: true
              canEdit: true
              canViewEstTime: true
              canAddSubtasks: true
              canLogTime: true
            assigneeUsers:
            - meta: '{}'
              id: 0
              type: type
            - meta: '{}'
              id: 0
              type: type
            originalDueDate: '{}'
            assigneeCompanyIds:
            - 1
            - 1
            assigneeTeamIds:
            - 1
            - 1
            id: 6
            subTaskIds:
            - 6
            - 6
            updatedAt: updatedAt
            predecessorIds:
            - 6
            - 6
            createdByUserId: 1
            updatedBy: 6
            crmDealIds:
            - 4
            - 4
            assigneeCompanies:
            - meta: '{}'
              id: 0
              type: type
            - meta: '{}'
              id: 0
              type: type
            parentTask:
              meta: '{}'
              id: 0
              type: type
            hasDeskTickets: true
            priority: priority
            dateUpdated: dateUpdated
            assigneeTeams:
            - meta: '{}'
              id: 0
              type: type
            - meta: '{}'
              id: 0
              type: type
            dependencyIds:
            - 5
            - 5
            createdBy: 7
            latestUpdates:
            - field: field
              before: '{}'
              after: '{}'
            - field: field
              before: '{}'
              after: '{}'
            completedOn: completedOn
            name: name
            progress: 3
            estimateMinutes: 9
            tasklist:
              meta: '{}'
              id: 0
              type: type
            completedBy: 6
            startDate: startDate
            tasklistId: 2
            status: status
        users:
          key:
            lastName: lastName
            avatarUrl: avatarUrl
            isAdmin: true
            title: title
            type: type
            firstName: firstName
            companyId: 2
            workingHoursId: 5
            lengthOfDay: 6.878052220127876
            company:
              meta: '{}'
              id: 0
              type: type
            workingHour:
              meta: '{}'
              id: 0
              type: type
            id: 6
            email: email
        tags:
          key:
            color: color
            count: 0
            name: name
            project:
              meta: '{}'
              id: 0
              type: type
            id: 6
            projectId: 1
      properties:
        companies:
          additionalProperties:
            $ref: '#/components/schemas/view.Company'
          type: object
        projects:
          additionalProperties:
            $ref: '#/components/schemas/view.Project'
          type: object
        tags:
          additionalProperties:
            $ref: '#/components/schemas/view.Tag'
          type: object
        tasklists:
          additionalProperties:
            $ref: '#/components/schemas/view.Tasklist'
          type: object
        tasks:
          additionalProperties:
            $ref: '#/components/schemas/view.Task'
          type: object
        teams:
          additionalProperties:
            $ref: '#/components/schemas/view.Team'
          type: object
        users:
          additionalProperties:
            $ref: '#/components/schemas/view.User'
          type: object
      type: object
    notebook_NotebooksResponse_included:
      example:
        companies:
          key:
            city: city
            industry:
              meta: '{}'
              id: 0
              type: type
            emailTwo: emailTwo
            industryId: 6
            isOwner: true
            addressTwo: addressTwo
            countryCode: countryCode
            emailThree: emailThree
            id: 1
            state: state
            fax: fax
            zip: zip
            profileText: profileText
            website: website
            clientUsers: 1
            companyNameUrl: companyNameUrl
            logoUrl: logoUrl
            phone: phone
            emailOne: emailOne
            name: name
            privateNotesText: privateNotesText
            accounts: 7
            addressOne: addressOne
            contacts: 1
            canSeePrivate: true
            cid: cid
        projects:
          key:
            replyByEmailEnabled: true
            startPage: startPage
            endDate: endDate
            overviewStartPage: overviewStartPage
            tagIds:
            - 6
            - 6
            customFieldValueIds:
            - 5
            - 5
            description: description
            minMaxAvailableDates:
              maxEndDate: maxEndDate
              minStartDate: minStartDate
              suggestedEndDate: suggestedEndDate
              suggestedStartDate: suggestedStartDate
              deadlinesFound: true
            ownerId: 8
            type: type
            createdAt: createdAt
            updateId: 6
            logo: logo
            company:
              meta: '{}'
              id: 0
              type: type
            id: 9
            financialBudget:
              meta: '{}'
              id: 0
              type: type
            updatedAt: updatedAt
            harvestTimersEnabled: true
            updatedBy: 1
            activePages:
              comments: true
              riskRegister: true
              list: true
              gantt: true
              billing: true
              notebooks: true
              files: true
              messages: true
              links: true
              time: true
              milestones: true
              board: true
              forms: true
              table: true
              tasks: true
            isStarred: true
            directFileUploadsEnabled: true
            isOnBoardingProject: true
            subStatus: subStatus
            isSampleProject: true
            tags:
            - meta: '{}'
              id: 0
              type: type
            - meta: '{}'
              id: 0
              type: type
            tasksStartPage: tasksStartPage
            financialBudgetId: 9
            privacyEnabled: true
            companyId: 1
            defaultPrivacy: defaultPrivacy
            customFieldValues:
            - meta: '{}'
              id: 0
              type: type
            - meta: '{}'
              id: 0
              type: type
            createdBy: 4
            notifyCommentIncludeCreator: true
            skipWeekends: true
            name: name
            projectOwnerId: 9
            notifyEveryone: true
            timeBudgetId: 3
            showAnnouncement: true
            category:
              meta: '{}'
              id: 0
              type: type
            integrations:
              xero:
                connected: true
                countryCode: countryCode
                organisation: organisation
                baseCurrency: baseCurrency
                enabled: true
              oneDriveBusiness:
                folder: folder
                folderName: folderName
                account: account
                enabled: true
              sharepoint:
                folder: folder
                folderName: folderName
                account: account
                enabled: true
            ownedBy: 6
            categoryId: 7
            startDate: startDate
            status: status
            timeBudget:
              meta: '{}'
              id: 0
              type: type
        teams:
          key:
            teamLogo: teamLogo
            name: name
            id: 4
            teamLogoColor: teamLogoColor
            teamLogoIcon: teamLogoIcon
        notebookCategories:
          key:
            elementsCount: 0
            parent:
              meta: '{}'
              id: 0
              type: type
            color: color
            name: name
            project:
              meta: '{}'
              id: 0
              type: type
            id: 6
            projectId: 5
            parentId: 1
        users:
          key:
            lastName: lastName
            avatarUrl: avatarUrl
            isAdmin: true
            title: title
            type: type
            firstName: firstName
            companyId: 2
            workingHoursId: 5
            lengthOfDay: 6.878052220127876
            company:
              meta: '{}'
              id: 0
              type: type
            workingHour:
              meta: '{}'
              id: 0
              type: type
            id: 6
            email: email
        tags:
          key:
            color: color
            count: 0
            name: name
            project:
              meta: '{}'
              id: 0
              type: type
            id: 6
            projectId: 1
      properties:
        companies:
          additionalProperties:
            $ref: '#/components/schemas/view.Company'
          type: object
        notebookCategories:
          additionalProperties:
            $ref: '#/components/schemas/view.NotebookCategory'
          type: object
        projects:
          additionalProperties:
            $ref: '#/components/schemas/view.Project'
          type: object
        tags:
          additionalProperties:
            $ref: '#/components/schemas/view.Tag'
          type: object
        teams:
          additionalProperties:
            $ref: '#/components/schemas/view.Team'
          type: object
        users:
          additionalProperties:
            $ref: '#/components/schemas/view.User'
          type: object
      type: object
    notebook_VersionResponse_included:
      example:
        users:
          key:
            lastName: lastName
            avatarUrl: avatarUrl
            isAdmin: true
            title: title
            type: type
            firstName: firstName
            companyId: 2
            workingHoursId: 5
            lengthOfDay: 6.878052220127876
            company:
              meta: '{}'
              id: 0
              type: type
            workingHour:
              meta: '{}'
              id: 0
              type: type
            id: 6
            email: email
      properties:
        users:
          additionalProperties:
            $ref: '#/components/schemas/view.User'
          type: object
      type: object
    people_MultiResponse_included:
      example:
        companies:
          key:
            city: city
            industry:
              meta: '{}'
              id: 0
              type: type
            emailTwo: emailTwo
            industryId: 6
            isOwner: true
            addressTwo: addressTwo
            countryCode: countryCode
            emailThree: emailThree
            id: 1
            state: state
            fax: fax
            zip: zip
            profileText: profileText
            website: website
            clientUsers: 1
            companyNameUrl: companyNameUrl
            logoUrl: logoUrl
            phone: phone
            emailOne: emailOne
            name: name
            privateNotesText: privateNotesText
            accounts: 7
            addressOne: addressOne
            contacts: 1
            canSeePrivate: true
            cid: cid
      properties:
        companies:
          additionalProperties:
            $ref: '#/components/schemas/view.Company'
          type: object
      type: object
    planner_WorkloadPlannersResponse_included:
      example:
        calendarEvents:
          key:
            dateLastUpdated: dateLastUpdated
            endDate: endDate
            projectUsersCanEdit: true
            createdDateTime: createdDateTime
            description: description
            project:
              meta: '{}'
              id: 0
              type: type
            updatedByUserId: 1
            currentUserAssociationType: currentUserAssociationType
            title: title
            type:
              meta: '{}'
              id: 0
              type: type
            sequenceId: 2
            deletedBy: 5
            allDay: true
            createdAt: createdAt
            id: 2
            updatedAt: updatedAt
            createdByUserId: 1
            updatedBy: 7
            attendeesCanEdit: true
            attendingUserIds:
            - 0
            - 0
            monthlyRepeatType: monthlyRepeatType
            dateDeleted: dateDeleted
            deletedByUserId: 5
            sequence:
              meta: '{}'
              id: 0
              type: type
            deletedAt: deletedAt
            deleted: true
            createdBy: 6
            ownerUserId: 9
            location: location
            showAsBusy: true
            typeId: 4
            additionalProperties: additionalProperties
            attendingUsers:
            - meta: '{}'
              id: 0
              type: type
            - meta: '{}'
              id: 0
              type: type
            ownedBy: 7
            projectId: 3
            privacyType: privacyType
            startDate: startDate
        companies:
          key:
            city: city
            industry:
              meta: '{}'
              id: 0
              type: type
            emailTwo: emailTwo
            industryId: 6
            isOwner: true
            addressTwo: addressTwo
            countryCode: countryCode
            emailThree: emailThree
            id: 1
            state: state
            fax: fax
            zip: zip
            profileText: profileText
            website: website
            clientUsers: 1
            companyNameUrl: companyNameUrl
            logoUrl: logoUrl
            phone: phone
            emailOne: emailOne
            name: name
            privateNotesText: privateNotesText
            accounts: 7
            addressOne: addressOne
            contacts: 1
            canSeePrivate: true
            cid: cid
        timelogs:
          key:
            tagIds:
            - 4
            - 4
            description: description
            loggedBy: 7
            project:
              meta: '{}'
              id: 0
              type: type
            deskTicketId: 6
            hasStartTime: true
            projectBillingInvoice:
              meta: '{}'
              id: 0
              type: type
            deletedBy: 6
            createdAt: createdAt
            dateCreated: dateCreated
            editedByUserId: 3
            invoiceNumber: invoiceNumber
            dateEdited: dateEdited
            id: 3
            loggedByUserId: 0
            updatedAt: updatedAt
            updatedBy: 3
            timeLogged: timeLogged
            minutes: 7
            billable: true
            userId: 3
            dateDeleted: dateDeleted
            deletedByUserId: 5
            tags:
            - meta: '{}'
              id: 0
              type: type
            - meta: '{}'
              id: 0
              type: type
            taskPreMove:
              meta: '{}'
              id: 0
              type: type
            taskIdPreMove: 7
            deletedAt: deletedAt
            deleted: true
            projectBillingInvoiceId: 6
            task:
              meta: '{}'
              id: 0
              type: type
            projectId: 0
            user:
              meta: '{}'
              id: 0
              type: type
            taskId: 8
        tasklists:
          key:
            milestone:
              meta: '{}'
              id: 0
              type: type
            milestoneId: 5
            name: name
            project:
              meta: '{}'
              id: 0
              type: type
            id: 5
            newTaskDefaults:
              estimatedMinutes: 2
              dueDate: dueDate
              responisblePartyIds:
                companies:
                - meta: '{}'
                  id: 0
                  type: type
                - meta: '{}'
                  id: 0
                  type: type
                companyIds:
                - 7
                - 7
                teams:
                - meta: '{}'
                  id: 0
                  type: type
                - meta: '{}'
                  id: 0
                  type: type
                userIds:
                - 3
                - 3
                teamIds:
                - 9
                - 9
                users:
                - meta: '{}'
                  id: 0
                  type: type
                - meta: '{}'
                  id: 0
                  type: type
              priority: priority
              startDate: startDate
              tags:
              - 2
              - 2
            taskIds:
            - 7
            - 7
            projectId: 4
            tasks:
            - meta: '{}'
              id: 0
              type: type
            - meta: '{}'
              id: 0
              type: type
        workingHourEntries:
          key:
            timezone: timezone
            taskHours: 5.637376656633329
            weekday: weekday
            startTime: startTime
            workingHour:
              meta: '{}'
              id: 0
              type: type
            endTime: endTime
            id: 5
            workingHourId: 2
        milestones:
          key:
            changeFollowers:
            - meta: '{}'
              id: 0
              type: type
            - meta: '{}'
              id: 0
              type: type
            creatorUserId: 8
            private: true
            userFollowingComments: true
            canEdit: true
            tagIds:
            - 4
            - 4
            commentFollowers:
            - meta: '{}'
              id: 0
              type: type
            - meta: '{}'
              id: 0
              type: type
            description: description
            project:
              meta: '{}'
              id: 0
              type: type
            tasklists:
            - meta: '{}'
              id: 0
              type: type
            - meta: '{}'
              id: 0
              type: type
            percentageTasksCompleted: 1
            createdOn: createdOn
            isDeleted: true
            originalDueDate: originalDueDate
            userFollowingChanges: true
            commentFollowerIds:
            - 0
            - 0
            lockdown:
              meta: '{}'
              id: 0
              type: type
            id: 4
            deadline: deadline
            numCommentsRead: 0
            updatedBy: 9
            reminder: true
            canComplete: true
            lockdownId: 3
            completerId: 4
            completed: true
            tags:
            - meta: '{}'
              id: 0
              type: type
            - meta: '{}'
              id: 0
              type: type
            changeFollowerIds:
            - 9
            - 9
            responsiblePartyIds:
            - 6
            - 6
            lastChangedOn: lastChangedOn
            responsibleParties:
            - meta: '{}'
              id: 0
              type: type
            - meta: '{}'
              id: 0
              type: type
            createdBy: 6
            latestUpdates:
            - field: field
              before: '{}'
              after: '{}'
            - field: field
              before: '{}'
              after: '{}'
            percentageComplete: 2
            commentsCount: 7
            completedOn: completedOn
            name: name
            projectId: 8
            tasklistIds:
            - 8
            - 8
            completedBy: 5
            status: status
        workingHours:
          key:
            createdAt: createdAt
            entries:
            - meta: '{}'
              id: 0
              type: type
            - meta: '{}'
              id: 0
              type: type
            entryIds:
            - 7
            - 7
            dateCreated: dateCreated
            name: name
            description: description
            id: 9
            objectId: 3
            dateUpdated: dateUpdated
            object:
              meta: '{}'
              id: 0
              type: type
            objectType: objectType
            updatedAt: updatedAt
        tasks:
          key:
            parentTaskId: 9
            assigneeUserIds:
            - 1
            - 1
            dueDate: dueDate
            tagIds:
            - 1
            - 1
            displayOrder: 9
            description: description
            isPrivate: 8
            userPermissions:
              canComplete: true
              canEdit: true
              canViewEstTime: true
              canAddSubtasks: true
              canLogTime: true
            assigneeUsers:
            - meta: '{}'
              id: 0
              type: type
            - meta: '{}'
              id: 0
              type: type
            originalDueDate: '{}'
            assigneeCompanyIds:
            - 1
            - 1
            assigneeTeamIds:
            - 1
            - 1
            id: 6
            subTaskIds:
            - 6
            - 6
            updatedAt: updatedAt
            predecessorIds:
            - 6
            - 6
            createdByUserId: 1
            updatedBy: 6
            crmDealIds:
            - 4
            - 4
            assigneeCompanies:
            - meta: '{}'
              id: 0
              type: type
            - meta: '{}'
              id: 0
              type: type
            parentTask:
              meta: '{}'
              id: 0
              type: type
            hasDeskTickets: true
            priority: priority
            dateUpdated: dateUpdated
            assigneeTeams:
            - meta: '{}'
              id: 0
              type: type
            - meta: '{}'
              id: 0
              type: type
            dependencyIds:
            - 5
            - 5
            createdBy: 7
            latestUpdates:
            - field: field
              before: '{}'
              after: '{}'
            - field: field
              before: '{}'
              after: '{}'
            completedOn: completedOn
            name: name
            progress: 3
            estimateMinutes: 9
            tasklist:
              meta: '{}'
              id: 0
              type: type
            completedBy: 6
            startDate: startDate
            tasklistId: 2
            status: status
        users:
          key:
            lastName: lastName
            avatarUrl: avatarUrl
            isAdmin: true
            title: title
            type: type
            firstName: firstName
            companyId: 2
            workingHoursId: 5
            lengthOfDay: 6.878052220127876
            company:
              meta: '{}'
              id: 0
              type: type
            workingHour:
              meta: '{}'
              id: 0
              type: type
            id: 6
            email: email
      properties:
        calendarEvents:
          additionalProperties:
            $ref: '#/components/schemas/view.CalendarEvent'
          type: object
        companies:
          additionalProperties:
            $ref: '#/components/schemas/view.Company'
          type: object
        milestones:
          additionalProperties:
            $ref: '#/components/schemas/view.Milestone'
          type: object
        tasklists:
          additionalProperties:
            $ref: '#/components/schemas/view.Tasklist'
          type: object
        tasks:
          additionalProperties:
            $ref: '#/components/schemas/view.Task'
          type: object
        timelogs:
          additionalProperties:
            $ref: '#/components/schemas/view.Timelog'
          type: object
        users:
          additionalProperties:
            $ref: '#/components/schemas/view.User'
          type: object
        workingHourEntries:
          additionalProperties:
            $ref: '#/components/schemas/view.WorkingHourEntry'
          type: object
        workingHours:
          additionalProperties:
            $ref: '#/components/schemas/view.WorkingHour'
          type: object
      type: object
    project_CustomFieldProjectsResponse_included:
      example:
        projects:
          key:
            replyByEmailEnabled: true
            startPage: startPage
            endDate: endDate
            overviewStartPage: overviewStartPage
            tagIds:
            - 6
            - 6
            customFieldValueIds:
            - 5
            - 5
            description: description
            minMaxAvailableDates:
              maxEndDate: maxEndDate
              minStartDate: minStartDate
              suggestedEndDate: suggestedEndDate
              suggestedStartDate: suggestedStartDate
              deadlinesFound: true
            ownerId: 8
            type: type
            createdAt: createdAt
            updateId: 6
            logo: logo
            company:
              meta: '{}'
              id: 0
              type: type
            id: 9
            financialBudget:
              meta: '{}'
              id: 0
              type: type
            updatedAt: updatedAt
            harvestTimersEnabled: true
            updatedBy: 1
            activePages:
              comments: true
              riskRegister: true
              list: true
              gantt: true
              billing: true
              notebooks: true
              files: true
              messages: true
              links: true
              time: true
              milestones: true
              board: true
              forms: true
              table: true
              tasks: true
            isStarred: true
            directFileUploadsEnabled: true
            isOnBoardingProject: true
            subStatus: subStatus
            isSampleProject: true
            tags:
            - meta: '{}'
              id: 0
              type: type
            - meta: '{}'
              id: 0
              type: type
            tasksStartPage: tasksStartPage
            financialBudgetId: 9
            privacyEnabled: true
            companyId: 1
            defaultPrivacy: defaultPrivacy
            customFieldValues:
            - meta: '{}'
              id: 0
              type: type
            - meta: '{}'
              id: 0
              type: type
            createdBy: 4
            notifyCommentIncludeCreator: true
            skipWeekends: true
            name: name
            projectOwnerId: 9
            notifyEveryone: true
            timeBudgetId: 3
            showAnnouncement: true
            category:
              meta: '{}'
              id: 0
              type: type
            integrations:
              xero:
                connected: true
                countryCode: countryCode
                organisation: organisation
                baseCurrency: baseCurrency
                enabled: true
              oneDriveBusiness:
                folder: folder
                folderName: folderName
                account: account
                enabled: true
              sharepoint:
                folder: folder
                folderName: folderName
                account: account
                enabled: true
            ownedBy: 6
            categoryId: 7
            startDate: startDate
            status: status
            timeBudget:
              meta: '{}'
              id: 0
              type: type
        customfields:
          key:
            createdByUserId: 6
            updatedBy: 7
            description: description
            project:
              meta: '{}'
              id: 0
              type: type
            isPrivate: true
            updatedByUserId: 9
            type: type
            deletedBy: 1
            deletedByUserId: 5
            required: true
            createdAt: createdAt
            deletedAt: deletedAt
            deleted: true
            createdBy: 0
            name: name
            options: '{}'
            visibilities: visibilities
            id: 5
            projectId: 2
            entity: entity
            updatedAt: updatedAt
      properties:
        customfields:
          additionalProperties:
            $ref: '#/components/schemas/view.CustomField'
          type: object
        projects:
          additionalProperties:
            $ref: '#/components/schemas/view.Project'
          type: object
      type: object
    project_ProjectsResponse_included:
      example:
        projectTaskStats:
          key:
            late: 6
            active: 1
            id: 1
            complete: 1
        companies:
          key:
            city: city
            industry:
              meta: '{}'
              id: 0
              type: type
            emailTwo: emailTwo
            industryId: 6
            isOwner: true
            addressTwo: addressTwo
            countryCode: countryCode
            emailThree: emailThree
            id: 1
            state: state
            fax: fax
            zip: zip
            profileText: profileText
            website: website
            clientUsers: 1
            companyNameUrl: companyNameUrl
            logoUrl: logoUrl
            phone: phone
            emailOne: emailOne
            name: name
            privateNotesText: privateNotesText
            accounts: 7
            addressOne: addressOne
            contacts: 1
            canSeePrivate: true
            cid: cid
        portfolioCards:
          key:
            columnId: 2
            column:
              meta: '{}'
              id: 0
              type: type
            project:
              meta: '{}'
              id: 0
              type: type
            id: 7
            projectId: 9
        projectBudgets:
          key:
            notificationIds:
            - 4
            - 4
            project:
              meta: '{}'
              id: 0
              type: type
            updatedByUserId: 1
            type: type
            deletedBy: 9
            capacity: 0
            createdAt: createdAt
            originatorBudgetId: 7
            dateCreated: dateCreated
            dateCompleted: dateCompleted
            repeatPeriod: 1
            id: 2
            updatedAt: updatedAt
            createdByUserId: 2
            repeatUnit: repeatUnit
            sequenceNumber: 6
            completedAt: completedAt
            expenseType: expenseType
            updatedBy: 7
            originatorBudget:
              meta: '{}'
              id: 0
              type: type
            repeatsRemaining: 1
            capacityUsed: 6
            timelogType: timelogType
            endDateTime: endDateTime
            dateDeleted: dateDeleted
            deletedByUserId: 3
            completedByUserId: 5
            dateUpdated: dateUpdated
            defaultRate: 7.061401241503109
            deletedAt: deletedAt
            isRepeating: true
            startDateTime: startDateTime
            createdBy: 5
            currencyCode: currencyCode
            projectId: 1
            completedBy: 1
            notifications:
            - meta: '{}'
              id: 0
              type: type
            - meta: '{}'
              id: 0
              type: type
            status: status
        projectUpdates:
          key:
            likeFromUsers:
            - meta: '{}'
              id: 0
              type: type
            - meta: '{}'
              id: 0
              type: type
            color: color
            health: 4
            project:
              meta: '{}'
              id: 0
              type: type
            deletedBy: 1
            healthLabel: healthLabel
            createdAt: createdAt
            deletedAt: deletedAt
            deleted: true
            likeFromUserIDs:
            - 9
            - 9
            createdBy: 7
            reactions:
              mine: mine
              counts:
                joy: 6
                like: 5
                dislike: 1
                frown: 2
                heart: 6
            id: 5
            text: text
            projectId: 9
            updatedAt: updatedAt
        projectCategories:
          key:
            parent:
              meta: '{}'
              id: 0
              type: type
            color: color
            count: 2
            name: name
            id: 4
            parentId: 7
        portfolioColumns:
          key:
            color: color
            name: name
            id: 3
        portfolioBoards:
          key:
            color: color
            name: name
            id: 5
        customfieldProjects:
          key:
            createdAt: createdAt
            customfieldId: 6
            customfield:
              meta: '{}'
              id: 0
              type: type
            createdBy: 0
            project:
              meta: '{}'
              id: 0
              type: type
            id: 1
            projectId: 5
            value: '{}'
        customfields:
          key:
            createdByUserId: 6
            updatedBy: 7
            description: description
            project:
              meta: '{}'
              id: 0
              type: type
            isPrivate: true
            updatedByUserId: 9
            type: type
            deletedBy: 1
            deletedByUserId: 5
            required: true
            createdAt: createdAt
            deletedAt: deletedAt
            deleted: true
            createdBy: 0
            name: name
            options: '{}'
            visibilities: visibilities
            id: 5
            projectId: 2
            entity: entity
            updatedAt: updatedAt
        users:
          key:
            lastName: lastName
            avatarUrl: avatarUrl
            isAdmin: true
            title: title
            type: type
            firstName: firstName
            companyId: 2
            workingHoursId: 5
            lengthOfDay: 6.878052220127876
            company:
              meta: '{}'
              id: 0
              type: type
            workingHour:
              meta: '{}'
              id: 0
              type: type
            id: 6
            email: email
        tags:
          key:
            color: color
            count: 0
            name: name
            project:
              meta: '{}'
              id: 0
              type: type
            id: 6
            projectId: 1
      properties:
        companies:
          additionalProperties:
            $ref: '#/components/schemas/view.Company'
          type: object
        customfieldProjects:
          additionalProperties:
            $ref: '#/components/schemas/view.CustomFieldProject'
          type: object
        customfields:
          additionalProperties:
            $ref: '#/components/schemas/view.CustomField'
          type: object
        portfolioBoards:
          additionalProperties:
            $ref: '#/components/schemas/view.PortfolioBoard'
          type: object
        portfolioCards:
          additionalProperties:
            $ref: '#/components/schemas/view.PortfolioCard'
          type: object
        portfolioColumns:
          additionalProperties:
            $ref: '#/components/schemas/view.PortfolioColumn'
          type: object
        projectBudgets:
          additionalProperties:
            $ref: '#/components/schemas/view.ProjectBudget'
          type: object
        projectCategories:
          additionalProperties:
            $ref: '#/components/schemas/view.ProjectCategory'
          type: object
        projectTaskStats:
          additionalProperties:
            $ref: '#/components/schemas/view.ProjectTaskStats'
          type: object
        projectUpdates:
          additionalProperties:
            $ref: '#/components/schemas/view.ProjectUpdate'
          type: object
        tags:
          additionalProperties:
            $ref: '#/components/schemas/view.Tag'
          type: object
        users:
          additionalProperties:
            $ref: '#/components/schemas/view.User'
          type: object
      type: object
    project_SampleProjectsResponse_included:
      example:
        projectCategories:
          key:
            parent:
              meta: '{}'
              id: 0
              type: type
            color: color
            count: 2
            name: name
            id: 4
            parentId: 7
      properties:
        projectCategories:
          additionalProperties:
            $ref: '#/components/schemas/view.ProjectCategory'
          type: object
      type: object
    schedule_ProjectSchedulesResponse_included:
      example:
        calendarEvents:
          key:
            dateLastUpdated: dateLastUpdated
            endDate: endDate
            projectUsersCanEdit: true
            createdDateTime: createdDateTime
            description: description
            project:
              meta: '{}'
              id: 0
              type: type
            updatedByUserId: 1
            currentUserAssociationType: currentUserAssociationType
            title: title
            type:
              meta: '{}'
              id: 0
              type: type
            sequenceId: 2
            deletedBy: 5
            allDay: true
            createdAt: createdAt
            id: 2
            updatedAt: updatedAt
            createdByUserId: 1
            updatedBy: 7
            attendeesCanEdit: true
            attendingUserIds:
            - 0
            - 0
            monthlyRepeatType: monthlyRepeatType
            dateDeleted: dateDeleted
            deletedByUserId: 5
            sequence:
              meta: '{}'
              id: 0
              type: type
            deletedAt: deletedAt
            deleted: true
            createdBy: 6
            ownerUserId: 9
            location: location
            showAsBusy: true
            typeId: 4
            additionalProperties: additionalProperties
            attendingUsers:
            - meta: '{}'
              id: 0
              type: type
            - meta: '{}'
              id: 0
              type: type
            ownedBy: 7
            projectId: 3
            privacyType: privacyType
            startDate: startDate
        companies:
          key:
            city: city
            industry:
              meta: '{}'
              id: 0
              type: type
            emailTwo: emailTwo
            industryId: 6
            isOwner: true
            addressTwo: addressTwo
            countryCode: countryCode
            emailThree: emailThree
            id: 1
            state: state
            fax: fax
            zip: zip
            profileText: profileText
            website: website
            clientUsers: 1
            companyNameUrl: companyNameUrl
            logoUrl: logoUrl
            phone: phone
            emailOne: emailOne
            name: name
            privateNotesText: privateNotesText
            accounts: 7
            addressOne: addressOne
            contacts: 1
            canSeePrivate: true
            cid: cid
        projects:
          key:
            replyByEmailEnabled: true
            startPage: startPage
            endDate: endDate
            overviewStartPage: overviewStartPage
            tagIds:
            - 6
            - 6
            customFieldValueIds:
            - 5
            - 5
            description: description
            minMaxAvailableDates:
              maxEndDate: maxEndDate
              minStartDate: minStartDate
              suggestedEndDate: suggestedEndDate
              suggestedStartDate: suggestedStartDate
              deadlinesFound: true
            ownerId: 8
            type: type
            createdAt: createdAt
            updateId: 6
            logo: logo
            company:
              meta: '{}'
              id: 0
              type: type
            id: 9
            financialBudget:
              meta: '{}'
              id: 0
              type: type
            updatedAt: updatedAt
            harvestTimersEnabled: true
            updatedBy: 1
            activePages:
              comments: true
              riskRegister: true
              list: true
              gantt: true
              billing: true
              notebooks: true
              files: true
              messages: true
              links: true
              time: true
              milestones: true
              board: true
              forms: true
              table: true
              tasks: true
            isStarred: true
            directFileUploadsEnabled: true
            isOnBoardingProject: true
            subStatus: subStatus
            isSampleProject: true
            tags:
            - meta: '{}'
              id: 0
              type: type
            - meta: '{}'
              id: 0
              type: type
            tasksStartPage: tasksStartPage
            financialBudgetId: 9
            privacyEnabled: true
            companyId: 1
            defaultPrivacy: defaultPrivacy
            customFieldValues:
            - meta: '{}'
              id: 0
              type: type
            - meta: '{}'
              id: 0
              type: type
            createdBy: 4
            notifyCommentIncludeCreator: true
            skipWeekends: true
            name: name
            projectOwnerId: 9
            notifyEveryone: true
            timeBudgetId: 3
            showAnnouncement: true
            category:
              meta: '{}'
              id: 0
              type: type
            integrations:
              xero:
                connected: true
                countryCode: countryCode
                organisation: organisation
                baseCurrency: baseCurrency
                enabled: true
              oneDriveBusiness:
                folder: folder
                folderName: folderName
                account: account
                enabled: true
              sharepoint:
                folder: folder
                folderName: folderName
                account: account
                enabled: true
            ownedBy: 6
            categoryId: 7
            startDate: startDate
            status: status
            timeBudget:
              meta: '{}'
              id: 0
              type: type
        allocations:
          key:
            updatedBy: 4
            color: color
            description: description
            project:
              meta: '{}'
              id: 0
              type: type
            startedAt: '{}'
            availableDuration: 1
            title: title
            deletedBy: 5
            hoursPerDay: 7.061401241503109
            duration: 2
            createdAt: createdAt
            distributeType: distributeType
            deletedAt: deletedAt
            createdBy: 5
            endedAt: '{}'
            installation:
              meta: '{}'
              id: 0
              type: type
            id: 9
            installationId: 3
            assignedUser:
              meta: '{}'
              id: 0
              type: type
            projectId: 2
            assignedUserID: 6
            recurringRule: recurringRule
            status: status
            updatedAt: updatedAt
        timelogs:
          key:
            tagIds:
            - 4
            - 4
            description: description
            loggedBy: 7
            project:
              meta: '{}'
              id: 0
              type: type
            deskTicketId: 6
            hasStartTime: true
            projectBillingInvoice:
              meta: '{}'
              id: 0
              type: type
            deletedBy: 6
            createdAt: createdAt
            dateCreated: dateCreated
            editedByUserId: 3
            invoiceNumber: invoiceNumber
            dateEdited: dateEdited
            id: 3
            loggedByUserId: 0
            updatedAt: updatedAt
            updatedBy: 3
            timeLogged: timeLogged
            minutes: 7
            billable: true
            userId: 3
            dateDeleted: dateDeleted
            deletedByUserId: 5
            tags:
            - meta: '{}'
              id: 0
              type: type
            - meta: '{}'
              id: 0
              type: type
            taskPreMove:
              meta: '{}'
              id: 0
              type: type
            taskIdPreMove: 7
            deletedAt: deletedAt
            deleted: true
            projectBillingInvoiceId: 6
            task:
              meta: '{}'
              id: 0
              type: type
            projectId: 0
            user:
              meta: '{}'
              id: 0
              type: type
            taskId: 8
        milestones:
          key:
            changeFollowers:
            - meta: '{}'
              id: 0
              type: type
            - meta: '{}'
              id: 0
              type: type
            creatorUserId: 8
            private: true
            userFollowingComments: true
            canEdit: true
            tagIds:
            - 4
            - 4
            commentFollowers:
            - meta: '{}'
              id: 0
              type: type
            - meta: '{}'
              id: 0
              type: type
            description: description
            project:
              meta: '{}'
              id: 0
              type: type
            tasklists:
            - meta: '{}'
              id: 0
              type: type
            - meta: '{}'
              id: 0
              type: type
            percentageTasksCompleted: 1
            createdOn: createdOn
            isDeleted: true
            originalDueDate: originalDueDate
            userFollowingChanges: true
            commentFollowerIds:
            - 0
            - 0
            lockdown:
              meta: '{}'
              id: 0
              type: type
            id: 4
            deadline: deadline
            numCommentsRead: 0
            updatedBy: 9
            reminder: true
            canComplete: true
            lockdownId: 3
            completerId: 4
            completed: true
            tags:
            - meta: '{}'
              id: 0
              type: type
            - meta: '{}'
              id: 0
              type: type
            changeFollowerIds:
            - 9
            - 9
            responsiblePartyIds:
            - 6
            - 6
            lastChangedOn: lastChangedOn
            responsibleParties:
            - meta: '{}'
              id: 0
              type: type
            - meta: '{}'
              id: 0
              type: type
            createdBy: 6
            latestUpdates:
            - field: field
              before: '{}'
              after: '{}'
            - field: field
              before: '{}'
              after: '{}'
            percentageComplete: 2
            commentsCount: 7
            completedOn: completedOn
            name: name
            projectId: 8
            tasklistIds:
            - 8
            - 8
            completedBy: 5
            status: status
        users:
          key:
            lastName: lastName
            avatarUrl: avatarUrl
            isAdmin: true
            title: title
            type: type
            firstName: firstName
            companyId: 2
            workingHoursId: 5
            lengthOfDay: 6.878052220127876
            company:
              meta: '{}'
              id: 0
              type: type
            workingHour:
              meta: '{}'
              id: 0
              type: type
            id: 6
            email: email
      properties:
        allocations:
          additionalProperties:
            $ref: '#/components/schemas/view.Allocation'
          type: object
        calendarEvents:
          additionalProperties:
            $ref: '#/components/schemas/view.CalendarEvent'
          type: object
        companies:
          additionalProperties:
            $ref: '#/components/schemas/view.Company'
          type: object
        milestones:
          additionalProperties:
            $ref: '#/components/schemas/view.Milestone'
          type: object
        projects:
          additionalProperties:
            $ref: '#/components/schemas/view.Project'
          type: object
        timelogs:
          additionalProperties:
            $ref: '#/components/schemas/view.Timelog'
          type: object
        users:
          additionalProperties:
            $ref: '#/components/schemas/view.User'
          type: object
      type: object
    schedule_UserSchedulesResponse_included:
      example:
        calendarEvents:
          key:
            dateLastUpdated: dateLastUpdated
            endDate: endDate
            projectUsersCanEdit: true
            createdDateTime: createdDateTime
            description: description
            project:
              meta: '{}'
              id: 0
              type: type
            updatedByUserId: 1
            currentUserAssociationType: currentUserAssociationType
            title: title
            type:
              meta: '{}'
              id: 0
              type: type
            sequenceId: 2
            deletedBy: 5
            allDay: true
            createdAt: createdAt
            id: 2
            updatedAt: updatedAt
            createdByUserId: 1
            updatedBy: 7
            attendeesCanEdit: true
            attendingUserIds:
            - 0
            - 0
            monthlyRepeatType: monthlyRepeatType
            dateDeleted: dateDeleted
            deletedByUserId: 5
            sequence:
              meta: '{}'
              id: 0
              type: type
            deletedAt: deletedAt
            deleted: true
            createdBy: 6
            ownerUserId: 9
            location: location
            showAsBusy: true
            typeId: 4
            additionalProperties: additionalProperties
            attendingUsers:
            - meta: '{}'
              id: 0
              type: type
            - meta: '{}'
              id: 0
              type: type
            ownedBy: 7
            projectId: 3
            privacyType: privacyType
            startDate: startDate
        companies:
          key:
            city: city
            industry:
              meta: '{}'
              id: 0
              type: type
            emailTwo: emailTwo
            industryId: 6
            isOwner: true
            addressTwo: addressTwo
            countryCode: countryCode
            emailThree: emailThree
            id: 1
            state: state
            fax: fax
            zip: zip
            profileText: profileText
            website: website
            clientUsers: 1
            companyNameUrl: companyNameUrl
            logoUrl: logoUrl
            phone: phone
            emailOne: emailOne
            name: name
            privateNotesText: privateNotesText
            accounts: 7
            addressOne: addressOne
            contacts: 1
            canSeePrivate: true
            cid: cid
        projects:
          key:
            replyByEmailEnabled: true
            startPage: startPage
            endDate: endDate
            overviewStartPage: overviewStartPage
            tagIds:
            - 6
            - 6
            customFieldValueIds:
            - 5
            - 5
            description: description
            minMaxAvailableDates:
              maxEndDate: maxEndDate
              minStartDate: minStartDate
              suggestedEndDate: suggestedEndDate
              suggestedStartDate: suggestedStartDate
              deadlinesFound: true
            ownerId: 8
            type: type
            createdAt: createdAt
            updateId: 6
            logo: logo
            company:
              meta: '{}'
              id: 0
              type: type
            id: 9
            financialBudget:
              meta: '{}'
              id: 0
              type: type
            updatedAt: updatedAt
            harvestTimersEnabled: true
            updatedBy: 1
            activePages:
              comments: true
              riskRegister: true
              list: true
              gantt: true
              billing: true
              notebooks: true
              files: true
              messages: true
              links: true
              time: true
              milestones: true
              board: true
              forms: true
              table: true
              tasks: true
            isStarred: true
            directFileUploadsEnabled: true
            isOnBoardingProject: true
            subStatus: subStatus
            isSampleProject: true
            tags:
            - meta: '{}'
              id: 0
              type: type
            - meta: '{}'
              id: 0
              type: type
            tasksStartPage: tasksStartPage
            financialBudgetId: 9
            privacyEnabled: true
            companyId: 1
            defaultPrivacy: defaultPrivacy
            customFieldValues:
            - meta: '{}'
              id: 0
              type: type
            - meta: '{}'
              id: 0
              type: type
            createdBy: 4
            notifyCommentIncludeCreator: true
            skipWeekends: true
            name: name
            projectOwnerId: 9
            notifyEveryone: true
            timeBudgetId: 3
            showAnnouncement: true
            category:
              meta: '{}'
              id: 0
              type: type
            integrations:
              xero:
                connected: true
                countryCode: countryCode
                organisation: organisation
                baseCurrency: baseCurrency
                enabled: true
              oneDriveBusiness:
                folder: folder
                folderName: folderName
                account: account
                enabled: true
              sharepoint:
                folder: folder
                folderName: folderName
                account: account
                enabled: true
            ownedBy: 6
            categoryId: 7
            startDate: startDate
            status: status
            timeBudget:
              meta: '{}'
              id: 0
              type: type
        allocations:
          key:
            updatedBy: 4
            color: color
            description: description
            project:
              meta: '{}'
              id: 0
              type: type
            startedAt: '{}'
            availableDuration: 1
            title: title
            deletedBy: 5
            hoursPerDay: 7.061401241503109
            duration: 2
            createdAt: createdAt
            distributeType: distributeType
            deletedAt: deletedAt
            createdBy: 5
            endedAt: '{}'
            installation:
              meta: '{}'
              id: 0
              type: type
            id: 9
            installationId: 3
            assignedUser:
              meta: '{}'
              id: 0
              type: type
            projectId: 2
            assignedUserID: 6
            recurringRule: recurringRule
            status: status
            updatedAt: updatedAt
        timelogs:
          key:
            tagIds:
            - 4
            - 4
            description: description
            loggedBy: 7
            project:
              meta: '{}'
              id: 0
              type: type
            deskTicketId: 6
            hasStartTime: true
            projectBillingInvoice:
              meta: '{}'
              id: 0
              type: type
            deletedBy: 6
            createdAt: createdAt
            dateCreated: dateCreated
            editedByUserId: 3
            invoiceNumber: invoiceNumber
            dateEdited: dateEdited
            id: 3
            loggedByUserId: 0
            updatedAt: updatedAt
            updatedBy: 3
            timeLogged: timeLogged
            minutes: 7
            billable: true
            userId: 3
            dateDeleted: dateDeleted
            deletedByUserId: 5
            tags:
            - meta: '{}'
              id: 0
              type: type
            - meta: '{}'
              id: 0
              type: type
            taskPreMove:
              meta: '{}'
              id: 0
              type: type
            taskIdPreMove: 7
            deletedAt: deletedAt
            deleted: true
            projectBillingInvoiceId: 6
            task:
              meta: '{}'
              id: 0
              type: type
            projectId: 0
            user:
              meta: '{}'
              id: 0
              type: type
            taskId: 8
        users:
          key:
            lastName: lastName
            avatarUrl: avatarUrl
            isAdmin: true
            title: title
            type: type
            firstName: firstName
            companyId: 2
            workingHoursId: 5
            lengthOfDay: 6.878052220127876
            company:
              meta: '{}'
              id: 0
              type: type
            workingHour:
              meta: '{}'
              id: 0
              type: type
            id: 6
            email: email
      properties:
        allocations:
          additionalProperties:
            $ref: '#/components/schemas/view.Allocation'
          type: object
        calendarEvents:
          additionalProperties:
            $ref: '#/components/schemas/view.CalendarEvent'
          type: object
        companies:
          additionalProperties:
            $ref: '#/components/schemas/view.Company'
          type: object
        projects:
          additionalProperties:
            $ref: '#/components/schemas/view.Project'
          type: object
        timelogs:
          additionalProperties:
            $ref: '#/components/schemas/view.Timelog'
          type: object
        users:
          additionalProperties:
            $ref: '#/components/schemas/view.User'
          type: object
      type: object
    status_TimelineResponse_included:
      example:
        userEvents:
          key:
            clockedIn: true
        users:
          key:
            lastName: lastName
            avatarUrl: avatarUrl
            isAdmin: true
            title: title
            type: type
            firstName: firstName
            companyId: 2
            workingHoursId: 5
            lengthOfDay: 6.878052220127876
            company:
              meta: '{}'
              id: 0
              type: type
            workingHour:
              meta: '{}'
              id: 0
              type: type
            id: 6
            email: email
      properties:
        userEvents:
          additionalProperties:
            $ref: '#/components/schemas/view.UserEvents'
          type: object
        users:
          additionalProperties:
            $ref: '#/components/schemas/view.User'
          type: object
      type: object
    task_CustomFieldTasksResponse_included:
      example:
        customfields:
          key:
            createdByUserId: 6
            updatedBy: 7
            description: description
            project:
              meta: '{}'
              id: 0
              type: type
            isPrivate: true
            updatedByUserId: 9
            type: type
            deletedBy: 1
            deletedByUserId: 5
            required: true
            createdAt: createdAt
            deletedAt: deletedAt
            deleted: true
            createdBy: 0
            name: name
            options: '{}'
            visibilities: visibilities
            id: 5
            projectId: 2
            entity: entity
            updatedAt: updatedAt
        tasks:
          key:
            parentTaskId: 9
            assigneeUserIds:
            - 1
            - 1
            dueDate: dueDate
            tagIds:
            - 1
            - 1
            displayOrder: 9
            description: description
            isPrivate: 8
            userPermissions:
              canComplete: true
              canEdit: true
              canViewEstTime: true
              canAddSubtasks: true
              canLogTime: true
            assigneeUsers:
            - meta: '{}'
              id: 0
              type: type
            - meta: '{}'
              id: 0
              type: type
            originalDueDate: '{}'
            assigneeCompanyIds:
            - 1
            - 1
            assigneeTeamIds:
            - 1
            - 1
            id: 6
            subTaskIds:
            - 6
            - 6
            updatedAt: updatedAt
            predecessorIds:
            - 6
            - 6
            createdByUserId: 1
            updatedBy: 6
            crmDealIds:
            - 4
            - 4
            assigneeCompanies:
            - meta: '{}'
              id: 0
              type: type
            - meta: '{}'
              id: 0
              type: type
            parentTask:
              meta: '{}'
              id: 0
              type: type
            hasDeskTickets: true
            priority: priority
            dateUpdated: dateUpdated
            assigneeTeams:
            - meta: '{}'
              id: 0
              type: type
            - meta: '{}'
              id: 0
              type: type
            dependencyIds:
            - 5
            - 5
            createdBy: 7
            latestUpdates:
            - field: field
              before: '{}'
              after: '{}'
            - field: field
              before: '{}'
              after: '{}'
            completedOn: completedOn
            name: name
            progress: 3
            estimateMinutes: 9
            tasklist:
              meta: '{}'
              id: 0
              type: type
            completedBy: 6
            startDate: startDate
            tasklistId: 2
            status: status
      properties:
        customfields:
          additionalProperties:
            $ref: '#/components/schemas/view.CustomField'
          type: object
        tasks:
          additionalProperties:
            $ref: '#/components/schemas/view.Task'
          type: object
      type: object
    task_Request_attachmentOptions:
      properties:
        removeOtherFiles:
          type: boolean
      type: object
    task_Request_attachments:
      properties:
        files:
          items:
            $ref: '#/components/schemas/task.File'
          type: array
        pendingFiles:
          items:
            $ref: '#/components/schemas/task.PendingFile'
          type: array
      type: object
    task_Request_taskOptions:
      properties:
        everyoneMustDo:
          type: boolean
        isTemplate:
          type: boolean
        notify:
          type: boolean
        parseInlineTags:
          type: boolean
        positionAfterTaskId:
          type: integer
        shiftProjectDates:
          type: boolean
        useDefaults:
          type: boolean
        useNotifyViaTWIM:
          type: boolean
      type: object
    task_Response_included:
      example:
        companies:
          key:
            city: city
            industry:
              meta: '{}'
              id: 0
              type: type
            emailTwo: emailTwo
            industryId: 6
            isOwner: true
            addressTwo: addressTwo
            countryCode: countryCode
            emailThree: emailThree
            id: 1
            state: state
            fax: fax
            zip: zip
            profileText: profileText
            website: website
            clientUsers: 1
            companyNameUrl: companyNameUrl
            logoUrl: logoUrl
            phone: phone
            emailOne: emailOne
            name: name
            privateNotesText: privateNotesText
            accounts: 7
            addressOne: addressOne
            contacts: 1
            canSeePrivate: true
            cid: cid
        cards:
          key:
            archived: true
            archivedAt: archivedAt
            createdAt: createdAt
            createBy:
              meta: '{}'
              id: 0
              type: type
            deletedAt: deletedAt
            visible: true
            displayOrder: 0
            deleteBy:
              meta: '{}'
              id: 0
              type: type
            id: 6
            archivedBy:
              meta: '{}'
              id: 0
              type: type
            status: status
            updatedAt: updatedAt
        comments:
          key:
            id: 0
            title: title
            objectId: 6
            object:
              meta: '{}'
              id: 0
              type: type
            objectType: objectType
        projects:
          key:
            replyByEmailEnabled: true
            startPage: startPage
            endDate: endDate
            overviewStartPage: overviewStartPage
            tagIds:
            - 6
            - 6
            customFieldValueIds:
            - 5
            - 5
            description: description
            minMaxAvailableDates:
              maxEndDate: maxEndDate
              minStartDate: minStartDate
              suggestedEndDate: suggestedEndDate
              suggestedStartDate: suggestedStartDate
              deadlinesFound: true
            ownerId: 8
            type: type
            createdAt: createdAt
            updateId: 6
            logo: logo
            company:
              meta: '{}'
              id: 0
              type: type
            id: 9
            financialBudget:
              meta: '{}'
              id: 0
              type: type
            updatedAt: updatedAt
            harvestTimersEnabled: true
            updatedBy: 1
            activePages:
              comments: true
              riskRegister: true
              list: true
              gantt: true
              billing: true
              notebooks: true
              files: true
              messages: true
              links: true
              time: true
              milestones: true
              board: true
              forms: true
              table: true
              tasks: true
            isStarred: true
            directFileUploadsEnabled: true
            isOnBoardingProject: true
            subStatus: subStatus
            isSampleProject: true
            tags:
            - meta: '{}'
              id: 0
              type: type
            - meta: '{}'
              id: 0
              type: type
            tasksStartPage: tasksStartPage
            financialBudgetId: 9
            privacyEnabled: true
            companyId: 1
            defaultPrivacy: defaultPrivacy
            customFieldValues:
            - meta: '{}'
              id: 0
              type: type
            - meta: '{}'
              id: 0
              type: type
            createdBy: 4
            notifyCommentIncludeCreator: true
            skipWeekends: true
            name: name
            projectOwnerId: 9
            notifyEveryone: true
            timeBudgetId: 3
            showAnnouncement: true
            category:
              meta: '{}'
              id: 0
              type: type
            integrations:
              xero:
                connected: true
                countryCode: countryCode
                organisation: organisation
                baseCurrency: baseCurrency
                enabled: true
              oneDriveBusiness:
                folder: folder
                folderName: folderName
                account: account
                enabled: true
              sharepoint:
                folder: folder
                folderName: folderName
                account: account
                enabled: true
            ownedBy: 6
            categoryId: 7
            startDate: startDate
            status: status
            timeBudget:
              meta: '{}'
              id: 0
              type: type
        teams:
          key:
            teamLogo: teamLogo
            name: name
            id: 4
            teamLogoColor: teamLogoColor
            teamLogoIcon: teamLogoIcon
        columns:
          key:
            settings:
              reminders: true
              private: true
              comments: true
              tickets: true
              recurring: true
              subtasklabel: true
              subtasktext: true
              avatar: true
              endAt: true
              priority: true
              dependencies: true
              tags: true
              estimatedtime: true
              followers: true
              name: true
              files: true
              progress: true
              assignee: true
              tasklist: true
              time: true
              startAt: true
            color: color
            displayOrder: 0
            project:
              meta: '{}'
              id: 0
              type: type
            sort: sort
            createdAt: createdAt
            deletedAt: deletedAt
            deleted: true
            defaultTasklist:
              meta: '{}'
              id: 0
              type: type
            stats:
              estimatedTime: 5
              total: 2
              active: 1
              completed: 5
            sortOrder: sortOrder
            name: name
            hasTriggers: true
            id: 6
            updatedAt: updatedAt
        tasklists:
          key:
            milestone:
              meta: '{}'
              id: 0
              type: type
            milestoneId: 5
            name: name
            project:
              meta: '{}'
              id: 0
              type: type
            id: 5
            newTaskDefaults:
              estimatedMinutes: 2
              dueDate: dueDate
              responisblePartyIds:
                companies:
                - meta: '{}'
                  id: 0
                  type: type
                - meta: '{}'
                  id: 0
                  type: type
                companyIds:
                - 7
                - 7
                teams:
                - meta: '{}'
                  id: 0
                  type: type
                - meta: '{}'
                  id: 0
                  type: type
                userIds:
                - 3
                - 3
                teamIds:
                - 9
                - 9
                users:
                - meta: '{}'
                  id: 0
                  type: type
                - meta: '{}'
                  id: 0
                  type: type
              priority: priority
              startDate: startDate
              tags:
              - 2
              - 2
            taskIds:
            - 7
            - 7
            projectId: 4
            tasks:
            - meta: '{}'
              id: 0
              type: type
            - meta: '{}'
              id: 0
              type: type
        timeTotals:
          key:
            billableLoggedMinutes: 1
            loggedMinutes: 5
            billedloggedMinutes: 5
        milestones:
          key:
            changeFollowers:
            - meta: '{}'
              id: 0
              type: type
            - meta: '{}'
              id: 0
              type: type
            creatorUserId: 8
            private: true
            userFollowingComments: true
            canEdit: true
            tagIds:
            - 4
            - 4
            commentFollowers:
            - meta: '{}'
              id: 0
              type: type
            - meta: '{}'
              id: 0
              type: type
            description: description
            project:
              meta: '{}'
              id: 0
              type: type
            tasklists:
            - meta: '{}'
              id: 0
              type: type
            - meta: '{}'
              id: 0
              type: type
            percentageTasksCompleted: 1
            createdOn: createdOn
            isDeleted: true
            originalDueDate: originalDueDate
            userFollowingChanges: true
            commentFollowerIds:
            - 0
            - 0
            lockdown:
              meta: '{}'
              id: 0
              type: type
            id: 4
            deadline: deadline
            numCommentsRead: 0
            updatedBy: 9
            reminder: true
            canComplete: true
            lockdownId: 3
            completerId: 4
            completed: true
            tags:
            - meta: '{}'
              id: 0
              type: type
            - meta: '{}'
              id: 0
              type: type
            changeFollowerIds:
            - 9
            - 9
            responsiblePartyIds:
            - 6
            - 6
            lastChangedOn: lastChangedOn
            responsibleParties:
            - meta: '{}'
              id: 0
              type: type
            - meta: '{}'
              id: 0
              type: type
            createdBy: 6
            latestUpdates:
            - field: field
              before: '{}'
              after: '{}'
            - field: field
              before: '{}'
              after: '{}'
            percentageComplete: 2
            commentsCount: 7
            completedOn: completedOn
            name: name
            projectId: 8
            tasklistIds:
            - 8
            - 8
            completedBy: 5
            status: status
        users:
          key:
            lastName: lastName
            avatarUrl: avatarUrl
            isAdmin: true
            title: title
            type: type
            firstName: firstName
            companyId: 2
            workingHoursId: 5
            lengthOfDay: 6.878052220127876
            company:
              meta: '{}'
              id: 0
              type: type
            workingHour:
              meta: '{}'
              id: 0
              type: type
            id: 6
            email: email
        tags:
          key:
            color: color
            count: 0
            name: name
            project:
              meta: '{}'
              id: 0
              type: type
            id: 6
            projectId: 1
      properties:
        cards:
          additionalProperties:
            $ref: '#/components/schemas/view.TaskCard'
          type: object
        columns:
          additionalProperties:
            $ref: '#/components/schemas/view.BoardColumn'
          type: object
        comments:
          additionalProperties:
            $ref: '#/components/schemas/view.Comment'
          type: object
        companies:
          additionalProperties:
            $ref: '#/components/schemas/view.Company'
          type: object
        milestones:
          additionalProperties:
            $ref: '#/components/schemas/view.Milestone'
          type: object
        projects:
          additionalProperties:
            $ref: '#/components/schemas/view.Project'
          type: object
        tags:
          additionalProperties:
            $ref: '#/components/schemas/view.Tag'
          type: object
        tasklists:
          additionalProperties:
            $ref: '#/components/schemas/view.Tasklist'
          type: object
        teams:
          additionalProperties:
            $ref: '#/components/schemas/view.Team'
          type: object
        timeTotals:
          additionalProperties:
            $ref: '#/components/schemas/view.TaskTimeTotals'
          type: object
        users:
          additionalProperties:
            $ref: '#/components/schemas/view.User'
          type: object
      type: object
    timelog_TimelogsResponse_included:
      example:
        projects:
          key:
            replyByEmailEnabled: true
            startPage: startPage
            endDate: endDate
            overviewStartPage: overviewStartPage
            tagIds:
            - 6
            - 6
            customFieldValueIds:
            - 5
            - 5
            description: description
            minMaxAvailableDates:
              maxEndDate: maxEndDate
              minStartDate: minStartDate
              suggestedEndDate: suggestedEndDate
              suggestedStartDate: suggestedStartDate
              deadlinesFound: true
            ownerId: 8
            type: type
            createdAt: createdAt
            updateId: 6
            logo: logo
            company:
              meta: '{}'
              id: 0
              type: type
            id: 9
            financialBudget:
              meta: '{}'
              id: 0
              type: type
            updatedAt: updatedAt
            harvestTimersEnabled: true
            updatedBy: 1
            activePages:
              comments: true
              riskRegister: true
              list: true
              gantt: true
              billing: true
              notebooks: true
              files: true
              messages: true
              links: true
              time: true
              milestones: true
              board: true
              forms: true
              table: true
              tasks: true
            isStarred: true
            directFileUploadsEnabled: true
            isOnBoardingProject: true
            subStatus: subStatus
            isSampleProject: true
            tags:
            - meta: '{}'
              id: 0
              type: type
            - meta: '{}'
              id: 0
              type: type
            tasksStartPage: tasksStartPage
            financialBudgetId: 9
            privacyEnabled: true
            companyId: 1
            defaultPrivacy: defaultPrivacy
            customFieldValues:
            - meta: '{}'
              id: 0
              type: type
            - meta: '{}'
              id: 0
              type: type
            createdBy: 4
            notifyCommentIncludeCreator: true
            skipWeekends: true
            name: name
            projectOwnerId: 9
            notifyEveryone: true
            timeBudgetId: 3
            showAnnouncement: true
            category:
              meta: '{}'
              id: 0
              type: type
            integrations:
              xero:
                connected: true
                countryCode: countryCode
                organisation: organisation
                baseCurrency: baseCurrency
                enabled: true
              oneDriveBusiness:
                folder: folder
                folderName: folderName
                account: account
                enabled: true
              sharepoint:
                folder: folder
                folderName: folderName
                account: account
                enabled: true
            ownedBy: 6
            categoryId: 7
            startDate: startDate
            status: status
            timeBudget:
              meta: '{}'
              id: 0
              type: type
        tasklists:
          key:
            milestone:
              meta: '{}'
              id: 0
              type: type
            milestoneId: 5
            name: name
            project:
              meta: '{}'
              id: 0
              type: type
            id: 5
            newTaskDefaults:
              estimatedMinutes: 2
              dueDate: dueDate
              responisblePartyIds:
                companies:
                - meta: '{}'
                  id: 0
                  type: type
                - meta: '{}'
                  id: 0
                  type: type
                companyIds:
                - 7
                - 7
                teams:
                - meta: '{}'
                  id: 0
                  type: type
                - meta: '{}'
                  id: 0
                  type: type
                userIds:
                - 3
                - 3
                teamIds:
                - 9
                - 9
                users:
                - meta: '{}'
                  id: 0
                  type: type
                - meta: '{}'
                  id: 0
                  type: type
              priority: priority
              startDate: startDate
              tags:
              - 2
              - 2
            taskIds:
            - 7
            - 7
            projectId: 4
            tasks:
            - meta: '{}'
              id: 0
              type: type
            - meta: '{}'
              id: 0
              type: type
        tasks:
          key:
            parentTaskId: 9
            assigneeUserIds:
            - 1
            - 1
            dueDate: dueDate
            tagIds:
            - 1
            - 1
            displayOrder: 9
            description: description
            isPrivate: 8
            userPermissions:
              canComplete: true
              canEdit: true
              canViewEstTime: true
              canAddSubtasks: true
              canLogTime: true
            assigneeUsers:
            - meta: '{}'
              id: 0
              type: type
            - meta: '{}'
              id: 0
              type: type
            originalDueDate: '{}'
            assigneeCompanyIds:
            - 1
            - 1
            assigneeTeamIds:
            - 1
            - 1
            id: 6
            subTaskIds:
            - 6
            - 6
            updatedAt: updatedAt
            predecessorIds:
            - 6
            - 6
            createdByUserId: 1
            updatedBy: 6
            crmDealIds:
            - 4
            - 4
            assigneeCompanies:
            - meta: '{}'
              id: 0
              type: type
            - meta: '{}'
              id: 0
              type: type
            parentTask:
              meta: '{}'
              id: 0
              type: type
            hasDeskTickets: true
            priority: priority
            dateUpdated: dateUpdated
            assigneeTeams:
            - meta: '{}'
              id: 0
              type: type
            - meta: '{}'
              id: 0
              type: type
            dependencyIds:
            - 5
            - 5
            createdBy: 7
            latestUpdates:
            - field: field
              before: '{}'
              after: '{}'
            - field: field
              before: '{}'
              after: '{}'
            completedOn: completedOn
            name: name
            progress: 3
            estimateMinutes: 9
            tasklist:
              meta: '{}'
              id: 0
              type: type
            completedBy: 6
            startDate: startDate
            tasklistId: 2
            status: status
        users:
          key:
            lastName: lastName
            avatarUrl: avatarUrl
            isAdmin: true
            title: title
            type: type
            firstName: firstName
            companyId: 2
            workingHoursId: 5
            lengthOfDay: 6.878052220127876
            company:
              meta: '{}'
              id: 0
              type: type
            workingHour:
              meta: '{}'
              id: 0
              type: type
            id: 6
            email: email
        tags:
          key:
            color: color
            count: 0
            name: name
            project:
              meta: '{}'
              id: 0
              type: type
            id: 6
            projectId: 1
      properties:
        projects:
          additionalProperties:
            $ref: '#/components/schemas/view.Project'
          type: object
        tags:
          additionalProperties:
            $ref: '#/components/schemas/view.Tag'
          type: object
        tasklists:
          additionalProperties:
            $ref: '#/components/schemas/view.Tasklist'
          type: object
        tasks:
          additionalProperties:
            $ref: '#/components/schemas/view.Task'
          type: object
        users:
          additionalProperties:
            $ref: '#/components/schemas/view.User'
          type: object
      type: object
    timer_Response_included:
      example:
        projects:
          key:
            replyByEmailEnabled: true
            startPage: startPage
            endDate: endDate
            overviewStartPage: overviewStartPage
            tagIds:
            - 6
            - 6
            customFieldValueIds:
            - 5
            - 5
            description: description
            minMaxAvailableDates:
              maxEndDate: maxEndDate
              minStartDate: minStartDate
              suggestedEndDate: suggestedEndDate
              suggestedStartDate: suggestedStartDate
              deadlinesFound: true
            ownerId: 8
            type: type
            createdAt: createdAt
            updateId: 6
            logo: logo
            company:
              meta: '{}'
              id: 0
              type: type
            id: 9
            financialBudget:
              meta: '{}'
              id: 0
              type: type
            updatedAt: updatedAt
            harvestTimersEnabled: true
            updatedBy: 1
            activePages:
              comments: true
              riskRegister: true
              list: true
              gantt: true
              billing: true
              notebooks: true
              files: true
              messages: true
              links: true
              time: true
              milestones: true
              board: true
              forms: true
              table: true
              tasks: true
            isStarred: true
            directFileUploadsEnabled: true
            isOnBoardingProject: true
            subStatus: subStatus
            isSampleProject: true
            tags:
            - meta: '{}'
              id: 0
              type: type
            - meta: '{}'
              id: 0
              type: type
            tasksStartPage: tasksStartPage
            financialBudgetId: 9
            privacyEnabled: true
            companyId: 1
            defaultPrivacy: defaultPrivacy
            customFieldValues:
            - meta: '{}'
              id: 0
              type: type
            - meta: '{}'
              id: 0
              type: type
            createdBy: 4
            notifyCommentIncludeCreator: true
            skipWeekends: true
            name: name
            projectOwnerId: 9
            notifyEveryone: true
            timeBudgetId: 3
            showAnnouncement: true
            category:
              meta: '{}'
              id: 0
              type: type
            integrations:
              xero:
                connected: true
                countryCode: countryCode
                organisation: organisation
                baseCurrency: baseCurrency
                enabled: true
              oneDriveBusiness:
                folder: folder
                folderName: folderName
                account: account
                enabled: true
              sharepoint:
                folder: folder
                folderName: folderName
                account: account
                enabled: true
            ownedBy: 6
            categoryId: 7
            startDate: startDate
            status: status
            timeBudget:
              meta: '{}'
              id: 0
              type: type
        tasklists:
          key:
            milestone:
              meta: '{}'
              id: 0
              type: type
            milestoneId: 5
            name: name
            project:
              meta: '{}'
              id: 0
              type: type
            id: 5
            newTaskDefaults:
              estimatedMinutes: 2
              dueDate: dueDate
              responisblePartyIds:
                companies:
                - meta: '{}'
                  id: 0
                  type: type
                - meta: '{}'
                  id: 0
                  type: type
                companyIds:
                - 7
                - 7
                teams:
                - meta: '{}'
                  id: 0
                  type: type
                - meta: '{}'
                  id: 0
                  type: type
                userIds:
                - 3
                - 3
                teamIds:
                - 9
                - 9
                users:
                - meta: '{}'
                  id: 0
                  type: type
                - meta: '{}'
                  id: 0
                  type: type
              priority: priority
              startDate: startDate
              tags:
              - 2
              - 2
            taskIds:
            - 7
            - 7
            projectId: 4
            tasks:
            - meta: '{}'
              id: 0
              type: type
            - meta: '{}'
              id: 0
              type: type
        tasks:
          key:
            parentTaskId: 9
            assigneeUserIds:
            - 1
            - 1
            dueDate: dueDate
            tagIds:
            - 1
            - 1
            displayOrder: 9
            description: description
            isPrivate: 8
            userPermissions:
              canComplete: true
              canEdit: true
              canViewEstTime: true
              canAddSubtasks: true
              canLogTime: true
            assigneeUsers:
            - meta: '{}'
              id: 0
              type: type
            - meta: '{}'
              id: 0
              type: type
            originalDueDate: '{}'
            assigneeCompanyIds:
            - 1
            - 1
            assigneeTeamIds:
            - 1
            - 1
            id: 6
            subTaskIds:
            - 6
            - 6
            updatedAt: updatedAt
            predecessorIds:
            - 6
            - 6
            createdByUserId: 1
            updatedBy: 6
            crmDealIds:
            - 4
            - 4
            assigneeCompanies:
            - meta: '{}'
              id: 0
              type: type
            - meta: '{}'
              id: 0
              type: type
            parentTask:
              meta: '{}'
              id: 0
              type: type
            hasDeskTickets: true
            priority: priority
            dateUpdated: dateUpdated
            assigneeTeams:
            - meta: '{}'
              id: 0
              type: type
            - meta: '{}'
              id: 0
              type: type
            dependencyIds:
            - 5
            - 5
            createdBy: 7
            latestUpdates:
            - field: field
              before: '{}'
              after: '{}'
            - field: field
              before: '{}'
              after: '{}'
            completedOn: completedOn
            name: name
            progress: 3
            estimateMinutes: 9
            tasklist:
              meta: '{}'
              id: 0
              type: type
            completedBy: 6
            startDate: startDate
            tasklistId: 2
            status: status
        users:
          key:
            lastName: lastName
            avatarUrl: avatarUrl
            isAdmin: true
            title: title
            type: type
            firstName: firstName
            companyId: 2
            workingHoursId: 5
            lengthOfDay: 6.878052220127876
            company:
              meta: '{}'
              id: 0
              type: type
            workingHour:
              meta: '{}'
              id: 0
              type: type
            id: 6
            email: email
      properties:
        projects:
          additionalProperties:
            $ref: '#/components/schemas/view.Project'
          type: object
        tasklists:
          additionalProperties:
            $ref: '#/components/schemas/view.Tasklist'
          type: object
        tasks:
          additionalProperties:
            $ref: '#/components/schemas/view.Task'
          type: object
        users:
          additionalProperties:
            $ref: '#/components/schemas/view.User'
          type: object
      type: object
    view_Project_activePages:
      example:
        comments: true
        riskRegister: true
        list: true
        gantt: true
        billing: true
        notebooks: true
        files: true
        messages: true
        links: true
        time: true
        milestones: true
        board: true
        forms: true
        table: true
        tasks: true
      properties:
        billing:
          type: boolean
        board:
          type: boolean
        comments:
          type: boolean
        files:
          type: boolean
        forms:
          type: boolean
        gantt:
          type: boolean
        links:
          type: boolean
        list:
          type: boolean
        messages:
          type: boolean
        milestones:
          type: boolean
        notebooks:
          type: boolean
        riskRegister:
          type: boolean
        table:
          type: boolean
        tasks:
          type: boolean
        time:
          type: boolean
      type: object
    view_Project_integrations_oneDriveBusiness:
      example:
        folder: folder
        folderName: folderName
        account: account
        enabled: true
      properties:
        account:
          type: string
        enabled:
          type: boolean
        folder:
          type: string
        folderName:
          type: string
      type: object
    view_Project_integrations_xero:
      example:
        connected: true
        countryCode: countryCode
        organisation: organisation
        baseCurrency: baseCurrency
        enabled: true
      properties:
        baseCurrency:
          type: string
        connected:
          type: boolean
        countryCode:
          type: string
        enabled:
          type: boolean
        organisation:
          type: string
      type: object
    view_Project_integrations:
      example:
        xero:
          connected: true
          countryCode: countryCode
          organisation: organisation
          baseCurrency: baseCurrency
          enabled: true
        oneDriveBusiness:
          folder: folder
          folderName: folderName
          account: account
          enabled: true
        sharepoint:
          folder: folder
          folderName: folderName
          account: account
          enabled: true
      properties:
        oneDriveBusiness:
          $ref: '#/components/schemas/view_Project_integrations_oneDriveBusiness'
        sharepoint:
          $ref: '#/components/schemas/view_Project_integrations_oneDriveBusiness'
        xero:
          $ref: '#/components/schemas/view_Project_integrations_xero'
      type: object
x-original-swagger-version: "2.0"
