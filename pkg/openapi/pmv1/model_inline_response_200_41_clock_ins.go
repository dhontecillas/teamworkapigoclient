/*
 * Teamwork Projects API
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * API version: 
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package pmv1

import (
	"encoding/json"
)

// InlineResponse20041ClockIns struct for InlineResponse20041ClockIns
type InlineResponse20041ClockIns struct {
	ClockInDatetime *string `json:"clockInDatetime,omitempty"`
	ClockInInfo *string `json:"clockInInfo,omitempty"`
	ClockInSource *string `json:"clockInSource,omitempty"`
	ClockOutDatetime *string `json:"clockOutDatetime,omitempty"`
	ClockOutInfo *string `json:"clockOutInfo,omitempty"`
	ClockOutSource *string `json:"clockOutSource,omitempty"`
	Id *string `json:"id,omitempty"`
	Status *string `json:"status,omitempty"`
	UpdatedDateTime *string `json:"updatedDateTime,omitempty"`
	UserId *string `json:"userId,omitempty"`
}

// NewInlineResponse20041ClockIns instantiates a new InlineResponse20041ClockIns object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewInlineResponse20041ClockIns() *InlineResponse20041ClockIns {
	this := InlineResponse20041ClockIns{}
	return &this
}

// NewInlineResponse20041ClockInsWithDefaults instantiates a new InlineResponse20041ClockIns object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewInlineResponse20041ClockInsWithDefaults() *InlineResponse20041ClockIns {
	this := InlineResponse20041ClockIns{}
	return &this
}

// GetClockInDatetime returns the ClockInDatetime field value if set, zero value otherwise.
func (o *InlineResponse20041ClockIns) GetClockInDatetime() string {
	if o == nil || o.ClockInDatetime == nil {
		var ret string
		return ret
	}
	return *o.ClockInDatetime
}

// GetClockInDatetimeOk returns a tuple with the ClockInDatetime field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InlineResponse20041ClockIns) GetClockInDatetimeOk() (*string, bool) {
	if o == nil || o.ClockInDatetime == nil {
		return nil, false
	}
	return o.ClockInDatetime, true
}

// HasClockInDatetime returns a boolean if a field has been set.
func (o *InlineResponse20041ClockIns) HasClockInDatetime() bool {
	if o != nil && o.ClockInDatetime != nil {
		return true
	}

	return false
}

// SetClockInDatetime gets a reference to the given string and assigns it to the ClockInDatetime field.
func (o *InlineResponse20041ClockIns) SetClockInDatetime(v string) {
	o.ClockInDatetime = &v
}

// GetClockInInfo returns the ClockInInfo field value if set, zero value otherwise.
func (o *InlineResponse20041ClockIns) GetClockInInfo() string {
	if o == nil || o.ClockInInfo == nil {
		var ret string
		return ret
	}
	return *o.ClockInInfo
}

// GetClockInInfoOk returns a tuple with the ClockInInfo field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InlineResponse20041ClockIns) GetClockInInfoOk() (*string, bool) {
	if o == nil || o.ClockInInfo == nil {
		return nil, false
	}
	return o.ClockInInfo, true
}

// HasClockInInfo returns a boolean if a field has been set.
func (o *InlineResponse20041ClockIns) HasClockInInfo() bool {
	if o != nil && o.ClockInInfo != nil {
		return true
	}

	return false
}

// SetClockInInfo gets a reference to the given string and assigns it to the ClockInInfo field.
func (o *InlineResponse20041ClockIns) SetClockInInfo(v string) {
	o.ClockInInfo = &v
}

// GetClockInSource returns the ClockInSource field value if set, zero value otherwise.
func (o *InlineResponse20041ClockIns) GetClockInSource() string {
	if o == nil || o.ClockInSource == nil {
		var ret string
		return ret
	}
	return *o.ClockInSource
}

// GetClockInSourceOk returns a tuple with the ClockInSource field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InlineResponse20041ClockIns) GetClockInSourceOk() (*string, bool) {
	if o == nil || o.ClockInSource == nil {
		return nil, false
	}
	return o.ClockInSource, true
}

// HasClockInSource returns a boolean if a field has been set.
func (o *InlineResponse20041ClockIns) HasClockInSource() bool {
	if o != nil && o.ClockInSource != nil {
		return true
	}

	return false
}

// SetClockInSource gets a reference to the given string and assigns it to the ClockInSource field.
func (o *InlineResponse20041ClockIns) SetClockInSource(v string) {
	o.ClockInSource = &v
}

// GetClockOutDatetime returns the ClockOutDatetime field value if set, zero value otherwise.
func (o *InlineResponse20041ClockIns) GetClockOutDatetime() string {
	if o == nil || o.ClockOutDatetime == nil {
		var ret string
		return ret
	}
	return *o.ClockOutDatetime
}

// GetClockOutDatetimeOk returns a tuple with the ClockOutDatetime field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InlineResponse20041ClockIns) GetClockOutDatetimeOk() (*string, bool) {
	if o == nil || o.ClockOutDatetime == nil {
		return nil, false
	}
	return o.ClockOutDatetime, true
}

// HasClockOutDatetime returns a boolean if a field has been set.
func (o *InlineResponse20041ClockIns) HasClockOutDatetime() bool {
	if o != nil && o.ClockOutDatetime != nil {
		return true
	}

	return false
}

// SetClockOutDatetime gets a reference to the given string and assigns it to the ClockOutDatetime field.
func (o *InlineResponse20041ClockIns) SetClockOutDatetime(v string) {
	o.ClockOutDatetime = &v
}

// GetClockOutInfo returns the ClockOutInfo field value if set, zero value otherwise.
func (o *InlineResponse20041ClockIns) GetClockOutInfo() string {
	if o == nil || o.ClockOutInfo == nil {
		var ret string
		return ret
	}
	return *o.ClockOutInfo
}

// GetClockOutInfoOk returns a tuple with the ClockOutInfo field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InlineResponse20041ClockIns) GetClockOutInfoOk() (*string, bool) {
	if o == nil || o.ClockOutInfo == nil {
		return nil, false
	}
	return o.ClockOutInfo, true
}

// HasClockOutInfo returns a boolean if a field has been set.
func (o *InlineResponse20041ClockIns) HasClockOutInfo() bool {
	if o != nil && o.ClockOutInfo != nil {
		return true
	}

	return false
}

// SetClockOutInfo gets a reference to the given string and assigns it to the ClockOutInfo field.
func (o *InlineResponse20041ClockIns) SetClockOutInfo(v string) {
	o.ClockOutInfo = &v
}

// GetClockOutSource returns the ClockOutSource field value if set, zero value otherwise.
func (o *InlineResponse20041ClockIns) GetClockOutSource() string {
	if o == nil || o.ClockOutSource == nil {
		var ret string
		return ret
	}
	return *o.ClockOutSource
}

// GetClockOutSourceOk returns a tuple with the ClockOutSource field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InlineResponse20041ClockIns) GetClockOutSourceOk() (*string, bool) {
	if o == nil || o.ClockOutSource == nil {
		return nil, false
	}
	return o.ClockOutSource, true
}

// HasClockOutSource returns a boolean if a field has been set.
func (o *InlineResponse20041ClockIns) HasClockOutSource() bool {
	if o != nil && o.ClockOutSource != nil {
		return true
	}

	return false
}

// SetClockOutSource gets a reference to the given string and assigns it to the ClockOutSource field.
func (o *InlineResponse20041ClockIns) SetClockOutSource(v string) {
	o.ClockOutSource = &v
}

// GetId returns the Id field value if set, zero value otherwise.
func (o *InlineResponse20041ClockIns) GetId() string {
	if o == nil || o.Id == nil {
		var ret string
		return ret
	}
	return *o.Id
}

// GetIdOk returns a tuple with the Id field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InlineResponse20041ClockIns) GetIdOk() (*string, bool) {
	if o == nil || o.Id == nil {
		return nil, false
	}
	return o.Id, true
}

// HasId returns a boolean if a field has been set.
func (o *InlineResponse20041ClockIns) HasId() bool {
	if o != nil && o.Id != nil {
		return true
	}

	return false
}

// SetId gets a reference to the given string and assigns it to the Id field.
func (o *InlineResponse20041ClockIns) SetId(v string) {
	o.Id = &v
}

// GetStatus returns the Status field value if set, zero value otherwise.
func (o *InlineResponse20041ClockIns) GetStatus() string {
	if o == nil || o.Status == nil {
		var ret string
		return ret
	}
	return *o.Status
}

// GetStatusOk returns a tuple with the Status field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InlineResponse20041ClockIns) GetStatusOk() (*string, bool) {
	if o == nil || o.Status == nil {
		return nil, false
	}
	return o.Status, true
}

// HasStatus returns a boolean if a field has been set.
func (o *InlineResponse20041ClockIns) HasStatus() bool {
	if o != nil && o.Status != nil {
		return true
	}

	return false
}

// SetStatus gets a reference to the given string and assigns it to the Status field.
func (o *InlineResponse20041ClockIns) SetStatus(v string) {
	o.Status = &v
}

// GetUpdatedDateTime returns the UpdatedDateTime field value if set, zero value otherwise.
func (o *InlineResponse20041ClockIns) GetUpdatedDateTime() string {
	if o == nil || o.UpdatedDateTime == nil {
		var ret string
		return ret
	}
	return *o.UpdatedDateTime
}

// GetUpdatedDateTimeOk returns a tuple with the UpdatedDateTime field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InlineResponse20041ClockIns) GetUpdatedDateTimeOk() (*string, bool) {
	if o == nil || o.UpdatedDateTime == nil {
		return nil, false
	}
	return o.UpdatedDateTime, true
}

// HasUpdatedDateTime returns a boolean if a field has been set.
func (o *InlineResponse20041ClockIns) HasUpdatedDateTime() bool {
	if o != nil && o.UpdatedDateTime != nil {
		return true
	}

	return false
}

// SetUpdatedDateTime gets a reference to the given string and assigns it to the UpdatedDateTime field.
func (o *InlineResponse20041ClockIns) SetUpdatedDateTime(v string) {
	o.UpdatedDateTime = &v
}

// GetUserId returns the UserId field value if set, zero value otherwise.
func (o *InlineResponse20041ClockIns) GetUserId() string {
	if o == nil || o.UserId == nil {
		var ret string
		return ret
	}
	return *o.UserId
}

// GetUserIdOk returns a tuple with the UserId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InlineResponse20041ClockIns) GetUserIdOk() (*string, bool) {
	if o == nil || o.UserId == nil {
		return nil, false
	}
	return o.UserId, true
}

// HasUserId returns a boolean if a field has been set.
func (o *InlineResponse20041ClockIns) HasUserId() bool {
	if o != nil && o.UserId != nil {
		return true
	}

	return false
}

// SetUserId gets a reference to the given string and assigns it to the UserId field.
func (o *InlineResponse20041ClockIns) SetUserId(v string) {
	o.UserId = &v
}

func (o InlineResponse20041ClockIns) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.ClockInDatetime != nil {
		toSerialize["clockInDatetime"] = o.ClockInDatetime
	}
	if o.ClockInInfo != nil {
		toSerialize["clockInInfo"] = o.ClockInInfo
	}
	if o.ClockInSource != nil {
		toSerialize["clockInSource"] = o.ClockInSource
	}
	if o.ClockOutDatetime != nil {
		toSerialize["clockOutDatetime"] = o.ClockOutDatetime
	}
	if o.ClockOutInfo != nil {
		toSerialize["clockOutInfo"] = o.ClockOutInfo
	}
	if o.ClockOutSource != nil {
		toSerialize["clockOutSource"] = o.ClockOutSource
	}
	if o.Id != nil {
		toSerialize["id"] = o.Id
	}
	if o.Status != nil {
		toSerialize["status"] = o.Status
	}
	if o.UpdatedDateTime != nil {
		toSerialize["updatedDateTime"] = o.UpdatedDateTime
	}
	if o.UserId != nil {
		toSerialize["userId"] = o.UserId
	}
	return json.Marshal(toSerialize)
}

type NullableInlineResponse20041ClockIns struct {
	value *InlineResponse20041ClockIns
	isSet bool
}

func (v NullableInlineResponse20041ClockIns) Get() *InlineResponse20041ClockIns {
	return v.value
}

func (v *NullableInlineResponse20041ClockIns) Set(val *InlineResponse20041ClockIns) {
	v.value = val
	v.isSet = true
}

func (v NullableInlineResponse20041ClockIns) IsSet() bool {
	return v.isSet
}

func (v *NullableInlineResponse20041ClockIns) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableInlineResponse20041ClockIns(val *InlineResponse20041ClockIns) *NullableInlineResponse20041ClockIns {
	return &NullableInlineResponse20041ClockIns{value: val, isSet: true}
}

func (v NullableInlineResponse20041ClockIns) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableInlineResponse20041ClockIns) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


