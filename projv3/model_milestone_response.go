/*
 * Teamwork.com Projects API
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * API version: 3.0
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package projv3

import (
	"encoding/json"
)

// MilestoneResponse Response contains information about a milestone.
type MilestoneResponse struct {
	Included *MilestoneMilestonesResponseIncluded `json:"included,omitempty"`
	Milestone *ViewMilestone `json:"milestone,omitempty"`
}

// NewMilestoneResponse instantiates a new MilestoneResponse object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewMilestoneResponse() *MilestoneResponse {
	this := MilestoneResponse{}
	return &this
}

// NewMilestoneResponseWithDefaults instantiates a new MilestoneResponse object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewMilestoneResponseWithDefaults() *MilestoneResponse {
	this := MilestoneResponse{}
	return &this
}

// GetIncluded returns the Included field value if set, zero value otherwise.
func (o *MilestoneResponse) GetIncluded() MilestoneMilestonesResponseIncluded {
	if o == nil || o.Included == nil {
		var ret MilestoneMilestonesResponseIncluded
		return ret
	}
	return *o.Included
}

// GetIncludedOk returns a tuple with the Included field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MilestoneResponse) GetIncludedOk() (*MilestoneMilestonesResponseIncluded, bool) {
	if o == nil || o.Included == nil {
		return nil, false
	}
	return o.Included, true
}

// HasIncluded returns a boolean if a field has been set.
func (o *MilestoneResponse) HasIncluded() bool {
	if o != nil && o.Included != nil {
		return true
	}

	return false
}

// SetIncluded gets a reference to the given MilestoneMilestonesResponseIncluded and assigns it to the Included field.
func (o *MilestoneResponse) SetIncluded(v MilestoneMilestonesResponseIncluded) {
	o.Included = &v
}

// GetMilestone returns the Milestone field value if set, zero value otherwise.
func (o *MilestoneResponse) GetMilestone() ViewMilestone {
	if o == nil || o.Milestone == nil {
		var ret ViewMilestone
		return ret
	}
	return *o.Milestone
}

// GetMilestoneOk returns a tuple with the Milestone field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MilestoneResponse) GetMilestoneOk() (*ViewMilestone, bool) {
	if o == nil || o.Milestone == nil {
		return nil, false
	}
	return o.Milestone, true
}

// HasMilestone returns a boolean if a field has been set.
func (o *MilestoneResponse) HasMilestone() bool {
	if o != nil && o.Milestone != nil {
		return true
	}

	return false
}

// SetMilestone gets a reference to the given ViewMilestone and assigns it to the Milestone field.
func (o *MilestoneResponse) SetMilestone(v ViewMilestone) {
	o.Milestone = &v
}

func (o MilestoneResponse) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.Included != nil {
		toSerialize["included"] = o.Included
	}
	if o.Milestone != nil {
		toSerialize["milestone"] = o.Milestone
	}
	return json.Marshal(toSerialize)
}

type NullableMilestoneResponse struct {
	value *MilestoneResponse
	isSet bool
}

func (v NullableMilestoneResponse) Get() *MilestoneResponse {
	return v.value
}

func (v *NullableMilestoneResponse) Set(val *MilestoneResponse) {
	v.value = val
	v.isSet = true
}

func (v NullableMilestoneResponse) IsSet() bool {
	return v.isSet
}

func (v *NullableMilestoneResponse) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableMilestoneResponse(val *MilestoneResponse) *NullableMilestoneResponse {
	return &NullableMilestoneResponse{value: val, isSet: true}
}

func (v NullableMilestoneResponse) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableMilestoneResponse) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


