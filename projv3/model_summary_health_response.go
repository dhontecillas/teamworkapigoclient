/*
 * Teamwork.com Projects API
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * API version: 3.0
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package projv3

import (
	"encoding/json"
)

// SummaryHealthResponse HealthResponse contains counters for health.
type SummaryHealthResponse struct {
	Var0 *int32 `json:"0,omitempty"`
	Var1 *int32 `json:"1,omitempty"`
	Var2 *int32 `json:"2,omitempty"`
	Var3 *int32 `json:"3,omitempty"`
}

// NewSummaryHealthResponse instantiates a new SummaryHealthResponse object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewSummaryHealthResponse() *SummaryHealthResponse {
	this := SummaryHealthResponse{}
	return &this
}

// NewSummaryHealthResponseWithDefaults instantiates a new SummaryHealthResponse object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewSummaryHealthResponseWithDefaults() *SummaryHealthResponse {
	this := SummaryHealthResponse{}
	return &this
}

// GetVar0 returns the Var0 field value if set, zero value otherwise.
func (o *SummaryHealthResponse) GetVar0() int32 {
	if o == nil || o.Var0 == nil {
		var ret int32
		return ret
	}
	return *o.Var0
}

// GetVar0Ok returns a tuple with the Var0 field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SummaryHealthResponse) GetVar0Ok() (*int32, bool) {
	if o == nil || o.Var0 == nil {
		return nil, false
	}
	return o.Var0, true
}

// HasVar0 returns a boolean if a field has been set.
func (o *SummaryHealthResponse) HasVar0() bool {
	if o != nil && o.Var0 != nil {
		return true
	}

	return false
}

// SetVar0 gets a reference to the given int32 and assigns it to the Var0 field.
func (o *SummaryHealthResponse) SetVar0(v int32) {
	o.Var0 = &v
}

// GetVar1 returns the Var1 field value if set, zero value otherwise.
func (o *SummaryHealthResponse) GetVar1() int32 {
	if o == nil || o.Var1 == nil {
		var ret int32
		return ret
	}
	return *o.Var1
}

// GetVar1Ok returns a tuple with the Var1 field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SummaryHealthResponse) GetVar1Ok() (*int32, bool) {
	if o == nil || o.Var1 == nil {
		return nil, false
	}
	return o.Var1, true
}

// HasVar1 returns a boolean if a field has been set.
func (o *SummaryHealthResponse) HasVar1() bool {
	if o != nil && o.Var1 != nil {
		return true
	}

	return false
}

// SetVar1 gets a reference to the given int32 and assigns it to the Var1 field.
func (o *SummaryHealthResponse) SetVar1(v int32) {
	o.Var1 = &v
}

// GetVar2 returns the Var2 field value if set, zero value otherwise.
func (o *SummaryHealthResponse) GetVar2() int32 {
	if o == nil || o.Var2 == nil {
		var ret int32
		return ret
	}
	return *o.Var2
}

// GetVar2Ok returns a tuple with the Var2 field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SummaryHealthResponse) GetVar2Ok() (*int32, bool) {
	if o == nil || o.Var2 == nil {
		return nil, false
	}
	return o.Var2, true
}

// HasVar2 returns a boolean if a field has been set.
func (o *SummaryHealthResponse) HasVar2() bool {
	if o != nil && o.Var2 != nil {
		return true
	}

	return false
}

// SetVar2 gets a reference to the given int32 and assigns it to the Var2 field.
func (o *SummaryHealthResponse) SetVar2(v int32) {
	o.Var2 = &v
}

// GetVar3 returns the Var3 field value if set, zero value otherwise.
func (o *SummaryHealthResponse) GetVar3() int32 {
	if o == nil || o.Var3 == nil {
		var ret int32
		return ret
	}
	return *o.Var3
}

// GetVar3Ok returns a tuple with the Var3 field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SummaryHealthResponse) GetVar3Ok() (*int32, bool) {
	if o == nil || o.Var3 == nil {
		return nil, false
	}
	return o.Var3, true
}

// HasVar3 returns a boolean if a field has been set.
func (o *SummaryHealthResponse) HasVar3() bool {
	if o != nil && o.Var3 != nil {
		return true
	}

	return false
}

// SetVar3 gets a reference to the given int32 and assigns it to the Var3 field.
func (o *SummaryHealthResponse) SetVar3(v int32) {
	o.Var3 = &v
}

func (o SummaryHealthResponse) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.Var0 != nil {
		toSerialize["0"] = o.Var0
	}
	if o.Var1 != nil {
		toSerialize["1"] = o.Var1
	}
	if o.Var2 != nil {
		toSerialize["2"] = o.Var2
	}
	if o.Var3 != nil {
		toSerialize["3"] = o.Var3
	}
	return json.Marshal(toSerialize)
}

type NullableSummaryHealthResponse struct {
	value *SummaryHealthResponse
	isSet bool
}

func (v NullableSummaryHealthResponse) Get() *SummaryHealthResponse {
	return v.value
}

func (v *NullableSummaryHealthResponse) Set(val *SummaryHealthResponse) {
	v.value = val
	v.isSet = true
}

func (v NullableSummaryHealthResponse) IsSet() bool {
	return v.isSet
}

func (v *NullableSummaryHealthResponse) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableSummaryHealthResponse(val *SummaryHealthResponse) *NullableSummaryHealthResponse {
	return &NullableSummaryHealthResponse{value: val, isSet: true}
}

func (v NullableSummaryHealthResponse) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableSummaryHealthResponse) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


