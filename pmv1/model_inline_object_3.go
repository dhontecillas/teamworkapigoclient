/*
 * Teamwork Projects API
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * API version: 
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package pmv1

import (
	"encoding/json"
)

// InlineObject3 struct for InlineObject3
type InlineObject3 struct {
	Card *BoardsColumnsIdCardsJsonCard `json:"card,omitempty"`
	PositionAfterId *int32 `json:"positionAfterId,omitempty"`
}

// NewInlineObject3 instantiates a new InlineObject3 object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewInlineObject3() *InlineObject3 {
	this := InlineObject3{}
	return &this
}

// NewInlineObject3WithDefaults instantiates a new InlineObject3 object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewInlineObject3WithDefaults() *InlineObject3 {
	this := InlineObject3{}
	return &this
}

// GetCard returns the Card field value if set, zero value otherwise.
func (o *InlineObject3) GetCard() BoardsColumnsIdCardsJsonCard {
	if o == nil || o.Card == nil {
		var ret BoardsColumnsIdCardsJsonCard
		return ret
	}
	return *o.Card
}

// GetCardOk returns a tuple with the Card field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InlineObject3) GetCardOk() (*BoardsColumnsIdCardsJsonCard, bool) {
	if o == nil || o.Card == nil {
		return nil, false
	}
	return o.Card, true
}

// HasCard returns a boolean if a field has been set.
func (o *InlineObject3) HasCard() bool {
	if o != nil && o.Card != nil {
		return true
	}

	return false
}

// SetCard gets a reference to the given BoardsColumnsIdCardsJsonCard and assigns it to the Card field.
func (o *InlineObject3) SetCard(v BoardsColumnsIdCardsJsonCard) {
	o.Card = &v
}

// GetPositionAfterId returns the PositionAfterId field value if set, zero value otherwise.
func (o *InlineObject3) GetPositionAfterId() int32 {
	if o == nil || o.PositionAfterId == nil {
		var ret int32
		return ret
	}
	return *o.PositionAfterId
}

// GetPositionAfterIdOk returns a tuple with the PositionAfterId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InlineObject3) GetPositionAfterIdOk() (*int32, bool) {
	if o == nil || o.PositionAfterId == nil {
		return nil, false
	}
	return o.PositionAfterId, true
}

// HasPositionAfterId returns a boolean if a field has been set.
func (o *InlineObject3) HasPositionAfterId() bool {
	if o != nil && o.PositionAfterId != nil {
		return true
	}

	return false
}

// SetPositionAfterId gets a reference to the given int32 and assigns it to the PositionAfterId field.
func (o *InlineObject3) SetPositionAfterId(v int32) {
	o.PositionAfterId = &v
}

func (o InlineObject3) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.Card != nil {
		toSerialize["card"] = o.Card
	}
	if o.PositionAfterId != nil {
		toSerialize["positionAfterId"] = o.PositionAfterId
	}
	return json.Marshal(toSerialize)
}

type NullableInlineObject3 struct {
	value *InlineObject3
	isSet bool
}

func (v NullableInlineObject3) Get() *InlineObject3 {
	return v.value
}

func (v *NullableInlineObject3) Set(val *InlineObject3) {
	v.value = val
	v.isSet = true
}

func (v NullableInlineObject3) IsSet() bool {
	return v.isSet
}

func (v *NullableInlineObject3) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableInlineObject3(val *InlineObject3) *NullableInlineObject3 {
	return &NullableInlineObject3{value: val, isSet: true}
}

func (v NullableInlineObject3) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableInlineObject3) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


