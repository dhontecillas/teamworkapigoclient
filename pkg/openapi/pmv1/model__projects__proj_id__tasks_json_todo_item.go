/*
 * Teamwork Projects API
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * API version: 
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package pmv1

import (
	"encoding/json"
)

// ProjectsProjIdTasksJsonTodoItem struct for ProjectsProjIdTasksJsonTodoItem
type ProjectsProjIdTasksJsonTodoItem struct {
	Attachments *string `json:"attachments,omitempty"`
	AttachmentsCategoryIds *string `json:"attachmentsCategoryIds,omitempty"`
	ColumnId *int32 `json:"columnId,omitempty"`
	Completed *bool `json:"completed,omitempty"`
	Content string `json:"content"`
	CreatorId *int32 `json:"creator-id,omitempty"`
	Description *string `json:"description,omitempty"`
	EstimatedMinutes *int32 `json:"estimated-minutes,omitempty"`
	EveryoneMustDo *bool `json:"everyone-must-do,omitempty"`
	GrantAccessTo *string `json:"grant-access-to,omitempty"`
	ParentTaskId *int32 `json:"parentTaskId,omitempty"`
	PendingFileAttachments *[]map[string]interface{} `json:"pendingFileAttachments,omitempty"`
	PendingFileAttachmentsCategoryIds *string `json:"pendingFileAttachmentsCategoryIds,omitempty"`
	Predecessors *[]map[string]interface{} `json:"predecessors,omitempty"`
	Priority *string `json:"priority,omitempty"`
	Private *bool `json:"private,omitempty"`
	Progress *int32 `json:"progress,omitempty"`
	RemoveOtherFiles *bool `json:"removeOtherFiles,omitempty"`
	Tags *string `json:"tags,omitempty"`
	UpdateFiles *bool `json:"updateFiles,omitempty"`
	UseDefaults *bool `json:"use-defaults,omitempty"`
}

// NewProjectsProjIdTasksJsonTodoItem instantiates a new ProjectsProjIdTasksJsonTodoItem object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewProjectsProjIdTasksJsonTodoItem(content string, ) *ProjectsProjIdTasksJsonTodoItem {
	this := ProjectsProjIdTasksJsonTodoItem{}
	this.Content = content
	return &this
}

// NewProjectsProjIdTasksJsonTodoItemWithDefaults instantiates a new ProjectsProjIdTasksJsonTodoItem object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewProjectsProjIdTasksJsonTodoItemWithDefaults() *ProjectsProjIdTasksJsonTodoItem {
	this := ProjectsProjIdTasksJsonTodoItem{}
	return &this
}

// GetAttachments returns the Attachments field value if set, zero value otherwise.
func (o *ProjectsProjIdTasksJsonTodoItem) GetAttachments() string {
	if o == nil || o.Attachments == nil {
		var ret string
		return ret
	}
	return *o.Attachments
}

// GetAttachmentsOk returns a tuple with the Attachments field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ProjectsProjIdTasksJsonTodoItem) GetAttachmentsOk() (*string, bool) {
	if o == nil || o.Attachments == nil {
		return nil, false
	}
	return o.Attachments, true
}

// HasAttachments returns a boolean if a field has been set.
func (o *ProjectsProjIdTasksJsonTodoItem) HasAttachments() bool {
	if o != nil && o.Attachments != nil {
		return true
	}

	return false
}

// SetAttachments gets a reference to the given string and assigns it to the Attachments field.
func (o *ProjectsProjIdTasksJsonTodoItem) SetAttachments(v string) {
	o.Attachments = &v
}

// GetAttachmentsCategoryIds returns the AttachmentsCategoryIds field value if set, zero value otherwise.
func (o *ProjectsProjIdTasksJsonTodoItem) GetAttachmentsCategoryIds() string {
	if o == nil || o.AttachmentsCategoryIds == nil {
		var ret string
		return ret
	}
	return *o.AttachmentsCategoryIds
}

// GetAttachmentsCategoryIdsOk returns a tuple with the AttachmentsCategoryIds field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ProjectsProjIdTasksJsonTodoItem) GetAttachmentsCategoryIdsOk() (*string, bool) {
	if o == nil || o.AttachmentsCategoryIds == nil {
		return nil, false
	}
	return o.AttachmentsCategoryIds, true
}

// HasAttachmentsCategoryIds returns a boolean if a field has been set.
func (o *ProjectsProjIdTasksJsonTodoItem) HasAttachmentsCategoryIds() bool {
	if o != nil && o.AttachmentsCategoryIds != nil {
		return true
	}

	return false
}

// SetAttachmentsCategoryIds gets a reference to the given string and assigns it to the AttachmentsCategoryIds field.
func (o *ProjectsProjIdTasksJsonTodoItem) SetAttachmentsCategoryIds(v string) {
	o.AttachmentsCategoryIds = &v
}

// GetColumnId returns the ColumnId field value if set, zero value otherwise.
func (o *ProjectsProjIdTasksJsonTodoItem) GetColumnId() int32 {
	if o == nil || o.ColumnId == nil {
		var ret int32
		return ret
	}
	return *o.ColumnId
}

// GetColumnIdOk returns a tuple with the ColumnId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ProjectsProjIdTasksJsonTodoItem) GetColumnIdOk() (*int32, bool) {
	if o == nil || o.ColumnId == nil {
		return nil, false
	}
	return o.ColumnId, true
}

// HasColumnId returns a boolean if a field has been set.
func (o *ProjectsProjIdTasksJsonTodoItem) HasColumnId() bool {
	if o != nil && o.ColumnId != nil {
		return true
	}

	return false
}

// SetColumnId gets a reference to the given int32 and assigns it to the ColumnId field.
func (o *ProjectsProjIdTasksJsonTodoItem) SetColumnId(v int32) {
	o.ColumnId = &v
}

// GetCompleted returns the Completed field value if set, zero value otherwise.
func (o *ProjectsProjIdTasksJsonTodoItem) GetCompleted() bool {
	if o == nil || o.Completed == nil {
		var ret bool
		return ret
	}
	return *o.Completed
}

// GetCompletedOk returns a tuple with the Completed field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ProjectsProjIdTasksJsonTodoItem) GetCompletedOk() (*bool, bool) {
	if o == nil || o.Completed == nil {
		return nil, false
	}
	return o.Completed, true
}

// HasCompleted returns a boolean if a field has been set.
func (o *ProjectsProjIdTasksJsonTodoItem) HasCompleted() bool {
	if o != nil && o.Completed != nil {
		return true
	}

	return false
}

// SetCompleted gets a reference to the given bool and assigns it to the Completed field.
func (o *ProjectsProjIdTasksJsonTodoItem) SetCompleted(v bool) {
	o.Completed = &v
}

// GetContent returns the Content field value
func (o *ProjectsProjIdTasksJsonTodoItem) GetContent() string {
	if o == nil  {
		var ret string
		return ret
	}

	return o.Content
}

// GetContentOk returns a tuple with the Content field value
// and a boolean to check if the value has been set.
func (o *ProjectsProjIdTasksJsonTodoItem) GetContentOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.Content, true
}

// SetContent sets field value
func (o *ProjectsProjIdTasksJsonTodoItem) SetContent(v string) {
	o.Content = v
}

// GetCreatorId returns the CreatorId field value if set, zero value otherwise.
func (o *ProjectsProjIdTasksJsonTodoItem) GetCreatorId() int32 {
	if o == nil || o.CreatorId == nil {
		var ret int32
		return ret
	}
	return *o.CreatorId
}

// GetCreatorIdOk returns a tuple with the CreatorId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ProjectsProjIdTasksJsonTodoItem) GetCreatorIdOk() (*int32, bool) {
	if o == nil || o.CreatorId == nil {
		return nil, false
	}
	return o.CreatorId, true
}

// HasCreatorId returns a boolean if a field has been set.
func (o *ProjectsProjIdTasksJsonTodoItem) HasCreatorId() bool {
	if o != nil && o.CreatorId != nil {
		return true
	}

	return false
}

// SetCreatorId gets a reference to the given int32 and assigns it to the CreatorId field.
func (o *ProjectsProjIdTasksJsonTodoItem) SetCreatorId(v int32) {
	o.CreatorId = &v
}

// GetDescription returns the Description field value if set, zero value otherwise.
func (o *ProjectsProjIdTasksJsonTodoItem) GetDescription() string {
	if o == nil || o.Description == nil {
		var ret string
		return ret
	}
	return *o.Description
}

// GetDescriptionOk returns a tuple with the Description field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ProjectsProjIdTasksJsonTodoItem) GetDescriptionOk() (*string, bool) {
	if o == nil || o.Description == nil {
		return nil, false
	}
	return o.Description, true
}

// HasDescription returns a boolean if a field has been set.
func (o *ProjectsProjIdTasksJsonTodoItem) HasDescription() bool {
	if o != nil && o.Description != nil {
		return true
	}

	return false
}

// SetDescription gets a reference to the given string and assigns it to the Description field.
func (o *ProjectsProjIdTasksJsonTodoItem) SetDescription(v string) {
	o.Description = &v
}

// GetEstimatedMinutes returns the EstimatedMinutes field value if set, zero value otherwise.
func (o *ProjectsProjIdTasksJsonTodoItem) GetEstimatedMinutes() int32 {
	if o == nil || o.EstimatedMinutes == nil {
		var ret int32
		return ret
	}
	return *o.EstimatedMinutes
}

// GetEstimatedMinutesOk returns a tuple with the EstimatedMinutes field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ProjectsProjIdTasksJsonTodoItem) GetEstimatedMinutesOk() (*int32, bool) {
	if o == nil || o.EstimatedMinutes == nil {
		return nil, false
	}
	return o.EstimatedMinutes, true
}

// HasEstimatedMinutes returns a boolean if a field has been set.
func (o *ProjectsProjIdTasksJsonTodoItem) HasEstimatedMinutes() bool {
	if o != nil && o.EstimatedMinutes != nil {
		return true
	}

	return false
}

// SetEstimatedMinutes gets a reference to the given int32 and assigns it to the EstimatedMinutes field.
func (o *ProjectsProjIdTasksJsonTodoItem) SetEstimatedMinutes(v int32) {
	o.EstimatedMinutes = &v
}

// GetEveryoneMustDo returns the EveryoneMustDo field value if set, zero value otherwise.
func (o *ProjectsProjIdTasksJsonTodoItem) GetEveryoneMustDo() bool {
	if o == nil || o.EveryoneMustDo == nil {
		var ret bool
		return ret
	}
	return *o.EveryoneMustDo
}

// GetEveryoneMustDoOk returns a tuple with the EveryoneMustDo field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ProjectsProjIdTasksJsonTodoItem) GetEveryoneMustDoOk() (*bool, bool) {
	if o == nil || o.EveryoneMustDo == nil {
		return nil, false
	}
	return o.EveryoneMustDo, true
}

// HasEveryoneMustDo returns a boolean if a field has been set.
func (o *ProjectsProjIdTasksJsonTodoItem) HasEveryoneMustDo() bool {
	if o != nil && o.EveryoneMustDo != nil {
		return true
	}

	return false
}

// SetEveryoneMustDo gets a reference to the given bool and assigns it to the EveryoneMustDo field.
func (o *ProjectsProjIdTasksJsonTodoItem) SetEveryoneMustDo(v bool) {
	o.EveryoneMustDo = &v
}

// GetGrantAccessTo returns the GrantAccessTo field value if set, zero value otherwise.
func (o *ProjectsProjIdTasksJsonTodoItem) GetGrantAccessTo() string {
	if o == nil || o.GrantAccessTo == nil {
		var ret string
		return ret
	}
	return *o.GrantAccessTo
}

// GetGrantAccessToOk returns a tuple with the GrantAccessTo field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ProjectsProjIdTasksJsonTodoItem) GetGrantAccessToOk() (*string, bool) {
	if o == nil || o.GrantAccessTo == nil {
		return nil, false
	}
	return o.GrantAccessTo, true
}

// HasGrantAccessTo returns a boolean if a field has been set.
func (o *ProjectsProjIdTasksJsonTodoItem) HasGrantAccessTo() bool {
	if o != nil && o.GrantAccessTo != nil {
		return true
	}

	return false
}

// SetGrantAccessTo gets a reference to the given string and assigns it to the GrantAccessTo field.
func (o *ProjectsProjIdTasksJsonTodoItem) SetGrantAccessTo(v string) {
	o.GrantAccessTo = &v
}

// GetParentTaskId returns the ParentTaskId field value if set, zero value otherwise.
func (o *ProjectsProjIdTasksJsonTodoItem) GetParentTaskId() int32 {
	if o == nil || o.ParentTaskId == nil {
		var ret int32
		return ret
	}
	return *o.ParentTaskId
}

// GetParentTaskIdOk returns a tuple with the ParentTaskId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ProjectsProjIdTasksJsonTodoItem) GetParentTaskIdOk() (*int32, bool) {
	if o == nil || o.ParentTaskId == nil {
		return nil, false
	}
	return o.ParentTaskId, true
}

// HasParentTaskId returns a boolean if a field has been set.
func (o *ProjectsProjIdTasksJsonTodoItem) HasParentTaskId() bool {
	if o != nil && o.ParentTaskId != nil {
		return true
	}

	return false
}

// SetParentTaskId gets a reference to the given int32 and assigns it to the ParentTaskId field.
func (o *ProjectsProjIdTasksJsonTodoItem) SetParentTaskId(v int32) {
	o.ParentTaskId = &v
}

// GetPendingFileAttachments returns the PendingFileAttachments field value if set, zero value otherwise.
func (o *ProjectsProjIdTasksJsonTodoItem) GetPendingFileAttachments() []map[string]interface{} {
	if o == nil || o.PendingFileAttachments == nil {
		var ret []map[string]interface{}
		return ret
	}
	return *o.PendingFileAttachments
}

// GetPendingFileAttachmentsOk returns a tuple with the PendingFileAttachments field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ProjectsProjIdTasksJsonTodoItem) GetPendingFileAttachmentsOk() (*[]map[string]interface{}, bool) {
	if o == nil || o.PendingFileAttachments == nil {
		return nil, false
	}
	return o.PendingFileAttachments, true
}

// HasPendingFileAttachments returns a boolean if a field has been set.
func (o *ProjectsProjIdTasksJsonTodoItem) HasPendingFileAttachments() bool {
	if o != nil && o.PendingFileAttachments != nil {
		return true
	}

	return false
}

// SetPendingFileAttachments gets a reference to the given []map[string]interface{} and assigns it to the PendingFileAttachments field.
func (o *ProjectsProjIdTasksJsonTodoItem) SetPendingFileAttachments(v []map[string]interface{}) {
	o.PendingFileAttachments = &v
}

// GetPendingFileAttachmentsCategoryIds returns the PendingFileAttachmentsCategoryIds field value if set, zero value otherwise.
func (o *ProjectsProjIdTasksJsonTodoItem) GetPendingFileAttachmentsCategoryIds() string {
	if o == nil || o.PendingFileAttachmentsCategoryIds == nil {
		var ret string
		return ret
	}
	return *o.PendingFileAttachmentsCategoryIds
}

// GetPendingFileAttachmentsCategoryIdsOk returns a tuple with the PendingFileAttachmentsCategoryIds field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ProjectsProjIdTasksJsonTodoItem) GetPendingFileAttachmentsCategoryIdsOk() (*string, bool) {
	if o == nil || o.PendingFileAttachmentsCategoryIds == nil {
		return nil, false
	}
	return o.PendingFileAttachmentsCategoryIds, true
}

// HasPendingFileAttachmentsCategoryIds returns a boolean if a field has been set.
func (o *ProjectsProjIdTasksJsonTodoItem) HasPendingFileAttachmentsCategoryIds() bool {
	if o != nil && o.PendingFileAttachmentsCategoryIds != nil {
		return true
	}

	return false
}

// SetPendingFileAttachmentsCategoryIds gets a reference to the given string and assigns it to the PendingFileAttachmentsCategoryIds field.
func (o *ProjectsProjIdTasksJsonTodoItem) SetPendingFileAttachmentsCategoryIds(v string) {
	o.PendingFileAttachmentsCategoryIds = &v
}

// GetPredecessors returns the Predecessors field value if set, zero value otherwise.
func (o *ProjectsProjIdTasksJsonTodoItem) GetPredecessors() []map[string]interface{} {
	if o == nil || o.Predecessors == nil {
		var ret []map[string]interface{}
		return ret
	}
	return *o.Predecessors
}

// GetPredecessorsOk returns a tuple with the Predecessors field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ProjectsProjIdTasksJsonTodoItem) GetPredecessorsOk() (*[]map[string]interface{}, bool) {
	if o == nil || o.Predecessors == nil {
		return nil, false
	}
	return o.Predecessors, true
}

// HasPredecessors returns a boolean if a field has been set.
func (o *ProjectsProjIdTasksJsonTodoItem) HasPredecessors() bool {
	if o != nil && o.Predecessors != nil {
		return true
	}

	return false
}

// SetPredecessors gets a reference to the given []map[string]interface{} and assigns it to the Predecessors field.
func (o *ProjectsProjIdTasksJsonTodoItem) SetPredecessors(v []map[string]interface{}) {
	o.Predecessors = &v
}

// GetPriority returns the Priority field value if set, zero value otherwise.
func (o *ProjectsProjIdTasksJsonTodoItem) GetPriority() string {
	if o == nil || o.Priority == nil {
		var ret string
		return ret
	}
	return *o.Priority
}

// GetPriorityOk returns a tuple with the Priority field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ProjectsProjIdTasksJsonTodoItem) GetPriorityOk() (*string, bool) {
	if o == nil || o.Priority == nil {
		return nil, false
	}
	return o.Priority, true
}

// HasPriority returns a boolean if a field has been set.
func (o *ProjectsProjIdTasksJsonTodoItem) HasPriority() bool {
	if o != nil && o.Priority != nil {
		return true
	}

	return false
}

// SetPriority gets a reference to the given string and assigns it to the Priority field.
func (o *ProjectsProjIdTasksJsonTodoItem) SetPriority(v string) {
	o.Priority = &v
}

// GetPrivate returns the Private field value if set, zero value otherwise.
func (o *ProjectsProjIdTasksJsonTodoItem) GetPrivate() bool {
	if o == nil || o.Private == nil {
		var ret bool
		return ret
	}
	return *o.Private
}

// GetPrivateOk returns a tuple with the Private field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ProjectsProjIdTasksJsonTodoItem) GetPrivateOk() (*bool, bool) {
	if o == nil || o.Private == nil {
		return nil, false
	}
	return o.Private, true
}

// HasPrivate returns a boolean if a field has been set.
func (o *ProjectsProjIdTasksJsonTodoItem) HasPrivate() bool {
	if o != nil && o.Private != nil {
		return true
	}

	return false
}

// SetPrivate gets a reference to the given bool and assigns it to the Private field.
func (o *ProjectsProjIdTasksJsonTodoItem) SetPrivate(v bool) {
	o.Private = &v
}

// GetProgress returns the Progress field value if set, zero value otherwise.
func (o *ProjectsProjIdTasksJsonTodoItem) GetProgress() int32 {
	if o == nil || o.Progress == nil {
		var ret int32
		return ret
	}
	return *o.Progress
}

// GetProgressOk returns a tuple with the Progress field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ProjectsProjIdTasksJsonTodoItem) GetProgressOk() (*int32, bool) {
	if o == nil || o.Progress == nil {
		return nil, false
	}
	return o.Progress, true
}

// HasProgress returns a boolean if a field has been set.
func (o *ProjectsProjIdTasksJsonTodoItem) HasProgress() bool {
	if o != nil && o.Progress != nil {
		return true
	}

	return false
}

// SetProgress gets a reference to the given int32 and assigns it to the Progress field.
func (o *ProjectsProjIdTasksJsonTodoItem) SetProgress(v int32) {
	o.Progress = &v
}

// GetRemoveOtherFiles returns the RemoveOtherFiles field value if set, zero value otherwise.
func (o *ProjectsProjIdTasksJsonTodoItem) GetRemoveOtherFiles() bool {
	if o == nil || o.RemoveOtherFiles == nil {
		var ret bool
		return ret
	}
	return *o.RemoveOtherFiles
}

// GetRemoveOtherFilesOk returns a tuple with the RemoveOtherFiles field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ProjectsProjIdTasksJsonTodoItem) GetRemoveOtherFilesOk() (*bool, bool) {
	if o == nil || o.RemoveOtherFiles == nil {
		return nil, false
	}
	return o.RemoveOtherFiles, true
}

// HasRemoveOtherFiles returns a boolean if a field has been set.
func (o *ProjectsProjIdTasksJsonTodoItem) HasRemoveOtherFiles() bool {
	if o != nil && o.RemoveOtherFiles != nil {
		return true
	}

	return false
}

// SetRemoveOtherFiles gets a reference to the given bool and assigns it to the RemoveOtherFiles field.
func (o *ProjectsProjIdTasksJsonTodoItem) SetRemoveOtherFiles(v bool) {
	o.RemoveOtherFiles = &v
}

// GetTags returns the Tags field value if set, zero value otherwise.
func (o *ProjectsProjIdTasksJsonTodoItem) GetTags() string {
	if o == nil || o.Tags == nil {
		var ret string
		return ret
	}
	return *o.Tags
}

// GetTagsOk returns a tuple with the Tags field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ProjectsProjIdTasksJsonTodoItem) GetTagsOk() (*string, bool) {
	if o == nil || o.Tags == nil {
		return nil, false
	}
	return o.Tags, true
}

// HasTags returns a boolean if a field has been set.
func (o *ProjectsProjIdTasksJsonTodoItem) HasTags() bool {
	if o != nil && o.Tags != nil {
		return true
	}

	return false
}

// SetTags gets a reference to the given string and assigns it to the Tags field.
func (o *ProjectsProjIdTasksJsonTodoItem) SetTags(v string) {
	o.Tags = &v
}

// GetUpdateFiles returns the UpdateFiles field value if set, zero value otherwise.
func (o *ProjectsProjIdTasksJsonTodoItem) GetUpdateFiles() bool {
	if o == nil || o.UpdateFiles == nil {
		var ret bool
		return ret
	}
	return *o.UpdateFiles
}

// GetUpdateFilesOk returns a tuple with the UpdateFiles field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ProjectsProjIdTasksJsonTodoItem) GetUpdateFilesOk() (*bool, bool) {
	if o == nil || o.UpdateFiles == nil {
		return nil, false
	}
	return o.UpdateFiles, true
}

// HasUpdateFiles returns a boolean if a field has been set.
func (o *ProjectsProjIdTasksJsonTodoItem) HasUpdateFiles() bool {
	if o != nil && o.UpdateFiles != nil {
		return true
	}

	return false
}

// SetUpdateFiles gets a reference to the given bool and assigns it to the UpdateFiles field.
func (o *ProjectsProjIdTasksJsonTodoItem) SetUpdateFiles(v bool) {
	o.UpdateFiles = &v
}

// GetUseDefaults returns the UseDefaults field value if set, zero value otherwise.
func (o *ProjectsProjIdTasksJsonTodoItem) GetUseDefaults() bool {
	if o == nil || o.UseDefaults == nil {
		var ret bool
		return ret
	}
	return *o.UseDefaults
}

// GetUseDefaultsOk returns a tuple with the UseDefaults field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ProjectsProjIdTasksJsonTodoItem) GetUseDefaultsOk() (*bool, bool) {
	if o == nil || o.UseDefaults == nil {
		return nil, false
	}
	return o.UseDefaults, true
}

// HasUseDefaults returns a boolean if a field has been set.
func (o *ProjectsProjIdTasksJsonTodoItem) HasUseDefaults() bool {
	if o != nil && o.UseDefaults != nil {
		return true
	}

	return false
}

// SetUseDefaults gets a reference to the given bool and assigns it to the UseDefaults field.
func (o *ProjectsProjIdTasksJsonTodoItem) SetUseDefaults(v bool) {
	o.UseDefaults = &v
}

func (o ProjectsProjIdTasksJsonTodoItem) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.Attachments != nil {
		toSerialize["attachments"] = o.Attachments
	}
	if o.AttachmentsCategoryIds != nil {
		toSerialize["attachmentsCategoryIds"] = o.AttachmentsCategoryIds
	}
	if o.ColumnId != nil {
		toSerialize["columnId"] = o.ColumnId
	}
	if o.Completed != nil {
		toSerialize["completed"] = o.Completed
	}
	if true {
		toSerialize["content"] = o.Content
	}
	if o.CreatorId != nil {
		toSerialize["creator-id"] = o.CreatorId
	}
	if o.Description != nil {
		toSerialize["description"] = o.Description
	}
	if o.EstimatedMinutes != nil {
		toSerialize["estimated-minutes"] = o.EstimatedMinutes
	}
	if o.EveryoneMustDo != nil {
		toSerialize["everyone-must-do"] = o.EveryoneMustDo
	}
	if o.GrantAccessTo != nil {
		toSerialize["grant-access-to"] = o.GrantAccessTo
	}
	if o.ParentTaskId != nil {
		toSerialize["parentTaskId"] = o.ParentTaskId
	}
	if o.PendingFileAttachments != nil {
		toSerialize["pendingFileAttachments"] = o.PendingFileAttachments
	}
	if o.PendingFileAttachmentsCategoryIds != nil {
		toSerialize["pendingFileAttachmentsCategoryIds"] = o.PendingFileAttachmentsCategoryIds
	}
	if o.Predecessors != nil {
		toSerialize["predecessors"] = o.Predecessors
	}
	if o.Priority != nil {
		toSerialize["priority"] = o.Priority
	}
	if o.Private != nil {
		toSerialize["private"] = o.Private
	}
	if o.Progress != nil {
		toSerialize["progress"] = o.Progress
	}
	if o.RemoveOtherFiles != nil {
		toSerialize["removeOtherFiles"] = o.RemoveOtherFiles
	}
	if o.Tags != nil {
		toSerialize["tags"] = o.Tags
	}
	if o.UpdateFiles != nil {
		toSerialize["updateFiles"] = o.UpdateFiles
	}
	if o.UseDefaults != nil {
		toSerialize["use-defaults"] = o.UseDefaults
	}
	return json.Marshal(toSerialize)
}

type NullableProjectsProjIdTasksJsonTodoItem struct {
	value *ProjectsProjIdTasksJsonTodoItem
	isSet bool
}

func (v NullableProjectsProjIdTasksJsonTodoItem) Get() *ProjectsProjIdTasksJsonTodoItem {
	return v.value
}

func (v *NullableProjectsProjIdTasksJsonTodoItem) Set(val *ProjectsProjIdTasksJsonTodoItem) {
	v.value = val
	v.isSet = true
}

func (v NullableProjectsProjIdTasksJsonTodoItem) IsSet() bool {
	return v.isSet
}

func (v *NullableProjectsProjIdTasksJsonTodoItem) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableProjectsProjIdTasksJsonTodoItem(val *ProjectsProjIdTasksJsonTodoItem) *NullableProjectsProjIdTasksJsonTodoItem {
	return &NullableProjectsProjIdTasksJsonTodoItem{value: val, isSet: true}
}

func (v NullableProjectsProjIdTasksJsonTodoItem) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableProjectsProjIdTasksJsonTodoItem) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


