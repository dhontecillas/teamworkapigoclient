/*
 * Teamwork.com Projects API
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * API version: 3.0
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package projv3

import (
	"encoding/json"
)

// TimelogTotalsResponse TotalsResponse contains information about timelog totals.
type TimelogTotalsResponse struct {
	TimeTotals *ViewTimelogTotals `json:"time-totals,omitempty"`
}

// NewTimelogTotalsResponse instantiates a new TimelogTotalsResponse object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewTimelogTotalsResponse() *TimelogTotalsResponse {
	this := TimelogTotalsResponse{}
	return &this
}

// NewTimelogTotalsResponseWithDefaults instantiates a new TimelogTotalsResponse object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewTimelogTotalsResponseWithDefaults() *TimelogTotalsResponse {
	this := TimelogTotalsResponse{}
	return &this
}

// GetTimeTotals returns the TimeTotals field value if set, zero value otherwise.
func (o *TimelogTotalsResponse) GetTimeTotals() ViewTimelogTotals {
	if o == nil || o.TimeTotals == nil {
		var ret ViewTimelogTotals
		return ret
	}
	return *o.TimeTotals
}

// GetTimeTotalsOk returns a tuple with the TimeTotals field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TimelogTotalsResponse) GetTimeTotalsOk() (*ViewTimelogTotals, bool) {
	if o == nil || o.TimeTotals == nil {
		return nil, false
	}
	return o.TimeTotals, true
}

// HasTimeTotals returns a boolean if a field has been set.
func (o *TimelogTotalsResponse) HasTimeTotals() bool {
	if o != nil && o.TimeTotals != nil {
		return true
	}

	return false
}

// SetTimeTotals gets a reference to the given ViewTimelogTotals and assigns it to the TimeTotals field.
func (o *TimelogTotalsResponse) SetTimeTotals(v ViewTimelogTotals) {
	o.TimeTotals = &v
}

func (o TimelogTotalsResponse) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.TimeTotals != nil {
		toSerialize["time-totals"] = o.TimeTotals
	}
	return json.Marshal(toSerialize)
}

type NullableTimelogTotalsResponse struct {
	value *TimelogTotalsResponse
	isSet bool
}

func (v NullableTimelogTotalsResponse) Get() *TimelogTotalsResponse {
	return v.value
}

func (v *NullableTimelogTotalsResponse) Set(val *TimelogTotalsResponse) {
	v.value = val
	v.isSet = true
}

func (v NullableTimelogTotalsResponse) IsSet() bool {
	return v.isSet
}

func (v *NullableTimelogTotalsResponse) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableTimelogTotalsResponse(val *TimelogTotalsResponse) *NullableTimelogTotalsResponse {
	return &NullableTimelogTotalsResponse{value: val, isSet: true}
}

func (v NullableTimelogTotalsResponse) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableTimelogTotalsResponse) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


