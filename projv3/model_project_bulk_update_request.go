/*
 * Teamwork.com Projects API
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * API version: 3.0
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package projv3

import (
	"encoding/json"
)

// ProjectBulkUpdateRequest BulkUpdateRequest contains the the project custom field values that should be updated.
type ProjectBulkUpdateRequest struct {
	CustomfieldProjects *[]ProjectEditCustomFieldProject `json:"customfieldProjects,omitempty"`
}

// NewProjectBulkUpdateRequest instantiates a new ProjectBulkUpdateRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewProjectBulkUpdateRequest() *ProjectBulkUpdateRequest {
	this := ProjectBulkUpdateRequest{}
	return &this
}

// NewProjectBulkUpdateRequestWithDefaults instantiates a new ProjectBulkUpdateRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewProjectBulkUpdateRequestWithDefaults() *ProjectBulkUpdateRequest {
	this := ProjectBulkUpdateRequest{}
	return &this
}

// GetCustomfieldProjects returns the CustomfieldProjects field value if set, zero value otherwise.
func (o *ProjectBulkUpdateRequest) GetCustomfieldProjects() []ProjectEditCustomFieldProject {
	if o == nil || o.CustomfieldProjects == nil {
		var ret []ProjectEditCustomFieldProject
		return ret
	}
	return *o.CustomfieldProjects
}

// GetCustomfieldProjectsOk returns a tuple with the CustomfieldProjects field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ProjectBulkUpdateRequest) GetCustomfieldProjectsOk() (*[]ProjectEditCustomFieldProject, bool) {
	if o == nil || o.CustomfieldProjects == nil {
		return nil, false
	}
	return o.CustomfieldProjects, true
}

// HasCustomfieldProjects returns a boolean if a field has been set.
func (o *ProjectBulkUpdateRequest) HasCustomfieldProjects() bool {
	if o != nil && o.CustomfieldProjects != nil {
		return true
	}

	return false
}

// SetCustomfieldProjects gets a reference to the given []ProjectEditCustomFieldProject and assigns it to the CustomfieldProjects field.
func (o *ProjectBulkUpdateRequest) SetCustomfieldProjects(v []ProjectEditCustomFieldProject) {
	o.CustomfieldProjects = &v
}

func (o ProjectBulkUpdateRequest) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.CustomfieldProjects != nil {
		toSerialize["customfieldProjects"] = o.CustomfieldProjects
	}
	return json.Marshal(toSerialize)
}

type NullableProjectBulkUpdateRequest struct {
	value *ProjectBulkUpdateRequest
	isSet bool
}

func (v NullableProjectBulkUpdateRequest) Get() *ProjectBulkUpdateRequest {
	return v.value
}

func (v *NullableProjectBulkUpdateRequest) Set(val *ProjectBulkUpdateRequest) {
	v.value = val
	v.isSet = true
}

func (v NullableProjectBulkUpdateRequest) IsSet() bool {
	return v.isSet
}

func (v *NullableProjectBulkUpdateRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableProjectBulkUpdateRequest(val *ProjectBulkUpdateRequest) *NullableProjectBulkUpdateRequest {
	return &NullableProjectBulkUpdateRequest{value: val, isSet: true}
}

func (v NullableProjectBulkUpdateRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableProjectBulkUpdateRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


