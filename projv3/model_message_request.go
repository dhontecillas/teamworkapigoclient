/*
 * Teamwork.com Projects API
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * API version: 3.0
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package projv3

import (
	"encoding/json"
)

// MessageRequest Request contains information of a message to be created or updated.
type MessageRequest struct {
	Read *bool `json:"read,omitempty"`
}

// NewMessageRequest instantiates a new MessageRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewMessageRequest() *MessageRequest {
	this := MessageRequest{}
	return &this
}

// NewMessageRequestWithDefaults instantiates a new MessageRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewMessageRequestWithDefaults() *MessageRequest {
	this := MessageRequest{}
	return &this
}

// GetRead returns the Read field value if set, zero value otherwise.
func (o *MessageRequest) GetRead() bool {
	if o == nil || o.Read == nil {
		var ret bool
		return ret
	}
	return *o.Read
}

// GetReadOk returns a tuple with the Read field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MessageRequest) GetReadOk() (*bool, bool) {
	if o == nil || o.Read == nil {
		return nil, false
	}
	return o.Read, true
}

// HasRead returns a boolean if a field has been set.
func (o *MessageRequest) HasRead() bool {
	if o != nil && o.Read != nil {
		return true
	}

	return false
}

// SetRead gets a reference to the given bool and assigns it to the Read field.
func (o *MessageRequest) SetRead(v bool) {
	o.Read = &v
}

func (o MessageRequest) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.Read != nil {
		toSerialize["read"] = o.Read
	}
	return json.Marshal(toSerialize)
}

type NullableMessageRequest struct {
	value *MessageRequest
	isSet bool
}

func (v NullableMessageRequest) Get() *MessageRequest {
	return v.value
}

func (v *NullableMessageRequest) Set(val *MessageRequest) {
	v.value = val
	v.isSet = true
}

func (v NullableMessageRequest) IsSet() bool {
	return v.isSet
}

func (v *NullableMessageRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableMessageRequest(val *MessageRequest) *NullableMessageRequest {
	return &NullableMessageRequest{value: val, isSet: true}
}

func (v NullableMessageRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableMessageRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


