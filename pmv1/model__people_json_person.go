/*
 * Teamwork Projects API
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * API version: 
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package pmv1

import (
	"encoding/json"
)

// PeopleJsonPerson struct for PeopleJsonPerson
type PeopleJsonPerson struct {
	Address *PeopleJsonPersonAddress `json:"address,omitempty"`
	Administrator *bool `json:"administrator,omitempty"`
	AllowEmailNotifications *bool `json:"allowEmailNotifications,omitempty"`
	AutoGiveProjectAccess *bool `json:"autoGiveProjectAccess,omitempty"`
	AvatarPendingFileRef *string `json:"avatarPendingFileRef,omitempty"`
	CalendarStartsOnSunday *string `json:"calendarStartsOnSunday,omitempty"`
	CanAccessPortfolio *bool `json:"canAccessPortfolio,omitempty"`
	CanAccessTemplates *bool `json:"canAccessTemplates,omitempty"`
	CanAddProjects *bool `json:"canAddProjects,omitempty"`
	CanManagePeople *bool `json:"canManagePeople,omitempty"`
	CanManagePortfolio *bool `json:"canManagePortfolio,omitempty"`
	ChangeForEveryone *bool `json:"changeForEveryone,omitempty"`
	CompanyId *string `json:"company-id,omitempty"`
	DailyReportDaysFilter *int32 `json:"dailyReportDaysFilter,omitempty"`
	DailyReportSort *string `json:"dailyReportSort,omitempty"`
	DateFormatId *int32 `json:"dateFormatId,omitempty"`
	EmailAddress *string `json:"email-address,omitempty"`
	EmailAlt1 *string `json:"email-alt-1,omitempty"`
	EmailAlt2 *string `json:"email-alt-2,omitempty"`
	EmailAlt3 *string `json:"email-alt-3,omitempty"`
	FirstName *string `json:"first-name,omitempty"`
	GetUserDetails *bool `json:"getUserDetails,omitempty"`
	ImHandle *string `json:"im-handle,omitempty"`
	ImService *string `json:"im-service,omitempty"`
	Language *string `json:"language,omitempty"`
	LastName *string `json:"last-name,omitempty"`
	LengthOfDay *int32 `json:"lengthOfDay,omitempty"`
	NotifyOnAddedAsFollower *bool `json:"notify-on-added-as-follower,omitempty"`
	NotifyOnStatusUpdate *bool `json:"notify-on-status-update,omitempty"`
	NotifyOnTaskComplete *bool `json:"notifyOnTaskComplete,omitempty"`
	PhoneNumberFax *string `json:"phone-number-fax,omitempty"`
	PhoneNumberHome *string `json:"phone-number-home,omitempty"`
	PhoneNumberMobile *string `json:"phone-number-mobile,omitempty"`
	PhoneNumberMobileCountrycode *string `json:"phone-number-mobile-countrycode,omitempty"`
	PhoneNumberMobilePrefix *string `json:"phone-number-mobile-prefix,omitempty"`
	PhoneNumberOffice *string `json:"phone-number-office,omitempty"`
	PhoneNumberOfficeExt *string `json:"phone-number-office-ext,omitempty"`
	PrivateNotes *string `json:"privateNotes,omitempty"`
	Profile *string `json:"profile,omitempty"`
	ReceiveDailyReports *bool `json:"receiveDailyReports,omitempty"`
	ReceiveDailyReportsAtTime *string `json:"receiveDailyReportsAtTime,omitempty"`
	ReceiveDailyReportsAtWeekend *bool `json:"receiveDailyReportsAtWeekend,omitempty"`
	ReceiveDailyReportsIfEmpty *bool `json:"receiveDailyReportsIfEmpty,omitempty"`
	RemoveAvatar *bool `json:"removeAvatar,omitempty"`
	SendInvite *bool `json:"sendInvite,omitempty"`
	SoundAlertsEnabled *bool `json:"soundAlertsEnabled,omitempty"`
	TextFormat *string `json:"textFormat,omitempty"`
	TimeFormatId *int32 `json:"timeFormatId,omitempty"`
	TimezoneId *int32 `json:"timezoneId,omitempty"`
	Title *string `json:"title,omitempty"`
	UseShorthandDurations *bool `json:"useShorthandDurations,omitempty"`
	UserType *string `json:"user-type,omitempty"`
	UserFacebook *string `json:"userFacebook,omitempty"`
	UserGoogleplus *string `json:"userGoogleplus,omitempty"`
	UserLinkedin *string `json:"userLinkedin,omitempty"`
	UserReceiveMyNotificationsOnly *bool `json:"userReceiveMyNotificationsOnly,omitempty"`
	UserReceiveNotifyWarnings *bool `json:"userReceiveNotifyWarnings,omitempty"`
	UserTwitterName *string `json:"userTwitterName,omitempty"`
	UserWebsite *string `json:"userWebsite,omitempty"`
}

// NewPeopleJsonPerson instantiates a new PeopleJsonPerson object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewPeopleJsonPerson() *PeopleJsonPerson {
	this := PeopleJsonPerson{}
	return &this
}

// NewPeopleJsonPersonWithDefaults instantiates a new PeopleJsonPerson object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewPeopleJsonPersonWithDefaults() *PeopleJsonPerson {
	this := PeopleJsonPerson{}
	return &this
}

// GetAddress returns the Address field value if set, zero value otherwise.
func (o *PeopleJsonPerson) GetAddress() PeopleJsonPersonAddress {
	if o == nil || o.Address == nil {
		var ret PeopleJsonPersonAddress
		return ret
	}
	return *o.Address
}

// GetAddressOk returns a tuple with the Address field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PeopleJsonPerson) GetAddressOk() (*PeopleJsonPersonAddress, bool) {
	if o == nil || o.Address == nil {
		return nil, false
	}
	return o.Address, true
}

// HasAddress returns a boolean if a field has been set.
func (o *PeopleJsonPerson) HasAddress() bool {
	if o != nil && o.Address != nil {
		return true
	}

	return false
}

// SetAddress gets a reference to the given PeopleJsonPersonAddress and assigns it to the Address field.
func (o *PeopleJsonPerson) SetAddress(v PeopleJsonPersonAddress) {
	o.Address = &v
}

// GetAdministrator returns the Administrator field value if set, zero value otherwise.
func (o *PeopleJsonPerson) GetAdministrator() bool {
	if o == nil || o.Administrator == nil {
		var ret bool
		return ret
	}
	return *o.Administrator
}

// GetAdministratorOk returns a tuple with the Administrator field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PeopleJsonPerson) GetAdministratorOk() (*bool, bool) {
	if o == nil || o.Administrator == nil {
		return nil, false
	}
	return o.Administrator, true
}

// HasAdministrator returns a boolean if a field has been set.
func (o *PeopleJsonPerson) HasAdministrator() bool {
	if o != nil && o.Administrator != nil {
		return true
	}

	return false
}

// SetAdministrator gets a reference to the given bool and assigns it to the Administrator field.
func (o *PeopleJsonPerson) SetAdministrator(v bool) {
	o.Administrator = &v
}

// GetAllowEmailNotifications returns the AllowEmailNotifications field value if set, zero value otherwise.
func (o *PeopleJsonPerson) GetAllowEmailNotifications() bool {
	if o == nil || o.AllowEmailNotifications == nil {
		var ret bool
		return ret
	}
	return *o.AllowEmailNotifications
}

// GetAllowEmailNotificationsOk returns a tuple with the AllowEmailNotifications field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PeopleJsonPerson) GetAllowEmailNotificationsOk() (*bool, bool) {
	if o == nil || o.AllowEmailNotifications == nil {
		return nil, false
	}
	return o.AllowEmailNotifications, true
}

// HasAllowEmailNotifications returns a boolean if a field has been set.
func (o *PeopleJsonPerson) HasAllowEmailNotifications() bool {
	if o != nil && o.AllowEmailNotifications != nil {
		return true
	}

	return false
}

// SetAllowEmailNotifications gets a reference to the given bool and assigns it to the AllowEmailNotifications field.
func (o *PeopleJsonPerson) SetAllowEmailNotifications(v bool) {
	o.AllowEmailNotifications = &v
}

// GetAutoGiveProjectAccess returns the AutoGiveProjectAccess field value if set, zero value otherwise.
func (o *PeopleJsonPerson) GetAutoGiveProjectAccess() bool {
	if o == nil || o.AutoGiveProjectAccess == nil {
		var ret bool
		return ret
	}
	return *o.AutoGiveProjectAccess
}

// GetAutoGiveProjectAccessOk returns a tuple with the AutoGiveProjectAccess field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PeopleJsonPerson) GetAutoGiveProjectAccessOk() (*bool, bool) {
	if o == nil || o.AutoGiveProjectAccess == nil {
		return nil, false
	}
	return o.AutoGiveProjectAccess, true
}

// HasAutoGiveProjectAccess returns a boolean if a field has been set.
func (o *PeopleJsonPerson) HasAutoGiveProjectAccess() bool {
	if o != nil && o.AutoGiveProjectAccess != nil {
		return true
	}

	return false
}

// SetAutoGiveProjectAccess gets a reference to the given bool and assigns it to the AutoGiveProjectAccess field.
func (o *PeopleJsonPerson) SetAutoGiveProjectAccess(v bool) {
	o.AutoGiveProjectAccess = &v
}

// GetAvatarPendingFileRef returns the AvatarPendingFileRef field value if set, zero value otherwise.
func (o *PeopleJsonPerson) GetAvatarPendingFileRef() string {
	if o == nil || o.AvatarPendingFileRef == nil {
		var ret string
		return ret
	}
	return *o.AvatarPendingFileRef
}

// GetAvatarPendingFileRefOk returns a tuple with the AvatarPendingFileRef field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PeopleJsonPerson) GetAvatarPendingFileRefOk() (*string, bool) {
	if o == nil || o.AvatarPendingFileRef == nil {
		return nil, false
	}
	return o.AvatarPendingFileRef, true
}

// HasAvatarPendingFileRef returns a boolean if a field has been set.
func (o *PeopleJsonPerson) HasAvatarPendingFileRef() bool {
	if o != nil && o.AvatarPendingFileRef != nil {
		return true
	}

	return false
}

// SetAvatarPendingFileRef gets a reference to the given string and assigns it to the AvatarPendingFileRef field.
func (o *PeopleJsonPerson) SetAvatarPendingFileRef(v string) {
	o.AvatarPendingFileRef = &v
}

// GetCalendarStartsOnSunday returns the CalendarStartsOnSunday field value if set, zero value otherwise.
func (o *PeopleJsonPerson) GetCalendarStartsOnSunday() string {
	if o == nil || o.CalendarStartsOnSunday == nil {
		var ret string
		return ret
	}
	return *o.CalendarStartsOnSunday
}

// GetCalendarStartsOnSundayOk returns a tuple with the CalendarStartsOnSunday field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PeopleJsonPerson) GetCalendarStartsOnSundayOk() (*string, bool) {
	if o == nil || o.CalendarStartsOnSunday == nil {
		return nil, false
	}
	return o.CalendarStartsOnSunday, true
}

// HasCalendarStartsOnSunday returns a boolean if a field has been set.
func (o *PeopleJsonPerson) HasCalendarStartsOnSunday() bool {
	if o != nil && o.CalendarStartsOnSunday != nil {
		return true
	}

	return false
}

// SetCalendarStartsOnSunday gets a reference to the given string and assigns it to the CalendarStartsOnSunday field.
func (o *PeopleJsonPerson) SetCalendarStartsOnSunday(v string) {
	o.CalendarStartsOnSunday = &v
}

// GetCanAccessPortfolio returns the CanAccessPortfolio field value if set, zero value otherwise.
func (o *PeopleJsonPerson) GetCanAccessPortfolio() bool {
	if o == nil || o.CanAccessPortfolio == nil {
		var ret bool
		return ret
	}
	return *o.CanAccessPortfolio
}

// GetCanAccessPortfolioOk returns a tuple with the CanAccessPortfolio field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PeopleJsonPerson) GetCanAccessPortfolioOk() (*bool, bool) {
	if o == nil || o.CanAccessPortfolio == nil {
		return nil, false
	}
	return o.CanAccessPortfolio, true
}

// HasCanAccessPortfolio returns a boolean if a field has been set.
func (o *PeopleJsonPerson) HasCanAccessPortfolio() bool {
	if o != nil && o.CanAccessPortfolio != nil {
		return true
	}

	return false
}

// SetCanAccessPortfolio gets a reference to the given bool and assigns it to the CanAccessPortfolio field.
func (o *PeopleJsonPerson) SetCanAccessPortfolio(v bool) {
	o.CanAccessPortfolio = &v
}

// GetCanAccessTemplates returns the CanAccessTemplates field value if set, zero value otherwise.
func (o *PeopleJsonPerson) GetCanAccessTemplates() bool {
	if o == nil || o.CanAccessTemplates == nil {
		var ret bool
		return ret
	}
	return *o.CanAccessTemplates
}

// GetCanAccessTemplatesOk returns a tuple with the CanAccessTemplates field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PeopleJsonPerson) GetCanAccessTemplatesOk() (*bool, bool) {
	if o == nil || o.CanAccessTemplates == nil {
		return nil, false
	}
	return o.CanAccessTemplates, true
}

// HasCanAccessTemplates returns a boolean if a field has been set.
func (o *PeopleJsonPerson) HasCanAccessTemplates() bool {
	if o != nil && o.CanAccessTemplates != nil {
		return true
	}

	return false
}

// SetCanAccessTemplates gets a reference to the given bool and assigns it to the CanAccessTemplates field.
func (o *PeopleJsonPerson) SetCanAccessTemplates(v bool) {
	o.CanAccessTemplates = &v
}

// GetCanAddProjects returns the CanAddProjects field value if set, zero value otherwise.
func (o *PeopleJsonPerson) GetCanAddProjects() bool {
	if o == nil || o.CanAddProjects == nil {
		var ret bool
		return ret
	}
	return *o.CanAddProjects
}

// GetCanAddProjectsOk returns a tuple with the CanAddProjects field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PeopleJsonPerson) GetCanAddProjectsOk() (*bool, bool) {
	if o == nil || o.CanAddProjects == nil {
		return nil, false
	}
	return o.CanAddProjects, true
}

// HasCanAddProjects returns a boolean if a field has been set.
func (o *PeopleJsonPerson) HasCanAddProjects() bool {
	if o != nil && o.CanAddProjects != nil {
		return true
	}

	return false
}

// SetCanAddProjects gets a reference to the given bool and assigns it to the CanAddProjects field.
func (o *PeopleJsonPerson) SetCanAddProjects(v bool) {
	o.CanAddProjects = &v
}

// GetCanManagePeople returns the CanManagePeople field value if set, zero value otherwise.
func (o *PeopleJsonPerson) GetCanManagePeople() bool {
	if o == nil || o.CanManagePeople == nil {
		var ret bool
		return ret
	}
	return *o.CanManagePeople
}

// GetCanManagePeopleOk returns a tuple with the CanManagePeople field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PeopleJsonPerson) GetCanManagePeopleOk() (*bool, bool) {
	if o == nil || o.CanManagePeople == nil {
		return nil, false
	}
	return o.CanManagePeople, true
}

// HasCanManagePeople returns a boolean if a field has been set.
func (o *PeopleJsonPerson) HasCanManagePeople() bool {
	if o != nil && o.CanManagePeople != nil {
		return true
	}

	return false
}

// SetCanManagePeople gets a reference to the given bool and assigns it to the CanManagePeople field.
func (o *PeopleJsonPerson) SetCanManagePeople(v bool) {
	o.CanManagePeople = &v
}

// GetCanManagePortfolio returns the CanManagePortfolio field value if set, zero value otherwise.
func (o *PeopleJsonPerson) GetCanManagePortfolio() bool {
	if o == nil || o.CanManagePortfolio == nil {
		var ret bool
		return ret
	}
	return *o.CanManagePortfolio
}

// GetCanManagePortfolioOk returns a tuple with the CanManagePortfolio field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PeopleJsonPerson) GetCanManagePortfolioOk() (*bool, bool) {
	if o == nil || o.CanManagePortfolio == nil {
		return nil, false
	}
	return o.CanManagePortfolio, true
}

// HasCanManagePortfolio returns a boolean if a field has been set.
func (o *PeopleJsonPerson) HasCanManagePortfolio() bool {
	if o != nil && o.CanManagePortfolio != nil {
		return true
	}

	return false
}

// SetCanManagePortfolio gets a reference to the given bool and assigns it to the CanManagePortfolio field.
func (o *PeopleJsonPerson) SetCanManagePortfolio(v bool) {
	o.CanManagePortfolio = &v
}

// GetChangeForEveryone returns the ChangeForEveryone field value if set, zero value otherwise.
func (o *PeopleJsonPerson) GetChangeForEveryone() bool {
	if o == nil || o.ChangeForEveryone == nil {
		var ret bool
		return ret
	}
	return *o.ChangeForEveryone
}

// GetChangeForEveryoneOk returns a tuple with the ChangeForEveryone field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PeopleJsonPerson) GetChangeForEveryoneOk() (*bool, bool) {
	if o == nil || o.ChangeForEveryone == nil {
		return nil, false
	}
	return o.ChangeForEveryone, true
}

// HasChangeForEveryone returns a boolean if a field has been set.
func (o *PeopleJsonPerson) HasChangeForEveryone() bool {
	if o != nil && o.ChangeForEveryone != nil {
		return true
	}

	return false
}

// SetChangeForEveryone gets a reference to the given bool and assigns it to the ChangeForEveryone field.
func (o *PeopleJsonPerson) SetChangeForEveryone(v bool) {
	o.ChangeForEveryone = &v
}

// GetCompanyId returns the CompanyId field value if set, zero value otherwise.
func (o *PeopleJsonPerson) GetCompanyId() string {
	if o == nil || o.CompanyId == nil {
		var ret string
		return ret
	}
	return *o.CompanyId
}

// GetCompanyIdOk returns a tuple with the CompanyId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PeopleJsonPerson) GetCompanyIdOk() (*string, bool) {
	if o == nil || o.CompanyId == nil {
		return nil, false
	}
	return o.CompanyId, true
}

// HasCompanyId returns a boolean if a field has been set.
func (o *PeopleJsonPerson) HasCompanyId() bool {
	if o != nil && o.CompanyId != nil {
		return true
	}

	return false
}

// SetCompanyId gets a reference to the given string and assigns it to the CompanyId field.
func (o *PeopleJsonPerson) SetCompanyId(v string) {
	o.CompanyId = &v
}

// GetDailyReportDaysFilter returns the DailyReportDaysFilter field value if set, zero value otherwise.
func (o *PeopleJsonPerson) GetDailyReportDaysFilter() int32 {
	if o == nil || o.DailyReportDaysFilter == nil {
		var ret int32
		return ret
	}
	return *o.DailyReportDaysFilter
}

// GetDailyReportDaysFilterOk returns a tuple with the DailyReportDaysFilter field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PeopleJsonPerson) GetDailyReportDaysFilterOk() (*int32, bool) {
	if o == nil || o.DailyReportDaysFilter == nil {
		return nil, false
	}
	return o.DailyReportDaysFilter, true
}

// HasDailyReportDaysFilter returns a boolean if a field has been set.
func (o *PeopleJsonPerson) HasDailyReportDaysFilter() bool {
	if o != nil && o.DailyReportDaysFilter != nil {
		return true
	}

	return false
}

// SetDailyReportDaysFilter gets a reference to the given int32 and assigns it to the DailyReportDaysFilter field.
func (o *PeopleJsonPerson) SetDailyReportDaysFilter(v int32) {
	o.DailyReportDaysFilter = &v
}

// GetDailyReportSort returns the DailyReportSort field value if set, zero value otherwise.
func (o *PeopleJsonPerson) GetDailyReportSort() string {
	if o == nil || o.DailyReportSort == nil {
		var ret string
		return ret
	}
	return *o.DailyReportSort
}

// GetDailyReportSortOk returns a tuple with the DailyReportSort field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PeopleJsonPerson) GetDailyReportSortOk() (*string, bool) {
	if o == nil || o.DailyReportSort == nil {
		return nil, false
	}
	return o.DailyReportSort, true
}

// HasDailyReportSort returns a boolean if a field has been set.
func (o *PeopleJsonPerson) HasDailyReportSort() bool {
	if o != nil && o.DailyReportSort != nil {
		return true
	}

	return false
}

// SetDailyReportSort gets a reference to the given string and assigns it to the DailyReportSort field.
func (o *PeopleJsonPerson) SetDailyReportSort(v string) {
	o.DailyReportSort = &v
}

// GetDateFormatId returns the DateFormatId field value if set, zero value otherwise.
func (o *PeopleJsonPerson) GetDateFormatId() int32 {
	if o == nil || o.DateFormatId == nil {
		var ret int32
		return ret
	}
	return *o.DateFormatId
}

// GetDateFormatIdOk returns a tuple with the DateFormatId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PeopleJsonPerson) GetDateFormatIdOk() (*int32, bool) {
	if o == nil || o.DateFormatId == nil {
		return nil, false
	}
	return o.DateFormatId, true
}

// HasDateFormatId returns a boolean if a field has been set.
func (o *PeopleJsonPerson) HasDateFormatId() bool {
	if o != nil && o.DateFormatId != nil {
		return true
	}

	return false
}

// SetDateFormatId gets a reference to the given int32 and assigns it to the DateFormatId field.
func (o *PeopleJsonPerson) SetDateFormatId(v int32) {
	o.DateFormatId = &v
}

// GetEmailAddress returns the EmailAddress field value if set, zero value otherwise.
func (o *PeopleJsonPerson) GetEmailAddress() string {
	if o == nil || o.EmailAddress == nil {
		var ret string
		return ret
	}
	return *o.EmailAddress
}

// GetEmailAddressOk returns a tuple with the EmailAddress field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PeopleJsonPerson) GetEmailAddressOk() (*string, bool) {
	if o == nil || o.EmailAddress == nil {
		return nil, false
	}
	return o.EmailAddress, true
}

// HasEmailAddress returns a boolean if a field has been set.
func (o *PeopleJsonPerson) HasEmailAddress() bool {
	if o != nil && o.EmailAddress != nil {
		return true
	}

	return false
}

// SetEmailAddress gets a reference to the given string and assigns it to the EmailAddress field.
func (o *PeopleJsonPerson) SetEmailAddress(v string) {
	o.EmailAddress = &v
}

// GetEmailAlt1 returns the EmailAlt1 field value if set, zero value otherwise.
func (o *PeopleJsonPerson) GetEmailAlt1() string {
	if o == nil || o.EmailAlt1 == nil {
		var ret string
		return ret
	}
	return *o.EmailAlt1
}

// GetEmailAlt1Ok returns a tuple with the EmailAlt1 field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PeopleJsonPerson) GetEmailAlt1Ok() (*string, bool) {
	if o == nil || o.EmailAlt1 == nil {
		return nil, false
	}
	return o.EmailAlt1, true
}

// HasEmailAlt1 returns a boolean if a field has been set.
func (o *PeopleJsonPerson) HasEmailAlt1() bool {
	if o != nil && o.EmailAlt1 != nil {
		return true
	}

	return false
}

// SetEmailAlt1 gets a reference to the given string and assigns it to the EmailAlt1 field.
func (o *PeopleJsonPerson) SetEmailAlt1(v string) {
	o.EmailAlt1 = &v
}

// GetEmailAlt2 returns the EmailAlt2 field value if set, zero value otherwise.
func (o *PeopleJsonPerson) GetEmailAlt2() string {
	if o == nil || o.EmailAlt2 == nil {
		var ret string
		return ret
	}
	return *o.EmailAlt2
}

// GetEmailAlt2Ok returns a tuple with the EmailAlt2 field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PeopleJsonPerson) GetEmailAlt2Ok() (*string, bool) {
	if o == nil || o.EmailAlt2 == nil {
		return nil, false
	}
	return o.EmailAlt2, true
}

// HasEmailAlt2 returns a boolean if a field has been set.
func (o *PeopleJsonPerson) HasEmailAlt2() bool {
	if o != nil && o.EmailAlt2 != nil {
		return true
	}

	return false
}

// SetEmailAlt2 gets a reference to the given string and assigns it to the EmailAlt2 field.
func (o *PeopleJsonPerson) SetEmailAlt2(v string) {
	o.EmailAlt2 = &v
}

// GetEmailAlt3 returns the EmailAlt3 field value if set, zero value otherwise.
func (o *PeopleJsonPerson) GetEmailAlt3() string {
	if o == nil || o.EmailAlt3 == nil {
		var ret string
		return ret
	}
	return *o.EmailAlt3
}

// GetEmailAlt3Ok returns a tuple with the EmailAlt3 field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PeopleJsonPerson) GetEmailAlt3Ok() (*string, bool) {
	if o == nil || o.EmailAlt3 == nil {
		return nil, false
	}
	return o.EmailAlt3, true
}

// HasEmailAlt3 returns a boolean if a field has been set.
func (o *PeopleJsonPerson) HasEmailAlt3() bool {
	if o != nil && o.EmailAlt3 != nil {
		return true
	}

	return false
}

// SetEmailAlt3 gets a reference to the given string and assigns it to the EmailAlt3 field.
func (o *PeopleJsonPerson) SetEmailAlt3(v string) {
	o.EmailAlt3 = &v
}

// GetFirstName returns the FirstName field value if set, zero value otherwise.
func (o *PeopleJsonPerson) GetFirstName() string {
	if o == nil || o.FirstName == nil {
		var ret string
		return ret
	}
	return *o.FirstName
}

// GetFirstNameOk returns a tuple with the FirstName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PeopleJsonPerson) GetFirstNameOk() (*string, bool) {
	if o == nil || o.FirstName == nil {
		return nil, false
	}
	return o.FirstName, true
}

// HasFirstName returns a boolean if a field has been set.
func (o *PeopleJsonPerson) HasFirstName() bool {
	if o != nil && o.FirstName != nil {
		return true
	}

	return false
}

// SetFirstName gets a reference to the given string and assigns it to the FirstName field.
func (o *PeopleJsonPerson) SetFirstName(v string) {
	o.FirstName = &v
}

// GetGetUserDetails returns the GetUserDetails field value if set, zero value otherwise.
func (o *PeopleJsonPerson) GetGetUserDetails() bool {
	if o == nil || o.GetUserDetails == nil {
		var ret bool
		return ret
	}
	return *o.GetUserDetails
}

// GetGetUserDetailsOk returns a tuple with the GetUserDetails field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PeopleJsonPerson) GetGetUserDetailsOk() (*bool, bool) {
	if o == nil || o.GetUserDetails == nil {
		return nil, false
	}
	return o.GetUserDetails, true
}

// HasGetUserDetails returns a boolean if a field has been set.
func (o *PeopleJsonPerson) HasGetUserDetails() bool {
	if o != nil && o.GetUserDetails != nil {
		return true
	}

	return false
}

// SetGetUserDetails gets a reference to the given bool and assigns it to the GetUserDetails field.
func (o *PeopleJsonPerson) SetGetUserDetails(v bool) {
	o.GetUserDetails = &v
}

// GetImHandle returns the ImHandle field value if set, zero value otherwise.
func (o *PeopleJsonPerson) GetImHandle() string {
	if o == nil || o.ImHandle == nil {
		var ret string
		return ret
	}
	return *o.ImHandle
}

// GetImHandleOk returns a tuple with the ImHandle field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PeopleJsonPerson) GetImHandleOk() (*string, bool) {
	if o == nil || o.ImHandle == nil {
		return nil, false
	}
	return o.ImHandle, true
}

// HasImHandle returns a boolean if a field has been set.
func (o *PeopleJsonPerson) HasImHandle() bool {
	if o != nil && o.ImHandle != nil {
		return true
	}

	return false
}

// SetImHandle gets a reference to the given string and assigns it to the ImHandle field.
func (o *PeopleJsonPerson) SetImHandle(v string) {
	o.ImHandle = &v
}

// GetImService returns the ImService field value if set, zero value otherwise.
func (o *PeopleJsonPerson) GetImService() string {
	if o == nil || o.ImService == nil {
		var ret string
		return ret
	}
	return *o.ImService
}

// GetImServiceOk returns a tuple with the ImService field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PeopleJsonPerson) GetImServiceOk() (*string, bool) {
	if o == nil || o.ImService == nil {
		return nil, false
	}
	return o.ImService, true
}

// HasImService returns a boolean if a field has been set.
func (o *PeopleJsonPerson) HasImService() bool {
	if o != nil && o.ImService != nil {
		return true
	}

	return false
}

// SetImService gets a reference to the given string and assigns it to the ImService field.
func (o *PeopleJsonPerson) SetImService(v string) {
	o.ImService = &v
}

// GetLanguage returns the Language field value if set, zero value otherwise.
func (o *PeopleJsonPerson) GetLanguage() string {
	if o == nil || o.Language == nil {
		var ret string
		return ret
	}
	return *o.Language
}

// GetLanguageOk returns a tuple with the Language field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PeopleJsonPerson) GetLanguageOk() (*string, bool) {
	if o == nil || o.Language == nil {
		return nil, false
	}
	return o.Language, true
}

// HasLanguage returns a boolean if a field has been set.
func (o *PeopleJsonPerson) HasLanguage() bool {
	if o != nil && o.Language != nil {
		return true
	}

	return false
}

// SetLanguage gets a reference to the given string and assigns it to the Language field.
func (o *PeopleJsonPerson) SetLanguage(v string) {
	o.Language = &v
}

// GetLastName returns the LastName field value if set, zero value otherwise.
func (o *PeopleJsonPerson) GetLastName() string {
	if o == nil || o.LastName == nil {
		var ret string
		return ret
	}
	return *o.LastName
}

// GetLastNameOk returns a tuple with the LastName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PeopleJsonPerson) GetLastNameOk() (*string, bool) {
	if o == nil || o.LastName == nil {
		return nil, false
	}
	return o.LastName, true
}

// HasLastName returns a boolean if a field has been set.
func (o *PeopleJsonPerson) HasLastName() bool {
	if o != nil && o.LastName != nil {
		return true
	}

	return false
}

// SetLastName gets a reference to the given string and assigns it to the LastName field.
func (o *PeopleJsonPerson) SetLastName(v string) {
	o.LastName = &v
}

// GetLengthOfDay returns the LengthOfDay field value if set, zero value otherwise.
func (o *PeopleJsonPerson) GetLengthOfDay() int32 {
	if o == nil || o.LengthOfDay == nil {
		var ret int32
		return ret
	}
	return *o.LengthOfDay
}

// GetLengthOfDayOk returns a tuple with the LengthOfDay field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PeopleJsonPerson) GetLengthOfDayOk() (*int32, bool) {
	if o == nil || o.LengthOfDay == nil {
		return nil, false
	}
	return o.LengthOfDay, true
}

// HasLengthOfDay returns a boolean if a field has been set.
func (o *PeopleJsonPerson) HasLengthOfDay() bool {
	if o != nil && o.LengthOfDay != nil {
		return true
	}

	return false
}

// SetLengthOfDay gets a reference to the given int32 and assigns it to the LengthOfDay field.
func (o *PeopleJsonPerson) SetLengthOfDay(v int32) {
	o.LengthOfDay = &v
}

// GetNotifyOnAddedAsFollower returns the NotifyOnAddedAsFollower field value if set, zero value otherwise.
func (o *PeopleJsonPerson) GetNotifyOnAddedAsFollower() bool {
	if o == nil || o.NotifyOnAddedAsFollower == nil {
		var ret bool
		return ret
	}
	return *o.NotifyOnAddedAsFollower
}

// GetNotifyOnAddedAsFollowerOk returns a tuple with the NotifyOnAddedAsFollower field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PeopleJsonPerson) GetNotifyOnAddedAsFollowerOk() (*bool, bool) {
	if o == nil || o.NotifyOnAddedAsFollower == nil {
		return nil, false
	}
	return o.NotifyOnAddedAsFollower, true
}

// HasNotifyOnAddedAsFollower returns a boolean if a field has been set.
func (o *PeopleJsonPerson) HasNotifyOnAddedAsFollower() bool {
	if o != nil && o.NotifyOnAddedAsFollower != nil {
		return true
	}

	return false
}

// SetNotifyOnAddedAsFollower gets a reference to the given bool and assigns it to the NotifyOnAddedAsFollower field.
func (o *PeopleJsonPerson) SetNotifyOnAddedAsFollower(v bool) {
	o.NotifyOnAddedAsFollower = &v
}

// GetNotifyOnStatusUpdate returns the NotifyOnStatusUpdate field value if set, zero value otherwise.
func (o *PeopleJsonPerson) GetNotifyOnStatusUpdate() bool {
	if o == nil || o.NotifyOnStatusUpdate == nil {
		var ret bool
		return ret
	}
	return *o.NotifyOnStatusUpdate
}

// GetNotifyOnStatusUpdateOk returns a tuple with the NotifyOnStatusUpdate field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PeopleJsonPerson) GetNotifyOnStatusUpdateOk() (*bool, bool) {
	if o == nil || o.NotifyOnStatusUpdate == nil {
		return nil, false
	}
	return o.NotifyOnStatusUpdate, true
}

// HasNotifyOnStatusUpdate returns a boolean if a field has been set.
func (o *PeopleJsonPerson) HasNotifyOnStatusUpdate() bool {
	if o != nil && o.NotifyOnStatusUpdate != nil {
		return true
	}

	return false
}

// SetNotifyOnStatusUpdate gets a reference to the given bool and assigns it to the NotifyOnStatusUpdate field.
func (o *PeopleJsonPerson) SetNotifyOnStatusUpdate(v bool) {
	o.NotifyOnStatusUpdate = &v
}

// GetNotifyOnTaskComplete returns the NotifyOnTaskComplete field value if set, zero value otherwise.
func (o *PeopleJsonPerson) GetNotifyOnTaskComplete() bool {
	if o == nil || o.NotifyOnTaskComplete == nil {
		var ret bool
		return ret
	}
	return *o.NotifyOnTaskComplete
}

// GetNotifyOnTaskCompleteOk returns a tuple with the NotifyOnTaskComplete field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PeopleJsonPerson) GetNotifyOnTaskCompleteOk() (*bool, bool) {
	if o == nil || o.NotifyOnTaskComplete == nil {
		return nil, false
	}
	return o.NotifyOnTaskComplete, true
}

// HasNotifyOnTaskComplete returns a boolean if a field has been set.
func (o *PeopleJsonPerson) HasNotifyOnTaskComplete() bool {
	if o != nil && o.NotifyOnTaskComplete != nil {
		return true
	}

	return false
}

// SetNotifyOnTaskComplete gets a reference to the given bool and assigns it to the NotifyOnTaskComplete field.
func (o *PeopleJsonPerson) SetNotifyOnTaskComplete(v bool) {
	o.NotifyOnTaskComplete = &v
}

// GetPhoneNumberFax returns the PhoneNumberFax field value if set, zero value otherwise.
func (o *PeopleJsonPerson) GetPhoneNumberFax() string {
	if o == nil || o.PhoneNumberFax == nil {
		var ret string
		return ret
	}
	return *o.PhoneNumberFax
}

// GetPhoneNumberFaxOk returns a tuple with the PhoneNumberFax field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PeopleJsonPerson) GetPhoneNumberFaxOk() (*string, bool) {
	if o == nil || o.PhoneNumberFax == nil {
		return nil, false
	}
	return o.PhoneNumberFax, true
}

// HasPhoneNumberFax returns a boolean if a field has been set.
func (o *PeopleJsonPerson) HasPhoneNumberFax() bool {
	if o != nil && o.PhoneNumberFax != nil {
		return true
	}

	return false
}

// SetPhoneNumberFax gets a reference to the given string and assigns it to the PhoneNumberFax field.
func (o *PeopleJsonPerson) SetPhoneNumberFax(v string) {
	o.PhoneNumberFax = &v
}

// GetPhoneNumberHome returns the PhoneNumberHome field value if set, zero value otherwise.
func (o *PeopleJsonPerson) GetPhoneNumberHome() string {
	if o == nil || o.PhoneNumberHome == nil {
		var ret string
		return ret
	}
	return *o.PhoneNumberHome
}

// GetPhoneNumberHomeOk returns a tuple with the PhoneNumberHome field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PeopleJsonPerson) GetPhoneNumberHomeOk() (*string, bool) {
	if o == nil || o.PhoneNumberHome == nil {
		return nil, false
	}
	return o.PhoneNumberHome, true
}

// HasPhoneNumberHome returns a boolean if a field has been set.
func (o *PeopleJsonPerson) HasPhoneNumberHome() bool {
	if o != nil && o.PhoneNumberHome != nil {
		return true
	}

	return false
}

// SetPhoneNumberHome gets a reference to the given string and assigns it to the PhoneNumberHome field.
func (o *PeopleJsonPerson) SetPhoneNumberHome(v string) {
	o.PhoneNumberHome = &v
}

// GetPhoneNumberMobile returns the PhoneNumberMobile field value if set, zero value otherwise.
func (o *PeopleJsonPerson) GetPhoneNumberMobile() string {
	if o == nil || o.PhoneNumberMobile == nil {
		var ret string
		return ret
	}
	return *o.PhoneNumberMobile
}

// GetPhoneNumberMobileOk returns a tuple with the PhoneNumberMobile field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PeopleJsonPerson) GetPhoneNumberMobileOk() (*string, bool) {
	if o == nil || o.PhoneNumberMobile == nil {
		return nil, false
	}
	return o.PhoneNumberMobile, true
}

// HasPhoneNumberMobile returns a boolean if a field has been set.
func (o *PeopleJsonPerson) HasPhoneNumberMobile() bool {
	if o != nil && o.PhoneNumberMobile != nil {
		return true
	}

	return false
}

// SetPhoneNumberMobile gets a reference to the given string and assigns it to the PhoneNumberMobile field.
func (o *PeopleJsonPerson) SetPhoneNumberMobile(v string) {
	o.PhoneNumberMobile = &v
}

// GetPhoneNumberMobileCountrycode returns the PhoneNumberMobileCountrycode field value if set, zero value otherwise.
func (o *PeopleJsonPerson) GetPhoneNumberMobileCountrycode() string {
	if o == nil || o.PhoneNumberMobileCountrycode == nil {
		var ret string
		return ret
	}
	return *o.PhoneNumberMobileCountrycode
}

// GetPhoneNumberMobileCountrycodeOk returns a tuple with the PhoneNumberMobileCountrycode field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PeopleJsonPerson) GetPhoneNumberMobileCountrycodeOk() (*string, bool) {
	if o == nil || o.PhoneNumberMobileCountrycode == nil {
		return nil, false
	}
	return o.PhoneNumberMobileCountrycode, true
}

// HasPhoneNumberMobileCountrycode returns a boolean if a field has been set.
func (o *PeopleJsonPerson) HasPhoneNumberMobileCountrycode() bool {
	if o != nil && o.PhoneNumberMobileCountrycode != nil {
		return true
	}

	return false
}

// SetPhoneNumberMobileCountrycode gets a reference to the given string and assigns it to the PhoneNumberMobileCountrycode field.
func (o *PeopleJsonPerson) SetPhoneNumberMobileCountrycode(v string) {
	o.PhoneNumberMobileCountrycode = &v
}

// GetPhoneNumberMobilePrefix returns the PhoneNumberMobilePrefix field value if set, zero value otherwise.
func (o *PeopleJsonPerson) GetPhoneNumberMobilePrefix() string {
	if o == nil || o.PhoneNumberMobilePrefix == nil {
		var ret string
		return ret
	}
	return *o.PhoneNumberMobilePrefix
}

// GetPhoneNumberMobilePrefixOk returns a tuple with the PhoneNumberMobilePrefix field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PeopleJsonPerson) GetPhoneNumberMobilePrefixOk() (*string, bool) {
	if o == nil || o.PhoneNumberMobilePrefix == nil {
		return nil, false
	}
	return o.PhoneNumberMobilePrefix, true
}

// HasPhoneNumberMobilePrefix returns a boolean if a field has been set.
func (o *PeopleJsonPerson) HasPhoneNumberMobilePrefix() bool {
	if o != nil && o.PhoneNumberMobilePrefix != nil {
		return true
	}

	return false
}

// SetPhoneNumberMobilePrefix gets a reference to the given string and assigns it to the PhoneNumberMobilePrefix field.
func (o *PeopleJsonPerson) SetPhoneNumberMobilePrefix(v string) {
	o.PhoneNumberMobilePrefix = &v
}

// GetPhoneNumberOffice returns the PhoneNumberOffice field value if set, zero value otherwise.
func (o *PeopleJsonPerson) GetPhoneNumberOffice() string {
	if o == nil || o.PhoneNumberOffice == nil {
		var ret string
		return ret
	}
	return *o.PhoneNumberOffice
}

// GetPhoneNumberOfficeOk returns a tuple with the PhoneNumberOffice field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PeopleJsonPerson) GetPhoneNumberOfficeOk() (*string, bool) {
	if o == nil || o.PhoneNumberOffice == nil {
		return nil, false
	}
	return o.PhoneNumberOffice, true
}

// HasPhoneNumberOffice returns a boolean if a field has been set.
func (o *PeopleJsonPerson) HasPhoneNumberOffice() bool {
	if o != nil && o.PhoneNumberOffice != nil {
		return true
	}

	return false
}

// SetPhoneNumberOffice gets a reference to the given string and assigns it to the PhoneNumberOffice field.
func (o *PeopleJsonPerson) SetPhoneNumberOffice(v string) {
	o.PhoneNumberOffice = &v
}

// GetPhoneNumberOfficeExt returns the PhoneNumberOfficeExt field value if set, zero value otherwise.
func (o *PeopleJsonPerson) GetPhoneNumberOfficeExt() string {
	if o == nil || o.PhoneNumberOfficeExt == nil {
		var ret string
		return ret
	}
	return *o.PhoneNumberOfficeExt
}

// GetPhoneNumberOfficeExtOk returns a tuple with the PhoneNumberOfficeExt field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PeopleJsonPerson) GetPhoneNumberOfficeExtOk() (*string, bool) {
	if o == nil || o.PhoneNumberOfficeExt == nil {
		return nil, false
	}
	return o.PhoneNumberOfficeExt, true
}

// HasPhoneNumberOfficeExt returns a boolean if a field has been set.
func (o *PeopleJsonPerson) HasPhoneNumberOfficeExt() bool {
	if o != nil && o.PhoneNumberOfficeExt != nil {
		return true
	}

	return false
}

// SetPhoneNumberOfficeExt gets a reference to the given string and assigns it to the PhoneNumberOfficeExt field.
func (o *PeopleJsonPerson) SetPhoneNumberOfficeExt(v string) {
	o.PhoneNumberOfficeExt = &v
}

// GetPrivateNotes returns the PrivateNotes field value if set, zero value otherwise.
func (o *PeopleJsonPerson) GetPrivateNotes() string {
	if o == nil || o.PrivateNotes == nil {
		var ret string
		return ret
	}
	return *o.PrivateNotes
}

// GetPrivateNotesOk returns a tuple with the PrivateNotes field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PeopleJsonPerson) GetPrivateNotesOk() (*string, bool) {
	if o == nil || o.PrivateNotes == nil {
		return nil, false
	}
	return o.PrivateNotes, true
}

// HasPrivateNotes returns a boolean if a field has been set.
func (o *PeopleJsonPerson) HasPrivateNotes() bool {
	if o != nil && o.PrivateNotes != nil {
		return true
	}

	return false
}

// SetPrivateNotes gets a reference to the given string and assigns it to the PrivateNotes field.
func (o *PeopleJsonPerson) SetPrivateNotes(v string) {
	o.PrivateNotes = &v
}

// GetProfile returns the Profile field value if set, zero value otherwise.
func (o *PeopleJsonPerson) GetProfile() string {
	if o == nil || o.Profile == nil {
		var ret string
		return ret
	}
	return *o.Profile
}

// GetProfileOk returns a tuple with the Profile field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PeopleJsonPerson) GetProfileOk() (*string, bool) {
	if o == nil || o.Profile == nil {
		return nil, false
	}
	return o.Profile, true
}

// HasProfile returns a boolean if a field has been set.
func (o *PeopleJsonPerson) HasProfile() bool {
	if o != nil && o.Profile != nil {
		return true
	}

	return false
}

// SetProfile gets a reference to the given string and assigns it to the Profile field.
func (o *PeopleJsonPerson) SetProfile(v string) {
	o.Profile = &v
}

// GetReceiveDailyReports returns the ReceiveDailyReports field value if set, zero value otherwise.
func (o *PeopleJsonPerson) GetReceiveDailyReports() bool {
	if o == nil || o.ReceiveDailyReports == nil {
		var ret bool
		return ret
	}
	return *o.ReceiveDailyReports
}

// GetReceiveDailyReportsOk returns a tuple with the ReceiveDailyReports field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PeopleJsonPerson) GetReceiveDailyReportsOk() (*bool, bool) {
	if o == nil || o.ReceiveDailyReports == nil {
		return nil, false
	}
	return o.ReceiveDailyReports, true
}

// HasReceiveDailyReports returns a boolean if a field has been set.
func (o *PeopleJsonPerson) HasReceiveDailyReports() bool {
	if o != nil && o.ReceiveDailyReports != nil {
		return true
	}

	return false
}

// SetReceiveDailyReports gets a reference to the given bool and assigns it to the ReceiveDailyReports field.
func (o *PeopleJsonPerson) SetReceiveDailyReports(v bool) {
	o.ReceiveDailyReports = &v
}

// GetReceiveDailyReportsAtTime returns the ReceiveDailyReportsAtTime field value if set, zero value otherwise.
func (o *PeopleJsonPerson) GetReceiveDailyReportsAtTime() string {
	if o == nil || o.ReceiveDailyReportsAtTime == nil {
		var ret string
		return ret
	}
	return *o.ReceiveDailyReportsAtTime
}

// GetReceiveDailyReportsAtTimeOk returns a tuple with the ReceiveDailyReportsAtTime field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PeopleJsonPerson) GetReceiveDailyReportsAtTimeOk() (*string, bool) {
	if o == nil || o.ReceiveDailyReportsAtTime == nil {
		return nil, false
	}
	return o.ReceiveDailyReportsAtTime, true
}

// HasReceiveDailyReportsAtTime returns a boolean if a field has been set.
func (o *PeopleJsonPerson) HasReceiveDailyReportsAtTime() bool {
	if o != nil && o.ReceiveDailyReportsAtTime != nil {
		return true
	}

	return false
}

// SetReceiveDailyReportsAtTime gets a reference to the given string and assigns it to the ReceiveDailyReportsAtTime field.
func (o *PeopleJsonPerson) SetReceiveDailyReportsAtTime(v string) {
	o.ReceiveDailyReportsAtTime = &v
}

// GetReceiveDailyReportsAtWeekend returns the ReceiveDailyReportsAtWeekend field value if set, zero value otherwise.
func (o *PeopleJsonPerson) GetReceiveDailyReportsAtWeekend() bool {
	if o == nil || o.ReceiveDailyReportsAtWeekend == nil {
		var ret bool
		return ret
	}
	return *o.ReceiveDailyReportsAtWeekend
}

// GetReceiveDailyReportsAtWeekendOk returns a tuple with the ReceiveDailyReportsAtWeekend field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PeopleJsonPerson) GetReceiveDailyReportsAtWeekendOk() (*bool, bool) {
	if o == nil || o.ReceiveDailyReportsAtWeekend == nil {
		return nil, false
	}
	return o.ReceiveDailyReportsAtWeekend, true
}

// HasReceiveDailyReportsAtWeekend returns a boolean if a field has been set.
func (o *PeopleJsonPerson) HasReceiveDailyReportsAtWeekend() bool {
	if o != nil && o.ReceiveDailyReportsAtWeekend != nil {
		return true
	}

	return false
}

// SetReceiveDailyReportsAtWeekend gets a reference to the given bool and assigns it to the ReceiveDailyReportsAtWeekend field.
func (o *PeopleJsonPerson) SetReceiveDailyReportsAtWeekend(v bool) {
	o.ReceiveDailyReportsAtWeekend = &v
}

// GetReceiveDailyReportsIfEmpty returns the ReceiveDailyReportsIfEmpty field value if set, zero value otherwise.
func (o *PeopleJsonPerson) GetReceiveDailyReportsIfEmpty() bool {
	if o == nil || o.ReceiveDailyReportsIfEmpty == nil {
		var ret bool
		return ret
	}
	return *o.ReceiveDailyReportsIfEmpty
}

// GetReceiveDailyReportsIfEmptyOk returns a tuple with the ReceiveDailyReportsIfEmpty field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PeopleJsonPerson) GetReceiveDailyReportsIfEmptyOk() (*bool, bool) {
	if o == nil || o.ReceiveDailyReportsIfEmpty == nil {
		return nil, false
	}
	return o.ReceiveDailyReportsIfEmpty, true
}

// HasReceiveDailyReportsIfEmpty returns a boolean if a field has been set.
func (o *PeopleJsonPerson) HasReceiveDailyReportsIfEmpty() bool {
	if o != nil && o.ReceiveDailyReportsIfEmpty != nil {
		return true
	}

	return false
}

// SetReceiveDailyReportsIfEmpty gets a reference to the given bool and assigns it to the ReceiveDailyReportsIfEmpty field.
func (o *PeopleJsonPerson) SetReceiveDailyReportsIfEmpty(v bool) {
	o.ReceiveDailyReportsIfEmpty = &v
}

// GetRemoveAvatar returns the RemoveAvatar field value if set, zero value otherwise.
func (o *PeopleJsonPerson) GetRemoveAvatar() bool {
	if o == nil || o.RemoveAvatar == nil {
		var ret bool
		return ret
	}
	return *o.RemoveAvatar
}

// GetRemoveAvatarOk returns a tuple with the RemoveAvatar field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PeopleJsonPerson) GetRemoveAvatarOk() (*bool, bool) {
	if o == nil || o.RemoveAvatar == nil {
		return nil, false
	}
	return o.RemoveAvatar, true
}

// HasRemoveAvatar returns a boolean if a field has been set.
func (o *PeopleJsonPerson) HasRemoveAvatar() bool {
	if o != nil && o.RemoveAvatar != nil {
		return true
	}

	return false
}

// SetRemoveAvatar gets a reference to the given bool and assigns it to the RemoveAvatar field.
func (o *PeopleJsonPerson) SetRemoveAvatar(v bool) {
	o.RemoveAvatar = &v
}

// GetSendInvite returns the SendInvite field value if set, zero value otherwise.
func (o *PeopleJsonPerson) GetSendInvite() bool {
	if o == nil || o.SendInvite == nil {
		var ret bool
		return ret
	}
	return *o.SendInvite
}

// GetSendInviteOk returns a tuple with the SendInvite field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PeopleJsonPerson) GetSendInviteOk() (*bool, bool) {
	if o == nil || o.SendInvite == nil {
		return nil, false
	}
	return o.SendInvite, true
}

// HasSendInvite returns a boolean if a field has been set.
func (o *PeopleJsonPerson) HasSendInvite() bool {
	if o != nil && o.SendInvite != nil {
		return true
	}

	return false
}

// SetSendInvite gets a reference to the given bool and assigns it to the SendInvite field.
func (o *PeopleJsonPerson) SetSendInvite(v bool) {
	o.SendInvite = &v
}

// GetSoundAlertsEnabled returns the SoundAlertsEnabled field value if set, zero value otherwise.
func (o *PeopleJsonPerson) GetSoundAlertsEnabled() bool {
	if o == nil || o.SoundAlertsEnabled == nil {
		var ret bool
		return ret
	}
	return *o.SoundAlertsEnabled
}

// GetSoundAlertsEnabledOk returns a tuple with the SoundAlertsEnabled field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PeopleJsonPerson) GetSoundAlertsEnabledOk() (*bool, bool) {
	if o == nil || o.SoundAlertsEnabled == nil {
		return nil, false
	}
	return o.SoundAlertsEnabled, true
}

// HasSoundAlertsEnabled returns a boolean if a field has been set.
func (o *PeopleJsonPerson) HasSoundAlertsEnabled() bool {
	if o != nil && o.SoundAlertsEnabled != nil {
		return true
	}

	return false
}

// SetSoundAlertsEnabled gets a reference to the given bool and assigns it to the SoundAlertsEnabled field.
func (o *PeopleJsonPerson) SetSoundAlertsEnabled(v bool) {
	o.SoundAlertsEnabled = &v
}

// GetTextFormat returns the TextFormat field value if set, zero value otherwise.
func (o *PeopleJsonPerson) GetTextFormat() string {
	if o == nil || o.TextFormat == nil {
		var ret string
		return ret
	}
	return *o.TextFormat
}

// GetTextFormatOk returns a tuple with the TextFormat field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PeopleJsonPerson) GetTextFormatOk() (*string, bool) {
	if o == nil || o.TextFormat == nil {
		return nil, false
	}
	return o.TextFormat, true
}

// HasTextFormat returns a boolean if a field has been set.
func (o *PeopleJsonPerson) HasTextFormat() bool {
	if o != nil && o.TextFormat != nil {
		return true
	}

	return false
}

// SetTextFormat gets a reference to the given string and assigns it to the TextFormat field.
func (o *PeopleJsonPerson) SetTextFormat(v string) {
	o.TextFormat = &v
}

// GetTimeFormatId returns the TimeFormatId field value if set, zero value otherwise.
func (o *PeopleJsonPerson) GetTimeFormatId() int32 {
	if o == nil || o.TimeFormatId == nil {
		var ret int32
		return ret
	}
	return *o.TimeFormatId
}

// GetTimeFormatIdOk returns a tuple with the TimeFormatId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PeopleJsonPerson) GetTimeFormatIdOk() (*int32, bool) {
	if o == nil || o.TimeFormatId == nil {
		return nil, false
	}
	return o.TimeFormatId, true
}

// HasTimeFormatId returns a boolean if a field has been set.
func (o *PeopleJsonPerson) HasTimeFormatId() bool {
	if o != nil && o.TimeFormatId != nil {
		return true
	}

	return false
}

// SetTimeFormatId gets a reference to the given int32 and assigns it to the TimeFormatId field.
func (o *PeopleJsonPerson) SetTimeFormatId(v int32) {
	o.TimeFormatId = &v
}

// GetTimezoneId returns the TimezoneId field value if set, zero value otherwise.
func (o *PeopleJsonPerson) GetTimezoneId() int32 {
	if o == nil || o.TimezoneId == nil {
		var ret int32
		return ret
	}
	return *o.TimezoneId
}

// GetTimezoneIdOk returns a tuple with the TimezoneId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PeopleJsonPerson) GetTimezoneIdOk() (*int32, bool) {
	if o == nil || o.TimezoneId == nil {
		return nil, false
	}
	return o.TimezoneId, true
}

// HasTimezoneId returns a boolean if a field has been set.
func (o *PeopleJsonPerson) HasTimezoneId() bool {
	if o != nil && o.TimezoneId != nil {
		return true
	}

	return false
}

// SetTimezoneId gets a reference to the given int32 and assigns it to the TimezoneId field.
func (o *PeopleJsonPerson) SetTimezoneId(v int32) {
	o.TimezoneId = &v
}

// GetTitle returns the Title field value if set, zero value otherwise.
func (o *PeopleJsonPerson) GetTitle() string {
	if o == nil || o.Title == nil {
		var ret string
		return ret
	}
	return *o.Title
}

// GetTitleOk returns a tuple with the Title field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PeopleJsonPerson) GetTitleOk() (*string, bool) {
	if o == nil || o.Title == nil {
		return nil, false
	}
	return o.Title, true
}

// HasTitle returns a boolean if a field has been set.
func (o *PeopleJsonPerson) HasTitle() bool {
	if o != nil && o.Title != nil {
		return true
	}

	return false
}

// SetTitle gets a reference to the given string and assigns it to the Title field.
func (o *PeopleJsonPerson) SetTitle(v string) {
	o.Title = &v
}

// GetUseShorthandDurations returns the UseShorthandDurations field value if set, zero value otherwise.
func (o *PeopleJsonPerson) GetUseShorthandDurations() bool {
	if o == nil || o.UseShorthandDurations == nil {
		var ret bool
		return ret
	}
	return *o.UseShorthandDurations
}

// GetUseShorthandDurationsOk returns a tuple with the UseShorthandDurations field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PeopleJsonPerson) GetUseShorthandDurationsOk() (*bool, bool) {
	if o == nil || o.UseShorthandDurations == nil {
		return nil, false
	}
	return o.UseShorthandDurations, true
}

// HasUseShorthandDurations returns a boolean if a field has been set.
func (o *PeopleJsonPerson) HasUseShorthandDurations() bool {
	if o != nil && o.UseShorthandDurations != nil {
		return true
	}

	return false
}

// SetUseShorthandDurations gets a reference to the given bool and assigns it to the UseShorthandDurations field.
func (o *PeopleJsonPerson) SetUseShorthandDurations(v bool) {
	o.UseShorthandDurations = &v
}

// GetUserType returns the UserType field value if set, zero value otherwise.
func (o *PeopleJsonPerson) GetUserType() string {
	if o == nil || o.UserType == nil {
		var ret string
		return ret
	}
	return *o.UserType
}

// GetUserTypeOk returns a tuple with the UserType field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PeopleJsonPerson) GetUserTypeOk() (*string, bool) {
	if o == nil || o.UserType == nil {
		return nil, false
	}
	return o.UserType, true
}

// HasUserType returns a boolean if a field has been set.
func (o *PeopleJsonPerson) HasUserType() bool {
	if o != nil && o.UserType != nil {
		return true
	}

	return false
}

// SetUserType gets a reference to the given string and assigns it to the UserType field.
func (o *PeopleJsonPerson) SetUserType(v string) {
	o.UserType = &v
}

// GetUserFacebook returns the UserFacebook field value if set, zero value otherwise.
func (o *PeopleJsonPerson) GetUserFacebook() string {
	if o == nil || o.UserFacebook == nil {
		var ret string
		return ret
	}
	return *o.UserFacebook
}

// GetUserFacebookOk returns a tuple with the UserFacebook field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PeopleJsonPerson) GetUserFacebookOk() (*string, bool) {
	if o == nil || o.UserFacebook == nil {
		return nil, false
	}
	return o.UserFacebook, true
}

// HasUserFacebook returns a boolean if a field has been set.
func (o *PeopleJsonPerson) HasUserFacebook() bool {
	if o != nil && o.UserFacebook != nil {
		return true
	}

	return false
}

// SetUserFacebook gets a reference to the given string and assigns it to the UserFacebook field.
func (o *PeopleJsonPerson) SetUserFacebook(v string) {
	o.UserFacebook = &v
}

// GetUserGoogleplus returns the UserGoogleplus field value if set, zero value otherwise.
func (o *PeopleJsonPerson) GetUserGoogleplus() string {
	if o == nil || o.UserGoogleplus == nil {
		var ret string
		return ret
	}
	return *o.UserGoogleplus
}

// GetUserGoogleplusOk returns a tuple with the UserGoogleplus field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PeopleJsonPerson) GetUserGoogleplusOk() (*string, bool) {
	if o == nil || o.UserGoogleplus == nil {
		return nil, false
	}
	return o.UserGoogleplus, true
}

// HasUserGoogleplus returns a boolean if a field has been set.
func (o *PeopleJsonPerson) HasUserGoogleplus() bool {
	if o != nil && o.UserGoogleplus != nil {
		return true
	}

	return false
}

// SetUserGoogleplus gets a reference to the given string and assigns it to the UserGoogleplus field.
func (o *PeopleJsonPerson) SetUserGoogleplus(v string) {
	o.UserGoogleplus = &v
}

// GetUserLinkedin returns the UserLinkedin field value if set, zero value otherwise.
func (o *PeopleJsonPerson) GetUserLinkedin() string {
	if o == nil || o.UserLinkedin == nil {
		var ret string
		return ret
	}
	return *o.UserLinkedin
}

// GetUserLinkedinOk returns a tuple with the UserLinkedin field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PeopleJsonPerson) GetUserLinkedinOk() (*string, bool) {
	if o == nil || o.UserLinkedin == nil {
		return nil, false
	}
	return o.UserLinkedin, true
}

// HasUserLinkedin returns a boolean if a field has been set.
func (o *PeopleJsonPerson) HasUserLinkedin() bool {
	if o != nil && o.UserLinkedin != nil {
		return true
	}

	return false
}

// SetUserLinkedin gets a reference to the given string and assigns it to the UserLinkedin field.
func (o *PeopleJsonPerson) SetUserLinkedin(v string) {
	o.UserLinkedin = &v
}

// GetUserReceiveMyNotificationsOnly returns the UserReceiveMyNotificationsOnly field value if set, zero value otherwise.
func (o *PeopleJsonPerson) GetUserReceiveMyNotificationsOnly() bool {
	if o == nil || o.UserReceiveMyNotificationsOnly == nil {
		var ret bool
		return ret
	}
	return *o.UserReceiveMyNotificationsOnly
}

// GetUserReceiveMyNotificationsOnlyOk returns a tuple with the UserReceiveMyNotificationsOnly field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PeopleJsonPerson) GetUserReceiveMyNotificationsOnlyOk() (*bool, bool) {
	if o == nil || o.UserReceiveMyNotificationsOnly == nil {
		return nil, false
	}
	return o.UserReceiveMyNotificationsOnly, true
}

// HasUserReceiveMyNotificationsOnly returns a boolean if a field has been set.
func (o *PeopleJsonPerson) HasUserReceiveMyNotificationsOnly() bool {
	if o != nil && o.UserReceiveMyNotificationsOnly != nil {
		return true
	}

	return false
}

// SetUserReceiveMyNotificationsOnly gets a reference to the given bool and assigns it to the UserReceiveMyNotificationsOnly field.
func (o *PeopleJsonPerson) SetUserReceiveMyNotificationsOnly(v bool) {
	o.UserReceiveMyNotificationsOnly = &v
}

// GetUserReceiveNotifyWarnings returns the UserReceiveNotifyWarnings field value if set, zero value otherwise.
func (o *PeopleJsonPerson) GetUserReceiveNotifyWarnings() bool {
	if o == nil || o.UserReceiveNotifyWarnings == nil {
		var ret bool
		return ret
	}
	return *o.UserReceiveNotifyWarnings
}

// GetUserReceiveNotifyWarningsOk returns a tuple with the UserReceiveNotifyWarnings field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PeopleJsonPerson) GetUserReceiveNotifyWarningsOk() (*bool, bool) {
	if o == nil || o.UserReceiveNotifyWarnings == nil {
		return nil, false
	}
	return o.UserReceiveNotifyWarnings, true
}

// HasUserReceiveNotifyWarnings returns a boolean if a field has been set.
func (o *PeopleJsonPerson) HasUserReceiveNotifyWarnings() bool {
	if o != nil && o.UserReceiveNotifyWarnings != nil {
		return true
	}

	return false
}

// SetUserReceiveNotifyWarnings gets a reference to the given bool and assigns it to the UserReceiveNotifyWarnings field.
func (o *PeopleJsonPerson) SetUserReceiveNotifyWarnings(v bool) {
	o.UserReceiveNotifyWarnings = &v
}

// GetUserTwitterName returns the UserTwitterName field value if set, zero value otherwise.
func (o *PeopleJsonPerson) GetUserTwitterName() string {
	if o == nil || o.UserTwitterName == nil {
		var ret string
		return ret
	}
	return *o.UserTwitterName
}

// GetUserTwitterNameOk returns a tuple with the UserTwitterName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PeopleJsonPerson) GetUserTwitterNameOk() (*string, bool) {
	if o == nil || o.UserTwitterName == nil {
		return nil, false
	}
	return o.UserTwitterName, true
}

// HasUserTwitterName returns a boolean if a field has been set.
func (o *PeopleJsonPerson) HasUserTwitterName() bool {
	if o != nil && o.UserTwitterName != nil {
		return true
	}

	return false
}

// SetUserTwitterName gets a reference to the given string and assigns it to the UserTwitterName field.
func (o *PeopleJsonPerson) SetUserTwitterName(v string) {
	o.UserTwitterName = &v
}

// GetUserWebsite returns the UserWebsite field value if set, zero value otherwise.
func (o *PeopleJsonPerson) GetUserWebsite() string {
	if o == nil || o.UserWebsite == nil {
		var ret string
		return ret
	}
	return *o.UserWebsite
}

// GetUserWebsiteOk returns a tuple with the UserWebsite field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PeopleJsonPerson) GetUserWebsiteOk() (*string, bool) {
	if o == nil || o.UserWebsite == nil {
		return nil, false
	}
	return o.UserWebsite, true
}

// HasUserWebsite returns a boolean if a field has been set.
func (o *PeopleJsonPerson) HasUserWebsite() bool {
	if o != nil && o.UserWebsite != nil {
		return true
	}

	return false
}

// SetUserWebsite gets a reference to the given string and assigns it to the UserWebsite field.
func (o *PeopleJsonPerson) SetUserWebsite(v string) {
	o.UserWebsite = &v
}

func (o PeopleJsonPerson) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.Address != nil {
		toSerialize["address"] = o.Address
	}
	if o.Administrator != nil {
		toSerialize["administrator"] = o.Administrator
	}
	if o.AllowEmailNotifications != nil {
		toSerialize["allowEmailNotifications"] = o.AllowEmailNotifications
	}
	if o.AutoGiveProjectAccess != nil {
		toSerialize["autoGiveProjectAccess"] = o.AutoGiveProjectAccess
	}
	if o.AvatarPendingFileRef != nil {
		toSerialize["avatarPendingFileRef"] = o.AvatarPendingFileRef
	}
	if o.CalendarStartsOnSunday != nil {
		toSerialize["calendarStartsOnSunday"] = o.CalendarStartsOnSunday
	}
	if o.CanAccessPortfolio != nil {
		toSerialize["canAccessPortfolio"] = o.CanAccessPortfolio
	}
	if o.CanAccessTemplates != nil {
		toSerialize["canAccessTemplates"] = o.CanAccessTemplates
	}
	if o.CanAddProjects != nil {
		toSerialize["canAddProjects"] = o.CanAddProjects
	}
	if o.CanManagePeople != nil {
		toSerialize["canManagePeople"] = o.CanManagePeople
	}
	if o.CanManagePortfolio != nil {
		toSerialize["canManagePortfolio"] = o.CanManagePortfolio
	}
	if o.ChangeForEveryone != nil {
		toSerialize["changeForEveryone"] = o.ChangeForEveryone
	}
	if o.CompanyId != nil {
		toSerialize["company-id"] = o.CompanyId
	}
	if o.DailyReportDaysFilter != nil {
		toSerialize["dailyReportDaysFilter"] = o.DailyReportDaysFilter
	}
	if o.DailyReportSort != nil {
		toSerialize["dailyReportSort"] = o.DailyReportSort
	}
	if o.DateFormatId != nil {
		toSerialize["dateFormatId"] = o.DateFormatId
	}
	if o.EmailAddress != nil {
		toSerialize["email-address"] = o.EmailAddress
	}
	if o.EmailAlt1 != nil {
		toSerialize["email-alt-1"] = o.EmailAlt1
	}
	if o.EmailAlt2 != nil {
		toSerialize["email-alt-2"] = o.EmailAlt2
	}
	if o.EmailAlt3 != nil {
		toSerialize["email-alt-3"] = o.EmailAlt3
	}
	if o.FirstName != nil {
		toSerialize["first-name"] = o.FirstName
	}
	if o.GetUserDetails != nil {
		toSerialize["getUserDetails"] = o.GetUserDetails
	}
	if o.ImHandle != nil {
		toSerialize["im-handle"] = o.ImHandle
	}
	if o.ImService != nil {
		toSerialize["im-service"] = o.ImService
	}
	if o.Language != nil {
		toSerialize["language"] = o.Language
	}
	if o.LastName != nil {
		toSerialize["last-name"] = o.LastName
	}
	if o.LengthOfDay != nil {
		toSerialize["lengthOfDay"] = o.LengthOfDay
	}
	if o.NotifyOnAddedAsFollower != nil {
		toSerialize["notify-on-added-as-follower"] = o.NotifyOnAddedAsFollower
	}
	if o.NotifyOnStatusUpdate != nil {
		toSerialize["notify-on-status-update"] = o.NotifyOnStatusUpdate
	}
	if o.NotifyOnTaskComplete != nil {
		toSerialize["notifyOnTaskComplete"] = o.NotifyOnTaskComplete
	}
	if o.PhoneNumberFax != nil {
		toSerialize["phone-number-fax"] = o.PhoneNumberFax
	}
	if o.PhoneNumberHome != nil {
		toSerialize["phone-number-home"] = o.PhoneNumberHome
	}
	if o.PhoneNumberMobile != nil {
		toSerialize["phone-number-mobile"] = o.PhoneNumberMobile
	}
	if o.PhoneNumberMobileCountrycode != nil {
		toSerialize["phone-number-mobile-countrycode"] = o.PhoneNumberMobileCountrycode
	}
	if o.PhoneNumberMobilePrefix != nil {
		toSerialize["phone-number-mobile-prefix"] = o.PhoneNumberMobilePrefix
	}
	if o.PhoneNumberOffice != nil {
		toSerialize["phone-number-office"] = o.PhoneNumberOffice
	}
	if o.PhoneNumberOfficeExt != nil {
		toSerialize["phone-number-office-ext"] = o.PhoneNumberOfficeExt
	}
	if o.PrivateNotes != nil {
		toSerialize["privateNotes"] = o.PrivateNotes
	}
	if o.Profile != nil {
		toSerialize["profile"] = o.Profile
	}
	if o.ReceiveDailyReports != nil {
		toSerialize["receiveDailyReports"] = o.ReceiveDailyReports
	}
	if o.ReceiveDailyReportsAtTime != nil {
		toSerialize["receiveDailyReportsAtTime"] = o.ReceiveDailyReportsAtTime
	}
	if o.ReceiveDailyReportsAtWeekend != nil {
		toSerialize["receiveDailyReportsAtWeekend"] = o.ReceiveDailyReportsAtWeekend
	}
	if o.ReceiveDailyReportsIfEmpty != nil {
		toSerialize["receiveDailyReportsIfEmpty"] = o.ReceiveDailyReportsIfEmpty
	}
	if o.RemoveAvatar != nil {
		toSerialize["removeAvatar"] = o.RemoveAvatar
	}
	if o.SendInvite != nil {
		toSerialize["sendInvite"] = o.SendInvite
	}
	if o.SoundAlertsEnabled != nil {
		toSerialize["soundAlertsEnabled"] = o.SoundAlertsEnabled
	}
	if o.TextFormat != nil {
		toSerialize["textFormat"] = o.TextFormat
	}
	if o.TimeFormatId != nil {
		toSerialize["timeFormatId"] = o.TimeFormatId
	}
	if o.TimezoneId != nil {
		toSerialize["timezoneId"] = o.TimezoneId
	}
	if o.Title != nil {
		toSerialize["title"] = o.Title
	}
	if o.UseShorthandDurations != nil {
		toSerialize["useShorthandDurations"] = o.UseShorthandDurations
	}
	if o.UserType != nil {
		toSerialize["user-type"] = o.UserType
	}
	if o.UserFacebook != nil {
		toSerialize["userFacebook"] = o.UserFacebook
	}
	if o.UserGoogleplus != nil {
		toSerialize["userGoogleplus"] = o.UserGoogleplus
	}
	if o.UserLinkedin != nil {
		toSerialize["userLinkedin"] = o.UserLinkedin
	}
	if o.UserReceiveMyNotificationsOnly != nil {
		toSerialize["userReceiveMyNotificationsOnly"] = o.UserReceiveMyNotificationsOnly
	}
	if o.UserReceiveNotifyWarnings != nil {
		toSerialize["userReceiveNotifyWarnings"] = o.UserReceiveNotifyWarnings
	}
	if o.UserTwitterName != nil {
		toSerialize["userTwitterName"] = o.UserTwitterName
	}
	if o.UserWebsite != nil {
		toSerialize["userWebsite"] = o.UserWebsite
	}
	return json.Marshal(toSerialize)
}

type NullablePeopleJsonPerson struct {
	value *PeopleJsonPerson
	isSet bool
}

func (v NullablePeopleJsonPerson) Get() *PeopleJsonPerson {
	return v.value
}

func (v *NullablePeopleJsonPerson) Set(val *PeopleJsonPerson) {
	v.value = val
	v.isSet = true
}

func (v NullablePeopleJsonPerson) IsSet() bool {
	return v.isSet
}

func (v *NullablePeopleJsonPerson) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullablePeopleJsonPerson(val *PeopleJsonPerson) *NullablePeopleJsonPerson {
	return &NullablePeopleJsonPerson{value: val, isSet: true}
}

func (v NullablePeopleJsonPerson) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullablePeopleJsonPerson) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


