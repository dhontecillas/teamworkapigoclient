/*
 * Teamwork.com Projects API
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * API version: 3.0
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package projv3

import (
	"encoding/json"
)

// ViewRelatedItems RelatedItems represents the items a file can be related to.
type ViewRelatedItems struct {
	Comments *[]int32 `json:"comments,omitempty"`
	Messages *[]int32 `json:"messages,omitempty"`
	Tasks *[]int32 `json:"tasks,omitempty"`
}

// NewViewRelatedItems instantiates a new ViewRelatedItems object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewViewRelatedItems() *ViewRelatedItems {
	this := ViewRelatedItems{}
	return &this
}

// NewViewRelatedItemsWithDefaults instantiates a new ViewRelatedItems object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewViewRelatedItemsWithDefaults() *ViewRelatedItems {
	this := ViewRelatedItems{}
	return &this
}

// GetComments returns the Comments field value if set, zero value otherwise.
func (o *ViewRelatedItems) GetComments() []int32 {
	if o == nil || o.Comments == nil {
		var ret []int32
		return ret
	}
	return *o.Comments
}

// GetCommentsOk returns a tuple with the Comments field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ViewRelatedItems) GetCommentsOk() (*[]int32, bool) {
	if o == nil || o.Comments == nil {
		return nil, false
	}
	return o.Comments, true
}

// HasComments returns a boolean if a field has been set.
func (o *ViewRelatedItems) HasComments() bool {
	if o != nil && o.Comments != nil {
		return true
	}

	return false
}

// SetComments gets a reference to the given []int32 and assigns it to the Comments field.
func (o *ViewRelatedItems) SetComments(v []int32) {
	o.Comments = &v
}

// GetMessages returns the Messages field value if set, zero value otherwise.
func (o *ViewRelatedItems) GetMessages() []int32 {
	if o == nil || o.Messages == nil {
		var ret []int32
		return ret
	}
	return *o.Messages
}

// GetMessagesOk returns a tuple with the Messages field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ViewRelatedItems) GetMessagesOk() (*[]int32, bool) {
	if o == nil || o.Messages == nil {
		return nil, false
	}
	return o.Messages, true
}

// HasMessages returns a boolean if a field has been set.
func (o *ViewRelatedItems) HasMessages() bool {
	if o != nil && o.Messages != nil {
		return true
	}

	return false
}

// SetMessages gets a reference to the given []int32 and assigns it to the Messages field.
func (o *ViewRelatedItems) SetMessages(v []int32) {
	o.Messages = &v
}

// GetTasks returns the Tasks field value if set, zero value otherwise.
func (o *ViewRelatedItems) GetTasks() []int32 {
	if o == nil || o.Tasks == nil {
		var ret []int32
		return ret
	}
	return *o.Tasks
}

// GetTasksOk returns a tuple with the Tasks field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ViewRelatedItems) GetTasksOk() (*[]int32, bool) {
	if o == nil || o.Tasks == nil {
		return nil, false
	}
	return o.Tasks, true
}

// HasTasks returns a boolean if a field has been set.
func (o *ViewRelatedItems) HasTasks() bool {
	if o != nil && o.Tasks != nil {
		return true
	}

	return false
}

// SetTasks gets a reference to the given []int32 and assigns it to the Tasks field.
func (o *ViewRelatedItems) SetTasks(v []int32) {
	o.Tasks = &v
}

func (o ViewRelatedItems) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.Comments != nil {
		toSerialize["comments"] = o.Comments
	}
	if o.Messages != nil {
		toSerialize["messages"] = o.Messages
	}
	if o.Tasks != nil {
		toSerialize["tasks"] = o.Tasks
	}
	return json.Marshal(toSerialize)
}

type NullableViewRelatedItems struct {
	value *ViewRelatedItems
	isSet bool
}

func (v NullableViewRelatedItems) Get() *ViewRelatedItems {
	return v.value
}

func (v *NullableViewRelatedItems) Set(val *ViewRelatedItems) {
	v.value = val
	v.isSet = true
}

func (v NullableViewRelatedItems) IsSet() bool {
	return v.isSet
}

func (v *NullableViewRelatedItems) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableViewRelatedItems(val *ViewRelatedItems) *NullableViewRelatedItems {
	return &NullableViewRelatedItems{value: val, isSet: true}
}

func (v NullableViewRelatedItems) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableViewRelatedItems) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


