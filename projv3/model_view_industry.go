/*
 * Teamwork.com Projects API
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * API version: 3.0
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package projv3

import (
	"encoding/json"
)

// ViewIndustry Industry contains all the information returned from an industry.
type ViewIndustry struct {
	DisplayOrder *int32 `json:"displayOrder,omitempty"`
	Id *int32 `json:"id,omitempty"`
	IndustryCategory *ViewRelationship `json:"industryCategory,omitempty"`
	IndustryCategoryId *int32 `json:"industryCategoryId,omitempty"`
	IsActive *bool `json:"isActive,omitempty"`
	IsPublished *bool `json:"isPublished,omitempty"`
	Name *string `json:"name,omitempty"`
}

// NewViewIndustry instantiates a new ViewIndustry object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewViewIndustry() *ViewIndustry {
	this := ViewIndustry{}
	return &this
}

// NewViewIndustryWithDefaults instantiates a new ViewIndustry object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewViewIndustryWithDefaults() *ViewIndustry {
	this := ViewIndustry{}
	return &this
}

// GetDisplayOrder returns the DisplayOrder field value if set, zero value otherwise.
func (o *ViewIndustry) GetDisplayOrder() int32 {
	if o == nil || o.DisplayOrder == nil {
		var ret int32
		return ret
	}
	return *o.DisplayOrder
}

// GetDisplayOrderOk returns a tuple with the DisplayOrder field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ViewIndustry) GetDisplayOrderOk() (*int32, bool) {
	if o == nil || o.DisplayOrder == nil {
		return nil, false
	}
	return o.DisplayOrder, true
}

// HasDisplayOrder returns a boolean if a field has been set.
func (o *ViewIndustry) HasDisplayOrder() bool {
	if o != nil && o.DisplayOrder != nil {
		return true
	}

	return false
}

// SetDisplayOrder gets a reference to the given int32 and assigns it to the DisplayOrder field.
func (o *ViewIndustry) SetDisplayOrder(v int32) {
	o.DisplayOrder = &v
}

// GetId returns the Id field value if set, zero value otherwise.
func (o *ViewIndustry) GetId() int32 {
	if o == nil || o.Id == nil {
		var ret int32
		return ret
	}
	return *o.Id
}

// GetIdOk returns a tuple with the Id field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ViewIndustry) GetIdOk() (*int32, bool) {
	if o == nil || o.Id == nil {
		return nil, false
	}
	return o.Id, true
}

// HasId returns a boolean if a field has been set.
func (o *ViewIndustry) HasId() bool {
	if o != nil && o.Id != nil {
		return true
	}

	return false
}

// SetId gets a reference to the given int32 and assigns it to the Id field.
func (o *ViewIndustry) SetId(v int32) {
	o.Id = &v
}

// GetIndustryCategory returns the IndustryCategory field value if set, zero value otherwise.
func (o *ViewIndustry) GetIndustryCategory() ViewRelationship {
	if o == nil || o.IndustryCategory == nil {
		var ret ViewRelationship
		return ret
	}
	return *o.IndustryCategory
}

// GetIndustryCategoryOk returns a tuple with the IndustryCategory field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ViewIndustry) GetIndustryCategoryOk() (*ViewRelationship, bool) {
	if o == nil || o.IndustryCategory == nil {
		return nil, false
	}
	return o.IndustryCategory, true
}

// HasIndustryCategory returns a boolean if a field has been set.
func (o *ViewIndustry) HasIndustryCategory() bool {
	if o != nil && o.IndustryCategory != nil {
		return true
	}

	return false
}

// SetIndustryCategory gets a reference to the given ViewRelationship and assigns it to the IndustryCategory field.
func (o *ViewIndustry) SetIndustryCategory(v ViewRelationship) {
	o.IndustryCategory = &v
}

// GetIndustryCategoryId returns the IndustryCategoryId field value if set, zero value otherwise.
func (o *ViewIndustry) GetIndustryCategoryId() int32 {
	if o == nil || o.IndustryCategoryId == nil {
		var ret int32
		return ret
	}
	return *o.IndustryCategoryId
}

// GetIndustryCategoryIdOk returns a tuple with the IndustryCategoryId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ViewIndustry) GetIndustryCategoryIdOk() (*int32, bool) {
	if o == nil || o.IndustryCategoryId == nil {
		return nil, false
	}
	return o.IndustryCategoryId, true
}

// HasIndustryCategoryId returns a boolean if a field has been set.
func (o *ViewIndustry) HasIndustryCategoryId() bool {
	if o != nil && o.IndustryCategoryId != nil {
		return true
	}

	return false
}

// SetIndustryCategoryId gets a reference to the given int32 and assigns it to the IndustryCategoryId field.
func (o *ViewIndustry) SetIndustryCategoryId(v int32) {
	o.IndustryCategoryId = &v
}

// GetIsActive returns the IsActive field value if set, zero value otherwise.
func (o *ViewIndustry) GetIsActive() bool {
	if o == nil || o.IsActive == nil {
		var ret bool
		return ret
	}
	return *o.IsActive
}

// GetIsActiveOk returns a tuple with the IsActive field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ViewIndustry) GetIsActiveOk() (*bool, bool) {
	if o == nil || o.IsActive == nil {
		return nil, false
	}
	return o.IsActive, true
}

// HasIsActive returns a boolean if a field has been set.
func (o *ViewIndustry) HasIsActive() bool {
	if o != nil && o.IsActive != nil {
		return true
	}

	return false
}

// SetIsActive gets a reference to the given bool and assigns it to the IsActive field.
func (o *ViewIndustry) SetIsActive(v bool) {
	o.IsActive = &v
}

// GetIsPublished returns the IsPublished field value if set, zero value otherwise.
func (o *ViewIndustry) GetIsPublished() bool {
	if o == nil || o.IsPublished == nil {
		var ret bool
		return ret
	}
	return *o.IsPublished
}

// GetIsPublishedOk returns a tuple with the IsPublished field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ViewIndustry) GetIsPublishedOk() (*bool, bool) {
	if o == nil || o.IsPublished == nil {
		return nil, false
	}
	return o.IsPublished, true
}

// HasIsPublished returns a boolean if a field has been set.
func (o *ViewIndustry) HasIsPublished() bool {
	if o != nil && o.IsPublished != nil {
		return true
	}

	return false
}

// SetIsPublished gets a reference to the given bool and assigns it to the IsPublished field.
func (o *ViewIndustry) SetIsPublished(v bool) {
	o.IsPublished = &v
}

// GetName returns the Name field value if set, zero value otherwise.
func (o *ViewIndustry) GetName() string {
	if o == nil || o.Name == nil {
		var ret string
		return ret
	}
	return *o.Name
}

// GetNameOk returns a tuple with the Name field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ViewIndustry) GetNameOk() (*string, bool) {
	if o == nil || o.Name == nil {
		return nil, false
	}
	return o.Name, true
}

// HasName returns a boolean if a field has been set.
func (o *ViewIndustry) HasName() bool {
	if o != nil && o.Name != nil {
		return true
	}

	return false
}

// SetName gets a reference to the given string and assigns it to the Name field.
func (o *ViewIndustry) SetName(v string) {
	o.Name = &v
}

func (o ViewIndustry) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.DisplayOrder != nil {
		toSerialize["displayOrder"] = o.DisplayOrder
	}
	if o.Id != nil {
		toSerialize["id"] = o.Id
	}
	if o.IndustryCategory != nil {
		toSerialize["industryCategory"] = o.IndustryCategory
	}
	if o.IndustryCategoryId != nil {
		toSerialize["industryCategoryId"] = o.IndustryCategoryId
	}
	if o.IsActive != nil {
		toSerialize["isActive"] = o.IsActive
	}
	if o.IsPublished != nil {
		toSerialize["isPublished"] = o.IsPublished
	}
	if o.Name != nil {
		toSerialize["name"] = o.Name
	}
	return json.Marshal(toSerialize)
}

type NullableViewIndustry struct {
	value *ViewIndustry
	isSet bool
}

func (v NullableViewIndustry) Get() *ViewIndustry {
	return v.value
}

func (v *NullableViewIndustry) Set(val *ViewIndustry) {
	v.value = val
	v.isSet = true
}

func (v NullableViewIndustry) IsSet() bool {
	return v.isSet
}

func (v *NullableViewIndustry) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableViewIndustry(val *ViewIndustry) *NullableViewIndustry {
	return &NullableViewIndustry{value: val, isSet: true}
}

func (v NullableViewIndustry) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableViewIndustry) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


