/*
 * Teamwork Projects API
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * API version: 
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package pmv1

import (
	"encoding/json"
)

// WebhooksIdJsonWebhook struct for WebhooksIdJsonWebhook
type WebhooksIdJsonWebhook struct {
	Event *string `json:"event,omitempty"`
	Status *string `json:"status,omitempty"`
	Url *string `json:"url,omitempty"`
}

// NewWebhooksIdJsonWebhook instantiates a new WebhooksIdJsonWebhook object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewWebhooksIdJsonWebhook() *WebhooksIdJsonWebhook {
	this := WebhooksIdJsonWebhook{}
	return &this
}

// NewWebhooksIdJsonWebhookWithDefaults instantiates a new WebhooksIdJsonWebhook object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewWebhooksIdJsonWebhookWithDefaults() *WebhooksIdJsonWebhook {
	this := WebhooksIdJsonWebhook{}
	return &this
}

// GetEvent returns the Event field value if set, zero value otherwise.
func (o *WebhooksIdJsonWebhook) GetEvent() string {
	if o == nil || o.Event == nil {
		var ret string
		return ret
	}
	return *o.Event
}

// GetEventOk returns a tuple with the Event field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *WebhooksIdJsonWebhook) GetEventOk() (*string, bool) {
	if o == nil || o.Event == nil {
		return nil, false
	}
	return o.Event, true
}

// HasEvent returns a boolean if a field has been set.
func (o *WebhooksIdJsonWebhook) HasEvent() bool {
	if o != nil && o.Event != nil {
		return true
	}

	return false
}

// SetEvent gets a reference to the given string and assigns it to the Event field.
func (o *WebhooksIdJsonWebhook) SetEvent(v string) {
	o.Event = &v
}

// GetStatus returns the Status field value if set, zero value otherwise.
func (o *WebhooksIdJsonWebhook) GetStatus() string {
	if o == nil || o.Status == nil {
		var ret string
		return ret
	}
	return *o.Status
}

// GetStatusOk returns a tuple with the Status field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *WebhooksIdJsonWebhook) GetStatusOk() (*string, bool) {
	if o == nil || o.Status == nil {
		return nil, false
	}
	return o.Status, true
}

// HasStatus returns a boolean if a field has been set.
func (o *WebhooksIdJsonWebhook) HasStatus() bool {
	if o != nil && o.Status != nil {
		return true
	}

	return false
}

// SetStatus gets a reference to the given string and assigns it to the Status field.
func (o *WebhooksIdJsonWebhook) SetStatus(v string) {
	o.Status = &v
}

// GetUrl returns the Url field value if set, zero value otherwise.
func (o *WebhooksIdJsonWebhook) GetUrl() string {
	if o == nil || o.Url == nil {
		var ret string
		return ret
	}
	return *o.Url
}

// GetUrlOk returns a tuple with the Url field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *WebhooksIdJsonWebhook) GetUrlOk() (*string, bool) {
	if o == nil || o.Url == nil {
		return nil, false
	}
	return o.Url, true
}

// HasUrl returns a boolean if a field has been set.
func (o *WebhooksIdJsonWebhook) HasUrl() bool {
	if o != nil && o.Url != nil {
		return true
	}

	return false
}

// SetUrl gets a reference to the given string and assigns it to the Url field.
func (o *WebhooksIdJsonWebhook) SetUrl(v string) {
	o.Url = &v
}

func (o WebhooksIdJsonWebhook) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.Event != nil {
		toSerialize["event"] = o.Event
	}
	if o.Status != nil {
		toSerialize["status"] = o.Status
	}
	if o.Url != nil {
		toSerialize["url"] = o.Url
	}
	return json.Marshal(toSerialize)
}

type NullableWebhooksIdJsonWebhook struct {
	value *WebhooksIdJsonWebhook
	isSet bool
}

func (v NullableWebhooksIdJsonWebhook) Get() *WebhooksIdJsonWebhook {
	return v.value
}

func (v *NullableWebhooksIdJsonWebhook) Set(val *WebhooksIdJsonWebhook) {
	v.value = val
	v.isSet = true
}

func (v NullableWebhooksIdJsonWebhook) IsSet() bool {
	return v.isSet
}

func (v *NullableWebhooksIdJsonWebhook) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableWebhooksIdJsonWebhook(val *WebhooksIdJsonWebhook) *NullableWebhooksIdJsonWebhook {
	return &NullableWebhooksIdJsonWebhook{value: val, isSet: true}
}

func (v NullableWebhooksIdJsonWebhook) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableWebhooksIdJsonWebhook) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


