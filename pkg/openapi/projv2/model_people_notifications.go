/*
 * Teamwork.com Projects API
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * API version: 3.0
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package projv2

import (
	"encoding/json"
)

// PeopleNotifications struct for PeopleNotifications
type PeopleNotifications struct {
	DailyReportDaysFilter *int32 `json:"dailyReportDaysFilter,omitempty"`
	DailyReportEventsType *string `json:"dailyReportEventsType,omitempty"`
	DailyReportIncludeStartDate *bool `json:"dailyReportIncludeStartDate,omitempty"`
	DailyReportSortBy *string `json:"dailyReportSortBy,omitempty"`
	NotifyOnAddedAsFollower *bool `json:"notifyOnAddedAsFollower,omitempty"`
	NotifyOnStatusUpdate *bool `json:"notifyOnStatusUpdate,omitempty"`
	NotifyOnTaskComplete *bool `json:"notifyOnTaskComplete,omitempty"`
	ReceiveDailyReports *bool `json:"receiveDailyReports,omitempty"`
	ReceiveDailyReportsAtTime *int32 `json:"receiveDailyReportsAtTime,omitempty"`
	ReceiveDailyReportsAtWeekend *bool `json:"receiveDailyReportsAtWeekend,omitempty"`
	ReceiveDailyReportsIfEmpty *bool `json:"receiveDailyReportsIfEmpty,omitempty"`
	ReceiveMyNotificationsOnly *bool `json:"receiveMyNotificationsOnly,omitempty"`
	ReceiveNotifyWarnings *bool `json:"receiveNotifyWarnings,omitempty"`
	SoundAlertsEnabled *bool `json:"soundAlertsEnabled,omitempty"`
}

// NewPeopleNotifications instantiates a new PeopleNotifications object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewPeopleNotifications() *PeopleNotifications {
	this := PeopleNotifications{}
	return &this
}

// NewPeopleNotificationsWithDefaults instantiates a new PeopleNotifications object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewPeopleNotificationsWithDefaults() *PeopleNotifications {
	this := PeopleNotifications{}
	return &this
}

// GetDailyReportDaysFilter returns the DailyReportDaysFilter field value if set, zero value otherwise.
func (o *PeopleNotifications) GetDailyReportDaysFilter() int32 {
	if o == nil || o.DailyReportDaysFilter == nil {
		var ret int32
		return ret
	}
	return *o.DailyReportDaysFilter
}

// GetDailyReportDaysFilterOk returns a tuple with the DailyReportDaysFilter field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PeopleNotifications) GetDailyReportDaysFilterOk() (*int32, bool) {
	if o == nil || o.DailyReportDaysFilter == nil {
		return nil, false
	}
	return o.DailyReportDaysFilter, true
}

// HasDailyReportDaysFilter returns a boolean if a field has been set.
func (o *PeopleNotifications) HasDailyReportDaysFilter() bool {
	if o != nil && o.DailyReportDaysFilter != nil {
		return true
	}

	return false
}

// SetDailyReportDaysFilter gets a reference to the given int32 and assigns it to the DailyReportDaysFilter field.
func (o *PeopleNotifications) SetDailyReportDaysFilter(v int32) {
	o.DailyReportDaysFilter = &v
}

// GetDailyReportEventsType returns the DailyReportEventsType field value if set, zero value otherwise.
func (o *PeopleNotifications) GetDailyReportEventsType() string {
	if o == nil || o.DailyReportEventsType == nil {
		var ret string
		return ret
	}
	return *o.DailyReportEventsType
}

// GetDailyReportEventsTypeOk returns a tuple with the DailyReportEventsType field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PeopleNotifications) GetDailyReportEventsTypeOk() (*string, bool) {
	if o == nil || o.DailyReportEventsType == nil {
		return nil, false
	}
	return o.DailyReportEventsType, true
}

// HasDailyReportEventsType returns a boolean if a field has been set.
func (o *PeopleNotifications) HasDailyReportEventsType() bool {
	if o != nil && o.DailyReportEventsType != nil {
		return true
	}

	return false
}

// SetDailyReportEventsType gets a reference to the given string and assigns it to the DailyReportEventsType field.
func (o *PeopleNotifications) SetDailyReportEventsType(v string) {
	o.DailyReportEventsType = &v
}

// GetDailyReportIncludeStartDate returns the DailyReportIncludeStartDate field value if set, zero value otherwise.
func (o *PeopleNotifications) GetDailyReportIncludeStartDate() bool {
	if o == nil || o.DailyReportIncludeStartDate == nil {
		var ret bool
		return ret
	}
	return *o.DailyReportIncludeStartDate
}

// GetDailyReportIncludeStartDateOk returns a tuple with the DailyReportIncludeStartDate field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PeopleNotifications) GetDailyReportIncludeStartDateOk() (*bool, bool) {
	if o == nil || o.DailyReportIncludeStartDate == nil {
		return nil, false
	}
	return o.DailyReportIncludeStartDate, true
}

// HasDailyReportIncludeStartDate returns a boolean if a field has been set.
func (o *PeopleNotifications) HasDailyReportIncludeStartDate() bool {
	if o != nil && o.DailyReportIncludeStartDate != nil {
		return true
	}

	return false
}

// SetDailyReportIncludeStartDate gets a reference to the given bool and assigns it to the DailyReportIncludeStartDate field.
func (o *PeopleNotifications) SetDailyReportIncludeStartDate(v bool) {
	o.DailyReportIncludeStartDate = &v
}

// GetDailyReportSortBy returns the DailyReportSortBy field value if set, zero value otherwise.
func (o *PeopleNotifications) GetDailyReportSortBy() string {
	if o == nil || o.DailyReportSortBy == nil {
		var ret string
		return ret
	}
	return *o.DailyReportSortBy
}

// GetDailyReportSortByOk returns a tuple with the DailyReportSortBy field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PeopleNotifications) GetDailyReportSortByOk() (*string, bool) {
	if o == nil || o.DailyReportSortBy == nil {
		return nil, false
	}
	return o.DailyReportSortBy, true
}

// HasDailyReportSortBy returns a boolean if a field has been set.
func (o *PeopleNotifications) HasDailyReportSortBy() bool {
	if o != nil && o.DailyReportSortBy != nil {
		return true
	}

	return false
}

// SetDailyReportSortBy gets a reference to the given string and assigns it to the DailyReportSortBy field.
func (o *PeopleNotifications) SetDailyReportSortBy(v string) {
	o.DailyReportSortBy = &v
}

// GetNotifyOnAddedAsFollower returns the NotifyOnAddedAsFollower field value if set, zero value otherwise.
func (o *PeopleNotifications) GetNotifyOnAddedAsFollower() bool {
	if o == nil || o.NotifyOnAddedAsFollower == nil {
		var ret bool
		return ret
	}
	return *o.NotifyOnAddedAsFollower
}

// GetNotifyOnAddedAsFollowerOk returns a tuple with the NotifyOnAddedAsFollower field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PeopleNotifications) GetNotifyOnAddedAsFollowerOk() (*bool, bool) {
	if o == nil || o.NotifyOnAddedAsFollower == nil {
		return nil, false
	}
	return o.NotifyOnAddedAsFollower, true
}

// HasNotifyOnAddedAsFollower returns a boolean if a field has been set.
func (o *PeopleNotifications) HasNotifyOnAddedAsFollower() bool {
	if o != nil && o.NotifyOnAddedAsFollower != nil {
		return true
	}

	return false
}

// SetNotifyOnAddedAsFollower gets a reference to the given bool and assigns it to the NotifyOnAddedAsFollower field.
func (o *PeopleNotifications) SetNotifyOnAddedAsFollower(v bool) {
	o.NotifyOnAddedAsFollower = &v
}

// GetNotifyOnStatusUpdate returns the NotifyOnStatusUpdate field value if set, zero value otherwise.
func (o *PeopleNotifications) GetNotifyOnStatusUpdate() bool {
	if o == nil || o.NotifyOnStatusUpdate == nil {
		var ret bool
		return ret
	}
	return *o.NotifyOnStatusUpdate
}

// GetNotifyOnStatusUpdateOk returns a tuple with the NotifyOnStatusUpdate field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PeopleNotifications) GetNotifyOnStatusUpdateOk() (*bool, bool) {
	if o == nil || o.NotifyOnStatusUpdate == nil {
		return nil, false
	}
	return o.NotifyOnStatusUpdate, true
}

// HasNotifyOnStatusUpdate returns a boolean if a field has been set.
func (o *PeopleNotifications) HasNotifyOnStatusUpdate() bool {
	if o != nil && o.NotifyOnStatusUpdate != nil {
		return true
	}

	return false
}

// SetNotifyOnStatusUpdate gets a reference to the given bool and assigns it to the NotifyOnStatusUpdate field.
func (o *PeopleNotifications) SetNotifyOnStatusUpdate(v bool) {
	o.NotifyOnStatusUpdate = &v
}

// GetNotifyOnTaskComplete returns the NotifyOnTaskComplete field value if set, zero value otherwise.
func (o *PeopleNotifications) GetNotifyOnTaskComplete() bool {
	if o == nil || o.NotifyOnTaskComplete == nil {
		var ret bool
		return ret
	}
	return *o.NotifyOnTaskComplete
}

// GetNotifyOnTaskCompleteOk returns a tuple with the NotifyOnTaskComplete field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PeopleNotifications) GetNotifyOnTaskCompleteOk() (*bool, bool) {
	if o == nil || o.NotifyOnTaskComplete == nil {
		return nil, false
	}
	return o.NotifyOnTaskComplete, true
}

// HasNotifyOnTaskComplete returns a boolean if a field has been set.
func (o *PeopleNotifications) HasNotifyOnTaskComplete() bool {
	if o != nil && o.NotifyOnTaskComplete != nil {
		return true
	}

	return false
}

// SetNotifyOnTaskComplete gets a reference to the given bool and assigns it to the NotifyOnTaskComplete field.
func (o *PeopleNotifications) SetNotifyOnTaskComplete(v bool) {
	o.NotifyOnTaskComplete = &v
}

// GetReceiveDailyReports returns the ReceiveDailyReports field value if set, zero value otherwise.
func (o *PeopleNotifications) GetReceiveDailyReports() bool {
	if o == nil || o.ReceiveDailyReports == nil {
		var ret bool
		return ret
	}
	return *o.ReceiveDailyReports
}

// GetReceiveDailyReportsOk returns a tuple with the ReceiveDailyReports field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PeopleNotifications) GetReceiveDailyReportsOk() (*bool, bool) {
	if o == nil || o.ReceiveDailyReports == nil {
		return nil, false
	}
	return o.ReceiveDailyReports, true
}

// HasReceiveDailyReports returns a boolean if a field has been set.
func (o *PeopleNotifications) HasReceiveDailyReports() bool {
	if o != nil && o.ReceiveDailyReports != nil {
		return true
	}

	return false
}

// SetReceiveDailyReports gets a reference to the given bool and assigns it to the ReceiveDailyReports field.
func (o *PeopleNotifications) SetReceiveDailyReports(v bool) {
	o.ReceiveDailyReports = &v
}

// GetReceiveDailyReportsAtTime returns the ReceiveDailyReportsAtTime field value if set, zero value otherwise.
func (o *PeopleNotifications) GetReceiveDailyReportsAtTime() int32 {
	if o == nil || o.ReceiveDailyReportsAtTime == nil {
		var ret int32
		return ret
	}
	return *o.ReceiveDailyReportsAtTime
}

// GetReceiveDailyReportsAtTimeOk returns a tuple with the ReceiveDailyReportsAtTime field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PeopleNotifications) GetReceiveDailyReportsAtTimeOk() (*int32, bool) {
	if o == nil || o.ReceiveDailyReportsAtTime == nil {
		return nil, false
	}
	return o.ReceiveDailyReportsAtTime, true
}

// HasReceiveDailyReportsAtTime returns a boolean if a field has been set.
func (o *PeopleNotifications) HasReceiveDailyReportsAtTime() bool {
	if o != nil && o.ReceiveDailyReportsAtTime != nil {
		return true
	}

	return false
}

// SetReceiveDailyReportsAtTime gets a reference to the given int32 and assigns it to the ReceiveDailyReportsAtTime field.
func (o *PeopleNotifications) SetReceiveDailyReportsAtTime(v int32) {
	o.ReceiveDailyReportsAtTime = &v
}

// GetReceiveDailyReportsAtWeekend returns the ReceiveDailyReportsAtWeekend field value if set, zero value otherwise.
func (o *PeopleNotifications) GetReceiveDailyReportsAtWeekend() bool {
	if o == nil || o.ReceiveDailyReportsAtWeekend == nil {
		var ret bool
		return ret
	}
	return *o.ReceiveDailyReportsAtWeekend
}

// GetReceiveDailyReportsAtWeekendOk returns a tuple with the ReceiveDailyReportsAtWeekend field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PeopleNotifications) GetReceiveDailyReportsAtWeekendOk() (*bool, bool) {
	if o == nil || o.ReceiveDailyReportsAtWeekend == nil {
		return nil, false
	}
	return o.ReceiveDailyReportsAtWeekend, true
}

// HasReceiveDailyReportsAtWeekend returns a boolean if a field has been set.
func (o *PeopleNotifications) HasReceiveDailyReportsAtWeekend() bool {
	if o != nil && o.ReceiveDailyReportsAtWeekend != nil {
		return true
	}

	return false
}

// SetReceiveDailyReportsAtWeekend gets a reference to the given bool and assigns it to the ReceiveDailyReportsAtWeekend field.
func (o *PeopleNotifications) SetReceiveDailyReportsAtWeekend(v bool) {
	o.ReceiveDailyReportsAtWeekend = &v
}

// GetReceiveDailyReportsIfEmpty returns the ReceiveDailyReportsIfEmpty field value if set, zero value otherwise.
func (o *PeopleNotifications) GetReceiveDailyReportsIfEmpty() bool {
	if o == nil || o.ReceiveDailyReportsIfEmpty == nil {
		var ret bool
		return ret
	}
	return *o.ReceiveDailyReportsIfEmpty
}

// GetReceiveDailyReportsIfEmptyOk returns a tuple with the ReceiveDailyReportsIfEmpty field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PeopleNotifications) GetReceiveDailyReportsIfEmptyOk() (*bool, bool) {
	if o == nil || o.ReceiveDailyReportsIfEmpty == nil {
		return nil, false
	}
	return o.ReceiveDailyReportsIfEmpty, true
}

// HasReceiveDailyReportsIfEmpty returns a boolean if a field has been set.
func (o *PeopleNotifications) HasReceiveDailyReportsIfEmpty() bool {
	if o != nil && o.ReceiveDailyReportsIfEmpty != nil {
		return true
	}

	return false
}

// SetReceiveDailyReportsIfEmpty gets a reference to the given bool and assigns it to the ReceiveDailyReportsIfEmpty field.
func (o *PeopleNotifications) SetReceiveDailyReportsIfEmpty(v bool) {
	o.ReceiveDailyReportsIfEmpty = &v
}

// GetReceiveMyNotificationsOnly returns the ReceiveMyNotificationsOnly field value if set, zero value otherwise.
func (o *PeopleNotifications) GetReceiveMyNotificationsOnly() bool {
	if o == nil || o.ReceiveMyNotificationsOnly == nil {
		var ret bool
		return ret
	}
	return *o.ReceiveMyNotificationsOnly
}

// GetReceiveMyNotificationsOnlyOk returns a tuple with the ReceiveMyNotificationsOnly field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PeopleNotifications) GetReceiveMyNotificationsOnlyOk() (*bool, bool) {
	if o == nil || o.ReceiveMyNotificationsOnly == nil {
		return nil, false
	}
	return o.ReceiveMyNotificationsOnly, true
}

// HasReceiveMyNotificationsOnly returns a boolean if a field has been set.
func (o *PeopleNotifications) HasReceiveMyNotificationsOnly() bool {
	if o != nil && o.ReceiveMyNotificationsOnly != nil {
		return true
	}

	return false
}

// SetReceiveMyNotificationsOnly gets a reference to the given bool and assigns it to the ReceiveMyNotificationsOnly field.
func (o *PeopleNotifications) SetReceiveMyNotificationsOnly(v bool) {
	o.ReceiveMyNotificationsOnly = &v
}

// GetReceiveNotifyWarnings returns the ReceiveNotifyWarnings field value if set, zero value otherwise.
func (o *PeopleNotifications) GetReceiveNotifyWarnings() bool {
	if o == nil || o.ReceiveNotifyWarnings == nil {
		var ret bool
		return ret
	}
	return *o.ReceiveNotifyWarnings
}

// GetReceiveNotifyWarningsOk returns a tuple with the ReceiveNotifyWarnings field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PeopleNotifications) GetReceiveNotifyWarningsOk() (*bool, bool) {
	if o == nil || o.ReceiveNotifyWarnings == nil {
		return nil, false
	}
	return o.ReceiveNotifyWarnings, true
}

// HasReceiveNotifyWarnings returns a boolean if a field has been set.
func (o *PeopleNotifications) HasReceiveNotifyWarnings() bool {
	if o != nil && o.ReceiveNotifyWarnings != nil {
		return true
	}

	return false
}

// SetReceiveNotifyWarnings gets a reference to the given bool and assigns it to the ReceiveNotifyWarnings field.
func (o *PeopleNotifications) SetReceiveNotifyWarnings(v bool) {
	o.ReceiveNotifyWarnings = &v
}

// GetSoundAlertsEnabled returns the SoundAlertsEnabled field value if set, zero value otherwise.
func (o *PeopleNotifications) GetSoundAlertsEnabled() bool {
	if o == nil || o.SoundAlertsEnabled == nil {
		var ret bool
		return ret
	}
	return *o.SoundAlertsEnabled
}

// GetSoundAlertsEnabledOk returns a tuple with the SoundAlertsEnabled field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PeopleNotifications) GetSoundAlertsEnabledOk() (*bool, bool) {
	if o == nil || o.SoundAlertsEnabled == nil {
		return nil, false
	}
	return o.SoundAlertsEnabled, true
}

// HasSoundAlertsEnabled returns a boolean if a field has been set.
func (o *PeopleNotifications) HasSoundAlertsEnabled() bool {
	if o != nil && o.SoundAlertsEnabled != nil {
		return true
	}

	return false
}

// SetSoundAlertsEnabled gets a reference to the given bool and assigns it to the SoundAlertsEnabled field.
func (o *PeopleNotifications) SetSoundAlertsEnabled(v bool) {
	o.SoundAlertsEnabled = &v
}

func (o PeopleNotifications) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.DailyReportDaysFilter != nil {
		toSerialize["dailyReportDaysFilter"] = o.DailyReportDaysFilter
	}
	if o.DailyReportEventsType != nil {
		toSerialize["dailyReportEventsType"] = o.DailyReportEventsType
	}
	if o.DailyReportIncludeStartDate != nil {
		toSerialize["dailyReportIncludeStartDate"] = o.DailyReportIncludeStartDate
	}
	if o.DailyReportSortBy != nil {
		toSerialize["dailyReportSortBy"] = o.DailyReportSortBy
	}
	if o.NotifyOnAddedAsFollower != nil {
		toSerialize["notifyOnAddedAsFollower"] = o.NotifyOnAddedAsFollower
	}
	if o.NotifyOnStatusUpdate != nil {
		toSerialize["notifyOnStatusUpdate"] = o.NotifyOnStatusUpdate
	}
	if o.NotifyOnTaskComplete != nil {
		toSerialize["notifyOnTaskComplete"] = o.NotifyOnTaskComplete
	}
	if o.ReceiveDailyReports != nil {
		toSerialize["receiveDailyReports"] = o.ReceiveDailyReports
	}
	if o.ReceiveDailyReportsAtTime != nil {
		toSerialize["receiveDailyReportsAtTime"] = o.ReceiveDailyReportsAtTime
	}
	if o.ReceiveDailyReportsAtWeekend != nil {
		toSerialize["receiveDailyReportsAtWeekend"] = o.ReceiveDailyReportsAtWeekend
	}
	if o.ReceiveDailyReportsIfEmpty != nil {
		toSerialize["receiveDailyReportsIfEmpty"] = o.ReceiveDailyReportsIfEmpty
	}
	if o.ReceiveMyNotificationsOnly != nil {
		toSerialize["receiveMyNotificationsOnly"] = o.ReceiveMyNotificationsOnly
	}
	if o.ReceiveNotifyWarnings != nil {
		toSerialize["receiveNotifyWarnings"] = o.ReceiveNotifyWarnings
	}
	if o.SoundAlertsEnabled != nil {
		toSerialize["soundAlertsEnabled"] = o.SoundAlertsEnabled
	}
	return json.Marshal(toSerialize)
}

type NullablePeopleNotifications struct {
	value *PeopleNotifications
	isSet bool
}

func (v NullablePeopleNotifications) Get() *PeopleNotifications {
	return v.value
}

func (v *NullablePeopleNotifications) Set(val *PeopleNotifications) {
	v.value = val
	v.isSet = true
}

func (v NullablePeopleNotifications) IsSet() bool {
	return v.isSet
}

func (v *NullablePeopleNotifications) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullablePeopleNotifications(val *PeopleNotifications) *NullablePeopleNotifications {
	return &NullablePeopleNotifications{value: val, isSet: true}
}

func (v NullablePeopleNotifications) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullablePeopleNotifications) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


