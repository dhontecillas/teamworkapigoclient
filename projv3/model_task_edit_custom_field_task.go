/*
 * Teamwork.com Projects API
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * API version: 3.0
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package projv3

import (
	"encoding/json"
)

// TaskEditCustomFieldTask EditCustomFieldTask contains all the information to update a task custom field value.
type TaskEditCustomFieldTask struct {
	CustomfieldId *int32 `json:"customfieldId,omitempty"`
	Id *int32 `json:"id,omitempty"`
	Value *map[string]interface{} `json:"value,omitempty"`
}

// NewTaskEditCustomFieldTask instantiates a new TaskEditCustomFieldTask object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewTaskEditCustomFieldTask() *TaskEditCustomFieldTask {
	this := TaskEditCustomFieldTask{}
	return &this
}

// NewTaskEditCustomFieldTaskWithDefaults instantiates a new TaskEditCustomFieldTask object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewTaskEditCustomFieldTaskWithDefaults() *TaskEditCustomFieldTask {
	this := TaskEditCustomFieldTask{}
	return &this
}

// GetCustomfieldId returns the CustomfieldId field value if set, zero value otherwise.
func (o *TaskEditCustomFieldTask) GetCustomfieldId() int32 {
	if o == nil || o.CustomfieldId == nil {
		var ret int32
		return ret
	}
	return *o.CustomfieldId
}

// GetCustomfieldIdOk returns a tuple with the CustomfieldId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TaskEditCustomFieldTask) GetCustomfieldIdOk() (*int32, bool) {
	if o == nil || o.CustomfieldId == nil {
		return nil, false
	}
	return o.CustomfieldId, true
}

// HasCustomfieldId returns a boolean if a field has been set.
func (o *TaskEditCustomFieldTask) HasCustomfieldId() bool {
	if o != nil && o.CustomfieldId != nil {
		return true
	}

	return false
}

// SetCustomfieldId gets a reference to the given int32 and assigns it to the CustomfieldId field.
func (o *TaskEditCustomFieldTask) SetCustomfieldId(v int32) {
	o.CustomfieldId = &v
}

// GetId returns the Id field value if set, zero value otherwise.
func (o *TaskEditCustomFieldTask) GetId() int32 {
	if o == nil || o.Id == nil {
		var ret int32
		return ret
	}
	return *o.Id
}

// GetIdOk returns a tuple with the Id field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TaskEditCustomFieldTask) GetIdOk() (*int32, bool) {
	if o == nil || o.Id == nil {
		return nil, false
	}
	return o.Id, true
}

// HasId returns a boolean if a field has been set.
func (o *TaskEditCustomFieldTask) HasId() bool {
	if o != nil && o.Id != nil {
		return true
	}

	return false
}

// SetId gets a reference to the given int32 and assigns it to the Id field.
func (o *TaskEditCustomFieldTask) SetId(v int32) {
	o.Id = &v
}

// GetValue returns the Value field value if set, zero value otherwise.
func (o *TaskEditCustomFieldTask) GetValue() map[string]interface{} {
	if o == nil || o.Value == nil {
		var ret map[string]interface{}
		return ret
	}
	return *o.Value
}

// GetValueOk returns a tuple with the Value field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TaskEditCustomFieldTask) GetValueOk() (*map[string]interface{}, bool) {
	if o == nil || o.Value == nil {
		return nil, false
	}
	return o.Value, true
}

// HasValue returns a boolean if a field has been set.
func (o *TaskEditCustomFieldTask) HasValue() bool {
	if o != nil && o.Value != nil {
		return true
	}

	return false
}

// SetValue gets a reference to the given map[string]interface{} and assigns it to the Value field.
func (o *TaskEditCustomFieldTask) SetValue(v map[string]interface{}) {
	o.Value = &v
}

func (o TaskEditCustomFieldTask) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.CustomfieldId != nil {
		toSerialize["customfieldId"] = o.CustomfieldId
	}
	if o.Id != nil {
		toSerialize["id"] = o.Id
	}
	if o.Value != nil {
		toSerialize["value"] = o.Value
	}
	return json.Marshal(toSerialize)
}

type NullableTaskEditCustomFieldTask struct {
	value *TaskEditCustomFieldTask
	isSet bool
}

func (v NullableTaskEditCustomFieldTask) Get() *TaskEditCustomFieldTask {
	return v.value
}

func (v *NullableTaskEditCustomFieldTask) Set(val *TaskEditCustomFieldTask) {
	v.value = val
	v.isSet = true
}

func (v NullableTaskEditCustomFieldTask) IsSet() bool {
	return v.isSet
}

func (v *NullableTaskEditCustomFieldTask) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableTaskEditCustomFieldTask(val *TaskEditCustomFieldTask) *NullableTaskEditCustomFieldTask {
	return &NullableTaskEditCustomFieldTask{value: val, isSet: true}
}

func (v NullableTaskEditCustomFieldTask) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableTaskEditCustomFieldTask) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


