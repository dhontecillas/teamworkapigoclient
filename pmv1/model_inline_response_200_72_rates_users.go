/*
 * Teamwork Projects API
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * API version: 
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package pmv1

import (
	"encoding/json"
)

// InlineResponse20072RatesUsers struct for InlineResponse20072RatesUsers
type InlineResponse20072RatesUsers struct {
	Var12345 *InlineResponse20072RatesUsers12345 `json:"12345,omitempty"`
}

// NewInlineResponse20072RatesUsers instantiates a new InlineResponse20072RatesUsers object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewInlineResponse20072RatesUsers() *InlineResponse20072RatesUsers {
	this := InlineResponse20072RatesUsers{}
	return &this
}

// NewInlineResponse20072RatesUsersWithDefaults instantiates a new InlineResponse20072RatesUsers object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewInlineResponse20072RatesUsersWithDefaults() *InlineResponse20072RatesUsers {
	this := InlineResponse20072RatesUsers{}
	return &this
}

// GetVar12345 returns the Var12345 field value if set, zero value otherwise.
func (o *InlineResponse20072RatesUsers) GetVar12345() InlineResponse20072RatesUsers12345 {
	if o == nil || o.Var12345 == nil {
		var ret InlineResponse20072RatesUsers12345
		return ret
	}
	return *o.Var12345
}

// GetVar12345Ok returns a tuple with the Var12345 field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InlineResponse20072RatesUsers) GetVar12345Ok() (*InlineResponse20072RatesUsers12345, bool) {
	if o == nil || o.Var12345 == nil {
		return nil, false
	}
	return o.Var12345, true
}

// HasVar12345 returns a boolean if a field has been set.
func (o *InlineResponse20072RatesUsers) HasVar12345() bool {
	if o != nil && o.Var12345 != nil {
		return true
	}

	return false
}

// SetVar12345 gets a reference to the given InlineResponse20072RatesUsers12345 and assigns it to the Var12345 field.
func (o *InlineResponse20072RatesUsers) SetVar12345(v InlineResponse20072RatesUsers12345) {
	o.Var12345 = &v
}

func (o InlineResponse20072RatesUsers) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.Var12345 != nil {
		toSerialize["12345"] = o.Var12345
	}
	return json.Marshal(toSerialize)
}

type NullableInlineResponse20072RatesUsers struct {
	value *InlineResponse20072RatesUsers
	isSet bool
}

func (v NullableInlineResponse20072RatesUsers) Get() *InlineResponse20072RatesUsers {
	return v.value
}

func (v *NullableInlineResponse20072RatesUsers) Set(val *InlineResponse20072RatesUsers) {
	v.value = val
	v.isSet = true
}

func (v NullableInlineResponse20072RatesUsers) IsSet() bool {
	return v.isSet
}

func (v *NullableInlineResponse20072RatesUsers) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableInlineResponse20072RatesUsers(val *InlineResponse20072RatesUsers) *NullableInlineResponse20072RatesUsers {
	return &NullableInlineResponse20072RatesUsers{value: val, isSet: true}
}

func (v NullableInlineResponse20072RatesUsers) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableInlineResponse20072RatesUsers) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


