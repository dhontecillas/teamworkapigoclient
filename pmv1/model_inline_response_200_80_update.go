/*
 * Teamwork Projects API
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * API version: 
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package pmv1

import (
	"encoding/json"
)

// InlineResponse20080Update struct for InlineResponse20080Update
type InlineResponse20080Update struct {
	Color *string `json:"color,omitempty"`
	DateCreated *string `json:"dateCreated,omitempty"`
	Deleted *bool `json:"deleted,omitempty"`
	DeletedDate *string `json:"deletedDate,omitempty"`
	Health *string `json:"health,omitempty"`
	Id *string `json:"id,omitempty"`
	ProjectId *string `json:"projectId,omitempty"`
	ProjectStatus *string `json:"projectStatus,omitempty"`
	Text *string `json:"text,omitempty"`
	User *InlineResponse20045CardOwner `json:"user,omitempty"`
}

// NewInlineResponse20080Update instantiates a new InlineResponse20080Update object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewInlineResponse20080Update() *InlineResponse20080Update {
	this := InlineResponse20080Update{}
	return &this
}

// NewInlineResponse20080UpdateWithDefaults instantiates a new InlineResponse20080Update object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewInlineResponse20080UpdateWithDefaults() *InlineResponse20080Update {
	this := InlineResponse20080Update{}
	return &this
}

// GetColor returns the Color field value if set, zero value otherwise.
func (o *InlineResponse20080Update) GetColor() string {
	if o == nil || o.Color == nil {
		var ret string
		return ret
	}
	return *o.Color
}

// GetColorOk returns a tuple with the Color field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InlineResponse20080Update) GetColorOk() (*string, bool) {
	if o == nil || o.Color == nil {
		return nil, false
	}
	return o.Color, true
}

// HasColor returns a boolean if a field has been set.
func (o *InlineResponse20080Update) HasColor() bool {
	if o != nil && o.Color != nil {
		return true
	}

	return false
}

// SetColor gets a reference to the given string and assigns it to the Color field.
func (o *InlineResponse20080Update) SetColor(v string) {
	o.Color = &v
}

// GetDateCreated returns the DateCreated field value if set, zero value otherwise.
func (o *InlineResponse20080Update) GetDateCreated() string {
	if o == nil || o.DateCreated == nil {
		var ret string
		return ret
	}
	return *o.DateCreated
}

// GetDateCreatedOk returns a tuple with the DateCreated field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InlineResponse20080Update) GetDateCreatedOk() (*string, bool) {
	if o == nil || o.DateCreated == nil {
		return nil, false
	}
	return o.DateCreated, true
}

// HasDateCreated returns a boolean if a field has been set.
func (o *InlineResponse20080Update) HasDateCreated() bool {
	if o != nil && o.DateCreated != nil {
		return true
	}

	return false
}

// SetDateCreated gets a reference to the given string and assigns it to the DateCreated field.
func (o *InlineResponse20080Update) SetDateCreated(v string) {
	o.DateCreated = &v
}

// GetDeleted returns the Deleted field value if set, zero value otherwise.
func (o *InlineResponse20080Update) GetDeleted() bool {
	if o == nil || o.Deleted == nil {
		var ret bool
		return ret
	}
	return *o.Deleted
}

// GetDeletedOk returns a tuple with the Deleted field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InlineResponse20080Update) GetDeletedOk() (*bool, bool) {
	if o == nil || o.Deleted == nil {
		return nil, false
	}
	return o.Deleted, true
}

// HasDeleted returns a boolean if a field has been set.
func (o *InlineResponse20080Update) HasDeleted() bool {
	if o != nil && o.Deleted != nil {
		return true
	}

	return false
}

// SetDeleted gets a reference to the given bool and assigns it to the Deleted field.
func (o *InlineResponse20080Update) SetDeleted(v bool) {
	o.Deleted = &v
}

// GetDeletedDate returns the DeletedDate field value if set, zero value otherwise.
func (o *InlineResponse20080Update) GetDeletedDate() string {
	if o == nil || o.DeletedDate == nil {
		var ret string
		return ret
	}
	return *o.DeletedDate
}

// GetDeletedDateOk returns a tuple with the DeletedDate field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InlineResponse20080Update) GetDeletedDateOk() (*string, bool) {
	if o == nil || o.DeletedDate == nil {
		return nil, false
	}
	return o.DeletedDate, true
}

// HasDeletedDate returns a boolean if a field has been set.
func (o *InlineResponse20080Update) HasDeletedDate() bool {
	if o != nil && o.DeletedDate != nil {
		return true
	}

	return false
}

// SetDeletedDate gets a reference to the given string and assigns it to the DeletedDate field.
func (o *InlineResponse20080Update) SetDeletedDate(v string) {
	o.DeletedDate = &v
}

// GetHealth returns the Health field value if set, zero value otherwise.
func (o *InlineResponse20080Update) GetHealth() string {
	if o == nil || o.Health == nil {
		var ret string
		return ret
	}
	return *o.Health
}

// GetHealthOk returns a tuple with the Health field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InlineResponse20080Update) GetHealthOk() (*string, bool) {
	if o == nil || o.Health == nil {
		return nil, false
	}
	return o.Health, true
}

// HasHealth returns a boolean if a field has been set.
func (o *InlineResponse20080Update) HasHealth() bool {
	if o != nil && o.Health != nil {
		return true
	}

	return false
}

// SetHealth gets a reference to the given string and assigns it to the Health field.
func (o *InlineResponse20080Update) SetHealth(v string) {
	o.Health = &v
}

// GetId returns the Id field value if set, zero value otherwise.
func (o *InlineResponse20080Update) GetId() string {
	if o == nil || o.Id == nil {
		var ret string
		return ret
	}
	return *o.Id
}

// GetIdOk returns a tuple with the Id field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InlineResponse20080Update) GetIdOk() (*string, bool) {
	if o == nil || o.Id == nil {
		return nil, false
	}
	return o.Id, true
}

// HasId returns a boolean if a field has been set.
func (o *InlineResponse20080Update) HasId() bool {
	if o != nil && o.Id != nil {
		return true
	}

	return false
}

// SetId gets a reference to the given string and assigns it to the Id field.
func (o *InlineResponse20080Update) SetId(v string) {
	o.Id = &v
}

// GetProjectId returns the ProjectId field value if set, zero value otherwise.
func (o *InlineResponse20080Update) GetProjectId() string {
	if o == nil || o.ProjectId == nil {
		var ret string
		return ret
	}
	return *o.ProjectId
}

// GetProjectIdOk returns a tuple with the ProjectId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InlineResponse20080Update) GetProjectIdOk() (*string, bool) {
	if o == nil || o.ProjectId == nil {
		return nil, false
	}
	return o.ProjectId, true
}

// HasProjectId returns a boolean if a field has been set.
func (o *InlineResponse20080Update) HasProjectId() bool {
	if o != nil && o.ProjectId != nil {
		return true
	}

	return false
}

// SetProjectId gets a reference to the given string and assigns it to the ProjectId field.
func (o *InlineResponse20080Update) SetProjectId(v string) {
	o.ProjectId = &v
}

// GetProjectStatus returns the ProjectStatus field value if set, zero value otherwise.
func (o *InlineResponse20080Update) GetProjectStatus() string {
	if o == nil || o.ProjectStatus == nil {
		var ret string
		return ret
	}
	return *o.ProjectStatus
}

// GetProjectStatusOk returns a tuple with the ProjectStatus field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InlineResponse20080Update) GetProjectStatusOk() (*string, bool) {
	if o == nil || o.ProjectStatus == nil {
		return nil, false
	}
	return o.ProjectStatus, true
}

// HasProjectStatus returns a boolean if a field has been set.
func (o *InlineResponse20080Update) HasProjectStatus() bool {
	if o != nil && o.ProjectStatus != nil {
		return true
	}

	return false
}

// SetProjectStatus gets a reference to the given string and assigns it to the ProjectStatus field.
func (o *InlineResponse20080Update) SetProjectStatus(v string) {
	o.ProjectStatus = &v
}

// GetText returns the Text field value if set, zero value otherwise.
func (o *InlineResponse20080Update) GetText() string {
	if o == nil || o.Text == nil {
		var ret string
		return ret
	}
	return *o.Text
}

// GetTextOk returns a tuple with the Text field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InlineResponse20080Update) GetTextOk() (*string, bool) {
	if o == nil || o.Text == nil {
		return nil, false
	}
	return o.Text, true
}

// HasText returns a boolean if a field has been set.
func (o *InlineResponse20080Update) HasText() bool {
	if o != nil && o.Text != nil {
		return true
	}

	return false
}

// SetText gets a reference to the given string and assigns it to the Text field.
func (o *InlineResponse20080Update) SetText(v string) {
	o.Text = &v
}

// GetUser returns the User field value if set, zero value otherwise.
func (o *InlineResponse20080Update) GetUser() InlineResponse20045CardOwner {
	if o == nil || o.User == nil {
		var ret InlineResponse20045CardOwner
		return ret
	}
	return *o.User
}

// GetUserOk returns a tuple with the User field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InlineResponse20080Update) GetUserOk() (*InlineResponse20045CardOwner, bool) {
	if o == nil || o.User == nil {
		return nil, false
	}
	return o.User, true
}

// HasUser returns a boolean if a field has been set.
func (o *InlineResponse20080Update) HasUser() bool {
	if o != nil && o.User != nil {
		return true
	}

	return false
}

// SetUser gets a reference to the given InlineResponse20045CardOwner and assigns it to the User field.
func (o *InlineResponse20080Update) SetUser(v InlineResponse20045CardOwner) {
	o.User = &v
}

func (o InlineResponse20080Update) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.Color != nil {
		toSerialize["color"] = o.Color
	}
	if o.DateCreated != nil {
		toSerialize["dateCreated"] = o.DateCreated
	}
	if o.Deleted != nil {
		toSerialize["deleted"] = o.Deleted
	}
	if o.DeletedDate != nil {
		toSerialize["deletedDate"] = o.DeletedDate
	}
	if o.Health != nil {
		toSerialize["health"] = o.Health
	}
	if o.Id != nil {
		toSerialize["id"] = o.Id
	}
	if o.ProjectId != nil {
		toSerialize["projectId"] = o.ProjectId
	}
	if o.ProjectStatus != nil {
		toSerialize["projectStatus"] = o.ProjectStatus
	}
	if o.Text != nil {
		toSerialize["text"] = o.Text
	}
	if o.User != nil {
		toSerialize["user"] = o.User
	}
	return json.Marshal(toSerialize)
}

type NullableInlineResponse20080Update struct {
	value *InlineResponse20080Update
	isSet bool
}

func (v NullableInlineResponse20080Update) Get() *InlineResponse20080Update {
	return v.value
}

func (v *NullableInlineResponse20080Update) Set(val *InlineResponse20080Update) {
	v.value = val
	v.isSet = true
}

func (v NullableInlineResponse20080Update) IsSet() bool {
	return v.isSet
}

func (v *NullableInlineResponse20080Update) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableInlineResponse20080Update(val *InlineResponse20080Update) *NullableInlineResponse20080Update {
	return &NullableInlineResponse20080Update{value: val, isSet: true}
}

func (v NullableInlineResponse20080Update) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableInlineResponse20080Update) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


