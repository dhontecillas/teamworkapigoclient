/*
 * Teamwork.com Projects API
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * API version: 3.0
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package projv3

import (
	"encoding/json"
)

// AppResponse Response contains information about a specific app.
type AppResponse struct {
	App *ViewApp `json:"app,omitempty"`
	Included *AppAppsResponseIncluded `json:"included,omitempty"`
}

// NewAppResponse instantiates a new AppResponse object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewAppResponse() *AppResponse {
	this := AppResponse{}
	return &this
}

// NewAppResponseWithDefaults instantiates a new AppResponse object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewAppResponseWithDefaults() *AppResponse {
	this := AppResponse{}
	return &this
}

// GetApp returns the App field value if set, zero value otherwise.
func (o *AppResponse) GetApp() ViewApp {
	if o == nil || o.App == nil {
		var ret ViewApp
		return ret
	}
	return *o.App
}

// GetAppOk returns a tuple with the App field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AppResponse) GetAppOk() (*ViewApp, bool) {
	if o == nil || o.App == nil {
		return nil, false
	}
	return o.App, true
}

// HasApp returns a boolean if a field has been set.
func (o *AppResponse) HasApp() bool {
	if o != nil && o.App != nil {
		return true
	}

	return false
}

// SetApp gets a reference to the given ViewApp and assigns it to the App field.
func (o *AppResponse) SetApp(v ViewApp) {
	o.App = &v
}

// GetIncluded returns the Included field value if set, zero value otherwise.
func (o *AppResponse) GetIncluded() AppAppsResponseIncluded {
	if o == nil || o.Included == nil {
		var ret AppAppsResponseIncluded
		return ret
	}
	return *o.Included
}

// GetIncludedOk returns a tuple with the Included field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AppResponse) GetIncludedOk() (*AppAppsResponseIncluded, bool) {
	if o == nil || o.Included == nil {
		return nil, false
	}
	return o.Included, true
}

// HasIncluded returns a boolean if a field has been set.
func (o *AppResponse) HasIncluded() bool {
	if o != nil && o.Included != nil {
		return true
	}

	return false
}

// SetIncluded gets a reference to the given AppAppsResponseIncluded and assigns it to the Included field.
func (o *AppResponse) SetIncluded(v AppAppsResponseIncluded) {
	o.Included = &v
}

func (o AppResponse) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.App != nil {
		toSerialize["app"] = o.App
	}
	if o.Included != nil {
		toSerialize["included"] = o.Included
	}
	return json.Marshal(toSerialize)
}

type NullableAppResponse struct {
	value *AppResponse
	isSet bool
}

func (v NullableAppResponse) Get() *AppResponse {
	return v.value
}

func (v *NullableAppResponse) Set(val *AppResponse) {
	v.value = val
	v.isSet = true
}

func (v NullableAppResponse) IsSet() bool {
	return v.isSet
}

func (v *NullableAppResponse) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableAppResponse(val *AppResponse) *NullableAppResponse {
	return &NullableAppResponse{value: val, isSet: true}
}

func (v NullableAppResponse) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableAppResponse) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


