/*
 * Teamwork Projects API
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * API version: 
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package pmv1

import (
	"encoding/json"
)

// InlineResponse20090StatsProjects struct for InlineResponse20090StatsProjects
type InlineResponse20090StatsProjects struct {
	Archived *string `json:"archived,omitempty"`
	Completed *string `json:"completed,omitempty"`
	Count *string `json:"count,omitempty"`
	Current *string `json:"current,omitempty"`
	Late *string `json:"late,omitempty"`
	Starred *string `json:"starred,omitempty"`
	Upcoming *string `json:"upcoming,omitempty"`
}

// NewInlineResponse20090StatsProjects instantiates a new InlineResponse20090StatsProjects object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewInlineResponse20090StatsProjects() *InlineResponse20090StatsProjects {
	this := InlineResponse20090StatsProjects{}
	return &this
}

// NewInlineResponse20090StatsProjectsWithDefaults instantiates a new InlineResponse20090StatsProjects object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewInlineResponse20090StatsProjectsWithDefaults() *InlineResponse20090StatsProjects {
	this := InlineResponse20090StatsProjects{}
	return &this
}

// GetArchived returns the Archived field value if set, zero value otherwise.
func (o *InlineResponse20090StatsProjects) GetArchived() string {
	if o == nil || o.Archived == nil {
		var ret string
		return ret
	}
	return *o.Archived
}

// GetArchivedOk returns a tuple with the Archived field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InlineResponse20090StatsProjects) GetArchivedOk() (*string, bool) {
	if o == nil || o.Archived == nil {
		return nil, false
	}
	return o.Archived, true
}

// HasArchived returns a boolean if a field has been set.
func (o *InlineResponse20090StatsProjects) HasArchived() bool {
	if o != nil && o.Archived != nil {
		return true
	}

	return false
}

// SetArchived gets a reference to the given string and assigns it to the Archived field.
func (o *InlineResponse20090StatsProjects) SetArchived(v string) {
	o.Archived = &v
}

// GetCompleted returns the Completed field value if set, zero value otherwise.
func (o *InlineResponse20090StatsProjects) GetCompleted() string {
	if o == nil || o.Completed == nil {
		var ret string
		return ret
	}
	return *o.Completed
}

// GetCompletedOk returns a tuple with the Completed field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InlineResponse20090StatsProjects) GetCompletedOk() (*string, bool) {
	if o == nil || o.Completed == nil {
		return nil, false
	}
	return o.Completed, true
}

// HasCompleted returns a boolean if a field has been set.
func (o *InlineResponse20090StatsProjects) HasCompleted() bool {
	if o != nil && o.Completed != nil {
		return true
	}

	return false
}

// SetCompleted gets a reference to the given string and assigns it to the Completed field.
func (o *InlineResponse20090StatsProjects) SetCompleted(v string) {
	o.Completed = &v
}

// GetCount returns the Count field value if set, zero value otherwise.
func (o *InlineResponse20090StatsProjects) GetCount() string {
	if o == nil || o.Count == nil {
		var ret string
		return ret
	}
	return *o.Count
}

// GetCountOk returns a tuple with the Count field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InlineResponse20090StatsProjects) GetCountOk() (*string, bool) {
	if o == nil || o.Count == nil {
		return nil, false
	}
	return o.Count, true
}

// HasCount returns a boolean if a field has been set.
func (o *InlineResponse20090StatsProjects) HasCount() bool {
	if o != nil && o.Count != nil {
		return true
	}

	return false
}

// SetCount gets a reference to the given string and assigns it to the Count field.
func (o *InlineResponse20090StatsProjects) SetCount(v string) {
	o.Count = &v
}

// GetCurrent returns the Current field value if set, zero value otherwise.
func (o *InlineResponse20090StatsProjects) GetCurrent() string {
	if o == nil || o.Current == nil {
		var ret string
		return ret
	}
	return *o.Current
}

// GetCurrentOk returns a tuple with the Current field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InlineResponse20090StatsProjects) GetCurrentOk() (*string, bool) {
	if o == nil || o.Current == nil {
		return nil, false
	}
	return o.Current, true
}

// HasCurrent returns a boolean if a field has been set.
func (o *InlineResponse20090StatsProjects) HasCurrent() bool {
	if o != nil && o.Current != nil {
		return true
	}

	return false
}

// SetCurrent gets a reference to the given string and assigns it to the Current field.
func (o *InlineResponse20090StatsProjects) SetCurrent(v string) {
	o.Current = &v
}

// GetLate returns the Late field value if set, zero value otherwise.
func (o *InlineResponse20090StatsProjects) GetLate() string {
	if o == nil || o.Late == nil {
		var ret string
		return ret
	}
	return *o.Late
}

// GetLateOk returns a tuple with the Late field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InlineResponse20090StatsProjects) GetLateOk() (*string, bool) {
	if o == nil || o.Late == nil {
		return nil, false
	}
	return o.Late, true
}

// HasLate returns a boolean if a field has been set.
func (o *InlineResponse20090StatsProjects) HasLate() bool {
	if o != nil && o.Late != nil {
		return true
	}

	return false
}

// SetLate gets a reference to the given string and assigns it to the Late field.
func (o *InlineResponse20090StatsProjects) SetLate(v string) {
	o.Late = &v
}

// GetStarred returns the Starred field value if set, zero value otherwise.
func (o *InlineResponse20090StatsProjects) GetStarred() string {
	if o == nil || o.Starred == nil {
		var ret string
		return ret
	}
	return *o.Starred
}

// GetStarredOk returns a tuple with the Starred field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InlineResponse20090StatsProjects) GetStarredOk() (*string, bool) {
	if o == nil || o.Starred == nil {
		return nil, false
	}
	return o.Starred, true
}

// HasStarred returns a boolean if a field has been set.
func (o *InlineResponse20090StatsProjects) HasStarred() bool {
	if o != nil && o.Starred != nil {
		return true
	}

	return false
}

// SetStarred gets a reference to the given string and assigns it to the Starred field.
func (o *InlineResponse20090StatsProjects) SetStarred(v string) {
	o.Starred = &v
}

// GetUpcoming returns the Upcoming field value if set, zero value otherwise.
func (o *InlineResponse20090StatsProjects) GetUpcoming() string {
	if o == nil || o.Upcoming == nil {
		var ret string
		return ret
	}
	return *o.Upcoming
}

// GetUpcomingOk returns a tuple with the Upcoming field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InlineResponse20090StatsProjects) GetUpcomingOk() (*string, bool) {
	if o == nil || o.Upcoming == nil {
		return nil, false
	}
	return o.Upcoming, true
}

// HasUpcoming returns a boolean if a field has been set.
func (o *InlineResponse20090StatsProjects) HasUpcoming() bool {
	if o != nil && o.Upcoming != nil {
		return true
	}

	return false
}

// SetUpcoming gets a reference to the given string and assigns it to the Upcoming field.
func (o *InlineResponse20090StatsProjects) SetUpcoming(v string) {
	o.Upcoming = &v
}

func (o InlineResponse20090StatsProjects) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.Archived != nil {
		toSerialize["archived"] = o.Archived
	}
	if o.Completed != nil {
		toSerialize["completed"] = o.Completed
	}
	if o.Count != nil {
		toSerialize["count"] = o.Count
	}
	if o.Current != nil {
		toSerialize["current"] = o.Current
	}
	if o.Late != nil {
		toSerialize["late"] = o.Late
	}
	if o.Starred != nil {
		toSerialize["starred"] = o.Starred
	}
	if o.Upcoming != nil {
		toSerialize["upcoming"] = o.Upcoming
	}
	return json.Marshal(toSerialize)
}

type NullableInlineResponse20090StatsProjects struct {
	value *InlineResponse20090StatsProjects
	isSet bool
}

func (v NullableInlineResponse20090StatsProjects) Get() *InlineResponse20090StatsProjects {
	return v.value
}

func (v *NullableInlineResponse20090StatsProjects) Set(val *InlineResponse20090StatsProjects) {
	v.value = val
	v.isSet = true
}

func (v NullableInlineResponse20090StatsProjects) IsSet() bool {
	return v.isSet
}

func (v *NullableInlineResponse20090StatsProjects) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableInlineResponse20090StatsProjects(val *InlineResponse20090StatsProjects) *NullableInlineResponse20090StatsProjects {
	return &NullableInlineResponse20090StatsProjects{value: val, isSet: true}
}

func (v NullableInlineResponse20090StatsProjects) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableInlineResponse20090StatsProjects) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


