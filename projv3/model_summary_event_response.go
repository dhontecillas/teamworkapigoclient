/*
 * Teamwork.com Projects API
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * API version: 3.0
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package projv3

import (
	"encoding/json"
)

// SummaryEventResponse EventResponse contains counters for events.
type SummaryEventResponse struct {
	Today *int32 `json:"today,omitempty"`
	Upcoming *int32 `json:"upcoming,omitempty"`
}

// NewSummaryEventResponse instantiates a new SummaryEventResponse object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewSummaryEventResponse() *SummaryEventResponse {
	this := SummaryEventResponse{}
	return &this
}

// NewSummaryEventResponseWithDefaults instantiates a new SummaryEventResponse object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewSummaryEventResponseWithDefaults() *SummaryEventResponse {
	this := SummaryEventResponse{}
	return &this
}

// GetToday returns the Today field value if set, zero value otherwise.
func (o *SummaryEventResponse) GetToday() int32 {
	if o == nil || o.Today == nil {
		var ret int32
		return ret
	}
	return *o.Today
}

// GetTodayOk returns a tuple with the Today field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SummaryEventResponse) GetTodayOk() (*int32, bool) {
	if o == nil || o.Today == nil {
		return nil, false
	}
	return o.Today, true
}

// HasToday returns a boolean if a field has been set.
func (o *SummaryEventResponse) HasToday() bool {
	if o != nil && o.Today != nil {
		return true
	}

	return false
}

// SetToday gets a reference to the given int32 and assigns it to the Today field.
func (o *SummaryEventResponse) SetToday(v int32) {
	o.Today = &v
}

// GetUpcoming returns the Upcoming field value if set, zero value otherwise.
func (o *SummaryEventResponse) GetUpcoming() int32 {
	if o == nil || o.Upcoming == nil {
		var ret int32
		return ret
	}
	return *o.Upcoming
}

// GetUpcomingOk returns a tuple with the Upcoming field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SummaryEventResponse) GetUpcomingOk() (*int32, bool) {
	if o == nil || o.Upcoming == nil {
		return nil, false
	}
	return o.Upcoming, true
}

// HasUpcoming returns a boolean if a field has been set.
func (o *SummaryEventResponse) HasUpcoming() bool {
	if o != nil && o.Upcoming != nil {
		return true
	}

	return false
}

// SetUpcoming gets a reference to the given int32 and assigns it to the Upcoming field.
func (o *SummaryEventResponse) SetUpcoming(v int32) {
	o.Upcoming = &v
}

func (o SummaryEventResponse) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.Today != nil {
		toSerialize["today"] = o.Today
	}
	if o.Upcoming != nil {
		toSerialize["upcoming"] = o.Upcoming
	}
	return json.Marshal(toSerialize)
}

type NullableSummaryEventResponse struct {
	value *SummaryEventResponse
	isSet bool
}

func (v NullableSummaryEventResponse) Get() *SummaryEventResponse {
	return v.value
}

func (v *NullableSummaryEventResponse) Set(val *SummaryEventResponse) {
	v.value = val
	v.isSet = true
}

func (v NullableSummaryEventResponse) IsSet() bool {
	return v.isSet
}

func (v *NullableSummaryEventResponse) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableSummaryEventResponse(val *SummaryEventResponse) *NullableSummaryEventResponse {
	return &NullableSummaryEventResponse{value: val, isSet: true}
}

func (v NullableSummaryEventResponse) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableSummaryEventResponse) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


