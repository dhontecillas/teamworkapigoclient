/*
 * Teamwork Projects API
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * API version: 
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package pmv1

import (
	"encoding/json"
)

// InlineResponse20048Posts struct for InlineResponse20048Posts
type InlineResponse20048Posts struct {
	AttachmentsCount *string `json:"attachments-count,omitempty"`
	AuthorAvatarUrl *string `json:"author-avatar-url,omitempty"`
	AuthorFirstName *string `json:"author-first-name,omitempty"`
	AuthorId *string `json:"author-id,omitempty"`
	AuthorLastName *string `json:"author-last-name,omitempty"`
	Body *string `json:"body,omitempty"`
	CategoryId *string `json:"category-id,omitempty"`
	CategoryName *string `json:"category-name,omitempty"`
	CommentsCount *string `json:"comments-count,omitempty"`
	ContentType *string `json:"content-type,omitempty"`
	Id *string `json:"id,omitempty"`
	IsRead *string `json:"isRead,omitempty"`
	LastChangedOn *string `json:"last-changed-on,omitempty"`
	LastCommentDate *string `json:"last-comment-date,omitempty"`
	MilestoneId *string `json:"milestone-id,omitempty"`
	PostedOn *string `json:"posted-on,omitempty"`
	Private *string `json:"private,omitempty"`
	ProjectId *string `json:"project-id,omitempty"`
	Title *string `json:"title,omitempty"`
	UserDisplayPostedDate *string `json:"user-display-posted-date,omitempty"`
	UserDisplayPostedTime *string `json:"user-display-posted-time,omitempty"`
}

// NewInlineResponse20048Posts instantiates a new InlineResponse20048Posts object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewInlineResponse20048Posts() *InlineResponse20048Posts {
	this := InlineResponse20048Posts{}
	return &this
}

// NewInlineResponse20048PostsWithDefaults instantiates a new InlineResponse20048Posts object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewInlineResponse20048PostsWithDefaults() *InlineResponse20048Posts {
	this := InlineResponse20048Posts{}
	return &this
}

// GetAttachmentsCount returns the AttachmentsCount field value if set, zero value otherwise.
func (o *InlineResponse20048Posts) GetAttachmentsCount() string {
	if o == nil || o.AttachmentsCount == nil {
		var ret string
		return ret
	}
	return *o.AttachmentsCount
}

// GetAttachmentsCountOk returns a tuple with the AttachmentsCount field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InlineResponse20048Posts) GetAttachmentsCountOk() (*string, bool) {
	if o == nil || o.AttachmentsCount == nil {
		return nil, false
	}
	return o.AttachmentsCount, true
}

// HasAttachmentsCount returns a boolean if a field has been set.
func (o *InlineResponse20048Posts) HasAttachmentsCount() bool {
	if o != nil && o.AttachmentsCount != nil {
		return true
	}

	return false
}

// SetAttachmentsCount gets a reference to the given string and assigns it to the AttachmentsCount field.
func (o *InlineResponse20048Posts) SetAttachmentsCount(v string) {
	o.AttachmentsCount = &v
}

// GetAuthorAvatarUrl returns the AuthorAvatarUrl field value if set, zero value otherwise.
func (o *InlineResponse20048Posts) GetAuthorAvatarUrl() string {
	if o == nil || o.AuthorAvatarUrl == nil {
		var ret string
		return ret
	}
	return *o.AuthorAvatarUrl
}

// GetAuthorAvatarUrlOk returns a tuple with the AuthorAvatarUrl field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InlineResponse20048Posts) GetAuthorAvatarUrlOk() (*string, bool) {
	if o == nil || o.AuthorAvatarUrl == nil {
		return nil, false
	}
	return o.AuthorAvatarUrl, true
}

// HasAuthorAvatarUrl returns a boolean if a field has been set.
func (o *InlineResponse20048Posts) HasAuthorAvatarUrl() bool {
	if o != nil && o.AuthorAvatarUrl != nil {
		return true
	}

	return false
}

// SetAuthorAvatarUrl gets a reference to the given string and assigns it to the AuthorAvatarUrl field.
func (o *InlineResponse20048Posts) SetAuthorAvatarUrl(v string) {
	o.AuthorAvatarUrl = &v
}

// GetAuthorFirstName returns the AuthorFirstName field value if set, zero value otherwise.
func (o *InlineResponse20048Posts) GetAuthorFirstName() string {
	if o == nil || o.AuthorFirstName == nil {
		var ret string
		return ret
	}
	return *o.AuthorFirstName
}

// GetAuthorFirstNameOk returns a tuple with the AuthorFirstName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InlineResponse20048Posts) GetAuthorFirstNameOk() (*string, bool) {
	if o == nil || o.AuthorFirstName == nil {
		return nil, false
	}
	return o.AuthorFirstName, true
}

// HasAuthorFirstName returns a boolean if a field has been set.
func (o *InlineResponse20048Posts) HasAuthorFirstName() bool {
	if o != nil && o.AuthorFirstName != nil {
		return true
	}

	return false
}

// SetAuthorFirstName gets a reference to the given string and assigns it to the AuthorFirstName field.
func (o *InlineResponse20048Posts) SetAuthorFirstName(v string) {
	o.AuthorFirstName = &v
}

// GetAuthorId returns the AuthorId field value if set, zero value otherwise.
func (o *InlineResponse20048Posts) GetAuthorId() string {
	if o == nil || o.AuthorId == nil {
		var ret string
		return ret
	}
	return *o.AuthorId
}

// GetAuthorIdOk returns a tuple with the AuthorId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InlineResponse20048Posts) GetAuthorIdOk() (*string, bool) {
	if o == nil || o.AuthorId == nil {
		return nil, false
	}
	return o.AuthorId, true
}

// HasAuthorId returns a boolean if a field has been set.
func (o *InlineResponse20048Posts) HasAuthorId() bool {
	if o != nil && o.AuthorId != nil {
		return true
	}

	return false
}

// SetAuthorId gets a reference to the given string and assigns it to the AuthorId field.
func (o *InlineResponse20048Posts) SetAuthorId(v string) {
	o.AuthorId = &v
}

// GetAuthorLastName returns the AuthorLastName field value if set, zero value otherwise.
func (o *InlineResponse20048Posts) GetAuthorLastName() string {
	if o == nil || o.AuthorLastName == nil {
		var ret string
		return ret
	}
	return *o.AuthorLastName
}

// GetAuthorLastNameOk returns a tuple with the AuthorLastName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InlineResponse20048Posts) GetAuthorLastNameOk() (*string, bool) {
	if o == nil || o.AuthorLastName == nil {
		return nil, false
	}
	return o.AuthorLastName, true
}

// HasAuthorLastName returns a boolean if a field has been set.
func (o *InlineResponse20048Posts) HasAuthorLastName() bool {
	if o != nil && o.AuthorLastName != nil {
		return true
	}

	return false
}

// SetAuthorLastName gets a reference to the given string and assigns it to the AuthorLastName field.
func (o *InlineResponse20048Posts) SetAuthorLastName(v string) {
	o.AuthorLastName = &v
}

// GetBody returns the Body field value if set, zero value otherwise.
func (o *InlineResponse20048Posts) GetBody() string {
	if o == nil || o.Body == nil {
		var ret string
		return ret
	}
	return *o.Body
}

// GetBodyOk returns a tuple with the Body field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InlineResponse20048Posts) GetBodyOk() (*string, bool) {
	if o == nil || o.Body == nil {
		return nil, false
	}
	return o.Body, true
}

// HasBody returns a boolean if a field has been set.
func (o *InlineResponse20048Posts) HasBody() bool {
	if o != nil && o.Body != nil {
		return true
	}

	return false
}

// SetBody gets a reference to the given string and assigns it to the Body field.
func (o *InlineResponse20048Posts) SetBody(v string) {
	o.Body = &v
}

// GetCategoryId returns the CategoryId field value if set, zero value otherwise.
func (o *InlineResponse20048Posts) GetCategoryId() string {
	if o == nil || o.CategoryId == nil {
		var ret string
		return ret
	}
	return *o.CategoryId
}

// GetCategoryIdOk returns a tuple with the CategoryId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InlineResponse20048Posts) GetCategoryIdOk() (*string, bool) {
	if o == nil || o.CategoryId == nil {
		return nil, false
	}
	return o.CategoryId, true
}

// HasCategoryId returns a boolean if a field has been set.
func (o *InlineResponse20048Posts) HasCategoryId() bool {
	if o != nil && o.CategoryId != nil {
		return true
	}

	return false
}

// SetCategoryId gets a reference to the given string and assigns it to the CategoryId field.
func (o *InlineResponse20048Posts) SetCategoryId(v string) {
	o.CategoryId = &v
}

// GetCategoryName returns the CategoryName field value if set, zero value otherwise.
func (o *InlineResponse20048Posts) GetCategoryName() string {
	if o == nil || o.CategoryName == nil {
		var ret string
		return ret
	}
	return *o.CategoryName
}

// GetCategoryNameOk returns a tuple with the CategoryName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InlineResponse20048Posts) GetCategoryNameOk() (*string, bool) {
	if o == nil || o.CategoryName == nil {
		return nil, false
	}
	return o.CategoryName, true
}

// HasCategoryName returns a boolean if a field has been set.
func (o *InlineResponse20048Posts) HasCategoryName() bool {
	if o != nil && o.CategoryName != nil {
		return true
	}

	return false
}

// SetCategoryName gets a reference to the given string and assigns it to the CategoryName field.
func (o *InlineResponse20048Posts) SetCategoryName(v string) {
	o.CategoryName = &v
}

// GetCommentsCount returns the CommentsCount field value if set, zero value otherwise.
func (o *InlineResponse20048Posts) GetCommentsCount() string {
	if o == nil || o.CommentsCount == nil {
		var ret string
		return ret
	}
	return *o.CommentsCount
}

// GetCommentsCountOk returns a tuple with the CommentsCount field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InlineResponse20048Posts) GetCommentsCountOk() (*string, bool) {
	if o == nil || o.CommentsCount == nil {
		return nil, false
	}
	return o.CommentsCount, true
}

// HasCommentsCount returns a boolean if a field has been set.
func (o *InlineResponse20048Posts) HasCommentsCount() bool {
	if o != nil && o.CommentsCount != nil {
		return true
	}

	return false
}

// SetCommentsCount gets a reference to the given string and assigns it to the CommentsCount field.
func (o *InlineResponse20048Posts) SetCommentsCount(v string) {
	o.CommentsCount = &v
}

// GetContentType returns the ContentType field value if set, zero value otherwise.
func (o *InlineResponse20048Posts) GetContentType() string {
	if o == nil || o.ContentType == nil {
		var ret string
		return ret
	}
	return *o.ContentType
}

// GetContentTypeOk returns a tuple with the ContentType field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InlineResponse20048Posts) GetContentTypeOk() (*string, bool) {
	if o == nil || o.ContentType == nil {
		return nil, false
	}
	return o.ContentType, true
}

// HasContentType returns a boolean if a field has been set.
func (o *InlineResponse20048Posts) HasContentType() bool {
	if o != nil && o.ContentType != nil {
		return true
	}

	return false
}

// SetContentType gets a reference to the given string and assigns it to the ContentType field.
func (o *InlineResponse20048Posts) SetContentType(v string) {
	o.ContentType = &v
}

// GetId returns the Id field value if set, zero value otherwise.
func (o *InlineResponse20048Posts) GetId() string {
	if o == nil || o.Id == nil {
		var ret string
		return ret
	}
	return *o.Id
}

// GetIdOk returns a tuple with the Id field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InlineResponse20048Posts) GetIdOk() (*string, bool) {
	if o == nil || o.Id == nil {
		return nil, false
	}
	return o.Id, true
}

// HasId returns a boolean if a field has been set.
func (o *InlineResponse20048Posts) HasId() bool {
	if o != nil && o.Id != nil {
		return true
	}

	return false
}

// SetId gets a reference to the given string and assigns it to the Id field.
func (o *InlineResponse20048Posts) SetId(v string) {
	o.Id = &v
}

// GetIsRead returns the IsRead field value if set, zero value otherwise.
func (o *InlineResponse20048Posts) GetIsRead() string {
	if o == nil || o.IsRead == nil {
		var ret string
		return ret
	}
	return *o.IsRead
}

// GetIsReadOk returns a tuple with the IsRead field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InlineResponse20048Posts) GetIsReadOk() (*string, bool) {
	if o == nil || o.IsRead == nil {
		return nil, false
	}
	return o.IsRead, true
}

// HasIsRead returns a boolean if a field has been set.
func (o *InlineResponse20048Posts) HasIsRead() bool {
	if o != nil && o.IsRead != nil {
		return true
	}

	return false
}

// SetIsRead gets a reference to the given string and assigns it to the IsRead field.
func (o *InlineResponse20048Posts) SetIsRead(v string) {
	o.IsRead = &v
}

// GetLastChangedOn returns the LastChangedOn field value if set, zero value otherwise.
func (o *InlineResponse20048Posts) GetLastChangedOn() string {
	if o == nil || o.LastChangedOn == nil {
		var ret string
		return ret
	}
	return *o.LastChangedOn
}

// GetLastChangedOnOk returns a tuple with the LastChangedOn field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InlineResponse20048Posts) GetLastChangedOnOk() (*string, bool) {
	if o == nil || o.LastChangedOn == nil {
		return nil, false
	}
	return o.LastChangedOn, true
}

// HasLastChangedOn returns a boolean if a field has been set.
func (o *InlineResponse20048Posts) HasLastChangedOn() bool {
	if o != nil && o.LastChangedOn != nil {
		return true
	}

	return false
}

// SetLastChangedOn gets a reference to the given string and assigns it to the LastChangedOn field.
func (o *InlineResponse20048Posts) SetLastChangedOn(v string) {
	o.LastChangedOn = &v
}

// GetLastCommentDate returns the LastCommentDate field value if set, zero value otherwise.
func (o *InlineResponse20048Posts) GetLastCommentDate() string {
	if o == nil || o.LastCommentDate == nil {
		var ret string
		return ret
	}
	return *o.LastCommentDate
}

// GetLastCommentDateOk returns a tuple with the LastCommentDate field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InlineResponse20048Posts) GetLastCommentDateOk() (*string, bool) {
	if o == nil || o.LastCommentDate == nil {
		return nil, false
	}
	return o.LastCommentDate, true
}

// HasLastCommentDate returns a boolean if a field has been set.
func (o *InlineResponse20048Posts) HasLastCommentDate() bool {
	if o != nil && o.LastCommentDate != nil {
		return true
	}

	return false
}

// SetLastCommentDate gets a reference to the given string and assigns it to the LastCommentDate field.
func (o *InlineResponse20048Posts) SetLastCommentDate(v string) {
	o.LastCommentDate = &v
}

// GetMilestoneId returns the MilestoneId field value if set, zero value otherwise.
func (o *InlineResponse20048Posts) GetMilestoneId() string {
	if o == nil || o.MilestoneId == nil {
		var ret string
		return ret
	}
	return *o.MilestoneId
}

// GetMilestoneIdOk returns a tuple with the MilestoneId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InlineResponse20048Posts) GetMilestoneIdOk() (*string, bool) {
	if o == nil || o.MilestoneId == nil {
		return nil, false
	}
	return o.MilestoneId, true
}

// HasMilestoneId returns a boolean if a field has been set.
func (o *InlineResponse20048Posts) HasMilestoneId() bool {
	if o != nil && o.MilestoneId != nil {
		return true
	}

	return false
}

// SetMilestoneId gets a reference to the given string and assigns it to the MilestoneId field.
func (o *InlineResponse20048Posts) SetMilestoneId(v string) {
	o.MilestoneId = &v
}

// GetPostedOn returns the PostedOn field value if set, zero value otherwise.
func (o *InlineResponse20048Posts) GetPostedOn() string {
	if o == nil || o.PostedOn == nil {
		var ret string
		return ret
	}
	return *o.PostedOn
}

// GetPostedOnOk returns a tuple with the PostedOn field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InlineResponse20048Posts) GetPostedOnOk() (*string, bool) {
	if o == nil || o.PostedOn == nil {
		return nil, false
	}
	return o.PostedOn, true
}

// HasPostedOn returns a boolean if a field has been set.
func (o *InlineResponse20048Posts) HasPostedOn() bool {
	if o != nil && o.PostedOn != nil {
		return true
	}

	return false
}

// SetPostedOn gets a reference to the given string and assigns it to the PostedOn field.
func (o *InlineResponse20048Posts) SetPostedOn(v string) {
	o.PostedOn = &v
}

// GetPrivate returns the Private field value if set, zero value otherwise.
func (o *InlineResponse20048Posts) GetPrivate() string {
	if o == nil || o.Private == nil {
		var ret string
		return ret
	}
	return *o.Private
}

// GetPrivateOk returns a tuple with the Private field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InlineResponse20048Posts) GetPrivateOk() (*string, bool) {
	if o == nil || o.Private == nil {
		return nil, false
	}
	return o.Private, true
}

// HasPrivate returns a boolean if a field has been set.
func (o *InlineResponse20048Posts) HasPrivate() bool {
	if o != nil && o.Private != nil {
		return true
	}

	return false
}

// SetPrivate gets a reference to the given string and assigns it to the Private field.
func (o *InlineResponse20048Posts) SetPrivate(v string) {
	o.Private = &v
}

// GetProjectId returns the ProjectId field value if set, zero value otherwise.
func (o *InlineResponse20048Posts) GetProjectId() string {
	if o == nil || o.ProjectId == nil {
		var ret string
		return ret
	}
	return *o.ProjectId
}

// GetProjectIdOk returns a tuple with the ProjectId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InlineResponse20048Posts) GetProjectIdOk() (*string, bool) {
	if o == nil || o.ProjectId == nil {
		return nil, false
	}
	return o.ProjectId, true
}

// HasProjectId returns a boolean if a field has been set.
func (o *InlineResponse20048Posts) HasProjectId() bool {
	if o != nil && o.ProjectId != nil {
		return true
	}

	return false
}

// SetProjectId gets a reference to the given string and assigns it to the ProjectId field.
func (o *InlineResponse20048Posts) SetProjectId(v string) {
	o.ProjectId = &v
}

// GetTitle returns the Title field value if set, zero value otherwise.
func (o *InlineResponse20048Posts) GetTitle() string {
	if o == nil || o.Title == nil {
		var ret string
		return ret
	}
	return *o.Title
}

// GetTitleOk returns a tuple with the Title field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InlineResponse20048Posts) GetTitleOk() (*string, bool) {
	if o == nil || o.Title == nil {
		return nil, false
	}
	return o.Title, true
}

// HasTitle returns a boolean if a field has been set.
func (o *InlineResponse20048Posts) HasTitle() bool {
	if o != nil && o.Title != nil {
		return true
	}

	return false
}

// SetTitle gets a reference to the given string and assigns it to the Title field.
func (o *InlineResponse20048Posts) SetTitle(v string) {
	o.Title = &v
}

// GetUserDisplayPostedDate returns the UserDisplayPostedDate field value if set, zero value otherwise.
func (o *InlineResponse20048Posts) GetUserDisplayPostedDate() string {
	if o == nil || o.UserDisplayPostedDate == nil {
		var ret string
		return ret
	}
	return *o.UserDisplayPostedDate
}

// GetUserDisplayPostedDateOk returns a tuple with the UserDisplayPostedDate field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InlineResponse20048Posts) GetUserDisplayPostedDateOk() (*string, bool) {
	if o == nil || o.UserDisplayPostedDate == nil {
		return nil, false
	}
	return o.UserDisplayPostedDate, true
}

// HasUserDisplayPostedDate returns a boolean if a field has been set.
func (o *InlineResponse20048Posts) HasUserDisplayPostedDate() bool {
	if o != nil && o.UserDisplayPostedDate != nil {
		return true
	}

	return false
}

// SetUserDisplayPostedDate gets a reference to the given string and assigns it to the UserDisplayPostedDate field.
func (o *InlineResponse20048Posts) SetUserDisplayPostedDate(v string) {
	o.UserDisplayPostedDate = &v
}

// GetUserDisplayPostedTime returns the UserDisplayPostedTime field value if set, zero value otherwise.
func (o *InlineResponse20048Posts) GetUserDisplayPostedTime() string {
	if o == nil || o.UserDisplayPostedTime == nil {
		var ret string
		return ret
	}
	return *o.UserDisplayPostedTime
}

// GetUserDisplayPostedTimeOk returns a tuple with the UserDisplayPostedTime field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InlineResponse20048Posts) GetUserDisplayPostedTimeOk() (*string, bool) {
	if o == nil || o.UserDisplayPostedTime == nil {
		return nil, false
	}
	return o.UserDisplayPostedTime, true
}

// HasUserDisplayPostedTime returns a boolean if a field has been set.
func (o *InlineResponse20048Posts) HasUserDisplayPostedTime() bool {
	if o != nil && o.UserDisplayPostedTime != nil {
		return true
	}

	return false
}

// SetUserDisplayPostedTime gets a reference to the given string and assigns it to the UserDisplayPostedTime field.
func (o *InlineResponse20048Posts) SetUserDisplayPostedTime(v string) {
	o.UserDisplayPostedTime = &v
}

func (o InlineResponse20048Posts) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.AttachmentsCount != nil {
		toSerialize["attachments-count"] = o.AttachmentsCount
	}
	if o.AuthorAvatarUrl != nil {
		toSerialize["author-avatar-url"] = o.AuthorAvatarUrl
	}
	if o.AuthorFirstName != nil {
		toSerialize["author-first-name"] = o.AuthorFirstName
	}
	if o.AuthorId != nil {
		toSerialize["author-id"] = o.AuthorId
	}
	if o.AuthorLastName != nil {
		toSerialize["author-last-name"] = o.AuthorLastName
	}
	if o.Body != nil {
		toSerialize["body"] = o.Body
	}
	if o.CategoryId != nil {
		toSerialize["category-id"] = o.CategoryId
	}
	if o.CategoryName != nil {
		toSerialize["category-name"] = o.CategoryName
	}
	if o.CommentsCount != nil {
		toSerialize["comments-count"] = o.CommentsCount
	}
	if o.ContentType != nil {
		toSerialize["content-type"] = o.ContentType
	}
	if o.Id != nil {
		toSerialize["id"] = o.Id
	}
	if o.IsRead != nil {
		toSerialize["isRead"] = o.IsRead
	}
	if o.LastChangedOn != nil {
		toSerialize["last-changed-on"] = o.LastChangedOn
	}
	if o.LastCommentDate != nil {
		toSerialize["last-comment-date"] = o.LastCommentDate
	}
	if o.MilestoneId != nil {
		toSerialize["milestone-id"] = o.MilestoneId
	}
	if o.PostedOn != nil {
		toSerialize["posted-on"] = o.PostedOn
	}
	if o.Private != nil {
		toSerialize["private"] = o.Private
	}
	if o.ProjectId != nil {
		toSerialize["project-id"] = o.ProjectId
	}
	if o.Title != nil {
		toSerialize["title"] = o.Title
	}
	if o.UserDisplayPostedDate != nil {
		toSerialize["user-display-posted-date"] = o.UserDisplayPostedDate
	}
	if o.UserDisplayPostedTime != nil {
		toSerialize["user-display-posted-time"] = o.UserDisplayPostedTime
	}
	return json.Marshal(toSerialize)
}

type NullableInlineResponse20048Posts struct {
	value *InlineResponse20048Posts
	isSet bool
}

func (v NullableInlineResponse20048Posts) Get() *InlineResponse20048Posts {
	return v.value
}

func (v *NullableInlineResponse20048Posts) Set(val *InlineResponse20048Posts) {
	v.value = val
	v.isSet = true
}

func (v NullableInlineResponse20048Posts) IsSet() bool {
	return v.isSet
}

func (v *NullableInlineResponse20048Posts) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableInlineResponse20048Posts(val *InlineResponse20048Posts) *NullableInlineResponse20048Posts {
	return &NullableInlineResponse20048Posts{value: val, isSet: true}
}

func (v NullableInlineResponse20048Posts) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableInlineResponse20048Posts) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


