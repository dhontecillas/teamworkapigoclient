/*
 * Teamwork.com Projects API
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * API version: 3.0
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package projv3

import (
	"encoding/json"
)

// ViewPublicForm PublicForm is a publically viewable version of Form
type ViewPublicForm struct {
	Banner *ViewBanner `json:"banner,omitempty"`
	ConfirmationMessage *string `json:"confirmationMessage,omitempty"`
	Content *ViewContent `json:"content,omitempty"`
	PromptAdditionalSubmissions *bool `json:"promptAdditionalSubmissions,omitempty"`
	Token *ViewToken `json:"token,omitempty"`
}

// NewViewPublicForm instantiates a new ViewPublicForm object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewViewPublicForm() *ViewPublicForm {
	this := ViewPublicForm{}
	return &this
}

// NewViewPublicFormWithDefaults instantiates a new ViewPublicForm object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewViewPublicFormWithDefaults() *ViewPublicForm {
	this := ViewPublicForm{}
	return &this
}

// GetBanner returns the Banner field value if set, zero value otherwise.
func (o *ViewPublicForm) GetBanner() ViewBanner {
	if o == nil || o.Banner == nil {
		var ret ViewBanner
		return ret
	}
	return *o.Banner
}

// GetBannerOk returns a tuple with the Banner field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ViewPublicForm) GetBannerOk() (*ViewBanner, bool) {
	if o == nil || o.Banner == nil {
		return nil, false
	}
	return o.Banner, true
}

// HasBanner returns a boolean if a field has been set.
func (o *ViewPublicForm) HasBanner() bool {
	if o != nil && o.Banner != nil {
		return true
	}

	return false
}

// SetBanner gets a reference to the given ViewBanner and assigns it to the Banner field.
func (o *ViewPublicForm) SetBanner(v ViewBanner) {
	o.Banner = &v
}

// GetConfirmationMessage returns the ConfirmationMessage field value if set, zero value otherwise.
func (o *ViewPublicForm) GetConfirmationMessage() string {
	if o == nil || o.ConfirmationMessage == nil {
		var ret string
		return ret
	}
	return *o.ConfirmationMessage
}

// GetConfirmationMessageOk returns a tuple with the ConfirmationMessage field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ViewPublicForm) GetConfirmationMessageOk() (*string, bool) {
	if o == nil || o.ConfirmationMessage == nil {
		return nil, false
	}
	return o.ConfirmationMessage, true
}

// HasConfirmationMessage returns a boolean if a field has been set.
func (o *ViewPublicForm) HasConfirmationMessage() bool {
	if o != nil && o.ConfirmationMessage != nil {
		return true
	}

	return false
}

// SetConfirmationMessage gets a reference to the given string and assigns it to the ConfirmationMessage field.
func (o *ViewPublicForm) SetConfirmationMessage(v string) {
	o.ConfirmationMessage = &v
}

// GetContent returns the Content field value if set, zero value otherwise.
func (o *ViewPublicForm) GetContent() ViewContent {
	if o == nil || o.Content == nil {
		var ret ViewContent
		return ret
	}
	return *o.Content
}

// GetContentOk returns a tuple with the Content field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ViewPublicForm) GetContentOk() (*ViewContent, bool) {
	if o == nil || o.Content == nil {
		return nil, false
	}
	return o.Content, true
}

// HasContent returns a boolean if a field has been set.
func (o *ViewPublicForm) HasContent() bool {
	if o != nil && o.Content != nil {
		return true
	}

	return false
}

// SetContent gets a reference to the given ViewContent and assigns it to the Content field.
func (o *ViewPublicForm) SetContent(v ViewContent) {
	o.Content = &v
}

// GetPromptAdditionalSubmissions returns the PromptAdditionalSubmissions field value if set, zero value otherwise.
func (o *ViewPublicForm) GetPromptAdditionalSubmissions() bool {
	if o == nil || o.PromptAdditionalSubmissions == nil {
		var ret bool
		return ret
	}
	return *o.PromptAdditionalSubmissions
}

// GetPromptAdditionalSubmissionsOk returns a tuple with the PromptAdditionalSubmissions field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ViewPublicForm) GetPromptAdditionalSubmissionsOk() (*bool, bool) {
	if o == nil || o.PromptAdditionalSubmissions == nil {
		return nil, false
	}
	return o.PromptAdditionalSubmissions, true
}

// HasPromptAdditionalSubmissions returns a boolean if a field has been set.
func (o *ViewPublicForm) HasPromptAdditionalSubmissions() bool {
	if o != nil && o.PromptAdditionalSubmissions != nil {
		return true
	}

	return false
}

// SetPromptAdditionalSubmissions gets a reference to the given bool and assigns it to the PromptAdditionalSubmissions field.
func (o *ViewPublicForm) SetPromptAdditionalSubmissions(v bool) {
	o.PromptAdditionalSubmissions = &v
}

// GetToken returns the Token field value if set, zero value otherwise.
func (o *ViewPublicForm) GetToken() ViewToken {
	if o == nil || o.Token == nil {
		var ret ViewToken
		return ret
	}
	return *o.Token
}

// GetTokenOk returns a tuple with the Token field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ViewPublicForm) GetTokenOk() (*ViewToken, bool) {
	if o == nil || o.Token == nil {
		return nil, false
	}
	return o.Token, true
}

// HasToken returns a boolean if a field has been set.
func (o *ViewPublicForm) HasToken() bool {
	if o != nil && o.Token != nil {
		return true
	}

	return false
}

// SetToken gets a reference to the given ViewToken and assigns it to the Token field.
func (o *ViewPublicForm) SetToken(v ViewToken) {
	o.Token = &v
}

func (o ViewPublicForm) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.Banner != nil {
		toSerialize["banner"] = o.Banner
	}
	if o.ConfirmationMessage != nil {
		toSerialize["confirmationMessage"] = o.ConfirmationMessage
	}
	if o.Content != nil {
		toSerialize["content"] = o.Content
	}
	if o.PromptAdditionalSubmissions != nil {
		toSerialize["promptAdditionalSubmissions"] = o.PromptAdditionalSubmissions
	}
	if o.Token != nil {
		toSerialize["token"] = o.Token
	}
	return json.Marshal(toSerialize)
}

type NullableViewPublicForm struct {
	value *ViewPublicForm
	isSet bool
}

func (v NullableViewPublicForm) Get() *ViewPublicForm {
	return v.value
}

func (v *NullableViewPublicForm) Set(val *ViewPublicForm) {
	v.value = val
	v.isSet = true
}

func (v NullableViewPublicForm) IsSet() bool {
	return v.isSet
}

func (v *NullableViewPublicForm) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableViewPublicForm(val *ViewPublicForm) *NullableViewPublicForm {
	return &NullableViewPublicForm{value: val, isSet: true}
}

func (v NullableViewPublicForm) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableViewPublicForm) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


