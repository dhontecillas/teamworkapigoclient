/*
 * Teamwork Projects API
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * API version: 
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package pmv1

import (
	"encoding/json"
)

// TasklistsIdJsonTodoList Please note: You can also include 'project-id' in the json/xml to move this timelog to another project
type TasklistsIdJsonTodoList struct {
	Description *string `json:"description,omitempty"`
	GrantAccessTo *string `json:"grant-access-to,omitempty"`
	MilestoneId *string `json:"milestone-id,omitempty"`
	Name *string `json:"name,omitempty"`
	Private *string `json:"private,omitempty"`
}

// NewTasklistsIdJsonTodoList instantiates a new TasklistsIdJsonTodoList object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewTasklistsIdJsonTodoList() *TasklistsIdJsonTodoList {
	this := TasklistsIdJsonTodoList{}
	return &this
}

// NewTasklistsIdJsonTodoListWithDefaults instantiates a new TasklistsIdJsonTodoList object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewTasklistsIdJsonTodoListWithDefaults() *TasklistsIdJsonTodoList {
	this := TasklistsIdJsonTodoList{}
	return &this
}

// GetDescription returns the Description field value if set, zero value otherwise.
func (o *TasklistsIdJsonTodoList) GetDescription() string {
	if o == nil || o.Description == nil {
		var ret string
		return ret
	}
	return *o.Description
}

// GetDescriptionOk returns a tuple with the Description field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TasklistsIdJsonTodoList) GetDescriptionOk() (*string, bool) {
	if o == nil || o.Description == nil {
		return nil, false
	}
	return o.Description, true
}

// HasDescription returns a boolean if a field has been set.
func (o *TasklistsIdJsonTodoList) HasDescription() bool {
	if o != nil && o.Description != nil {
		return true
	}

	return false
}

// SetDescription gets a reference to the given string and assigns it to the Description field.
func (o *TasklistsIdJsonTodoList) SetDescription(v string) {
	o.Description = &v
}

// GetGrantAccessTo returns the GrantAccessTo field value if set, zero value otherwise.
func (o *TasklistsIdJsonTodoList) GetGrantAccessTo() string {
	if o == nil || o.GrantAccessTo == nil {
		var ret string
		return ret
	}
	return *o.GrantAccessTo
}

// GetGrantAccessToOk returns a tuple with the GrantAccessTo field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TasklistsIdJsonTodoList) GetGrantAccessToOk() (*string, bool) {
	if o == nil || o.GrantAccessTo == nil {
		return nil, false
	}
	return o.GrantAccessTo, true
}

// HasGrantAccessTo returns a boolean if a field has been set.
func (o *TasklistsIdJsonTodoList) HasGrantAccessTo() bool {
	if o != nil && o.GrantAccessTo != nil {
		return true
	}

	return false
}

// SetGrantAccessTo gets a reference to the given string and assigns it to the GrantAccessTo field.
func (o *TasklistsIdJsonTodoList) SetGrantAccessTo(v string) {
	o.GrantAccessTo = &v
}

// GetMilestoneId returns the MilestoneId field value if set, zero value otherwise.
func (o *TasklistsIdJsonTodoList) GetMilestoneId() string {
	if o == nil || o.MilestoneId == nil {
		var ret string
		return ret
	}
	return *o.MilestoneId
}

// GetMilestoneIdOk returns a tuple with the MilestoneId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TasklistsIdJsonTodoList) GetMilestoneIdOk() (*string, bool) {
	if o == nil || o.MilestoneId == nil {
		return nil, false
	}
	return o.MilestoneId, true
}

// HasMilestoneId returns a boolean if a field has been set.
func (o *TasklistsIdJsonTodoList) HasMilestoneId() bool {
	if o != nil && o.MilestoneId != nil {
		return true
	}

	return false
}

// SetMilestoneId gets a reference to the given string and assigns it to the MilestoneId field.
func (o *TasklistsIdJsonTodoList) SetMilestoneId(v string) {
	o.MilestoneId = &v
}

// GetName returns the Name field value if set, zero value otherwise.
func (o *TasklistsIdJsonTodoList) GetName() string {
	if o == nil || o.Name == nil {
		var ret string
		return ret
	}
	return *o.Name
}

// GetNameOk returns a tuple with the Name field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TasklistsIdJsonTodoList) GetNameOk() (*string, bool) {
	if o == nil || o.Name == nil {
		return nil, false
	}
	return o.Name, true
}

// HasName returns a boolean if a field has been set.
func (o *TasklistsIdJsonTodoList) HasName() bool {
	if o != nil && o.Name != nil {
		return true
	}

	return false
}

// SetName gets a reference to the given string and assigns it to the Name field.
func (o *TasklistsIdJsonTodoList) SetName(v string) {
	o.Name = &v
}

// GetPrivate returns the Private field value if set, zero value otherwise.
func (o *TasklistsIdJsonTodoList) GetPrivate() string {
	if o == nil || o.Private == nil {
		var ret string
		return ret
	}
	return *o.Private
}

// GetPrivateOk returns a tuple with the Private field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TasklistsIdJsonTodoList) GetPrivateOk() (*string, bool) {
	if o == nil || o.Private == nil {
		return nil, false
	}
	return o.Private, true
}

// HasPrivate returns a boolean if a field has been set.
func (o *TasklistsIdJsonTodoList) HasPrivate() bool {
	if o != nil && o.Private != nil {
		return true
	}

	return false
}

// SetPrivate gets a reference to the given string and assigns it to the Private field.
func (o *TasklistsIdJsonTodoList) SetPrivate(v string) {
	o.Private = &v
}

func (o TasklistsIdJsonTodoList) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.Description != nil {
		toSerialize["description"] = o.Description
	}
	if o.GrantAccessTo != nil {
		toSerialize["grant-access-to"] = o.GrantAccessTo
	}
	if o.MilestoneId != nil {
		toSerialize["milestone-id"] = o.MilestoneId
	}
	if o.Name != nil {
		toSerialize["name"] = o.Name
	}
	if o.Private != nil {
		toSerialize["private"] = o.Private
	}
	return json.Marshal(toSerialize)
}

type NullableTasklistsIdJsonTodoList struct {
	value *TasklistsIdJsonTodoList
	isSet bool
}

func (v NullableTasklistsIdJsonTodoList) Get() *TasklistsIdJsonTodoList {
	return v.value
}

func (v *NullableTasklistsIdJsonTodoList) Set(val *TasklistsIdJsonTodoList) {
	v.value = val
	v.isSet = true
}

func (v NullableTasklistsIdJsonTodoList) IsSet() bool {
	return v.isSet
}

func (v *NullableTasklistsIdJsonTodoList) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableTasklistsIdJsonTodoList(val *TasklistsIdJsonTodoList) *NullableTasklistsIdJsonTodoList {
	return &NullableTasklistsIdJsonTodoList{value: val, isSet: true}
}

func (v NullableTasklistsIdJsonTodoList) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableTasklistsIdJsonTodoList) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


