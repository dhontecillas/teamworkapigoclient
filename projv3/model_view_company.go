/*
 * Teamwork.com Projects API
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * API version: 3.0
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package projv3

import (
	"encoding/json"
)

// ViewCompany Company contains all the information returned from a company.
type ViewCompany struct {
	Accounts *int32 `json:"accounts,omitempty"`
	AddressOne *string `json:"addressOne,omitempty"`
	AddressTwo *string `json:"addressTwo,omitempty"`
	CanSeePrivate *bool `json:"canSeePrivate,omitempty"`
	Cid *string `json:"cid,omitempty"`
	City *string `json:"city,omitempty"`
	ClientUsers *int32 `json:"clientUsers,omitempty"`
	CompanyNameUrl *string `json:"companyNameUrl,omitempty"`
	Contacts *int32 `json:"contacts,omitempty"`
	CountryCode *string `json:"countryCode,omitempty"`
	EmailOne *string `json:"emailOne,omitempty"`
	EmailThree *string `json:"emailThree,omitempty"`
	EmailTwo *string `json:"emailTwo,omitempty"`
	Fax *string `json:"fax,omitempty"`
	Id *int32 `json:"id,omitempty"`
	Industry *ViewRelationship `json:"industry,omitempty"`
	IndustryId *int32 `json:"industryId,omitempty"`
	IsOwner *bool `json:"isOwner,omitempty"`
	LogoUrl *string `json:"logoUrl,omitempty"`
	Name *string `json:"name,omitempty"`
	Phone *string `json:"phone,omitempty"`
	PrivateNotesText *string `json:"privateNotesText,omitempty"`
	ProfileText *string `json:"profileText,omitempty"`
	State *string `json:"state,omitempty"`
	Website *string `json:"website,omitempty"`
	Zip *string `json:"zip,omitempty"`
}

// NewViewCompany instantiates a new ViewCompany object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewViewCompany() *ViewCompany {
	this := ViewCompany{}
	return &this
}

// NewViewCompanyWithDefaults instantiates a new ViewCompany object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewViewCompanyWithDefaults() *ViewCompany {
	this := ViewCompany{}
	return &this
}

// GetAccounts returns the Accounts field value if set, zero value otherwise.
func (o *ViewCompany) GetAccounts() int32 {
	if o == nil || o.Accounts == nil {
		var ret int32
		return ret
	}
	return *o.Accounts
}

// GetAccountsOk returns a tuple with the Accounts field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ViewCompany) GetAccountsOk() (*int32, bool) {
	if o == nil || o.Accounts == nil {
		return nil, false
	}
	return o.Accounts, true
}

// HasAccounts returns a boolean if a field has been set.
func (o *ViewCompany) HasAccounts() bool {
	if o != nil && o.Accounts != nil {
		return true
	}

	return false
}

// SetAccounts gets a reference to the given int32 and assigns it to the Accounts field.
func (o *ViewCompany) SetAccounts(v int32) {
	o.Accounts = &v
}

// GetAddressOne returns the AddressOne field value if set, zero value otherwise.
func (o *ViewCompany) GetAddressOne() string {
	if o == nil || o.AddressOne == nil {
		var ret string
		return ret
	}
	return *o.AddressOne
}

// GetAddressOneOk returns a tuple with the AddressOne field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ViewCompany) GetAddressOneOk() (*string, bool) {
	if o == nil || o.AddressOne == nil {
		return nil, false
	}
	return o.AddressOne, true
}

// HasAddressOne returns a boolean if a field has been set.
func (o *ViewCompany) HasAddressOne() bool {
	if o != nil && o.AddressOne != nil {
		return true
	}

	return false
}

// SetAddressOne gets a reference to the given string and assigns it to the AddressOne field.
func (o *ViewCompany) SetAddressOne(v string) {
	o.AddressOne = &v
}

// GetAddressTwo returns the AddressTwo field value if set, zero value otherwise.
func (o *ViewCompany) GetAddressTwo() string {
	if o == nil || o.AddressTwo == nil {
		var ret string
		return ret
	}
	return *o.AddressTwo
}

// GetAddressTwoOk returns a tuple with the AddressTwo field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ViewCompany) GetAddressTwoOk() (*string, bool) {
	if o == nil || o.AddressTwo == nil {
		return nil, false
	}
	return o.AddressTwo, true
}

// HasAddressTwo returns a boolean if a field has been set.
func (o *ViewCompany) HasAddressTwo() bool {
	if o != nil && o.AddressTwo != nil {
		return true
	}

	return false
}

// SetAddressTwo gets a reference to the given string and assigns it to the AddressTwo field.
func (o *ViewCompany) SetAddressTwo(v string) {
	o.AddressTwo = &v
}

// GetCanSeePrivate returns the CanSeePrivate field value if set, zero value otherwise.
func (o *ViewCompany) GetCanSeePrivate() bool {
	if o == nil || o.CanSeePrivate == nil {
		var ret bool
		return ret
	}
	return *o.CanSeePrivate
}

// GetCanSeePrivateOk returns a tuple with the CanSeePrivate field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ViewCompany) GetCanSeePrivateOk() (*bool, bool) {
	if o == nil || o.CanSeePrivate == nil {
		return nil, false
	}
	return o.CanSeePrivate, true
}

// HasCanSeePrivate returns a boolean if a field has been set.
func (o *ViewCompany) HasCanSeePrivate() bool {
	if o != nil && o.CanSeePrivate != nil {
		return true
	}

	return false
}

// SetCanSeePrivate gets a reference to the given bool and assigns it to the CanSeePrivate field.
func (o *ViewCompany) SetCanSeePrivate(v bool) {
	o.CanSeePrivate = &v
}

// GetCid returns the Cid field value if set, zero value otherwise.
func (o *ViewCompany) GetCid() string {
	if o == nil || o.Cid == nil {
		var ret string
		return ret
	}
	return *o.Cid
}

// GetCidOk returns a tuple with the Cid field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ViewCompany) GetCidOk() (*string, bool) {
	if o == nil || o.Cid == nil {
		return nil, false
	}
	return o.Cid, true
}

// HasCid returns a boolean if a field has been set.
func (o *ViewCompany) HasCid() bool {
	if o != nil && o.Cid != nil {
		return true
	}

	return false
}

// SetCid gets a reference to the given string and assigns it to the Cid field.
func (o *ViewCompany) SetCid(v string) {
	o.Cid = &v
}

// GetCity returns the City field value if set, zero value otherwise.
func (o *ViewCompany) GetCity() string {
	if o == nil || o.City == nil {
		var ret string
		return ret
	}
	return *o.City
}

// GetCityOk returns a tuple with the City field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ViewCompany) GetCityOk() (*string, bool) {
	if o == nil || o.City == nil {
		return nil, false
	}
	return o.City, true
}

// HasCity returns a boolean if a field has been set.
func (o *ViewCompany) HasCity() bool {
	if o != nil && o.City != nil {
		return true
	}

	return false
}

// SetCity gets a reference to the given string and assigns it to the City field.
func (o *ViewCompany) SetCity(v string) {
	o.City = &v
}

// GetClientUsers returns the ClientUsers field value if set, zero value otherwise.
func (o *ViewCompany) GetClientUsers() int32 {
	if o == nil || o.ClientUsers == nil {
		var ret int32
		return ret
	}
	return *o.ClientUsers
}

// GetClientUsersOk returns a tuple with the ClientUsers field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ViewCompany) GetClientUsersOk() (*int32, bool) {
	if o == nil || o.ClientUsers == nil {
		return nil, false
	}
	return o.ClientUsers, true
}

// HasClientUsers returns a boolean if a field has been set.
func (o *ViewCompany) HasClientUsers() bool {
	if o != nil && o.ClientUsers != nil {
		return true
	}

	return false
}

// SetClientUsers gets a reference to the given int32 and assigns it to the ClientUsers field.
func (o *ViewCompany) SetClientUsers(v int32) {
	o.ClientUsers = &v
}

// GetCompanyNameUrl returns the CompanyNameUrl field value if set, zero value otherwise.
func (o *ViewCompany) GetCompanyNameUrl() string {
	if o == nil || o.CompanyNameUrl == nil {
		var ret string
		return ret
	}
	return *o.CompanyNameUrl
}

// GetCompanyNameUrlOk returns a tuple with the CompanyNameUrl field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ViewCompany) GetCompanyNameUrlOk() (*string, bool) {
	if o == nil || o.CompanyNameUrl == nil {
		return nil, false
	}
	return o.CompanyNameUrl, true
}

// HasCompanyNameUrl returns a boolean if a field has been set.
func (o *ViewCompany) HasCompanyNameUrl() bool {
	if o != nil && o.CompanyNameUrl != nil {
		return true
	}

	return false
}

// SetCompanyNameUrl gets a reference to the given string and assigns it to the CompanyNameUrl field.
func (o *ViewCompany) SetCompanyNameUrl(v string) {
	o.CompanyNameUrl = &v
}

// GetContacts returns the Contacts field value if set, zero value otherwise.
func (o *ViewCompany) GetContacts() int32 {
	if o == nil || o.Contacts == nil {
		var ret int32
		return ret
	}
	return *o.Contacts
}

// GetContactsOk returns a tuple with the Contacts field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ViewCompany) GetContactsOk() (*int32, bool) {
	if o == nil || o.Contacts == nil {
		return nil, false
	}
	return o.Contacts, true
}

// HasContacts returns a boolean if a field has been set.
func (o *ViewCompany) HasContacts() bool {
	if o != nil && o.Contacts != nil {
		return true
	}

	return false
}

// SetContacts gets a reference to the given int32 and assigns it to the Contacts field.
func (o *ViewCompany) SetContacts(v int32) {
	o.Contacts = &v
}

// GetCountryCode returns the CountryCode field value if set, zero value otherwise.
func (o *ViewCompany) GetCountryCode() string {
	if o == nil || o.CountryCode == nil {
		var ret string
		return ret
	}
	return *o.CountryCode
}

// GetCountryCodeOk returns a tuple with the CountryCode field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ViewCompany) GetCountryCodeOk() (*string, bool) {
	if o == nil || o.CountryCode == nil {
		return nil, false
	}
	return o.CountryCode, true
}

// HasCountryCode returns a boolean if a field has been set.
func (o *ViewCompany) HasCountryCode() bool {
	if o != nil && o.CountryCode != nil {
		return true
	}

	return false
}

// SetCountryCode gets a reference to the given string and assigns it to the CountryCode field.
func (o *ViewCompany) SetCountryCode(v string) {
	o.CountryCode = &v
}

// GetEmailOne returns the EmailOne field value if set, zero value otherwise.
func (o *ViewCompany) GetEmailOne() string {
	if o == nil || o.EmailOne == nil {
		var ret string
		return ret
	}
	return *o.EmailOne
}

// GetEmailOneOk returns a tuple with the EmailOne field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ViewCompany) GetEmailOneOk() (*string, bool) {
	if o == nil || o.EmailOne == nil {
		return nil, false
	}
	return o.EmailOne, true
}

// HasEmailOne returns a boolean if a field has been set.
func (o *ViewCompany) HasEmailOne() bool {
	if o != nil && o.EmailOne != nil {
		return true
	}

	return false
}

// SetEmailOne gets a reference to the given string and assigns it to the EmailOne field.
func (o *ViewCompany) SetEmailOne(v string) {
	o.EmailOne = &v
}

// GetEmailThree returns the EmailThree field value if set, zero value otherwise.
func (o *ViewCompany) GetEmailThree() string {
	if o == nil || o.EmailThree == nil {
		var ret string
		return ret
	}
	return *o.EmailThree
}

// GetEmailThreeOk returns a tuple with the EmailThree field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ViewCompany) GetEmailThreeOk() (*string, bool) {
	if o == nil || o.EmailThree == nil {
		return nil, false
	}
	return o.EmailThree, true
}

// HasEmailThree returns a boolean if a field has been set.
func (o *ViewCompany) HasEmailThree() bool {
	if o != nil && o.EmailThree != nil {
		return true
	}

	return false
}

// SetEmailThree gets a reference to the given string and assigns it to the EmailThree field.
func (o *ViewCompany) SetEmailThree(v string) {
	o.EmailThree = &v
}

// GetEmailTwo returns the EmailTwo field value if set, zero value otherwise.
func (o *ViewCompany) GetEmailTwo() string {
	if o == nil || o.EmailTwo == nil {
		var ret string
		return ret
	}
	return *o.EmailTwo
}

// GetEmailTwoOk returns a tuple with the EmailTwo field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ViewCompany) GetEmailTwoOk() (*string, bool) {
	if o == nil || o.EmailTwo == nil {
		return nil, false
	}
	return o.EmailTwo, true
}

// HasEmailTwo returns a boolean if a field has been set.
func (o *ViewCompany) HasEmailTwo() bool {
	if o != nil && o.EmailTwo != nil {
		return true
	}

	return false
}

// SetEmailTwo gets a reference to the given string and assigns it to the EmailTwo field.
func (o *ViewCompany) SetEmailTwo(v string) {
	o.EmailTwo = &v
}

// GetFax returns the Fax field value if set, zero value otherwise.
func (o *ViewCompany) GetFax() string {
	if o == nil || o.Fax == nil {
		var ret string
		return ret
	}
	return *o.Fax
}

// GetFaxOk returns a tuple with the Fax field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ViewCompany) GetFaxOk() (*string, bool) {
	if o == nil || o.Fax == nil {
		return nil, false
	}
	return o.Fax, true
}

// HasFax returns a boolean if a field has been set.
func (o *ViewCompany) HasFax() bool {
	if o != nil && o.Fax != nil {
		return true
	}

	return false
}

// SetFax gets a reference to the given string and assigns it to the Fax field.
func (o *ViewCompany) SetFax(v string) {
	o.Fax = &v
}

// GetId returns the Id field value if set, zero value otherwise.
func (o *ViewCompany) GetId() int32 {
	if o == nil || o.Id == nil {
		var ret int32
		return ret
	}
	return *o.Id
}

// GetIdOk returns a tuple with the Id field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ViewCompany) GetIdOk() (*int32, bool) {
	if o == nil || o.Id == nil {
		return nil, false
	}
	return o.Id, true
}

// HasId returns a boolean if a field has been set.
func (o *ViewCompany) HasId() bool {
	if o != nil && o.Id != nil {
		return true
	}

	return false
}

// SetId gets a reference to the given int32 and assigns it to the Id field.
func (o *ViewCompany) SetId(v int32) {
	o.Id = &v
}

// GetIndustry returns the Industry field value if set, zero value otherwise.
func (o *ViewCompany) GetIndustry() ViewRelationship {
	if o == nil || o.Industry == nil {
		var ret ViewRelationship
		return ret
	}
	return *o.Industry
}

// GetIndustryOk returns a tuple with the Industry field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ViewCompany) GetIndustryOk() (*ViewRelationship, bool) {
	if o == nil || o.Industry == nil {
		return nil, false
	}
	return o.Industry, true
}

// HasIndustry returns a boolean if a field has been set.
func (o *ViewCompany) HasIndustry() bool {
	if o != nil && o.Industry != nil {
		return true
	}

	return false
}

// SetIndustry gets a reference to the given ViewRelationship and assigns it to the Industry field.
func (o *ViewCompany) SetIndustry(v ViewRelationship) {
	o.Industry = &v
}

// GetIndustryId returns the IndustryId field value if set, zero value otherwise.
func (o *ViewCompany) GetIndustryId() int32 {
	if o == nil || o.IndustryId == nil {
		var ret int32
		return ret
	}
	return *o.IndustryId
}

// GetIndustryIdOk returns a tuple with the IndustryId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ViewCompany) GetIndustryIdOk() (*int32, bool) {
	if o == nil || o.IndustryId == nil {
		return nil, false
	}
	return o.IndustryId, true
}

// HasIndustryId returns a boolean if a field has been set.
func (o *ViewCompany) HasIndustryId() bool {
	if o != nil && o.IndustryId != nil {
		return true
	}

	return false
}

// SetIndustryId gets a reference to the given int32 and assigns it to the IndustryId field.
func (o *ViewCompany) SetIndustryId(v int32) {
	o.IndustryId = &v
}

// GetIsOwner returns the IsOwner field value if set, zero value otherwise.
func (o *ViewCompany) GetIsOwner() bool {
	if o == nil || o.IsOwner == nil {
		var ret bool
		return ret
	}
	return *o.IsOwner
}

// GetIsOwnerOk returns a tuple with the IsOwner field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ViewCompany) GetIsOwnerOk() (*bool, bool) {
	if o == nil || o.IsOwner == nil {
		return nil, false
	}
	return o.IsOwner, true
}

// HasIsOwner returns a boolean if a field has been set.
func (o *ViewCompany) HasIsOwner() bool {
	if o != nil && o.IsOwner != nil {
		return true
	}

	return false
}

// SetIsOwner gets a reference to the given bool and assigns it to the IsOwner field.
func (o *ViewCompany) SetIsOwner(v bool) {
	o.IsOwner = &v
}

// GetLogoUrl returns the LogoUrl field value if set, zero value otherwise.
func (o *ViewCompany) GetLogoUrl() string {
	if o == nil || o.LogoUrl == nil {
		var ret string
		return ret
	}
	return *o.LogoUrl
}

// GetLogoUrlOk returns a tuple with the LogoUrl field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ViewCompany) GetLogoUrlOk() (*string, bool) {
	if o == nil || o.LogoUrl == nil {
		return nil, false
	}
	return o.LogoUrl, true
}

// HasLogoUrl returns a boolean if a field has been set.
func (o *ViewCompany) HasLogoUrl() bool {
	if o != nil && o.LogoUrl != nil {
		return true
	}

	return false
}

// SetLogoUrl gets a reference to the given string and assigns it to the LogoUrl field.
func (o *ViewCompany) SetLogoUrl(v string) {
	o.LogoUrl = &v
}

// GetName returns the Name field value if set, zero value otherwise.
func (o *ViewCompany) GetName() string {
	if o == nil || o.Name == nil {
		var ret string
		return ret
	}
	return *o.Name
}

// GetNameOk returns a tuple with the Name field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ViewCompany) GetNameOk() (*string, bool) {
	if o == nil || o.Name == nil {
		return nil, false
	}
	return o.Name, true
}

// HasName returns a boolean if a field has been set.
func (o *ViewCompany) HasName() bool {
	if o != nil && o.Name != nil {
		return true
	}

	return false
}

// SetName gets a reference to the given string and assigns it to the Name field.
func (o *ViewCompany) SetName(v string) {
	o.Name = &v
}

// GetPhone returns the Phone field value if set, zero value otherwise.
func (o *ViewCompany) GetPhone() string {
	if o == nil || o.Phone == nil {
		var ret string
		return ret
	}
	return *o.Phone
}

// GetPhoneOk returns a tuple with the Phone field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ViewCompany) GetPhoneOk() (*string, bool) {
	if o == nil || o.Phone == nil {
		return nil, false
	}
	return o.Phone, true
}

// HasPhone returns a boolean if a field has been set.
func (o *ViewCompany) HasPhone() bool {
	if o != nil && o.Phone != nil {
		return true
	}

	return false
}

// SetPhone gets a reference to the given string and assigns it to the Phone field.
func (o *ViewCompany) SetPhone(v string) {
	o.Phone = &v
}

// GetPrivateNotesText returns the PrivateNotesText field value if set, zero value otherwise.
func (o *ViewCompany) GetPrivateNotesText() string {
	if o == nil || o.PrivateNotesText == nil {
		var ret string
		return ret
	}
	return *o.PrivateNotesText
}

// GetPrivateNotesTextOk returns a tuple with the PrivateNotesText field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ViewCompany) GetPrivateNotesTextOk() (*string, bool) {
	if o == nil || o.PrivateNotesText == nil {
		return nil, false
	}
	return o.PrivateNotesText, true
}

// HasPrivateNotesText returns a boolean if a field has been set.
func (o *ViewCompany) HasPrivateNotesText() bool {
	if o != nil && o.PrivateNotesText != nil {
		return true
	}

	return false
}

// SetPrivateNotesText gets a reference to the given string and assigns it to the PrivateNotesText field.
func (o *ViewCompany) SetPrivateNotesText(v string) {
	o.PrivateNotesText = &v
}

// GetProfileText returns the ProfileText field value if set, zero value otherwise.
func (o *ViewCompany) GetProfileText() string {
	if o == nil || o.ProfileText == nil {
		var ret string
		return ret
	}
	return *o.ProfileText
}

// GetProfileTextOk returns a tuple with the ProfileText field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ViewCompany) GetProfileTextOk() (*string, bool) {
	if o == nil || o.ProfileText == nil {
		return nil, false
	}
	return o.ProfileText, true
}

// HasProfileText returns a boolean if a field has been set.
func (o *ViewCompany) HasProfileText() bool {
	if o != nil && o.ProfileText != nil {
		return true
	}

	return false
}

// SetProfileText gets a reference to the given string and assigns it to the ProfileText field.
func (o *ViewCompany) SetProfileText(v string) {
	o.ProfileText = &v
}

// GetState returns the State field value if set, zero value otherwise.
func (o *ViewCompany) GetState() string {
	if o == nil || o.State == nil {
		var ret string
		return ret
	}
	return *o.State
}

// GetStateOk returns a tuple with the State field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ViewCompany) GetStateOk() (*string, bool) {
	if o == nil || o.State == nil {
		return nil, false
	}
	return o.State, true
}

// HasState returns a boolean if a field has been set.
func (o *ViewCompany) HasState() bool {
	if o != nil && o.State != nil {
		return true
	}

	return false
}

// SetState gets a reference to the given string and assigns it to the State field.
func (o *ViewCompany) SetState(v string) {
	o.State = &v
}

// GetWebsite returns the Website field value if set, zero value otherwise.
func (o *ViewCompany) GetWebsite() string {
	if o == nil || o.Website == nil {
		var ret string
		return ret
	}
	return *o.Website
}

// GetWebsiteOk returns a tuple with the Website field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ViewCompany) GetWebsiteOk() (*string, bool) {
	if o == nil || o.Website == nil {
		return nil, false
	}
	return o.Website, true
}

// HasWebsite returns a boolean if a field has been set.
func (o *ViewCompany) HasWebsite() bool {
	if o != nil && o.Website != nil {
		return true
	}

	return false
}

// SetWebsite gets a reference to the given string and assigns it to the Website field.
func (o *ViewCompany) SetWebsite(v string) {
	o.Website = &v
}

// GetZip returns the Zip field value if set, zero value otherwise.
func (o *ViewCompany) GetZip() string {
	if o == nil || o.Zip == nil {
		var ret string
		return ret
	}
	return *o.Zip
}

// GetZipOk returns a tuple with the Zip field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ViewCompany) GetZipOk() (*string, bool) {
	if o == nil || o.Zip == nil {
		return nil, false
	}
	return o.Zip, true
}

// HasZip returns a boolean if a field has been set.
func (o *ViewCompany) HasZip() bool {
	if o != nil && o.Zip != nil {
		return true
	}

	return false
}

// SetZip gets a reference to the given string and assigns it to the Zip field.
func (o *ViewCompany) SetZip(v string) {
	o.Zip = &v
}

func (o ViewCompany) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.Accounts != nil {
		toSerialize["accounts"] = o.Accounts
	}
	if o.AddressOne != nil {
		toSerialize["addressOne"] = o.AddressOne
	}
	if o.AddressTwo != nil {
		toSerialize["addressTwo"] = o.AddressTwo
	}
	if o.CanSeePrivate != nil {
		toSerialize["canSeePrivate"] = o.CanSeePrivate
	}
	if o.Cid != nil {
		toSerialize["cid"] = o.Cid
	}
	if o.City != nil {
		toSerialize["city"] = o.City
	}
	if o.ClientUsers != nil {
		toSerialize["clientUsers"] = o.ClientUsers
	}
	if o.CompanyNameUrl != nil {
		toSerialize["companyNameUrl"] = o.CompanyNameUrl
	}
	if o.Contacts != nil {
		toSerialize["contacts"] = o.Contacts
	}
	if o.CountryCode != nil {
		toSerialize["countryCode"] = o.CountryCode
	}
	if o.EmailOne != nil {
		toSerialize["emailOne"] = o.EmailOne
	}
	if o.EmailThree != nil {
		toSerialize["emailThree"] = o.EmailThree
	}
	if o.EmailTwo != nil {
		toSerialize["emailTwo"] = o.EmailTwo
	}
	if o.Fax != nil {
		toSerialize["fax"] = o.Fax
	}
	if o.Id != nil {
		toSerialize["id"] = o.Id
	}
	if o.Industry != nil {
		toSerialize["industry"] = o.Industry
	}
	if o.IndustryId != nil {
		toSerialize["industryId"] = o.IndustryId
	}
	if o.IsOwner != nil {
		toSerialize["isOwner"] = o.IsOwner
	}
	if o.LogoUrl != nil {
		toSerialize["logoUrl"] = o.LogoUrl
	}
	if o.Name != nil {
		toSerialize["name"] = o.Name
	}
	if o.Phone != nil {
		toSerialize["phone"] = o.Phone
	}
	if o.PrivateNotesText != nil {
		toSerialize["privateNotesText"] = o.PrivateNotesText
	}
	if o.ProfileText != nil {
		toSerialize["profileText"] = o.ProfileText
	}
	if o.State != nil {
		toSerialize["state"] = o.State
	}
	if o.Website != nil {
		toSerialize["website"] = o.Website
	}
	if o.Zip != nil {
		toSerialize["zip"] = o.Zip
	}
	return json.Marshal(toSerialize)
}

type NullableViewCompany struct {
	value *ViewCompany
	isSet bool
}

func (v NullableViewCompany) Get() *ViewCompany {
	return v.value
}

func (v *NullableViewCompany) Set(val *ViewCompany) {
	v.value = val
	v.isSet = true
}

func (v NullableViewCompany) IsSet() bool {
	return v.isSet
}

func (v *NullableViewCompany) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableViewCompany(val *ViewCompany) *NullableViewCompany {
	return &NullableViewCompany{value: val, isSet: true}
}

func (v NullableViewCompany) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableViewCompany) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


