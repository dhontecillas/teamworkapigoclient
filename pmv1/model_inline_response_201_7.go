/*
 * Teamwork Projects API
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * API version: 
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package pmv1

import (
	"encoding/json"
)

// InlineResponse2017 struct for InlineResponse2017
type InlineResponse2017 struct {
	STATUS *string `json:"STATUS,omitempty"`
	Failed *string `json:"failed,omitempty"`
	Success *string `json:"success,omitempty"`
	TaskIds *string `json:"taskIds,omitempty"`
	TasklistId *string `json:"tasklistId,omitempty"`
}

// NewInlineResponse2017 instantiates a new InlineResponse2017 object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewInlineResponse2017() *InlineResponse2017 {
	this := InlineResponse2017{}
	return &this
}

// NewInlineResponse2017WithDefaults instantiates a new InlineResponse2017 object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewInlineResponse2017WithDefaults() *InlineResponse2017 {
	this := InlineResponse2017{}
	return &this
}

// GetSTATUS returns the STATUS field value if set, zero value otherwise.
func (o *InlineResponse2017) GetSTATUS() string {
	if o == nil || o.STATUS == nil {
		var ret string
		return ret
	}
	return *o.STATUS
}

// GetSTATUSOk returns a tuple with the STATUS field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InlineResponse2017) GetSTATUSOk() (*string, bool) {
	if o == nil || o.STATUS == nil {
		return nil, false
	}
	return o.STATUS, true
}

// HasSTATUS returns a boolean if a field has been set.
func (o *InlineResponse2017) HasSTATUS() bool {
	if o != nil && o.STATUS != nil {
		return true
	}

	return false
}

// SetSTATUS gets a reference to the given string and assigns it to the STATUS field.
func (o *InlineResponse2017) SetSTATUS(v string) {
	o.STATUS = &v
}

// GetFailed returns the Failed field value if set, zero value otherwise.
func (o *InlineResponse2017) GetFailed() string {
	if o == nil || o.Failed == nil {
		var ret string
		return ret
	}
	return *o.Failed
}

// GetFailedOk returns a tuple with the Failed field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InlineResponse2017) GetFailedOk() (*string, bool) {
	if o == nil || o.Failed == nil {
		return nil, false
	}
	return o.Failed, true
}

// HasFailed returns a boolean if a field has been set.
func (o *InlineResponse2017) HasFailed() bool {
	if o != nil && o.Failed != nil {
		return true
	}

	return false
}

// SetFailed gets a reference to the given string and assigns it to the Failed field.
func (o *InlineResponse2017) SetFailed(v string) {
	o.Failed = &v
}

// GetSuccess returns the Success field value if set, zero value otherwise.
func (o *InlineResponse2017) GetSuccess() string {
	if o == nil || o.Success == nil {
		var ret string
		return ret
	}
	return *o.Success
}

// GetSuccessOk returns a tuple with the Success field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InlineResponse2017) GetSuccessOk() (*string, bool) {
	if o == nil || o.Success == nil {
		return nil, false
	}
	return o.Success, true
}

// HasSuccess returns a boolean if a field has been set.
func (o *InlineResponse2017) HasSuccess() bool {
	if o != nil && o.Success != nil {
		return true
	}

	return false
}

// SetSuccess gets a reference to the given string and assigns it to the Success field.
func (o *InlineResponse2017) SetSuccess(v string) {
	o.Success = &v
}

// GetTaskIds returns the TaskIds field value if set, zero value otherwise.
func (o *InlineResponse2017) GetTaskIds() string {
	if o == nil || o.TaskIds == nil {
		var ret string
		return ret
	}
	return *o.TaskIds
}

// GetTaskIdsOk returns a tuple with the TaskIds field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InlineResponse2017) GetTaskIdsOk() (*string, bool) {
	if o == nil || o.TaskIds == nil {
		return nil, false
	}
	return o.TaskIds, true
}

// HasTaskIds returns a boolean if a field has been set.
func (o *InlineResponse2017) HasTaskIds() bool {
	if o != nil && o.TaskIds != nil {
		return true
	}

	return false
}

// SetTaskIds gets a reference to the given string and assigns it to the TaskIds field.
func (o *InlineResponse2017) SetTaskIds(v string) {
	o.TaskIds = &v
}

// GetTasklistId returns the TasklistId field value if set, zero value otherwise.
func (o *InlineResponse2017) GetTasklistId() string {
	if o == nil || o.TasklistId == nil {
		var ret string
		return ret
	}
	return *o.TasklistId
}

// GetTasklistIdOk returns a tuple with the TasklistId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InlineResponse2017) GetTasklistIdOk() (*string, bool) {
	if o == nil || o.TasklistId == nil {
		return nil, false
	}
	return o.TasklistId, true
}

// HasTasklistId returns a boolean if a field has been set.
func (o *InlineResponse2017) HasTasklistId() bool {
	if o != nil && o.TasklistId != nil {
		return true
	}

	return false
}

// SetTasklistId gets a reference to the given string and assigns it to the TasklistId field.
func (o *InlineResponse2017) SetTasklistId(v string) {
	o.TasklistId = &v
}

func (o InlineResponse2017) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.STATUS != nil {
		toSerialize["STATUS"] = o.STATUS
	}
	if o.Failed != nil {
		toSerialize["failed"] = o.Failed
	}
	if o.Success != nil {
		toSerialize["success"] = o.Success
	}
	if o.TaskIds != nil {
		toSerialize["taskIds"] = o.TaskIds
	}
	if o.TasklistId != nil {
		toSerialize["tasklistId"] = o.TasklistId
	}
	return json.Marshal(toSerialize)
}

type NullableInlineResponse2017 struct {
	value *InlineResponse2017
	isSet bool
}

func (v NullableInlineResponse2017) Get() *InlineResponse2017 {
	return v.value
}

func (v *NullableInlineResponse2017) Set(val *InlineResponse2017) {
	v.value = val
	v.isSet = true
}

func (v NullableInlineResponse2017) IsSet() bool {
	return v.isSet
}

func (v *NullableInlineResponse2017) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableInlineResponse2017(val *InlineResponse2017) *NullableInlineResponse2017 {
	return &NullableInlineResponse2017{value: val, isSet: true}
}

func (v NullableInlineResponse2017) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableInlineResponse2017) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


