/*
 * Teamwork Projects API
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * API version: 
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package pmv1

import (
	"encoding/json"
)

// InlineResponse20063Emailaddress struct for InlineResponse20063Emailaddress
type InlineResponse20063Emailaddress struct {
	Addresses *[]InlineResponse20063EmailaddressAddresses `json:"addresses,omitempty"`
	Code *string `json:"code,omitempty"`
}

// NewInlineResponse20063Emailaddress instantiates a new InlineResponse20063Emailaddress object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewInlineResponse20063Emailaddress() *InlineResponse20063Emailaddress {
	this := InlineResponse20063Emailaddress{}
	return &this
}

// NewInlineResponse20063EmailaddressWithDefaults instantiates a new InlineResponse20063Emailaddress object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewInlineResponse20063EmailaddressWithDefaults() *InlineResponse20063Emailaddress {
	this := InlineResponse20063Emailaddress{}
	return &this
}

// GetAddresses returns the Addresses field value if set, zero value otherwise.
func (o *InlineResponse20063Emailaddress) GetAddresses() []InlineResponse20063EmailaddressAddresses {
	if o == nil || o.Addresses == nil {
		var ret []InlineResponse20063EmailaddressAddresses
		return ret
	}
	return *o.Addresses
}

// GetAddressesOk returns a tuple with the Addresses field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InlineResponse20063Emailaddress) GetAddressesOk() (*[]InlineResponse20063EmailaddressAddresses, bool) {
	if o == nil || o.Addresses == nil {
		return nil, false
	}
	return o.Addresses, true
}

// HasAddresses returns a boolean if a field has been set.
func (o *InlineResponse20063Emailaddress) HasAddresses() bool {
	if o != nil && o.Addresses != nil {
		return true
	}

	return false
}

// SetAddresses gets a reference to the given []InlineResponse20063EmailaddressAddresses and assigns it to the Addresses field.
func (o *InlineResponse20063Emailaddress) SetAddresses(v []InlineResponse20063EmailaddressAddresses) {
	o.Addresses = &v
}

// GetCode returns the Code field value if set, zero value otherwise.
func (o *InlineResponse20063Emailaddress) GetCode() string {
	if o == nil || o.Code == nil {
		var ret string
		return ret
	}
	return *o.Code
}

// GetCodeOk returns a tuple with the Code field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InlineResponse20063Emailaddress) GetCodeOk() (*string, bool) {
	if o == nil || o.Code == nil {
		return nil, false
	}
	return o.Code, true
}

// HasCode returns a boolean if a field has been set.
func (o *InlineResponse20063Emailaddress) HasCode() bool {
	if o != nil && o.Code != nil {
		return true
	}

	return false
}

// SetCode gets a reference to the given string and assigns it to the Code field.
func (o *InlineResponse20063Emailaddress) SetCode(v string) {
	o.Code = &v
}

func (o InlineResponse20063Emailaddress) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.Addresses != nil {
		toSerialize["addresses"] = o.Addresses
	}
	if o.Code != nil {
		toSerialize["code"] = o.Code
	}
	return json.Marshal(toSerialize)
}

type NullableInlineResponse20063Emailaddress struct {
	value *InlineResponse20063Emailaddress
	isSet bool
}

func (v NullableInlineResponse20063Emailaddress) Get() *InlineResponse20063Emailaddress {
	return v.value
}

func (v *NullableInlineResponse20063Emailaddress) Set(val *InlineResponse20063Emailaddress) {
	v.value = val
	v.isSet = true
}

func (v NullableInlineResponse20063Emailaddress) IsSet() bool {
	return v.isSet
}

func (v *NullableInlineResponse20063Emailaddress) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableInlineResponse20063Emailaddress(val *InlineResponse20063Emailaddress) *NullableInlineResponse20063Emailaddress {
	return &NullableInlineResponse20063Emailaddress{value: val, isSet: true}
}

func (v NullableInlineResponse20063Emailaddress) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableInlineResponse20063Emailaddress) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


