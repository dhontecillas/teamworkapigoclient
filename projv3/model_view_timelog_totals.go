/*
 * Teamwork.com Projects API
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * API version: 3.0
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package projv3

import (
	"encoding/json"
)

// ViewTimelogTotals TimelogTotals contains all the information returned for timelog totals.
type ViewTimelogTotals struct {
	EstimatedMinutes *int32 `json:"estimatedMinutes,omitempty"`
	EstimatedMinutesActive *int32 `json:"estimatedMinutesActive,omitempty"`
	EstimatedMinutesCompleted *int32 `json:"estimatedMinutesCompleted,omitempty"`
	EstimatedMinutesFiltered *int32 `json:"estimatedMinutesFiltered,omitempty"`
	EstimatedMinutesWithLoggedTime *int32 `json:"estimatedMinutesWithLoggedTime,omitempty"`
	Minutes *int32 `json:"minutes,omitempty"`
	MinutesBillable *int32 `json:"minutesBillable,omitempty"`
	MinutesBilled *int32 `json:"minutesBilled,omitempty"`
	MinutesNonBillable *int32 `json:"minutesNonBillable,omitempty"`
	MinutesNonBilled *int32 `json:"minutesNonBilled,omitempty"`
}

// NewViewTimelogTotals instantiates a new ViewTimelogTotals object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewViewTimelogTotals() *ViewTimelogTotals {
	this := ViewTimelogTotals{}
	return &this
}

// NewViewTimelogTotalsWithDefaults instantiates a new ViewTimelogTotals object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewViewTimelogTotalsWithDefaults() *ViewTimelogTotals {
	this := ViewTimelogTotals{}
	return &this
}

// GetEstimatedMinutes returns the EstimatedMinutes field value if set, zero value otherwise.
func (o *ViewTimelogTotals) GetEstimatedMinutes() int32 {
	if o == nil || o.EstimatedMinutes == nil {
		var ret int32
		return ret
	}
	return *o.EstimatedMinutes
}

// GetEstimatedMinutesOk returns a tuple with the EstimatedMinutes field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ViewTimelogTotals) GetEstimatedMinutesOk() (*int32, bool) {
	if o == nil || o.EstimatedMinutes == nil {
		return nil, false
	}
	return o.EstimatedMinutes, true
}

// HasEstimatedMinutes returns a boolean if a field has been set.
func (o *ViewTimelogTotals) HasEstimatedMinutes() bool {
	if o != nil && o.EstimatedMinutes != nil {
		return true
	}

	return false
}

// SetEstimatedMinutes gets a reference to the given int32 and assigns it to the EstimatedMinutes field.
func (o *ViewTimelogTotals) SetEstimatedMinutes(v int32) {
	o.EstimatedMinutes = &v
}

// GetEstimatedMinutesActive returns the EstimatedMinutesActive field value if set, zero value otherwise.
func (o *ViewTimelogTotals) GetEstimatedMinutesActive() int32 {
	if o == nil || o.EstimatedMinutesActive == nil {
		var ret int32
		return ret
	}
	return *o.EstimatedMinutesActive
}

// GetEstimatedMinutesActiveOk returns a tuple with the EstimatedMinutesActive field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ViewTimelogTotals) GetEstimatedMinutesActiveOk() (*int32, bool) {
	if o == nil || o.EstimatedMinutesActive == nil {
		return nil, false
	}
	return o.EstimatedMinutesActive, true
}

// HasEstimatedMinutesActive returns a boolean if a field has been set.
func (o *ViewTimelogTotals) HasEstimatedMinutesActive() bool {
	if o != nil && o.EstimatedMinutesActive != nil {
		return true
	}

	return false
}

// SetEstimatedMinutesActive gets a reference to the given int32 and assigns it to the EstimatedMinutesActive field.
func (o *ViewTimelogTotals) SetEstimatedMinutesActive(v int32) {
	o.EstimatedMinutesActive = &v
}

// GetEstimatedMinutesCompleted returns the EstimatedMinutesCompleted field value if set, zero value otherwise.
func (o *ViewTimelogTotals) GetEstimatedMinutesCompleted() int32 {
	if o == nil || o.EstimatedMinutesCompleted == nil {
		var ret int32
		return ret
	}
	return *o.EstimatedMinutesCompleted
}

// GetEstimatedMinutesCompletedOk returns a tuple with the EstimatedMinutesCompleted field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ViewTimelogTotals) GetEstimatedMinutesCompletedOk() (*int32, bool) {
	if o == nil || o.EstimatedMinutesCompleted == nil {
		return nil, false
	}
	return o.EstimatedMinutesCompleted, true
}

// HasEstimatedMinutesCompleted returns a boolean if a field has been set.
func (o *ViewTimelogTotals) HasEstimatedMinutesCompleted() bool {
	if o != nil && o.EstimatedMinutesCompleted != nil {
		return true
	}

	return false
}

// SetEstimatedMinutesCompleted gets a reference to the given int32 and assigns it to the EstimatedMinutesCompleted field.
func (o *ViewTimelogTotals) SetEstimatedMinutesCompleted(v int32) {
	o.EstimatedMinutesCompleted = &v
}

// GetEstimatedMinutesFiltered returns the EstimatedMinutesFiltered field value if set, zero value otherwise.
func (o *ViewTimelogTotals) GetEstimatedMinutesFiltered() int32 {
	if o == nil || o.EstimatedMinutesFiltered == nil {
		var ret int32
		return ret
	}
	return *o.EstimatedMinutesFiltered
}

// GetEstimatedMinutesFilteredOk returns a tuple with the EstimatedMinutesFiltered field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ViewTimelogTotals) GetEstimatedMinutesFilteredOk() (*int32, bool) {
	if o == nil || o.EstimatedMinutesFiltered == nil {
		return nil, false
	}
	return o.EstimatedMinutesFiltered, true
}

// HasEstimatedMinutesFiltered returns a boolean if a field has been set.
func (o *ViewTimelogTotals) HasEstimatedMinutesFiltered() bool {
	if o != nil && o.EstimatedMinutesFiltered != nil {
		return true
	}

	return false
}

// SetEstimatedMinutesFiltered gets a reference to the given int32 and assigns it to the EstimatedMinutesFiltered field.
func (o *ViewTimelogTotals) SetEstimatedMinutesFiltered(v int32) {
	o.EstimatedMinutesFiltered = &v
}

// GetEstimatedMinutesWithLoggedTime returns the EstimatedMinutesWithLoggedTime field value if set, zero value otherwise.
func (o *ViewTimelogTotals) GetEstimatedMinutesWithLoggedTime() int32 {
	if o == nil || o.EstimatedMinutesWithLoggedTime == nil {
		var ret int32
		return ret
	}
	return *o.EstimatedMinutesWithLoggedTime
}

// GetEstimatedMinutesWithLoggedTimeOk returns a tuple with the EstimatedMinutesWithLoggedTime field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ViewTimelogTotals) GetEstimatedMinutesWithLoggedTimeOk() (*int32, bool) {
	if o == nil || o.EstimatedMinutesWithLoggedTime == nil {
		return nil, false
	}
	return o.EstimatedMinutesWithLoggedTime, true
}

// HasEstimatedMinutesWithLoggedTime returns a boolean if a field has been set.
func (o *ViewTimelogTotals) HasEstimatedMinutesWithLoggedTime() bool {
	if o != nil && o.EstimatedMinutesWithLoggedTime != nil {
		return true
	}

	return false
}

// SetEstimatedMinutesWithLoggedTime gets a reference to the given int32 and assigns it to the EstimatedMinutesWithLoggedTime field.
func (o *ViewTimelogTotals) SetEstimatedMinutesWithLoggedTime(v int32) {
	o.EstimatedMinutesWithLoggedTime = &v
}

// GetMinutes returns the Minutes field value if set, zero value otherwise.
func (o *ViewTimelogTotals) GetMinutes() int32 {
	if o == nil || o.Minutes == nil {
		var ret int32
		return ret
	}
	return *o.Minutes
}

// GetMinutesOk returns a tuple with the Minutes field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ViewTimelogTotals) GetMinutesOk() (*int32, bool) {
	if o == nil || o.Minutes == nil {
		return nil, false
	}
	return o.Minutes, true
}

// HasMinutes returns a boolean if a field has been set.
func (o *ViewTimelogTotals) HasMinutes() bool {
	if o != nil && o.Minutes != nil {
		return true
	}

	return false
}

// SetMinutes gets a reference to the given int32 and assigns it to the Minutes field.
func (o *ViewTimelogTotals) SetMinutes(v int32) {
	o.Minutes = &v
}

// GetMinutesBillable returns the MinutesBillable field value if set, zero value otherwise.
func (o *ViewTimelogTotals) GetMinutesBillable() int32 {
	if o == nil || o.MinutesBillable == nil {
		var ret int32
		return ret
	}
	return *o.MinutesBillable
}

// GetMinutesBillableOk returns a tuple with the MinutesBillable field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ViewTimelogTotals) GetMinutesBillableOk() (*int32, bool) {
	if o == nil || o.MinutesBillable == nil {
		return nil, false
	}
	return o.MinutesBillable, true
}

// HasMinutesBillable returns a boolean if a field has been set.
func (o *ViewTimelogTotals) HasMinutesBillable() bool {
	if o != nil && o.MinutesBillable != nil {
		return true
	}

	return false
}

// SetMinutesBillable gets a reference to the given int32 and assigns it to the MinutesBillable field.
func (o *ViewTimelogTotals) SetMinutesBillable(v int32) {
	o.MinutesBillable = &v
}

// GetMinutesBilled returns the MinutesBilled field value if set, zero value otherwise.
func (o *ViewTimelogTotals) GetMinutesBilled() int32 {
	if o == nil || o.MinutesBilled == nil {
		var ret int32
		return ret
	}
	return *o.MinutesBilled
}

// GetMinutesBilledOk returns a tuple with the MinutesBilled field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ViewTimelogTotals) GetMinutesBilledOk() (*int32, bool) {
	if o == nil || o.MinutesBilled == nil {
		return nil, false
	}
	return o.MinutesBilled, true
}

// HasMinutesBilled returns a boolean if a field has been set.
func (o *ViewTimelogTotals) HasMinutesBilled() bool {
	if o != nil && o.MinutesBilled != nil {
		return true
	}

	return false
}

// SetMinutesBilled gets a reference to the given int32 and assigns it to the MinutesBilled field.
func (o *ViewTimelogTotals) SetMinutesBilled(v int32) {
	o.MinutesBilled = &v
}

// GetMinutesNonBillable returns the MinutesNonBillable field value if set, zero value otherwise.
func (o *ViewTimelogTotals) GetMinutesNonBillable() int32 {
	if o == nil || o.MinutesNonBillable == nil {
		var ret int32
		return ret
	}
	return *o.MinutesNonBillable
}

// GetMinutesNonBillableOk returns a tuple with the MinutesNonBillable field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ViewTimelogTotals) GetMinutesNonBillableOk() (*int32, bool) {
	if o == nil || o.MinutesNonBillable == nil {
		return nil, false
	}
	return o.MinutesNonBillable, true
}

// HasMinutesNonBillable returns a boolean if a field has been set.
func (o *ViewTimelogTotals) HasMinutesNonBillable() bool {
	if o != nil && o.MinutesNonBillable != nil {
		return true
	}

	return false
}

// SetMinutesNonBillable gets a reference to the given int32 and assigns it to the MinutesNonBillable field.
func (o *ViewTimelogTotals) SetMinutesNonBillable(v int32) {
	o.MinutesNonBillable = &v
}

// GetMinutesNonBilled returns the MinutesNonBilled field value if set, zero value otherwise.
func (o *ViewTimelogTotals) GetMinutesNonBilled() int32 {
	if o == nil || o.MinutesNonBilled == nil {
		var ret int32
		return ret
	}
	return *o.MinutesNonBilled
}

// GetMinutesNonBilledOk returns a tuple with the MinutesNonBilled field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ViewTimelogTotals) GetMinutesNonBilledOk() (*int32, bool) {
	if o == nil || o.MinutesNonBilled == nil {
		return nil, false
	}
	return o.MinutesNonBilled, true
}

// HasMinutesNonBilled returns a boolean if a field has been set.
func (o *ViewTimelogTotals) HasMinutesNonBilled() bool {
	if o != nil && o.MinutesNonBilled != nil {
		return true
	}

	return false
}

// SetMinutesNonBilled gets a reference to the given int32 and assigns it to the MinutesNonBilled field.
func (o *ViewTimelogTotals) SetMinutesNonBilled(v int32) {
	o.MinutesNonBilled = &v
}

func (o ViewTimelogTotals) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.EstimatedMinutes != nil {
		toSerialize["estimatedMinutes"] = o.EstimatedMinutes
	}
	if o.EstimatedMinutesActive != nil {
		toSerialize["estimatedMinutesActive"] = o.EstimatedMinutesActive
	}
	if o.EstimatedMinutesCompleted != nil {
		toSerialize["estimatedMinutesCompleted"] = o.EstimatedMinutesCompleted
	}
	if o.EstimatedMinutesFiltered != nil {
		toSerialize["estimatedMinutesFiltered"] = o.EstimatedMinutesFiltered
	}
	if o.EstimatedMinutesWithLoggedTime != nil {
		toSerialize["estimatedMinutesWithLoggedTime"] = o.EstimatedMinutesWithLoggedTime
	}
	if o.Minutes != nil {
		toSerialize["minutes"] = o.Minutes
	}
	if o.MinutesBillable != nil {
		toSerialize["minutesBillable"] = o.MinutesBillable
	}
	if o.MinutesBilled != nil {
		toSerialize["minutesBilled"] = o.MinutesBilled
	}
	if o.MinutesNonBillable != nil {
		toSerialize["minutesNonBillable"] = o.MinutesNonBillable
	}
	if o.MinutesNonBilled != nil {
		toSerialize["minutesNonBilled"] = o.MinutesNonBilled
	}
	return json.Marshal(toSerialize)
}

type NullableViewTimelogTotals struct {
	value *ViewTimelogTotals
	isSet bool
}

func (v NullableViewTimelogTotals) Get() *ViewTimelogTotals {
	return v.value
}

func (v *NullableViewTimelogTotals) Set(val *ViewTimelogTotals) {
	v.value = val
	v.isSet = true
}

func (v NullableViewTimelogTotals) IsSet() bool {
	return v.isSet
}

func (v *NullableViewTimelogTotals) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableViewTimelogTotals(val *ViewTimelogTotals) *NullableViewTimelogTotals {
	return &NullableViewTimelogTotals{value: val, isSet: true}
}

func (v NullableViewTimelogTotals) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableViewTimelogTotals) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


