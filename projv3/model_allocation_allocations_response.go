/*
 * Teamwork.com Projects API
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * API version: 3.0
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package projv3

import (
	"encoding/json"
)

// AllocationAllocationsResponse AllocationsResponse contains information about a group of allocations.
type AllocationAllocationsResponse struct {
	Allocations *[]ViewAllocation `json:"allocations,omitempty"`
	Included *ActivityActivitiesResponseIncluded `json:"included,omitempty"`
	Meta *ViewMeta `json:"meta,omitempty"`
}

// NewAllocationAllocationsResponse instantiates a new AllocationAllocationsResponse object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewAllocationAllocationsResponse() *AllocationAllocationsResponse {
	this := AllocationAllocationsResponse{}
	return &this
}

// NewAllocationAllocationsResponseWithDefaults instantiates a new AllocationAllocationsResponse object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewAllocationAllocationsResponseWithDefaults() *AllocationAllocationsResponse {
	this := AllocationAllocationsResponse{}
	return &this
}

// GetAllocations returns the Allocations field value if set, zero value otherwise.
func (o *AllocationAllocationsResponse) GetAllocations() []ViewAllocation {
	if o == nil || o.Allocations == nil {
		var ret []ViewAllocation
		return ret
	}
	return *o.Allocations
}

// GetAllocationsOk returns a tuple with the Allocations field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AllocationAllocationsResponse) GetAllocationsOk() (*[]ViewAllocation, bool) {
	if o == nil || o.Allocations == nil {
		return nil, false
	}
	return o.Allocations, true
}

// HasAllocations returns a boolean if a field has been set.
func (o *AllocationAllocationsResponse) HasAllocations() bool {
	if o != nil && o.Allocations != nil {
		return true
	}

	return false
}

// SetAllocations gets a reference to the given []ViewAllocation and assigns it to the Allocations field.
func (o *AllocationAllocationsResponse) SetAllocations(v []ViewAllocation) {
	o.Allocations = &v
}

// GetIncluded returns the Included field value if set, zero value otherwise.
func (o *AllocationAllocationsResponse) GetIncluded() ActivityActivitiesResponseIncluded {
	if o == nil || o.Included == nil {
		var ret ActivityActivitiesResponseIncluded
		return ret
	}
	return *o.Included
}

// GetIncludedOk returns a tuple with the Included field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AllocationAllocationsResponse) GetIncludedOk() (*ActivityActivitiesResponseIncluded, bool) {
	if o == nil || o.Included == nil {
		return nil, false
	}
	return o.Included, true
}

// HasIncluded returns a boolean if a field has been set.
func (o *AllocationAllocationsResponse) HasIncluded() bool {
	if o != nil && o.Included != nil {
		return true
	}

	return false
}

// SetIncluded gets a reference to the given ActivityActivitiesResponseIncluded and assigns it to the Included field.
func (o *AllocationAllocationsResponse) SetIncluded(v ActivityActivitiesResponseIncluded) {
	o.Included = &v
}

// GetMeta returns the Meta field value if set, zero value otherwise.
func (o *AllocationAllocationsResponse) GetMeta() ViewMeta {
	if o == nil || o.Meta == nil {
		var ret ViewMeta
		return ret
	}
	return *o.Meta
}

// GetMetaOk returns a tuple with the Meta field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AllocationAllocationsResponse) GetMetaOk() (*ViewMeta, bool) {
	if o == nil || o.Meta == nil {
		return nil, false
	}
	return o.Meta, true
}

// HasMeta returns a boolean if a field has been set.
func (o *AllocationAllocationsResponse) HasMeta() bool {
	if o != nil && o.Meta != nil {
		return true
	}

	return false
}

// SetMeta gets a reference to the given ViewMeta and assigns it to the Meta field.
func (o *AllocationAllocationsResponse) SetMeta(v ViewMeta) {
	o.Meta = &v
}

func (o AllocationAllocationsResponse) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.Allocations != nil {
		toSerialize["allocations"] = o.Allocations
	}
	if o.Included != nil {
		toSerialize["included"] = o.Included
	}
	if o.Meta != nil {
		toSerialize["meta"] = o.Meta
	}
	return json.Marshal(toSerialize)
}

type NullableAllocationAllocationsResponse struct {
	value *AllocationAllocationsResponse
	isSet bool
}

func (v NullableAllocationAllocationsResponse) Get() *AllocationAllocationsResponse {
	return v.value
}

func (v *NullableAllocationAllocationsResponse) Set(val *AllocationAllocationsResponse) {
	v.value = val
	v.isSet = true
}

func (v NullableAllocationAllocationsResponse) IsSet() bool {
	return v.isSet
}

func (v *NullableAllocationAllocationsResponse) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableAllocationAllocationsResponse(val *AllocationAllocationsResponse) *NullableAllocationAllocationsResponse {
	return &NullableAllocationAllocationsResponse{value: val, isSet: true}
}

func (v NullableAllocationAllocationsResponse) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableAllocationAllocationsResponse) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


