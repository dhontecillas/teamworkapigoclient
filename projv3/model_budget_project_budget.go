/*
 * Teamwork.com Projects API
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * API version: 3.0
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package projv3

import (
	"encoding/json"
)

// BudgetProjectBudget ProjectBudget contains all the information returned from a budget.
type BudgetProjectBudget struct {
	Capacity *int32 `json:"capacity,omitempty"`
	CurrencyCode *string `json:"currencyCode,omitempty"`
	DefaultRate *float32 `json:"defaultRate,omitempty"`
	EndDateTime *string `json:"endDateTime,omitempty"`
	ExpenseType *string `json:"expenseType,omitempty"`
	Id *int32 `json:"id,omitempty"`
	IsRepeating *bool `json:"isRepeating,omitempty"`
	Notifications *[]NotificationProjectBudgetNotification `json:"notifications,omitempty"`
	OriginatorBudgetID *int32 `json:"originatorBudgetID,omitempty"`
	ProjectId *int32 `json:"projectId,omitempty"`
	RepeatPeriod *int32 `json:"repeatPeriod,omitempty"`
	RepeatUnit *string `json:"repeatUnit,omitempty"`
	RepeatsRemaining *int32 `json:"repeatsRemaining,omitempty"`
	SequenceNumber *int32 `json:"sequenceNumber,omitempty"`
	StartDateTime *string `json:"startDateTime,omitempty"`
	Status *string `json:"status,omitempty"`
	TimelogType *string `json:"timelogType,omitempty"`
	Type *string `json:"type,omitempty"`
}

// NewBudgetProjectBudget instantiates a new BudgetProjectBudget object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewBudgetProjectBudget() *BudgetProjectBudget {
	this := BudgetProjectBudget{}
	return &this
}

// NewBudgetProjectBudgetWithDefaults instantiates a new BudgetProjectBudget object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewBudgetProjectBudgetWithDefaults() *BudgetProjectBudget {
	this := BudgetProjectBudget{}
	return &this
}

// GetCapacity returns the Capacity field value if set, zero value otherwise.
func (o *BudgetProjectBudget) GetCapacity() int32 {
	if o == nil || o.Capacity == nil {
		var ret int32
		return ret
	}
	return *o.Capacity
}

// GetCapacityOk returns a tuple with the Capacity field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BudgetProjectBudget) GetCapacityOk() (*int32, bool) {
	if o == nil || o.Capacity == nil {
		return nil, false
	}
	return o.Capacity, true
}

// HasCapacity returns a boolean if a field has been set.
func (o *BudgetProjectBudget) HasCapacity() bool {
	if o != nil && o.Capacity != nil {
		return true
	}

	return false
}

// SetCapacity gets a reference to the given int32 and assigns it to the Capacity field.
func (o *BudgetProjectBudget) SetCapacity(v int32) {
	o.Capacity = &v
}

// GetCurrencyCode returns the CurrencyCode field value if set, zero value otherwise.
func (o *BudgetProjectBudget) GetCurrencyCode() string {
	if o == nil || o.CurrencyCode == nil {
		var ret string
		return ret
	}
	return *o.CurrencyCode
}

// GetCurrencyCodeOk returns a tuple with the CurrencyCode field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BudgetProjectBudget) GetCurrencyCodeOk() (*string, bool) {
	if o == nil || o.CurrencyCode == nil {
		return nil, false
	}
	return o.CurrencyCode, true
}

// HasCurrencyCode returns a boolean if a field has been set.
func (o *BudgetProjectBudget) HasCurrencyCode() bool {
	if o != nil && o.CurrencyCode != nil {
		return true
	}

	return false
}

// SetCurrencyCode gets a reference to the given string and assigns it to the CurrencyCode field.
func (o *BudgetProjectBudget) SetCurrencyCode(v string) {
	o.CurrencyCode = &v
}

// GetDefaultRate returns the DefaultRate field value if set, zero value otherwise.
func (o *BudgetProjectBudget) GetDefaultRate() float32 {
	if o == nil || o.DefaultRate == nil {
		var ret float32
		return ret
	}
	return *o.DefaultRate
}

// GetDefaultRateOk returns a tuple with the DefaultRate field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BudgetProjectBudget) GetDefaultRateOk() (*float32, bool) {
	if o == nil || o.DefaultRate == nil {
		return nil, false
	}
	return o.DefaultRate, true
}

// HasDefaultRate returns a boolean if a field has been set.
func (o *BudgetProjectBudget) HasDefaultRate() bool {
	if o != nil && o.DefaultRate != nil {
		return true
	}

	return false
}

// SetDefaultRate gets a reference to the given float32 and assigns it to the DefaultRate field.
func (o *BudgetProjectBudget) SetDefaultRate(v float32) {
	o.DefaultRate = &v
}

// GetEndDateTime returns the EndDateTime field value if set, zero value otherwise.
func (o *BudgetProjectBudget) GetEndDateTime() string {
	if o == nil || o.EndDateTime == nil {
		var ret string
		return ret
	}
	return *o.EndDateTime
}

// GetEndDateTimeOk returns a tuple with the EndDateTime field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BudgetProjectBudget) GetEndDateTimeOk() (*string, bool) {
	if o == nil || o.EndDateTime == nil {
		return nil, false
	}
	return o.EndDateTime, true
}

// HasEndDateTime returns a boolean if a field has been set.
func (o *BudgetProjectBudget) HasEndDateTime() bool {
	if o != nil && o.EndDateTime != nil {
		return true
	}

	return false
}

// SetEndDateTime gets a reference to the given string and assigns it to the EndDateTime field.
func (o *BudgetProjectBudget) SetEndDateTime(v string) {
	o.EndDateTime = &v
}

// GetExpenseType returns the ExpenseType field value if set, zero value otherwise.
func (o *BudgetProjectBudget) GetExpenseType() string {
	if o == nil || o.ExpenseType == nil {
		var ret string
		return ret
	}
	return *o.ExpenseType
}

// GetExpenseTypeOk returns a tuple with the ExpenseType field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BudgetProjectBudget) GetExpenseTypeOk() (*string, bool) {
	if o == nil || o.ExpenseType == nil {
		return nil, false
	}
	return o.ExpenseType, true
}

// HasExpenseType returns a boolean if a field has been set.
func (o *BudgetProjectBudget) HasExpenseType() bool {
	if o != nil && o.ExpenseType != nil {
		return true
	}

	return false
}

// SetExpenseType gets a reference to the given string and assigns it to the ExpenseType field.
func (o *BudgetProjectBudget) SetExpenseType(v string) {
	o.ExpenseType = &v
}

// GetId returns the Id field value if set, zero value otherwise.
func (o *BudgetProjectBudget) GetId() int32 {
	if o == nil || o.Id == nil {
		var ret int32
		return ret
	}
	return *o.Id
}

// GetIdOk returns a tuple with the Id field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BudgetProjectBudget) GetIdOk() (*int32, bool) {
	if o == nil || o.Id == nil {
		return nil, false
	}
	return o.Id, true
}

// HasId returns a boolean if a field has been set.
func (o *BudgetProjectBudget) HasId() bool {
	if o != nil && o.Id != nil {
		return true
	}

	return false
}

// SetId gets a reference to the given int32 and assigns it to the Id field.
func (o *BudgetProjectBudget) SetId(v int32) {
	o.Id = &v
}

// GetIsRepeating returns the IsRepeating field value if set, zero value otherwise.
func (o *BudgetProjectBudget) GetIsRepeating() bool {
	if o == nil || o.IsRepeating == nil {
		var ret bool
		return ret
	}
	return *o.IsRepeating
}

// GetIsRepeatingOk returns a tuple with the IsRepeating field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BudgetProjectBudget) GetIsRepeatingOk() (*bool, bool) {
	if o == nil || o.IsRepeating == nil {
		return nil, false
	}
	return o.IsRepeating, true
}

// HasIsRepeating returns a boolean if a field has been set.
func (o *BudgetProjectBudget) HasIsRepeating() bool {
	if o != nil && o.IsRepeating != nil {
		return true
	}

	return false
}

// SetIsRepeating gets a reference to the given bool and assigns it to the IsRepeating field.
func (o *BudgetProjectBudget) SetIsRepeating(v bool) {
	o.IsRepeating = &v
}

// GetNotifications returns the Notifications field value if set, zero value otherwise.
func (o *BudgetProjectBudget) GetNotifications() []NotificationProjectBudgetNotification {
	if o == nil || o.Notifications == nil {
		var ret []NotificationProjectBudgetNotification
		return ret
	}
	return *o.Notifications
}

// GetNotificationsOk returns a tuple with the Notifications field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BudgetProjectBudget) GetNotificationsOk() (*[]NotificationProjectBudgetNotification, bool) {
	if o == nil || o.Notifications == nil {
		return nil, false
	}
	return o.Notifications, true
}

// HasNotifications returns a boolean if a field has been set.
func (o *BudgetProjectBudget) HasNotifications() bool {
	if o != nil && o.Notifications != nil {
		return true
	}

	return false
}

// SetNotifications gets a reference to the given []NotificationProjectBudgetNotification and assigns it to the Notifications field.
func (o *BudgetProjectBudget) SetNotifications(v []NotificationProjectBudgetNotification) {
	o.Notifications = &v
}

// GetOriginatorBudgetID returns the OriginatorBudgetID field value if set, zero value otherwise.
func (o *BudgetProjectBudget) GetOriginatorBudgetID() int32 {
	if o == nil || o.OriginatorBudgetID == nil {
		var ret int32
		return ret
	}
	return *o.OriginatorBudgetID
}

// GetOriginatorBudgetIDOk returns a tuple with the OriginatorBudgetID field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BudgetProjectBudget) GetOriginatorBudgetIDOk() (*int32, bool) {
	if o == nil || o.OriginatorBudgetID == nil {
		return nil, false
	}
	return o.OriginatorBudgetID, true
}

// HasOriginatorBudgetID returns a boolean if a field has been set.
func (o *BudgetProjectBudget) HasOriginatorBudgetID() bool {
	if o != nil && o.OriginatorBudgetID != nil {
		return true
	}

	return false
}

// SetOriginatorBudgetID gets a reference to the given int32 and assigns it to the OriginatorBudgetID field.
func (o *BudgetProjectBudget) SetOriginatorBudgetID(v int32) {
	o.OriginatorBudgetID = &v
}

// GetProjectId returns the ProjectId field value if set, zero value otherwise.
func (o *BudgetProjectBudget) GetProjectId() int32 {
	if o == nil || o.ProjectId == nil {
		var ret int32
		return ret
	}
	return *o.ProjectId
}

// GetProjectIdOk returns a tuple with the ProjectId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BudgetProjectBudget) GetProjectIdOk() (*int32, bool) {
	if o == nil || o.ProjectId == nil {
		return nil, false
	}
	return o.ProjectId, true
}

// HasProjectId returns a boolean if a field has been set.
func (o *BudgetProjectBudget) HasProjectId() bool {
	if o != nil && o.ProjectId != nil {
		return true
	}

	return false
}

// SetProjectId gets a reference to the given int32 and assigns it to the ProjectId field.
func (o *BudgetProjectBudget) SetProjectId(v int32) {
	o.ProjectId = &v
}

// GetRepeatPeriod returns the RepeatPeriod field value if set, zero value otherwise.
func (o *BudgetProjectBudget) GetRepeatPeriod() int32 {
	if o == nil || o.RepeatPeriod == nil {
		var ret int32
		return ret
	}
	return *o.RepeatPeriod
}

// GetRepeatPeriodOk returns a tuple with the RepeatPeriod field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BudgetProjectBudget) GetRepeatPeriodOk() (*int32, bool) {
	if o == nil || o.RepeatPeriod == nil {
		return nil, false
	}
	return o.RepeatPeriod, true
}

// HasRepeatPeriod returns a boolean if a field has been set.
func (o *BudgetProjectBudget) HasRepeatPeriod() bool {
	if o != nil && o.RepeatPeriod != nil {
		return true
	}

	return false
}

// SetRepeatPeriod gets a reference to the given int32 and assigns it to the RepeatPeriod field.
func (o *BudgetProjectBudget) SetRepeatPeriod(v int32) {
	o.RepeatPeriod = &v
}

// GetRepeatUnit returns the RepeatUnit field value if set, zero value otherwise.
func (o *BudgetProjectBudget) GetRepeatUnit() string {
	if o == nil || o.RepeatUnit == nil {
		var ret string
		return ret
	}
	return *o.RepeatUnit
}

// GetRepeatUnitOk returns a tuple with the RepeatUnit field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BudgetProjectBudget) GetRepeatUnitOk() (*string, bool) {
	if o == nil || o.RepeatUnit == nil {
		return nil, false
	}
	return o.RepeatUnit, true
}

// HasRepeatUnit returns a boolean if a field has been set.
func (o *BudgetProjectBudget) HasRepeatUnit() bool {
	if o != nil && o.RepeatUnit != nil {
		return true
	}

	return false
}

// SetRepeatUnit gets a reference to the given string and assigns it to the RepeatUnit field.
func (o *BudgetProjectBudget) SetRepeatUnit(v string) {
	o.RepeatUnit = &v
}

// GetRepeatsRemaining returns the RepeatsRemaining field value if set, zero value otherwise.
func (o *BudgetProjectBudget) GetRepeatsRemaining() int32 {
	if o == nil || o.RepeatsRemaining == nil {
		var ret int32
		return ret
	}
	return *o.RepeatsRemaining
}

// GetRepeatsRemainingOk returns a tuple with the RepeatsRemaining field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BudgetProjectBudget) GetRepeatsRemainingOk() (*int32, bool) {
	if o == nil || o.RepeatsRemaining == nil {
		return nil, false
	}
	return o.RepeatsRemaining, true
}

// HasRepeatsRemaining returns a boolean if a field has been set.
func (o *BudgetProjectBudget) HasRepeatsRemaining() bool {
	if o != nil && o.RepeatsRemaining != nil {
		return true
	}

	return false
}

// SetRepeatsRemaining gets a reference to the given int32 and assigns it to the RepeatsRemaining field.
func (o *BudgetProjectBudget) SetRepeatsRemaining(v int32) {
	o.RepeatsRemaining = &v
}

// GetSequenceNumber returns the SequenceNumber field value if set, zero value otherwise.
func (o *BudgetProjectBudget) GetSequenceNumber() int32 {
	if o == nil || o.SequenceNumber == nil {
		var ret int32
		return ret
	}
	return *o.SequenceNumber
}

// GetSequenceNumberOk returns a tuple with the SequenceNumber field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BudgetProjectBudget) GetSequenceNumberOk() (*int32, bool) {
	if o == nil || o.SequenceNumber == nil {
		return nil, false
	}
	return o.SequenceNumber, true
}

// HasSequenceNumber returns a boolean if a field has been set.
func (o *BudgetProjectBudget) HasSequenceNumber() bool {
	if o != nil && o.SequenceNumber != nil {
		return true
	}

	return false
}

// SetSequenceNumber gets a reference to the given int32 and assigns it to the SequenceNumber field.
func (o *BudgetProjectBudget) SetSequenceNumber(v int32) {
	o.SequenceNumber = &v
}

// GetStartDateTime returns the StartDateTime field value if set, zero value otherwise.
func (o *BudgetProjectBudget) GetStartDateTime() string {
	if o == nil || o.StartDateTime == nil {
		var ret string
		return ret
	}
	return *o.StartDateTime
}

// GetStartDateTimeOk returns a tuple with the StartDateTime field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BudgetProjectBudget) GetStartDateTimeOk() (*string, bool) {
	if o == nil || o.StartDateTime == nil {
		return nil, false
	}
	return o.StartDateTime, true
}

// HasStartDateTime returns a boolean if a field has been set.
func (o *BudgetProjectBudget) HasStartDateTime() bool {
	if o != nil && o.StartDateTime != nil {
		return true
	}

	return false
}

// SetStartDateTime gets a reference to the given string and assigns it to the StartDateTime field.
func (o *BudgetProjectBudget) SetStartDateTime(v string) {
	o.StartDateTime = &v
}

// GetStatus returns the Status field value if set, zero value otherwise.
func (o *BudgetProjectBudget) GetStatus() string {
	if o == nil || o.Status == nil {
		var ret string
		return ret
	}
	return *o.Status
}

// GetStatusOk returns a tuple with the Status field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BudgetProjectBudget) GetStatusOk() (*string, bool) {
	if o == nil || o.Status == nil {
		return nil, false
	}
	return o.Status, true
}

// HasStatus returns a boolean if a field has been set.
func (o *BudgetProjectBudget) HasStatus() bool {
	if o != nil && o.Status != nil {
		return true
	}

	return false
}

// SetStatus gets a reference to the given string and assigns it to the Status field.
func (o *BudgetProjectBudget) SetStatus(v string) {
	o.Status = &v
}

// GetTimelogType returns the TimelogType field value if set, zero value otherwise.
func (o *BudgetProjectBudget) GetTimelogType() string {
	if o == nil || o.TimelogType == nil {
		var ret string
		return ret
	}
	return *o.TimelogType
}

// GetTimelogTypeOk returns a tuple with the TimelogType field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BudgetProjectBudget) GetTimelogTypeOk() (*string, bool) {
	if o == nil || o.TimelogType == nil {
		return nil, false
	}
	return o.TimelogType, true
}

// HasTimelogType returns a boolean if a field has been set.
func (o *BudgetProjectBudget) HasTimelogType() bool {
	if o != nil && o.TimelogType != nil {
		return true
	}

	return false
}

// SetTimelogType gets a reference to the given string and assigns it to the TimelogType field.
func (o *BudgetProjectBudget) SetTimelogType(v string) {
	o.TimelogType = &v
}

// GetType returns the Type field value if set, zero value otherwise.
func (o *BudgetProjectBudget) GetType() string {
	if o == nil || o.Type == nil {
		var ret string
		return ret
	}
	return *o.Type
}

// GetTypeOk returns a tuple with the Type field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BudgetProjectBudget) GetTypeOk() (*string, bool) {
	if o == nil || o.Type == nil {
		return nil, false
	}
	return o.Type, true
}

// HasType returns a boolean if a field has been set.
func (o *BudgetProjectBudget) HasType() bool {
	if o != nil && o.Type != nil {
		return true
	}

	return false
}

// SetType gets a reference to the given string and assigns it to the Type field.
func (o *BudgetProjectBudget) SetType(v string) {
	o.Type = &v
}

func (o BudgetProjectBudget) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.Capacity != nil {
		toSerialize["capacity"] = o.Capacity
	}
	if o.CurrencyCode != nil {
		toSerialize["currencyCode"] = o.CurrencyCode
	}
	if o.DefaultRate != nil {
		toSerialize["defaultRate"] = o.DefaultRate
	}
	if o.EndDateTime != nil {
		toSerialize["endDateTime"] = o.EndDateTime
	}
	if o.ExpenseType != nil {
		toSerialize["expenseType"] = o.ExpenseType
	}
	if o.Id != nil {
		toSerialize["id"] = o.Id
	}
	if o.IsRepeating != nil {
		toSerialize["isRepeating"] = o.IsRepeating
	}
	if o.Notifications != nil {
		toSerialize["notifications"] = o.Notifications
	}
	if o.OriginatorBudgetID != nil {
		toSerialize["originatorBudgetID"] = o.OriginatorBudgetID
	}
	if o.ProjectId != nil {
		toSerialize["projectId"] = o.ProjectId
	}
	if o.RepeatPeriod != nil {
		toSerialize["repeatPeriod"] = o.RepeatPeriod
	}
	if o.RepeatUnit != nil {
		toSerialize["repeatUnit"] = o.RepeatUnit
	}
	if o.RepeatsRemaining != nil {
		toSerialize["repeatsRemaining"] = o.RepeatsRemaining
	}
	if o.SequenceNumber != nil {
		toSerialize["sequenceNumber"] = o.SequenceNumber
	}
	if o.StartDateTime != nil {
		toSerialize["startDateTime"] = o.StartDateTime
	}
	if o.Status != nil {
		toSerialize["status"] = o.Status
	}
	if o.TimelogType != nil {
		toSerialize["timelogType"] = o.TimelogType
	}
	if o.Type != nil {
		toSerialize["type"] = o.Type
	}
	return json.Marshal(toSerialize)
}

type NullableBudgetProjectBudget struct {
	value *BudgetProjectBudget
	isSet bool
}

func (v NullableBudgetProjectBudget) Get() *BudgetProjectBudget {
	return v.value
}

func (v *NullableBudgetProjectBudget) Set(val *BudgetProjectBudget) {
	v.value = val
	v.isSet = true
}

func (v NullableBudgetProjectBudget) IsSet() bool {
	return v.isSet
}

func (v *NullableBudgetProjectBudget) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableBudgetProjectBudget(val *BudgetProjectBudget) *NullableBudgetProjectBudget {
	return &NullableBudgetProjectBudget{value: val, isSet: true}
}

func (v NullableBudgetProjectBudget) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableBudgetProjectBudget) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


