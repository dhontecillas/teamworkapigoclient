/*
 * Teamwork Projects API
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * API version: 
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package pmv1

import (
	"encoding/json"
)

// InlineResponse20096TodoList struct for InlineResponse20096TodoList
type InlineResponse20096TodoList struct {
	Complete *bool `json:"complete,omitempty"`
	CompletedCount *string `json:"completed-count,omitempty"`
	Description *string `json:"description,omitempty"`
	Id *string `json:"id,omitempty"`
	MilestoneId *string `json:"milestone-id,omitempty"`
	Name *string `json:"name,omitempty"`
	OverdueCount *string `json:"overdue-count,omitempty"`
	Pinned *bool `json:"pinned,omitempty"`
	Position *string `json:"position,omitempty"`
	Private *string `json:"private,omitempty"`
	ProjectName *string `json:"project-name,omitempty"`
	Projectid *string `json:"projectid,omitempty"`
	UncompletedCount *string `json:"uncompleted-count,omitempty"`
}

// NewInlineResponse20096TodoList instantiates a new InlineResponse20096TodoList object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewInlineResponse20096TodoList() *InlineResponse20096TodoList {
	this := InlineResponse20096TodoList{}
	return &this
}

// NewInlineResponse20096TodoListWithDefaults instantiates a new InlineResponse20096TodoList object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewInlineResponse20096TodoListWithDefaults() *InlineResponse20096TodoList {
	this := InlineResponse20096TodoList{}
	return &this
}

// GetComplete returns the Complete field value if set, zero value otherwise.
func (o *InlineResponse20096TodoList) GetComplete() bool {
	if o == nil || o.Complete == nil {
		var ret bool
		return ret
	}
	return *o.Complete
}

// GetCompleteOk returns a tuple with the Complete field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InlineResponse20096TodoList) GetCompleteOk() (*bool, bool) {
	if o == nil || o.Complete == nil {
		return nil, false
	}
	return o.Complete, true
}

// HasComplete returns a boolean if a field has been set.
func (o *InlineResponse20096TodoList) HasComplete() bool {
	if o != nil && o.Complete != nil {
		return true
	}

	return false
}

// SetComplete gets a reference to the given bool and assigns it to the Complete field.
func (o *InlineResponse20096TodoList) SetComplete(v bool) {
	o.Complete = &v
}

// GetCompletedCount returns the CompletedCount field value if set, zero value otherwise.
func (o *InlineResponse20096TodoList) GetCompletedCount() string {
	if o == nil || o.CompletedCount == nil {
		var ret string
		return ret
	}
	return *o.CompletedCount
}

// GetCompletedCountOk returns a tuple with the CompletedCount field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InlineResponse20096TodoList) GetCompletedCountOk() (*string, bool) {
	if o == nil || o.CompletedCount == nil {
		return nil, false
	}
	return o.CompletedCount, true
}

// HasCompletedCount returns a boolean if a field has been set.
func (o *InlineResponse20096TodoList) HasCompletedCount() bool {
	if o != nil && o.CompletedCount != nil {
		return true
	}

	return false
}

// SetCompletedCount gets a reference to the given string and assigns it to the CompletedCount field.
func (o *InlineResponse20096TodoList) SetCompletedCount(v string) {
	o.CompletedCount = &v
}

// GetDescription returns the Description field value if set, zero value otherwise.
func (o *InlineResponse20096TodoList) GetDescription() string {
	if o == nil || o.Description == nil {
		var ret string
		return ret
	}
	return *o.Description
}

// GetDescriptionOk returns a tuple with the Description field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InlineResponse20096TodoList) GetDescriptionOk() (*string, bool) {
	if o == nil || o.Description == nil {
		return nil, false
	}
	return o.Description, true
}

// HasDescription returns a boolean if a field has been set.
func (o *InlineResponse20096TodoList) HasDescription() bool {
	if o != nil && o.Description != nil {
		return true
	}

	return false
}

// SetDescription gets a reference to the given string and assigns it to the Description field.
func (o *InlineResponse20096TodoList) SetDescription(v string) {
	o.Description = &v
}

// GetId returns the Id field value if set, zero value otherwise.
func (o *InlineResponse20096TodoList) GetId() string {
	if o == nil || o.Id == nil {
		var ret string
		return ret
	}
	return *o.Id
}

// GetIdOk returns a tuple with the Id field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InlineResponse20096TodoList) GetIdOk() (*string, bool) {
	if o == nil || o.Id == nil {
		return nil, false
	}
	return o.Id, true
}

// HasId returns a boolean if a field has been set.
func (o *InlineResponse20096TodoList) HasId() bool {
	if o != nil && o.Id != nil {
		return true
	}

	return false
}

// SetId gets a reference to the given string and assigns it to the Id field.
func (o *InlineResponse20096TodoList) SetId(v string) {
	o.Id = &v
}

// GetMilestoneId returns the MilestoneId field value if set, zero value otherwise.
func (o *InlineResponse20096TodoList) GetMilestoneId() string {
	if o == nil || o.MilestoneId == nil {
		var ret string
		return ret
	}
	return *o.MilestoneId
}

// GetMilestoneIdOk returns a tuple with the MilestoneId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InlineResponse20096TodoList) GetMilestoneIdOk() (*string, bool) {
	if o == nil || o.MilestoneId == nil {
		return nil, false
	}
	return o.MilestoneId, true
}

// HasMilestoneId returns a boolean if a field has been set.
func (o *InlineResponse20096TodoList) HasMilestoneId() bool {
	if o != nil && o.MilestoneId != nil {
		return true
	}

	return false
}

// SetMilestoneId gets a reference to the given string and assigns it to the MilestoneId field.
func (o *InlineResponse20096TodoList) SetMilestoneId(v string) {
	o.MilestoneId = &v
}

// GetName returns the Name field value if set, zero value otherwise.
func (o *InlineResponse20096TodoList) GetName() string {
	if o == nil || o.Name == nil {
		var ret string
		return ret
	}
	return *o.Name
}

// GetNameOk returns a tuple with the Name field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InlineResponse20096TodoList) GetNameOk() (*string, bool) {
	if o == nil || o.Name == nil {
		return nil, false
	}
	return o.Name, true
}

// HasName returns a boolean if a field has been set.
func (o *InlineResponse20096TodoList) HasName() bool {
	if o != nil && o.Name != nil {
		return true
	}

	return false
}

// SetName gets a reference to the given string and assigns it to the Name field.
func (o *InlineResponse20096TodoList) SetName(v string) {
	o.Name = &v
}

// GetOverdueCount returns the OverdueCount field value if set, zero value otherwise.
func (o *InlineResponse20096TodoList) GetOverdueCount() string {
	if o == nil || o.OverdueCount == nil {
		var ret string
		return ret
	}
	return *o.OverdueCount
}

// GetOverdueCountOk returns a tuple with the OverdueCount field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InlineResponse20096TodoList) GetOverdueCountOk() (*string, bool) {
	if o == nil || o.OverdueCount == nil {
		return nil, false
	}
	return o.OverdueCount, true
}

// HasOverdueCount returns a boolean if a field has been set.
func (o *InlineResponse20096TodoList) HasOverdueCount() bool {
	if o != nil && o.OverdueCount != nil {
		return true
	}

	return false
}

// SetOverdueCount gets a reference to the given string and assigns it to the OverdueCount field.
func (o *InlineResponse20096TodoList) SetOverdueCount(v string) {
	o.OverdueCount = &v
}

// GetPinned returns the Pinned field value if set, zero value otherwise.
func (o *InlineResponse20096TodoList) GetPinned() bool {
	if o == nil || o.Pinned == nil {
		var ret bool
		return ret
	}
	return *o.Pinned
}

// GetPinnedOk returns a tuple with the Pinned field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InlineResponse20096TodoList) GetPinnedOk() (*bool, bool) {
	if o == nil || o.Pinned == nil {
		return nil, false
	}
	return o.Pinned, true
}

// HasPinned returns a boolean if a field has been set.
func (o *InlineResponse20096TodoList) HasPinned() bool {
	if o != nil && o.Pinned != nil {
		return true
	}

	return false
}

// SetPinned gets a reference to the given bool and assigns it to the Pinned field.
func (o *InlineResponse20096TodoList) SetPinned(v bool) {
	o.Pinned = &v
}

// GetPosition returns the Position field value if set, zero value otherwise.
func (o *InlineResponse20096TodoList) GetPosition() string {
	if o == nil || o.Position == nil {
		var ret string
		return ret
	}
	return *o.Position
}

// GetPositionOk returns a tuple with the Position field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InlineResponse20096TodoList) GetPositionOk() (*string, bool) {
	if o == nil || o.Position == nil {
		return nil, false
	}
	return o.Position, true
}

// HasPosition returns a boolean if a field has been set.
func (o *InlineResponse20096TodoList) HasPosition() bool {
	if o != nil && o.Position != nil {
		return true
	}

	return false
}

// SetPosition gets a reference to the given string and assigns it to the Position field.
func (o *InlineResponse20096TodoList) SetPosition(v string) {
	o.Position = &v
}

// GetPrivate returns the Private field value if set, zero value otherwise.
func (o *InlineResponse20096TodoList) GetPrivate() string {
	if o == nil || o.Private == nil {
		var ret string
		return ret
	}
	return *o.Private
}

// GetPrivateOk returns a tuple with the Private field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InlineResponse20096TodoList) GetPrivateOk() (*string, bool) {
	if o == nil || o.Private == nil {
		return nil, false
	}
	return o.Private, true
}

// HasPrivate returns a boolean if a field has been set.
func (o *InlineResponse20096TodoList) HasPrivate() bool {
	if o != nil && o.Private != nil {
		return true
	}

	return false
}

// SetPrivate gets a reference to the given string and assigns it to the Private field.
func (o *InlineResponse20096TodoList) SetPrivate(v string) {
	o.Private = &v
}

// GetProjectName returns the ProjectName field value if set, zero value otherwise.
func (o *InlineResponse20096TodoList) GetProjectName() string {
	if o == nil || o.ProjectName == nil {
		var ret string
		return ret
	}
	return *o.ProjectName
}

// GetProjectNameOk returns a tuple with the ProjectName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InlineResponse20096TodoList) GetProjectNameOk() (*string, bool) {
	if o == nil || o.ProjectName == nil {
		return nil, false
	}
	return o.ProjectName, true
}

// HasProjectName returns a boolean if a field has been set.
func (o *InlineResponse20096TodoList) HasProjectName() bool {
	if o != nil && o.ProjectName != nil {
		return true
	}

	return false
}

// SetProjectName gets a reference to the given string and assigns it to the ProjectName field.
func (o *InlineResponse20096TodoList) SetProjectName(v string) {
	o.ProjectName = &v
}

// GetProjectid returns the Projectid field value if set, zero value otherwise.
func (o *InlineResponse20096TodoList) GetProjectid() string {
	if o == nil || o.Projectid == nil {
		var ret string
		return ret
	}
	return *o.Projectid
}

// GetProjectidOk returns a tuple with the Projectid field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InlineResponse20096TodoList) GetProjectidOk() (*string, bool) {
	if o == nil || o.Projectid == nil {
		return nil, false
	}
	return o.Projectid, true
}

// HasProjectid returns a boolean if a field has been set.
func (o *InlineResponse20096TodoList) HasProjectid() bool {
	if o != nil && o.Projectid != nil {
		return true
	}

	return false
}

// SetProjectid gets a reference to the given string and assigns it to the Projectid field.
func (o *InlineResponse20096TodoList) SetProjectid(v string) {
	o.Projectid = &v
}

// GetUncompletedCount returns the UncompletedCount field value if set, zero value otherwise.
func (o *InlineResponse20096TodoList) GetUncompletedCount() string {
	if o == nil || o.UncompletedCount == nil {
		var ret string
		return ret
	}
	return *o.UncompletedCount
}

// GetUncompletedCountOk returns a tuple with the UncompletedCount field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InlineResponse20096TodoList) GetUncompletedCountOk() (*string, bool) {
	if o == nil || o.UncompletedCount == nil {
		return nil, false
	}
	return o.UncompletedCount, true
}

// HasUncompletedCount returns a boolean if a field has been set.
func (o *InlineResponse20096TodoList) HasUncompletedCount() bool {
	if o != nil && o.UncompletedCount != nil {
		return true
	}

	return false
}

// SetUncompletedCount gets a reference to the given string and assigns it to the UncompletedCount field.
func (o *InlineResponse20096TodoList) SetUncompletedCount(v string) {
	o.UncompletedCount = &v
}

func (o InlineResponse20096TodoList) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.Complete != nil {
		toSerialize["complete"] = o.Complete
	}
	if o.CompletedCount != nil {
		toSerialize["completed-count"] = o.CompletedCount
	}
	if o.Description != nil {
		toSerialize["description"] = o.Description
	}
	if o.Id != nil {
		toSerialize["id"] = o.Id
	}
	if o.MilestoneId != nil {
		toSerialize["milestone-id"] = o.MilestoneId
	}
	if o.Name != nil {
		toSerialize["name"] = o.Name
	}
	if o.OverdueCount != nil {
		toSerialize["overdue-count"] = o.OverdueCount
	}
	if o.Pinned != nil {
		toSerialize["pinned"] = o.Pinned
	}
	if o.Position != nil {
		toSerialize["position"] = o.Position
	}
	if o.Private != nil {
		toSerialize["private"] = o.Private
	}
	if o.ProjectName != nil {
		toSerialize["project-name"] = o.ProjectName
	}
	if o.Projectid != nil {
		toSerialize["projectid"] = o.Projectid
	}
	if o.UncompletedCount != nil {
		toSerialize["uncompleted-count"] = o.UncompletedCount
	}
	return json.Marshal(toSerialize)
}

type NullableInlineResponse20096TodoList struct {
	value *InlineResponse20096TodoList
	isSet bool
}

func (v NullableInlineResponse20096TodoList) Get() *InlineResponse20096TodoList {
	return v.value
}

func (v *NullableInlineResponse20096TodoList) Set(val *InlineResponse20096TodoList) {
	v.value = val
	v.isSet = true
}

func (v NullableInlineResponse20096TodoList) IsSet() bool {
	return v.isSet
}

func (v *NullableInlineResponse20096TodoList) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableInlineResponse20096TodoList(val *InlineResponse20096TodoList) *NullableInlineResponse20096TodoList {
	return &NullableInlineResponse20096TodoList{value: val, isSet: true}
}

func (v NullableInlineResponse20096TodoList) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableInlineResponse20096TodoList) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


