/*
 * Teamwork Projects API
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * API version: 
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package pmv1

import (
	"encoding/json"
)

// InlineObject74 struct for InlineObject74
type InlineObject74 struct {
	TodoLists *[]ProjectsIdTasklistsReorderJsonTodoLists `json:"todo-lists,omitempty"`
}

// NewInlineObject74 instantiates a new InlineObject74 object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewInlineObject74() *InlineObject74 {
	this := InlineObject74{}
	return &this
}

// NewInlineObject74WithDefaults instantiates a new InlineObject74 object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewInlineObject74WithDefaults() *InlineObject74 {
	this := InlineObject74{}
	return &this
}

// GetTodoLists returns the TodoLists field value if set, zero value otherwise.
func (o *InlineObject74) GetTodoLists() []ProjectsIdTasklistsReorderJsonTodoLists {
	if o == nil || o.TodoLists == nil {
		var ret []ProjectsIdTasklistsReorderJsonTodoLists
		return ret
	}
	return *o.TodoLists
}

// GetTodoListsOk returns a tuple with the TodoLists field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InlineObject74) GetTodoListsOk() (*[]ProjectsIdTasklistsReorderJsonTodoLists, bool) {
	if o == nil || o.TodoLists == nil {
		return nil, false
	}
	return o.TodoLists, true
}

// HasTodoLists returns a boolean if a field has been set.
func (o *InlineObject74) HasTodoLists() bool {
	if o != nil && o.TodoLists != nil {
		return true
	}

	return false
}

// SetTodoLists gets a reference to the given []ProjectsIdTasklistsReorderJsonTodoLists and assigns it to the TodoLists field.
func (o *InlineObject74) SetTodoLists(v []ProjectsIdTasklistsReorderJsonTodoLists) {
	o.TodoLists = &v
}

func (o InlineObject74) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.TodoLists != nil {
		toSerialize["todo-lists"] = o.TodoLists
	}
	return json.Marshal(toSerialize)
}

type NullableInlineObject74 struct {
	value *InlineObject74
	isSet bool
}

func (v NullableInlineObject74) Get() *InlineObject74 {
	return v.value
}

func (v *NullableInlineObject74) Set(val *InlineObject74) {
	v.value = val
	v.isSet = true
}

func (v NullableInlineObject74) IsSet() bool {
	return v.isSet
}

func (v *NullableInlineObject74) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableInlineObject74(val *InlineObject74) *NullableInlineObject74 {
	return &NullableInlineObject74{value: val, isSet: true}
}

func (v NullableInlineObject74) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableInlineObject74) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


