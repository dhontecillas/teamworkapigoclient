/*
 * Teamwork Projects API
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * API version: 
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package pmv1

import (
	"encoding/json"
)

// InlineResponse2014 struct for InlineResponse2014
type InlineResponse2014 struct {
	STATUS *string `json:"STATUS,omitempty"`
	TASKLISTID *string `json:"TASKLISTID,omitempty"`
}

// NewInlineResponse2014 instantiates a new InlineResponse2014 object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewInlineResponse2014() *InlineResponse2014 {
	this := InlineResponse2014{}
	return &this
}

// NewInlineResponse2014WithDefaults instantiates a new InlineResponse2014 object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewInlineResponse2014WithDefaults() *InlineResponse2014 {
	this := InlineResponse2014{}
	return &this
}

// GetSTATUS returns the STATUS field value if set, zero value otherwise.
func (o *InlineResponse2014) GetSTATUS() string {
	if o == nil || o.STATUS == nil {
		var ret string
		return ret
	}
	return *o.STATUS
}

// GetSTATUSOk returns a tuple with the STATUS field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InlineResponse2014) GetSTATUSOk() (*string, bool) {
	if o == nil || o.STATUS == nil {
		return nil, false
	}
	return o.STATUS, true
}

// HasSTATUS returns a boolean if a field has been set.
func (o *InlineResponse2014) HasSTATUS() bool {
	if o != nil && o.STATUS != nil {
		return true
	}

	return false
}

// SetSTATUS gets a reference to the given string and assigns it to the STATUS field.
func (o *InlineResponse2014) SetSTATUS(v string) {
	o.STATUS = &v
}

// GetTASKLISTID returns the TASKLISTID field value if set, zero value otherwise.
func (o *InlineResponse2014) GetTASKLISTID() string {
	if o == nil || o.TASKLISTID == nil {
		var ret string
		return ret
	}
	return *o.TASKLISTID
}

// GetTASKLISTIDOk returns a tuple with the TASKLISTID field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InlineResponse2014) GetTASKLISTIDOk() (*string, bool) {
	if o == nil || o.TASKLISTID == nil {
		return nil, false
	}
	return o.TASKLISTID, true
}

// HasTASKLISTID returns a boolean if a field has been set.
func (o *InlineResponse2014) HasTASKLISTID() bool {
	if o != nil && o.TASKLISTID != nil {
		return true
	}

	return false
}

// SetTASKLISTID gets a reference to the given string and assigns it to the TASKLISTID field.
func (o *InlineResponse2014) SetTASKLISTID(v string) {
	o.TASKLISTID = &v
}

func (o InlineResponse2014) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.STATUS != nil {
		toSerialize["STATUS"] = o.STATUS
	}
	if o.TASKLISTID != nil {
		toSerialize["TASKLISTID"] = o.TASKLISTID
	}
	return json.Marshal(toSerialize)
}

type NullableInlineResponse2014 struct {
	value *InlineResponse2014
	isSet bool
}

func (v NullableInlineResponse2014) Get() *InlineResponse2014 {
	return v.value
}

func (v *NullableInlineResponse2014) Set(val *InlineResponse2014) {
	v.value = val
	v.isSet = true
}

func (v NullableInlineResponse2014) IsSet() bool {
	return v.isSet
}

func (v *NullableInlineResponse2014) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableInlineResponse2014(val *InlineResponse2014) *NullableInlineResponse2014 {
	return &NullableInlineResponse2014{value: val, isSet: true}
}

func (v NullableInlineResponse2014) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableInlineResponse2014) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


