/*
 * Teamwork.com Projects API
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * API version: 3.0
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package projv3

import (
	"encoding/json"
)

// ViewUserDashboardPanelSetting UserDashboardPanelSetting contains all the information returned from a dashboard panel.
type ViewUserDashboardPanelSetting struct {
	DashboardId *int32 `json:"dashboardId,omitempty"`
	DashboardPanelId *int32 `json:"dashboardPanelId,omitempty"`
	Id *int32 `json:"id,omitempty"`
	Name *string `json:"name,omitempty"`
	Value *string `json:"value,omitempty"`
}

// NewViewUserDashboardPanelSetting instantiates a new ViewUserDashboardPanelSetting object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewViewUserDashboardPanelSetting() *ViewUserDashboardPanelSetting {
	this := ViewUserDashboardPanelSetting{}
	return &this
}

// NewViewUserDashboardPanelSettingWithDefaults instantiates a new ViewUserDashboardPanelSetting object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewViewUserDashboardPanelSettingWithDefaults() *ViewUserDashboardPanelSetting {
	this := ViewUserDashboardPanelSetting{}
	return &this
}

// GetDashboardId returns the DashboardId field value if set, zero value otherwise.
func (o *ViewUserDashboardPanelSetting) GetDashboardId() int32 {
	if o == nil || o.DashboardId == nil {
		var ret int32
		return ret
	}
	return *o.DashboardId
}

// GetDashboardIdOk returns a tuple with the DashboardId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ViewUserDashboardPanelSetting) GetDashboardIdOk() (*int32, bool) {
	if o == nil || o.DashboardId == nil {
		return nil, false
	}
	return o.DashboardId, true
}

// HasDashboardId returns a boolean if a field has been set.
func (o *ViewUserDashboardPanelSetting) HasDashboardId() bool {
	if o != nil && o.DashboardId != nil {
		return true
	}

	return false
}

// SetDashboardId gets a reference to the given int32 and assigns it to the DashboardId field.
func (o *ViewUserDashboardPanelSetting) SetDashboardId(v int32) {
	o.DashboardId = &v
}

// GetDashboardPanelId returns the DashboardPanelId field value if set, zero value otherwise.
func (o *ViewUserDashboardPanelSetting) GetDashboardPanelId() int32 {
	if o == nil || o.DashboardPanelId == nil {
		var ret int32
		return ret
	}
	return *o.DashboardPanelId
}

// GetDashboardPanelIdOk returns a tuple with the DashboardPanelId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ViewUserDashboardPanelSetting) GetDashboardPanelIdOk() (*int32, bool) {
	if o == nil || o.DashboardPanelId == nil {
		return nil, false
	}
	return o.DashboardPanelId, true
}

// HasDashboardPanelId returns a boolean if a field has been set.
func (o *ViewUserDashboardPanelSetting) HasDashboardPanelId() bool {
	if o != nil && o.DashboardPanelId != nil {
		return true
	}

	return false
}

// SetDashboardPanelId gets a reference to the given int32 and assigns it to the DashboardPanelId field.
func (o *ViewUserDashboardPanelSetting) SetDashboardPanelId(v int32) {
	o.DashboardPanelId = &v
}

// GetId returns the Id field value if set, zero value otherwise.
func (o *ViewUserDashboardPanelSetting) GetId() int32 {
	if o == nil || o.Id == nil {
		var ret int32
		return ret
	}
	return *o.Id
}

// GetIdOk returns a tuple with the Id field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ViewUserDashboardPanelSetting) GetIdOk() (*int32, bool) {
	if o == nil || o.Id == nil {
		return nil, false
	}
	return o.Id, true
}

// HasId returns a boolean if a field has been set.
func (o *ViewUserDashboardPanelSetting) HasId() bool {
	if o != nil && o.Id != nil {
		return true
	}

	return false
}

// SetId gets a reference to the given int32 and assigns it to the Id field.
func (o *ViewUserDashboardPanelSetting) SetId(v int32) {
	o.Id = &v
}

// GetName returns the Name field value if set, zero value otherwise.
func (o *ViewUserDashboardPanelSetting) GetName() string {
	if o == nil || o.Name == nil {
		var ret string
		return ret
	}
	return *o.Name
}

// GetNameOk returns a tuple with the Name field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ViewUserDashboardPanelSetting) GetNameOk() (*string, bool) {
	if o == nil || o.Name == nil {
		return nil, false
	}
	return o.Name, true
}

// HasName returns a boolean if a field has been set.
func (o *ViewUserDashboardPanelSetting) HasName() bool {
	if o != nil && o.Name != nil {
		return true
	}

	return false
}

// SetName gets a reference to the given string and assigns it to the Name field.
func (o *ViewUserDashboardPanelSetting) SetName(v string) {
	o.Name = &v
}

// GetValue returns the Value field value if set, zero value otherwise.
func (o *ViewUserDashboardPanelSetting) GetValue() string {
	if o == nil || o.Value == nil {
		var ret string
		return ret
	}
	return *o.Value
}

// GetValueOk returns a tuple with the Value field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ViewUserDashboardPanelSetting) GetValueOk() (*string, bool) {
	if o == nil || o.Value == nil {
		return nil, false
	}
	return o.Value, true
}

// HasValue returns a boolean if a field has been set.
func (o *ViewUserDashboardPanelSetting) HasValue() bool {
	if o != nil && o.Value != nil {
		return true
	}

	return false
}

// SetValue gets a reference to the given string and assigns it to the Value field.
func (o *ViewUserDashboardPanelSetting) SetValue(v string) {
	o.Value = &v
}

func (o ViewUserDashboardPanelSetting) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.DashboardId != nil {
		toSerialize["dashboardId"] = o.DashboardId
	}
	if o.DashboardPanelId != nil {
		toSerialize["dashboardPanelId"] = o.DashboardPanelId
	}
	if o.Id != nil {
		toSerialize["id"] = o.Id
	}
	if o.Name != nil {
		toSerialize["name"] = o.Name
	}
	if o.Value != nil {
		toSerialize["value"] = o.Value
	}
	return json.Marshal(toSerialize)
}

type NullableViewUserDashboardPanelSetting struct {
	value *ViewUserDashboardPanelSetting
	isSet bool
}

func (v NullableViewUserDashboardPanelSetting) Get() *ViewUserDashboardPanelSetting {
	return v.value
}

func (v *NullableViewUserDashboardPanelSetting) Set(val *ViewUserDashboardPanelSetting) {
	v.value = val
	v.isSet = true
}

func (v NullableViewUserDashboardPanelSetting) IsSet() bool {
	return v.isSet
}

func (v *NullableViewUserDashboardPanelSetting) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableViewUserDashboardPanelSetting(val *ViewUserDashboardPanelSetting) *NullableViewUserDashboardPanelSetting {
	return &NullableViewUserDashboardPanelSetting{value: val, isSet: true}
}

func (v NullableViewUserDashboardPanelSetting) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableViewUserDashboardPanelSetting) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


