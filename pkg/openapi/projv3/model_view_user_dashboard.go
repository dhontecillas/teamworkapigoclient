/*
 * Teamwork.com Projects API
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * API version: 3.0
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package projv3

import (
	"encoding/json"
)

// ViewUserDashboard UserDashboard contains all the information returned from a dashboard.
type ViewUserDashboard struct {
	Color *string `json:"color,omitempty"`
	CreatedAt *string `json:"createdAt,omitempty"`
	DashboardPanelIds *[]int32 `json:"dashboardPanelIds,omitempty"`
	DashboardPanels *[]ViewRelationship `json:"dashboardPanels,omitempty"`
	DashboardSettingIds *[]int32 `json:"dashboardSettingIds,omitempty"`
	DashboardSettings *[]ViewRelationship `json:"dashboardSettings,omitempty"`
	Deleted *bool `json:"deleted,omitempty"`
	DeletedAt *string `json:"deletedAt,omitempty"`
	Description *string `json:"description,omitempty"`
	DisplayOrder *int32 `json:"displayOrder,omitempty"`
	Id *int32 `json:"id,omitempty"`
	IsDefault *bool `json:"isDefault,omitempty"`
	Project *ViewRelationship `json:"project,omitempty"`
	ProjectId *int32 `json:"projectId,omitempty"`
	Title *string `json:"title,omitempty"`
	UpdatedAt *string `json:"updatedAt,omitempty"`
	User *ViewRelationship `json:"user,omitempty"`
	UserId *int32 `json:"userId,omitempty"`
}

// NewViewUserDashboard instantiates a new ViewUserDashboard object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewViewUserDashboard() *ViewUserDashboard {
	this := ViewUserDashboard{}
	return &this
}

// NewViewUserDashboardWithDefaults instantiates a new ViewUserDashboard object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewViewUserDashboardWithDefaults() *ViewUserDashboard {
	this := ViewUserDashboard{}
	return &this
}

// GetColor returns the Color field value if set, zero value otherwise.
func (o *ViewUserDashboard) GetColor() string {
	if o == nil || o.Color == nil {
		var ret string
		return ret
	}
	return *o.Color
}

// GetColorOk returns a tuple with the Color field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ViewUserDashboard) GetColorOk() (*string, bool) {
	if o == nil || o.Color == nil {
		return nil, false
	}
	return o.Color, true
}

// HasColor returns a boolean if a field has been set.
func (o *ViewUserDashboard) HasColor() bool {
	if o != nil && o.Color != nil {
		return true
	}

	return false
}

// SetColor gets a reference to the given string and assigns it to the Color field.
func (o *ViewUserDashboard) SetColor(v string) {
	o.Color = &v
}

// GetCreatedAt returns the CreatedAt field value if set, zero value otherwise.
func (o *ViewUserDashboard) GetCreatedAt() string {
	if o == nil || o.CreatedAt == nil {
		var ret string
		return ret
	}
	return *o.CreatedAt
}

// GetCreatedAtOk returns a tuple with the CreatedAt field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ViewUserDashboard) GetCreatedAtOk() (*string, bool) {
	if o == nil || o.CreatedAt == nil {
		return nil, false
	}
	return o.CreatedAt, true
}

// HasCreatedAt returns a boolean if a field has been set.
func (o *ViewUserDashboard) HasCreatedAt() bool {
	if o != nil && o.CreatedAt != nil {
		return true
	}

	return false
}

// SetCreatedAt gets a reference to the given string and assigns it to the CreatedAt field.
func (o *ViewUserDashboard) SetCreatedAt(v string) {
	o.CreatedAt = &v
}

// GetDashboardPanelIds returns the DashboardPanelIds field value if set, zero value otherwise.
func (o *ViewUserDashboard) GetDashboardPanelIds() []int32 {
	if o == nil || o.DashboardPanelIds == nil {
		var ret []int32
		return ret
	}
	return *o.DashboardPanelIds
}

// GetDashboardPanelIdsOk returns a tuple with the DashboardPanelIds field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ViewUserDashboard) GetDashboardPanelIdsOk() (*[]int32, bool) {
	if o == nil || o.DashboardPanelIds == nil {
		return nil, false
	}
	return o.DashboardPanelIds, true
}

// HasDashboardPanelIds returns a boolean if a field has been set.
func (o *ViewUserDashboard) HasDashboardPanelIds() bool {
	if o != nil && o.DashboardPanelIds != nil {
		return true
	}

	return false
}

// SetDashboardPanelIds gets a reference to the given []int32 and assigns it to the DashboardPanelIds field.
func (o *ViewUserDashboard) SetDashboardPanelIds(v []int32) {
	o.DashboardPanelIds = &v
}

// GetDashboardPanels returns the DashboardPanels field value if set, zero value otherwise.
func (o *ViewUserDashboard) GetDashboardPanels() []ViewRelationship {
	if o == nil || o.DashboardPanels == nil {
		var ret []ViewRelationship
		return ret
	}
	return *o.DashboardPanels
}

// GetDashboardPanelsOk returns a tuple with the DashboardPanels field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ViewUserDashboard) GetDashboardPanelsOk() (*[]ViewRelationship, bool) {
	if o == nil || o.DashboardPanels == nil {
		return nil, false
	}
	return o.DashboardPanels, true
}

// HasDashboardPanels returns a boolean if a field has been set.
func (o *ViewUserDashboard) HasDashboardPanels() bool {
	if o != nil && o.DashboardPanels != nil {
		return true
	}

	return false
}

// SetDashboardPanels gets a reference to the given []ViewRelationship and assigns it to the DashboardPanels field.
func (o *ViewUserDashboard) SetDashboardPanels(v []ViewRelationship) {
	o.DashboardPanels = &v
}

// GetDashboardSettingIds returns the DashboardSettingIds field value if set, zero value otherwise.
func (o *ViewUserDashboard) GetDashboardSettingIds() []int32 {
	if o == nil || o.DashboardSettingIds == nil {
		var ret []int32
		return ret
	}
	return *o.DashboardSettingIds
}

// GetDashboardSettingIdsOk returns a tuple with the DashboardSettingIds field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ViewUserDashboard) GetDashboardSettingIdsOk() (*[]int32, bool) {
	if o == nil || o.DashboardSettingIds == nil {
		return nil, false
	}
	return o.DashboardSettingIds, true
}

// HasDashboardSettingIds returns a boolean if a field has been set.
func (o *ViewUserDashboard) HasDashboardSettingIds() bool {
	if o != nil && o.DashboardSettingIds != nil {
		return true
	}

	return false
}

// SetDashboardSettingIds gets a reference to the given []int32 and assigns it to the DashboardSettingIds field.
func (o *ViewUserDashboard) SetDashboardSettingIds(v []int32) {
	o.DashboardSettingIds = &v
}

// GetDashboardSettings returns the DashboardSettings field value if set, zero value otherwise.
func (o *ViewUserDashboard) GetDashboardSettings() []ViewRelationship {
	if o == nil || o.DashboardSettings == nil {
		var ret []ViewRelationship
		return ret
	}
	return *o.DashboardSettings
}

// GetDashboardSettingsOk returns a tuple with the DashboardSettings field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ViewUserDashboard) GetDashboardSettingsOk() (*[]ViewRelationship, bool) {
	if o == nil || o.DashboardSettings == nil {
		return nil, false
	}
	return o.DashboardSettings, true
}

// HasDashboardSettings returns a boolean if a field has been set.
func (o *ViewUserDashboard) HasDashboardSettings() bool {
	if o != nil && o.DashboardSettings != nil {
		return true
	}

	return false
}

// SetDashboardSettings gets a reference to the given []ViewRelationship and assigns it to the DashboardSettings field.
func (o *ViewUserDashboard) SetDashboardSettings(v []ViewRelationship) {
	o.DashboardSettings = &v
}

// GetDeleted returns the Deleted field value if set, zero value otherwise.
func (o *ViewUserDashboard) GetDeleted() bool {
	if o == nil || o.Deleted == nil {
		var ret bool
		return ret
	}
	return *o.Deleted
}

// GetDeletedOk returns a tuple with the Deleted field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ViewUserDashboard) GetDeletedOk() (*bool, bool) {
	if o == nil || o.Deleted == nil {
		return nil, false
	}
	return o.Deleted, true
}

// HasDeleted returns a boolean if a field has been set.
func (o *ViewUserDashboard) HasDeleted() bool {
	if o != nil && o.Deleted != nil {
		return true
	}

	return false
}

// SetDeleted gets a reference to the given bool and assigns it to the Deleted field.
func (o *ViewUserDashboard) SetDeleted(v bool) {
	o.Deleted = &v
}

// GetDeletedAt returns the DeletedAt field value if set, zero value otherwise.
func (o *ViewUserDashboard) GetDeletedAt() string {
	if o == nil || o.DeletedAt == nil {
		var ret string
		return ret
	}
	return *o.DeletedAt
}

// GetDeletedAtOk returns a tuple with the DeletedAt field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ViewUserDashboard) GetDeletedAtOk() (*string, bool) {
	if o == nil || o.DeletedAt == nil {
		return nil, false
	}
	return o.DeletedAt, true
}

// HasDeletedAt returns a boolean if a field has been set.
func (o *ViewUserDashboard) HasDeletedAt() bool {
	if o != nil && o.DeletedAt != nil {
		return true
	}

	return false
}

// SetDeletedAt gets a reference to the given string and assigns it to the DeletedAt field.
func (o *ViewUserDashboard) SetDeletedAt(v string) {
	o.DeletedAt = &v
}

// GetDescription returns the Description field value if set, zero value otherwise.
func (o *ViewUserDashboard) GetDescription() string {
	if o == nil || o.Description == nil {
		var ret string
		return ret
	}
	return *o.Description
}

// GetDescriptionOk returns a tuple with the Description field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ViewUserDashboard) GetDescriptionOk() (*string, bool) {
	if o == nil || o.Description == nil {
		return nil, false
	}
	return o.Description, true
}

// HasDescription returns a boolean if a field has been set.
func (o *ViewUserDashboard) HasDescription() bool {
	if o != nil && o.Description != nil {
		return true
	}

	return false
}

// SetDescription gets a reference to the given string and assigns it to the Description field.
func (o *ViewUserDashboard) SetDescription(v string) {
	o.Description = &v
}

// GetDisplayOrder returns the DisplayOrder field value if set, zero value otherwise.
func (o *ViewUserDashboard) GetDisplayOrder() int32 {
	if o == nil || o.DisplayOrder == nil {
		var ret int32
		return ret
	}
	return *o.DisplayOrder
}

// GetDisplayOrderOk returns a tuple with the DisplayOrder field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ViewUserDashboard) GetDisplayOrderOk() (*int32, bool) {
	if o == nil || o.DisplayOrder == nil {
		return nil, false
	}
	return o.DisplayOrder, true
}

// HasDisplayOrder returns a boolean if a field has been set.
func (o *ViewUserDashboard) HasDisplayOrder() bool {
	if o != nil && o.DisplayOrder != nil {
		return true
	}

	return false
}

// SetDisplayOrder gets a reference to the given int32 and assigns it to the DisplayOrder field.
func (o *ViewUserDashboard) SetDisplayOrder(v int32) {
	o.DisplayOrder = &v
}

// GetId returns the Id field value if set, zero value otherwise.
func (o *ViewUserDashboard) GetId() int32 {
	if o == nil || o.Id == nil {
		var ret int32
		return ret
	}
	return *o.Id
}

// GetIdOk returns a tuple with the Id field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ViewUserDashboard) GetIdOk() (*int32, bool) {
	if o == nil || o.Id == nil {
		return nil, false
	}
	return o.Id, true
}

// HasId returns a boolean if a field has been set.
func (o *ViewUserDashboard) HasId() bool {
	if o != nil && o.Id != nil {
		return true
	}

	return false
}

// SetId gets a reference to the given int32 and assigns it to the Id field.
func (o *ViewUserDashboard) SetId(v int32) {
	o.Id = &v
}

// GetIsDefault returns the IsDefault field value if set, zero value otherwise.
func (o *ViewUserDashboard) GetIsDefault() bool {
	if o == nil || o.IsDefault == nil {
		var ret bool
		return ret
	}
	return *o.IsDefault
}

// GetIsDefaultOk returns a tuple with the IsDefault field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ViewUserDashboard) GetIsDefaultOk() (*bool, bool) {
	if o == nil || o.IsDefault == nil {
		return nil, false
	}
	return o.IsDefault, true
}

// HasIsDefault returns a boolean if a field has been set.
func (o *ViewUserDashboard) HasIsDefault() bool {
	if o != nil && o.IsDefault != nil {
		return true
	}

	return false
}

// SetIsDefault gets a reference to the given bool and assigns it to the IsDefault field.
func (o *ViewUserDashboard) SetIsDefault(v bool) {
	o.IsDefault = &v
}

// GetProject returns the Project field value if set, zero value otherwise.
func (o *ViewUserDashboard) GetProject() ViewRelationship {
	if o == nil || o.Project == nil {
		var ret ViewRelationship
		return ret
	}
	return *o.Project
}

// GetProjectOk returns a tuple with the Project field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ViewUserDashboard) GetProjectOk() (*ViewRelationship, bool) {
	if o == nil || o.Project == nil {
		return nil, false
	}
	return o.Project, true
}

// HasProject returns a boolean if a field has been set.
func (o *ViewUserDashboard) HasProject() bool {
	if o != nil && o.Project != nil {
		return true
	}

	return false
}

// SetProject gets a reference to the given ViewRelationship and assigns it to the Project field.
func (o *ViewUserDashboard) SetProject(v ViewRelationship) {
	o.Project = &v
}

// GetProjectId returns the ProjectId field value if set, zero value otherwise.
func (o *ViewUserDashboard) GetProjectId() int32 {
	if o == nil || o.ProjectId == nil {
		var ret int32
		return ret
	}
	return *o.ProjectId
}

// GetProjectIdOk returns a tuple with the ProjectId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ViewUserDashboard) GetProjectIdOk() (*int32, bool) {
	if o == nil || o.ProjectId == nil {
		return nil, false
	}
	return o.ProjectId, true
}

// HasProjectId returns a boolean if a field has been set.
func (o *ViewUserDashboard) HasProjectId() bool {
	if o != nil && o.ProjectId != nil {
		return true
	}

	return false
}

// SetProjectId gets a reference to the given int32 and assigns it to the ProjectId field.
func (o *ViewUserDashboard) SetProjectId(v int32) {
	o.ProjectId = &v
}

// GetTitle returns the Title field value if set, zero value otherwise.
func (o *ViewUserDashboard) GetTitle() string {
	if o == nil || o.Title == nil {
		var ret string
		return ret
	}
	return *o.Title
}

// GetTitleOk returns a tuple with the Title field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ViewUserDashboard) GetTitleOk() (*string, bool) {
	if o == nil || o.Title == nil {
		return nil, false
	}
	return o.Title, true
}

// HasTitle returns a boolean if a field has been set.
func (o *ViewUserDashboard) HasTitle() bool {
	if o != nil && o.Title != nil {
		return true
	}

	return false
}

// SetTitle gets a reference to the given string and assigns it to the Title field.
func (o *ViewUserDashboard) SetTitle(v string) {
	o.Title = &v
}

// GetUpdatedAt returns the UpdatedAt field value if set, zero value otherwise.
func (o *ViewUserDashboard) GetUpdatedAt() string {
	if o == nil || o.UpdatedAt == nil {
		var ret string
		return ret
	}
	return *o.UpdatedAt
}

// GetUpdatedAtOk returns a tuple with the UpdatedAt field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ViewUserDashboard) GetUpdatedAtOk() (*string, bool) {
	if o == nil || o.UpdatedAt == nil {
		return nil, false
	}
	return o.UpdatedAt, true
}

// HasUpdatedAt returns a boolean if a field has been set.
func (o *ViewUserDashboard) HasUpdatedAt() bool {
	if o != nil && o.UpdatedAt != nil {
		return true
	}

	return false
}

// SetUpdatedAt gets a reference to the given string and assigns it to the UpdatedAt field.
func (o *ViewUserDashboard) SetUpdatedAt(v string) {
	o.UpdatedAt = &v
}

// GetUser returns the User field value if set, zero value otherwise.
func (o *ViewUserDashboard) GetUser() ViewRelationship {
	if o == nil || o.User == nil {
		var ret ViewRelationship
		return ret
	}
	return *o.User
}

// GetUserOk returns a tuple with the User field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ViewUserDashboard) GetUserOk() (*ViewRelationship, bool) {
	if o == nil || o.User == nil {
		return nil, false
	}
	return o.User, true
}

// HasUser returns a boolean if a field has been set.
func (o *ViewUserDashboard) HasUser() bool {
	if o != nil && o.User != nil {
		return true
	}

	return false
}

// SetUser gets a reference to the given ViewRelationship and assigns it to the User field.
func (o *ViewUserDashboard) SetUser(v ViewRelationship) {
	o.User = &v
}

// GetUserId returns the UserId field value if set, zero value otherwise.
func (o *ViewUserDashboard) GetUserId() int32 {
	if o == nil || o.UserId == nil {
		var ret int32
		return ret
	}
	return *o.UserId
}

// GetUserIdOk returns a tuple with the UserId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ViewUserDashboard) GetUserIdOk() (*int32, bool) {
	if o == nil || o.UserId == nil {
		return nil, false
	}
	return o.UserId, true
}

// HasUserId returns a boolean if a field has been set.
func (o *ViewUserDashboard) HasUserId() bool {
	if o != nil && o.UserId != nil {
		return true
	}

	return false
}

// SetUserId gets a reference to the given int32 and assigns it to the UserId field.
func (o *ViewUserDashboard) SetUserId(v int32) {
	o.UserId = &v
}

func (o ViewUserDashboard) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.Color != nil {
		toSerialize["color"] = o.Color
	}
	if o.CreatedAt != nil {
		toSerialize["createdAt"] = o.CreatedAt
	}
	if o.DashboardPanelIds != nil {
		toSerialize["dashboardPanelIds"] = o.DashboardPanelIds
	}
	if o.DashboardPanels != nil {
		toSerialize["dashboardPanels"] = o.DashboardPanels
	}
	if o.DashboardSettingIds != nil {
		toSerialize["dashboardSettingIds"] = o.DashboardSettingIds
	}
	if o.DashboardSettings != nil {
		toSerialize["dashboardSettings"] = o.DashboardSettings
	}
	if o.Deleted != nil {
		toSerialize["deleted"] = o.Deleted
	}
	if o.DeletedAt != nil {
		toSerialize["deletedAt"] = o.DeletedAt
	}
	if o.Description != nil {
		toSerialize["description"] = o.Description
	}
	if o.DisplayOrder != nil {
		toSerialize["displayOrder"] = o.DisplayOrder
	}
	if o.Id != nil {
		toSerialize["id"] = o.Id
	}
	if o.IsDefault != nil {
		toSerialize["isDefault"] = o.IsDefault
	}
	if o.Project != nil {
		toSerialize["project"] = o.Project
	}
	if o.ProjectId != nil {
		toSerialize["projectId"] = o.ProjectId
	}
	if o.Title != nil {
		toSerialize["title"] = o.Title
	}
	if o.UpdatedAt != nil {
		toSerialize["updatedAt"] = o.UpdatedAt
	}
	if o.User != nil {
		toSerialize["user"] = o.User
	}
	if o.UserId != nil {
		toSerialize["userId"] = o.UserId
	}
	return json.Marshal(toSerialize)
}

type NullableViewUserDashboard struct {
	value *ViewUserDashboard
	isSet bool
}

func (v NullableViewUserDashboard) Get() *ViewUserDashboard {
	return v.value
}

func (v *NullableViewUserDashboard) Set(val *ViewUserDashboard) {
	v.value = val
	v.isSet = true
}

func (v NullableViewUserDashboard) IsSet() bool {
	return v.isSet
}

func (v *NullableViewUserDashboard) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableViewUserDashboard(val *ViewUserDashboard) *NullableViewUserDashboard {
	return &NullableViewUserDashboard{value: val, isSet: true}
}

func (v NullableViewUserDashboard) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableViewUserDashboard) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


