/*
 * Teamwork Projects API
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * API version: 
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package pmv1

import (
	"encoding/json"
)

// InlineResponse20054Projects struct for InlineResponse20054Projects
type InlineResponse20054Projects struct {
	ActivePages *InlineResponse20054ActivePages `json:"activePages,omitempty"`
	ActiveUserIsProjectAdmin *bool `json:"activeUserIsProjectAdmin,omitempty"`
	Announcement *string `json:"announcement,omitempty"`
	AnnouncementHTML *string `json:"announcementHTML,omitempty"`
	Category *InlineResponse20054Category `json:"category,omitempty"`
	Company *InlineResponse20054Company `json:"company,omitempty"`
	CreatedOn *string `json:"createdOn,omitempty"`
	DefaultPrivacy *string `json:"defaultPrivacy,omitempty"`
	Defaults *InlineResponse20053Defaults `json:"defaults,omitempty"`
	Description *string `json:"description,omitempty"`
	DirectFileUploadsEnabled *bool `json:"directFileUploadsEnabled,omitempty"`
	FilesAutoNewVersion *bool `json:"filesAutoNewVersion,omitempty"`
	HarvestTimersEnabled *bool `json:"harvestTimersEnabled,omitempty"`
	Id *int32 `json:"id,omitempty"`
	Integrations *InlineResponse20054Integrations `json:"integrations,omitempty"`
	IsProjectAdmin *bool `json:"isProjectAdmin,omitempty"`
	LastChangedOn *string `json:"lastChangedOn,omitempty"`
	LastWorkedOn *string `json:"lastWorkedOn,omitempty"`
	Logo *string `json:"logo,omitempty"`
	LogoFromCompany *bool `json:"logoFromCompany,omitempty"`
	MinMaxAvailableDates *InlineResponse20054MinMaxAvailableDates `json:"minMaxAvailableDates,omitempty"`
	Name *string `json:"name,omitempty"`
	NotifyEveryone *bool `json:"notifyEveryone,omitempty"`
	OverviewStartPage *string `json:"overviewStartPage,omitempty"`
	PrivacyEnabled *bool `json:"privacyEnabled,omitempty"`
	ProjectOwnerId *int32 `json:"projectOwnerId,omitempty"`
	ReplyByEmailEnabled *bool `json:"replyByEmailEnabled,omitempty"`
	ShowAnnouncement *bool `json:"showAnnouncement,omitempty"`
	SkipWeekends *bool `json:"skipWeekends,omitempty"`
	Starred *bool `json:"starred,omitempty"`
	StartPage *string `json:"startPage,omitempty"`
	Status *string `json:"status,omitempty"`
	SubStatus *string `json:"subStatus,omitempty"`
	Tags *[]InlineResponse20054Tags `json:"tags,omitempty"`
	TasksStartPage *string `json:"tasksStartPage,omitempty"`
	TemplateDateTargetDefault *string `json:"templateDateTargetDefault,omitempty"`
	Type *string `json:"type,omitempty"`
}

// NewInlineResponse20054Projects instantiates a new InlineResponse20054Projects object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewInlineResponse20054Projects() *InlineResponse20054Projects {
	this := InlineResponse20054Projects{}
	return &this
}

// NewInlineResponse20054ProjectsWithDefaults instantiates a new InlineResponse20054Projects object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewInlineResponse20054ProjectsWithDefaults() *InlineResponse20054Projects {
	this := InlineResponse20054Projects{}
	return &this
}

// GetActivePages returns the ActivePages field value if set, zero value otherwise.
func (o *InlineResponse20054Projects) GetActivePages() InlineResponse20054ActivePages {
	if o == nil || o.ActivePages == nil {
		var ret InlineResponse20054ActivePages
		return ret
	}
	return *o.ActivePages
}

// GetActivePagesOk returns a tuple with the ActivePages field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InlineResponse20054Projects) GetActivePagesOk() (*InlineResponse20054ActivePages, bool) {
	if o == nil || o.ActivePages == nil {
		return nil, false
	}
	return o.ActivePages, true
}

// HasActivePages returns a boolean if a field has been set.
func (o *InlineResponse20054Projects) HasActivePages() bool {
	if o != nil && o.ActivePages != nil {
		return true
	}

	return false
}

// SetActivePages gets a reference to the given InlineResponse20054ActivePages and assigns it to the ActivePages field.
func (o *InlineResponse20054Projects) SetActivePages(v InlineResponse20054ActivePages) {
	o.ActivePages = &v
}

// GetActiveUserIsProjectAdmin returns the ActiveUserIsProjectAdmin field value if set, zero value otherwise.
func (o *InlineResponse20054Projects) GetActiveUserIsProjectAdmin() bool {
	if o == nil || o.ActiveUserIsProjectAdmin == nil {
		var ret bool
		return ret
	}
	return *o.ActiveUserIsProjectAdmin
}

// GetActiveUserIsProjectAdminOk returns a tuple with the ActiveUserIsProjectAdmin field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InlineResponse20054Projects) GetActiveUserIsProjectAdminOk() (*bool, bool) {
	if o == nil || o.ActiveUserIsProjectAdmin == nil {
		return nil, false
	}
	return o.ActiveUserIsProjectAdmin, true
}

// HasActiveUserIsProjectAdmin returns a boolean if a field has been set.
func (o *InlineResponse20054Projects) HasActiveUserIsProjectAdmin() bool {
	if o != nil && o.ActiveUserIsProjectAdmin != nil {
		return true
	}

	return false
}

// SetActiveUserIsProjectAdmin gets a reference to the given bool and assigns it to the ActiveUserIsProjectAdmin field.
func (o *InlineResponse20054Projects) SetActiveUserIsProjectAdmin(v bool) {
	o.ActiveUserIsProjectAdmin = &v
}

// GetAnnouncement returns the Announcement field value if set, zero value otherwise.
func (o *InlineResponse20054Projects) GetAnnouncement() string {
	if o == nil || o.Announcement == nil {
		var ret string
		return ret
	}
	return *o.Announcement
}

// GetAnnouncementOk returns a tuple with the Announcement field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InlineResponse20054Projects) GetAnnouncementOk() (*string, bool) {
	if o == nil || o.Announcement == nil {
		return nil, false
	}
	return o.Announcement, true
}

// HasAnnouncement returns a boolean if a field has been set.
func (o *InlineResponse20054Projects) HasAnnouncement() bool {
	if o != nil && o.Announcement != nil {
		return true
	}

	return false
}

// SetAnnouncement gets a reference to the given string and assigns it to the Announcement field.
func (o *InlineResponse20054Projects) SetAnnouncement(v string) {
	o.Announcement = &v
}

// GetAnnouncementHTML returns the AnnouncementHTML field value if set, zero value otherwise.
func (o *InlineResponse20054Projects) GetAnnouncementHTML() string {
	if o == nil || o.AnnouncementHTML == nil {
		var ret string
		return ret
	}
	return *o.AnnouncementHTML
}

// GetAnnouncementHTMLOk returns a tuple with the AnnouncementHTML field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InlineResponse20054Projects) GetAnnouncementHTMLOk() (*string, bool) {
	if o == nil || o.AnnouncementHTML == nil {
		return nil, false
	}
	return o.AnnouncementHTML, true
}

// HasAnnouncementHTML returns a boolean if a field has been set.
func (o *InlineResponse20054Projects) HasAnnouncementHTML() bool {
	if o != nil && o.AnnouncementHTML != nil {
		return true
	}

	return false
}

// SetAnnouncementHTML gets a reference to the given string and assigns it to the AnnouncementHTML field.
func (o *InlineResponse20054Projects) SetAnnouncementHTML(v string) {
	o.AnnouncementHTML = &v
}

// GetCategory returns the Category field value if set, zero value otherwise.
func (o *InlineResponse20054Projects) GetCategory() InlineResponse20054Category {
	if o == nil || o.Category == nil {
		var ret InlineResponse20054Category
		return ret
	}
	return *o.Category
}

// GetCategoryOk returns a tuple with the Category field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InlineResponse20054Projects) GetCategoryOk() (*InlineResponse20054Category, bool) {
	if o == nil || o.Category == nil {
		return nil, false
	}
	return o.Category, true
}

// HasCategory returns a boolean if a field has been set.
func (o *InlineResponse20054Projects) HasCategory() bool {
	if o != nil && o.Category != nil {
		return true
	}

	return false
}

// SetCategory gets a reference to the given InlineResponse20054Category and assigns it to the Category field.
func (o *InlineResponse20054Projects) SetCategory(v InlineResponse20054Category) {
	o.Category = &v
}

// GetCompany returns the Company field value if set, zero value otherwise.
func (o *InlineResponse20054Projects) GetCompany() InlineResponse20054Company {
	if o == nil || o.Company == nil {
		var ret InlineResponse20054Company
		return ret
	}
	return *o.Company
}

// GetCompanyOk returns a tuple with the Company field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InlineResponse20054Projects) GetCompanyOk() (*InlineResponse20054Company, bool) {
	if o == nil || o.Company == nil {
		return nil, false
	}
	return o.Company, true
}

// HasCompany returns a boolean if a field has been set.
func (o *InlineResponse20054Projects) HasCompany() bool {
	if o != nil && o.Company != nil {
		return true
	}

	return false
}

// SetCompany gets a reference to the given InlineResponse20054Company and assigns it to the Company field.
func (o *InlineResponse20054Projects) SetCompany(v InlineResponse20054Company) {
	o.Company = &v
}

// GetCreatedOn returns the CreatedOn field value if set, zero value otherwise.
func (o *InlineResponse20054Projects) GetCreatedOn() string {
	if o == nil || o.CreatedOn == nil {
		var ret string
		return ret
	}
	return *o.CreatedOn
}

// GetCreatedOnOk returns a tuple with the CreatedOn field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InlineResponse20054Projects) GetCreatedOnOk() (*string, bool) {
	if o == nil || o.CreatedOn == nil {
		return nil, false
	}
	return o.CreatedOn, true
}

// HasCreatedOn returns a boolean if a field has been set.
func (o *InlineResponse20054Projects) HasCreatedOn() bool {
	if o != nil && o.CreatedOn != nil {
		return true
	}

	return false
}

// SetCreatedOn gets a reference to the given string and assigns it to the CreatedOn field.
func (o *InlineResponse20054Projects) SetCreatedOn(v string) {
	o.CreatedOn = &v
}

// GetDefaultPrivacy returns the DefaultPrivacy field value if set, zero value otherwise.
func (o *InlineResponse20054Projects) GetDefaultPrivacy() string {
	if o == nil || o.DefaultPrivacy == nil {
		var ret string
		return ret
	}
	return *o.DefaultPrivacy
}

// GetDefaultPrivacyOk returns a tuple with the DefaultPrivacy field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InlineResponse20054Projects) GetDefaultPrivacyOk() (*string, bool) {
	if o == nil || o.DefaultPrivacy == nil {
		return nil, false
	}
	return o.DefaultPrivacy, true
}

// HasDefaultPrivacy returns a boolean if a field has been set.
func (o *InlineResponse20054Projects) HasDefaultPrivacy() bool {
	if o != nil && o.DefaultPrivacy != nil {
		return true
	}

	return false
}

// SetDefaultPrivacy gets a reference to the given string and assigns it to the DefaultPrivacy field.
func (o *InlineResponse20054Projects) SetDefaultPrivacy(v string) {
	o.DefaultPrivacy = &v
}

// GetDefaults returns the Defaults field value if set, zero value otherwise.
func (o *InlineResponse20054Projects) GetDefaults() InlineResponse20053Defaults {
	if o == nil || o.Defaults == nil {
		var ret InlineResponse20053Defaults
		return ret
	}
	return *o.Defaults
}

// GetDefaultsOk returns a tuple with the Defaults field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InlineResponse20054Projects) GetDefaultsOk() (*InlineResponse20053Defaults, bool) {
	if o == nil || o.Defaults == nil {
		return nil, false
	}
	return o.Defaults, true
}

// HasDefaults returns a boolean if a field has been set.
func (o *InlineResponse20054Projects) HasDefaults() bool {
	if o != nil && o.Defaults != nil {
		return true
	}

	return false
}

// SetDefaults gets a reference to the given InlineResponse20053Defaults and assigns it to the Defaults field.
func (o *InlineResponse20054Projects) SetDefaults(v InlineResponse20053Defaults) {
	o.Defaults = &v
}

// GetDescription returns the Description field value if set, zero value otherwise.
func (o *InlineResponse20054Projects) GetDescription() string {
	if o == nil || o.Description == nil {
		var ret string
		return ret
	}
	return *o.Description
}

// GetDescriptionOk returns a tuple with the Description field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InlineResponse20054Projects) GetDescriptionOk() (*string, bool) {
	if o == nil || o.Description == nil {
		return nil, false
	}
	return o.Description, true
}

// HasDescription returns a boolean if a field has been set.
func (o *InlineResponse20054Projects) HasDescription() bool {
	if o != nil && o.Description != nil {
		return true
	}

	return false
}

// SetDescription gets a reference to the given string and assigns it to the Description field.
func (o *InlineResponse20054Projects) SetDescription(v string) {
	o.Description = &v
}

// GetDirectFileUploadsEnabled returns the DirectFileUploadsEnabled field value if set, zero value otherwise.
func (o *InlineResponse20054Projects) GetDirectFileUploadsEnabled() bool {
	if o == nil || o.DirectFileUploadsEnabled == nil {
		var ret bool
		return ret
	}
	return *o.DirectFileUploadsEnabled
}

// GetDirectFileUploadsEnabledOk returns a tuple with the DirectFileUploadsEnabled field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InlineResponse20054Projects) GetDirectFileUploadsEnabledOk() (*bool, bool) {
	if o == nil || o.DirectFileUploadsEnabled == nil {
		return nil, false
	}
	return o.DirectFileUploadsEnabled, true
}

// HasDirectFileUploadsEnabled returns a boolean if a field has been set.
func (o *InlineResponse20054Projects) HasDirectFileUploadsEnabled() bool {
	if o != nil && o.DirectFileUploadsEnabled != nil {
		return true
	}

	return false
}

// SetDirectFileUploadsEnabled gets a reference to the given bool and assigns it to the DirectFileUploadsEnabled field.
func (o *InlineResponse20054Projects) SetDirectFileUploadsEnabled(v bool) {
	o.DirectFileUploadsEnabled = &v
}

// GetFilesAutoNewVersion returns the FilesAutoNewVersion field value if set, zero value otherwise.
func (o *InlineResponse20054Projects) GetFilesAutoNewVersion() bool {
	if o == nil || o.FilesAutoNewVersion == nil {
		var ret bool
		return ret
	}
	return *o.FilesAutoNewVersion
}

// GetFilesAutoNewVersionOk returns a tuple with the FilesAutoNewVersion field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InlineResponse20054Projects) GetFilesAutoNewVersionOk() (*bool, bool) {
	if o == nil || o.FilesAutoNewVersion == nil {
		return nil, false
	}
	return o.FilesAutoNewVersion, true
}

// HasFilesAutoNewVersion returns a boolean if a field has been set.
func (o *InlineResponse20054Projects) HasFilesAutoNewVersion() bool {
	if o != nil && o.FilesAutoNewVersion != nil {
		return true
	}

	return false
}

// SetFilesAutoNewVersion gets a reference to the given bool and assigns it to the FilesAutoNewVersion field.
func (o *InlineResponse20054Projects) SetFilesAutoNewVersion(v bool) {
	o.FilesAutoNewVersion = &v
}

// GetHarvestTimersEnabled returns the HarvestTimersEnabled field value if set, zero value otherwise.
func (o *InlineResponse20054Projects) GetHarvestTimersEnabled() bool {
	if o == nil || o.HarvestTimersEnabled == nil {
		var ret bool
		return ret
	}
	return *o.HarvestTimersEnabled
}

// GetHarvestTimersEnabledOk returns a tuple with the HarvestTimersEnabled field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InlineResponse20054Projects) GetHarvestTimersEnabledOk() (*bool, bool) {
	if o == nil || o.HarvestTimersEnabled == nil {
		return nil, false
	}
	return o.HarvestTimersEnabled, true
}

// HasHarvestTimersEnabled returns a boolean if a field has been set.
func (o *InlineResponse20054Projects) HasHarvestTimersEnabled() bool {
	if o != nil && o.HarvestTimersEnabled != nil {
		return true
	}

	return false
}

// SetHarvestTimersEnabled gets a reference to the given bool and assigns it to the HarvestTimersEnabled field.
func (o *InlineResponse20054Projects) SetHarvestTimersEnabled(v bool) {
	o.HarvestTimersEnabled = &v
}

// GetId returns the Id field value if set, zero value otherwise.
func (o *InlineResponse20054Projects) GetId() int32 {
	if o == nil || o.Id == nil {
		var ret int32
		return ret
	}
	return *o.Id
}

// GetIdOk returns a tuple with the Id field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InlineResponse20054Projects) GetIdOk() (*int32, bool) {
	if o == nil || o.Id == nil {
		return nil, false
	}
	return o.Id, true
}

// HasId returns a boolean if a field has been set.
func (o *InlineResponse20054Projects) HasId() bool {
	if o != nil && o.Id != nil {
		return true
	}

	return false
}

// SetId gets a reference to the given int32 and assigns it to the Id field.
func (o *InlineResponse20054Projects) SetId(v int32) {
	o.Id = &v
}

// GetIntegrations returns the Integrations field value if set, zero value otherwise.
func (o *InlineResponse20054Projects) GetIntegrations() InlineResponse20054Integrations {
	if o == nil || o.Integrations == nil {
		var ret InlineResponse20054Integrations
		return ret
	}
	return *o.Integrations
}

// GetIntegrationsOk returns a tuple with the Integrations field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InlineResponse20054Projects) GetIntegrationsOk() (*InlineResponse20054Integrations, bool) {
	if o == nil || o.Integrations == nil {
		return nil, false
	}
	return o.Integrations, true
}

// HasIntegrations returns a boolean if a field has been set.
func (o *InlineResponse20054Projects) HasIntegrations() bool {
	if o != nil && o.Integrations != nil {
		return true
	}

	return false
}

// SetIntegrations gets a reference to the given InlineResponse20054Integrations and assigns it to the Integrations field.
func (o *InlineResponse20054Projects) SetIntegrations(v InlineResponse20054Integrations) {
	o.Integrations = &v
}

// GetIsProjectAdmin returns the IsProjectAdmin field value if set, zero value otherwise.
func (o *InlineResponse20054Projects) GetIsProjectAdmin() bool {
	if o == nil || o.IsProjectAdmin == nil {
		var ret bool
		return ret
	}
	return *o.IsProjectAdmin
}

// GetIsProjectAdminOk returns a tuple with the IsProjectAdmin field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InlineResponse20054Projects) GetIsProjectAdminOk() (*bool, bool) {
	if o == nil || o.IsProjectAdmin == nil {
		return nil, false
	}
	return o.IsProjectAdmin, true
}

// HasIsProjectAdmin returns a boolean if a field has been set.
func (o *InlineResponse20054Projects) HasIsProjectAdmin() bool {
	if o != nil && o.IsProjectAdmin != nil {
		return true
	}

	return false
}

// SetIsProjectAdmin gets a reference to the given bool and assigns it to the IsProjectAdmin field.
func (o *InlineResponse20054Projects) SetIsProjectAdmin(v bool) {
	o.IsProjectAdmin = &v
}

// GetLastChangedOn returns the LastChangedOn field value if set, zero value otherwise.
func (o *InlineResponse20054Projects) GetLastChangedOn() string {
	if o == nil || o.LastChangedOn == nil {
		var ret string
		return ret
	}
	return *o.LastChangedOn
}

// GetLastChangedOnOk returns a tuple with the LastChangedOn field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InlineResponse20054Projects) GetLastChangedOnOk() (*string, bool) {
	if o == nil || o.LastChangedOn == nil {
		return nil, false
	}
	return o.LastChangedOn, true
}

// HasLastChangedOn returns a boolean if a field has been set.
func (o *InlineResponse20054Projects) HasLastChangedOn() bool {
	if o != nil && o.LastChangedOn != nil {
		return true
	}

	return false
}

// SetLastChangedOn gets a reference to the given string and assigns it to the LastChangedOn field.
func (o *InlineResponse20054Projects) SetLastChangedOn(v string) {
	o.LastChangedOn = &v
}

// GetLastWorkedOn returns the LastWorkedOn field value if set, zero value otherwise.
func (o *InlineResponse20054Projects) GetLastWorkedOn() string {
	if o == nil || o.LastWorkedOn == nil {
		var ret string
		return ret
	}
	return *o.LastWorkedOn
}

// GetLastWorkedOnOk returns a tuple with the LastWorkedOn field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InlineResponse20054Projects) GetLastWorkedOnOk() (*string, bool) {
	if o == nil || o.LastWorkedOn == nil {
		return nil, false
	}
	return o.LastWorkedOn, true
}

// HasLastWorkedOn returns a boolean if a field has been set.
func (o *InlineResponse20054Projects) HasLastWorkedOn() bool {
	if o != nil && o.LastWorkedOn != nil {
		return true
	}

	return false
}

// SetLastWorkedOn gets a reference to the given string and assigns it to the LastWorkedOn field.
func (o *InlineResponse20054Projects) SetLastWorkedOn(v string) {
	o.LastWorkedOn = &v
}

// GetLogo returns the Logo field value if set, zero value otherwise.
func (o *InlineResponse20054Projects) GetLogo() string {
	if o == nil || o.Logo == nil {
		var ret string
		return ret
	}
	return *o.Logo
}

// GetLogoOk returns a tuple with the Logo field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InlineResponse20054Projects) GetLogoOk() (*string, bool) {
	if o == nil || o.Logo == nil {
		return nil, false
	}
	return o.Logo, true
}

// HasLogo returns a boolean if a field has been set.
func (o *InlineResponse20054Projects) HasLogo() bool {
	if o != nil && o.Logo != nil {
		return true
	}

	return false
}

// SetLogo gets a reference to the given string and assigns it to the Logo field.
func (o *InlineResponse20054Projects) SetLogo(v string) {
	o.Logo = &v
}

// GetLogoFromCompany returns the LogoFromCompany field value if set, zero value otherwise.
func (o *InlineResponse20054Projects) GetLogoFromCompany() bool {
	if o == nil || o.LogoFromCompany == nil {
		var ret bool
		return ret
	}
	return *o.LogoFromCompany
}

// GetLogoFromCompanyOk returns a tuple with the LogoFromCompany field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InlineResponse20054Projects) GetLogoFromCompanyOk() (*bool, bool) {
	if o == nil || o.LogoFromCompany == nil {
		return nil, false
	}
	return o.LogoFromCompany, true
}

// HasLogoFromCompany returns a boolean if a field has been set.
func (o *InlineResponse20054Projects) HasLogoFromCompany() bool {
	if o != nil && o.LogoFromCompany != nil {
		return true
	}

	return false
}

// SetLogoFromCompany gets a reference to the given bool and assigns it to the LogoFromCompany field.
func (o *InlineResponse20054Projects) SetLogoFromCompany(v bool) {
	o.LogoFromCompany = &v
}

// GetMinMaxAvailableDates returns the MinMaxAvailableDates field value if set, zero value otherwise.
func (o *InlineResponse20054Projects) GetMinMaxAvailableDates() InlineResponse20054MinMaxAvailableDates {
	if o == nil || o.MinMaxAvailableDates == nil {
		var ret InlineResponse20054MinMaxAvailableDates
		return ret
	}
	return *o.MinMaxAvailableDates
}

// GetMinMaxAvailableDatesOk returns a tuple with the MinMaxAvailableDates field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InlineResponse20054Projects) GetMinMaxAvailableDatesOk() (*InlineResponse20054MinMaxAvailableDates, bool) {
	if o == nil || o.MinMaxAvailableDates == nil {
		return nil, false
	}
	return o.MinMaxAvailableDates, true
}

// HasMinMaxAvailableDates returns a boolean if a field has been set.
func (o *InlineResponse20054Projects) HasMinMaxAvailableDates() bool {
	if o != nil && o.MinMaxAvailableDates != nil {
		return true
	}

	return false
}

// SetMinMaxAvailableDates gets a reference to the given InlineResponse20054MinMaxAvailableDates and assigns it to the MinMaxAvailableDates field.
func (o *InlineResponse20054Projects) SetMinMaxAvailableDates(v InlineResponse20054MinMaxAvailableDates) {
	o.MinMaxAvailableDates = &v
}

// GetName returns the Name field value if set, zero value otherwise.
func (o *InlineResponse20054Projects) GetName() string {
	if o == nil || o.Name == nil {
		var ret string
		return ret
	}
	return *o.Name
}

// GetNameOk returns a tuple with the Name field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InlineResponse20054Projects) GetNameOk() (*string, bool) {
	if o == nil || o.Name == nil {
		return nil, false
	}
	return o.Name, true
}

// HasName returns a boolean if a field has been set.
func (o *InlineResponse20054Projects) HasName() bool {
	if o != nil && o.Name != nil {
		return true
	}

	return false
}

// SetName gets a reference to the given string and assigns it to the Name field.
func (o *InlineResponse20054Projects) SetName(v string) {
	o.Name = &v
}

// GetNotifyEveryone returns the NotifyEveryone field value if set, zero value otherwise.
func (o *InlineResponse20054Projects) GetNotifyEveryone() bool {
	if o == nil || o.NotifyEveryone == nil {
		var ret bool
		return ret
	}
	return *o.NotifyEveryone
}

// GetNotifyEveryoneOk returns a tuple with the NotifyEveryone field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InlineResponse20054Projects) GetNotifyEveryoneOk() (*bool, bool) {
	if o == nil || o.NotifyEveryone == nil {
		return nil, false
	}
	return o.NotifyEveryone, true
}

// HasNotifyEveryone returns a boolean if a field has been set.
func (o *InlineResponse20054Projects) HasNotifyEveryone() bool {
	if o != nil && o.NotifyEveryone != nil {
		return true
	}

	return false
}

// SetNotifyEveryone gets a reference to the given bool and assigns it to the NotifyEveryone field.
func (o *InlineResponse20054Projects) SetNotifyEveryone(v bool) {
	o.NotifyEveryone = &v
}

// GetOverviewStartPage returns the OverviewStartPage field value if set, zero value otherwise.
func (o *InlineResponse20054Projects) GetOverviewStartPage() string {
	if o == nil || o.OverviewStartPage == nil {
		var ret string
		return ret
	}
	return *o.OverviewStartPage
}

// GetOverviewStartPageOk returns a tuple with the OverviewStartPage field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InlineResponse20054Projects) GetOverviewStartPageOk() (*string, bool) {
	if o == nil || o.OverviewStartPage == nil {
		return nil, false
	}
	return o.OverviewStartPage, true
}

// HasOverviewStartPage returns a boolean if a field has been set.
func (o *InlineResponse20054Projects) HasOverviewStartPage() bool {
	if o != nil && o.OverviewStartPage != nil {
		return true
	}

	return false
}

// SetOverviewStartPage gets a reference to the given string and assigns it to the OverviewStartPage field.
func (o *InlineResponse20054Projects) SetOverviewStartPage(v string) {
	o.OverviewStartPage = &v
}

// GetPrivacyEnabled returns the PrivacyEnabled field value if set, zero value otherwise.
func (o *InlineResponse20054Projects) GetPrivacyEnabled() bool {
	if o == nil || o.PrivacyEnabled == nil {
		var ret bool
		return ret
	}
	return *o.PrivacyEnabled
}

// GetPrivacyEnabledOk returns a tuple with the PrivacyEnabled field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InlineResponse20054Projects) GetPrivacyEnabledOk() (*bool, bool) {
	if o == nil || o.PrivacyEnabled == nil {
		return nil, false
	}
	return o.PrivacyEnabled, true
}

// HasPrivacyEnabled returns a boolean if a field has been set.
func (o *InlineResponse20054Projects) HasPrivacyEnabled() bool {
	if o != nil && o.PrivacyEnabled != nil {
		return true
	}

	return false
}

// SetPrivacyEnabled gets a reference to the given bool and assigns it to the PrivacyEnabled field.
func (o *InlineResponse20054Projects) SetPrivacyEnabled(v bool) {
	o.PrivacyEnabled = &v
}

// GetProjectOwnerId returns the ProjectOwnerId field value if set, zero value otherwise.
func (o *InlineResponse20054Projects) GetProjectOwnerId() int32 {
	if o == nil || o.ProjectOwnerId == nil {
		var ret int32
		return ret
	}
	return *o.ProjectOwnerId
}

// GetProjectOwnerIdOk returns a tuple with the ProjectOwnerId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InlineResponse20054Projects) GetProjectOwnerIdOk() (*int32, bool) {
	if o == nil || o.ProjectOwnerId == nil {
		return nil, false
	}
	return o.ProjectOwnerId, true
}

// HasProjectOwnerId returns a boolean if a field has been set.
func (o *InlineResponse20054Projects) HasProjectOwnerId() bool {
	if o != nil && o.ProjectOwnerId != nil {
		return true
	}

	return false
}

// SetProjectOwnerId gets a reference to the given int32 and assigns it to the ProjectOwnerId field.
func (o *InlineResponse20054Projects) SetProjectOwnerId(v int32) {
	o.ProjectOwnerId = &v
}

// GetReplyByEmailEnabled returns the ReplyByEmailEnabled field value if set, zero value otherwise.
func (o *InlineResponse20054Projects) GetReplyByEmailEnabled() bool {
	if o == nil || o.ReplyByEmailEnabled == nil {
		var ret bool
		return ret
	}
	return *o.ReplyByEmailEnabled
}

// GetReplyByEmailEnabledOk returns a tuple with the ReplyByEmailEnabled field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InlineResponse20054Projects) GetReplyByEmailEnabledOk() (*bool, bool) {
	if o == nil || o.ReplyByEmailEnabled == nil {
		return nil, false
	}
	return o.ReplyByEmailEnabled, true
}

// HasReplyByEmailEnabled returns a boolean if a field has been set.
func (o *InlineResponse20054Projects) HasReplyByEmailEnabled() bool {
	if o != nil && o.ReplyByEmailEnabled != nil {
		return true
	}

	return false
}

// SetReplyByEmailEnabled gets a reference to the given bool and assigns it to the ReplyByEmailEnabled field.
func (o *InlineResponse20054Projects) SetReplyByEmailEnabled(v bool) {
	o.ReplyByEmailEnabled = &v
}

// GetShowAnnouncement returns the ShowAnnouncement field value if set, zero value otherwise.
func (o *InlineResponse20054Projects) GetShowAnnouncement() bool {
	if o == nil || o.ShowAnnouncement == nil {
		var ret bool
		return ret
	}
	return *o.ShowAnnouncement
}

// GetShowAnnouncementOk returns a tuple with the ShowAnnouncement field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InlineResponse20054Projects) GetShowAnnouncementOk() (*bool, bool) {
	if o == nil || o.ShowAnnouncement == nil {
		return nil, false
	}
	return o.ShowAnnouncement, true
}

// HasShowAnnouncement returns a boolean if a field has been set.
func (o *InlineResponse20054Projects) HasShowAnnouncement() bool {
	if o != nil && o.ShowAnnouncement != nil {
		return true
	}

	return false
}

// SetShowAnnouncement gets a reference to the given bool and assigns it to the ShowAnnouncement field.
func (o *InlineResponse20054Projects) SetShowAnnouncement(v bool) {
	o.ShowAnnouncement = &v
}

// GetSkipWeekends returns the SkipWeekends field value if set, zero value otherwise.
func (o *InlineResponse20054Projects) GetSkipWeekends() bool {
	if o == nil || o.SkipWeekends == nil {
		var ret bool
		return ret
	}
	return *o.SkipWeekends
}

// GetSkipWeekendsOk returns a tuple with the SkipWeekends field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InlineResponse20054Projects) GetSkipWeekendsOk() (*bool, bool) {
	if o == nil || o.SkipWeekends == nil {
		return nil, false
	}
	return o.SkipWeekends, true
}

// HasSkipWeekends returns a boolean if a field has been set.
func (o *InlineResponse20054Projects) HasSkipWeekends() bool {
	if o != nil && o.SkipWeekends != nil {
		return true
	}

	return false
}

// SetSkipWeekends gets a reference to the given bool and assigns it to the SkipWeekends field.
func (o *InlineResponse20054Projects) SetSkipWeekends(v bool) {
	o.SkipWeekends = &v
}

// GetStarred returns the Starred field value if set, zero value otherwise.
func (o *InlineResponse20054Projects) GetStarred() bool {
	if o == nil || o.Starred == nil {
		var ret bool
		return ret
	}
	return *o.Starred
}

// GetStarredOk returns a tuple with the Starred field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InlineResponse20054Projects) GetStarredOk() (*bool, bool) {
	if o == nil || o.Starred == nil {
		return nil, false
	}
	return o.Starred, true
}

// HasStarred returns a boolean if a field has been set.
func (o *InlineResponse20054Projects) HasStarred() bool {
	if o != nil && o.Starred != nil {
		return true
	}

	return false
}

// SetStarred gets a reference to the given bool and assigns it to the Starred field.
func (o *InlineResponse20054Projects) SetStarred(v bool) {
	o.Starred = &v
}

// GetStartPage returns the StartPage field value if set, zero value otherwise.
func (o *InlineResponse20054Projects) GetStartPage() string {
	if o == nil || o.StartPage == nil {
		var ret string
		return ret
	}
	return *o.StartPage
}

// GetStartPageOk returns a tuple with the StartPage field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InlineResponse20054Projects) GetStartPageOk() (*string, bool) {
	if o == nil || o.StartPage == nil {
		return nil, false
	}
	return o.StartPage, true
}

// HasStartPage returns a boolean if a field has been set.
func (o *InlineResponse20054Projects) HasStartPage() bool {
	if o != nil && o.StartPage != nil {
		return true
	}

	return false
}

// SetStartPage gets a reference to the given string and assigns it to the StartPage field.
func (o *InlineResponse20054Projects) SetStartPage(v string) {
	o.StartPage = &v
}

// GetStatus returns the Status field value if set, zero value otherwise.
func (o *InlineResponse20054Projects) GetStatus() string {
	if o == nil || o.Status == nil {
		var ret string
		return ret
	}
	return *o.Status
}

// GetStatusOk returns a tuple with the Status field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InlineResponse20054Projects) GetStatusOk() (*string, bool) {
	if o == nil || o.Status == nil {
		return nil, false
	}
	return o.Status, true
}

// HasStatus returns a boolean if a field has been set.
func (o *InlineResponse20054Projects) HasStatus() bool {
	if o != nil && o.Status != nil {
		return true
	}

	return false
}

// SetStatus gets a reference to the given string and assigns it to the Status field.
func (o *InlineResponse20054Projects) SetStatus(v string) {
	o.Status = &v
}

// GetSubStatus returns the SubStatus field value if set, zero value otherwise.
func (o *InlineResponse20054Projects) GetSubStatus() string {
	if o == nil || o.SubStatus == nil {
		var ret string
		return ret
	}
	return *o.SubStatus
}

// GetSubStatusOk returns a tuple with the SubStatus field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InlineResponse20054Projects) GetSubStatusOk() (*string, bool) {
	if o == nil || o.SubStatus == nil {
		return nil, false
	}
	return o.SubStatus, true
}

// HasSubStatus returns a boolean if a field has been set.
func (o *InlineResponse20054Projects) HasSubStatus() bool {
	if o != nil && o.SubStatus != nil {
		return true
	}

	return false
}

// SetSubStatus gets a reference to the given string and assigns it to the SubStatus field.
func (o *InlineResponse20054Projects) SetSubStatus(v string) {
	o.SubStatus = &v
}

// GetTags returns the Tags field value if set, zero value otherwise.
func (o *InlineResponse20054Projects) GetTags() []InlineResponse20054Tags {
	if o == nil || o.Tags == nil {
		var ret []InlineResponse20054Tags
		return ret
	}
	return *o.Tags
}

// GetTagsOk returns a tuple with the Tags field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InlineResponse20054Projects) GetTagsOk() (*[]InlineResponse20054Tags, bool) {
	if o == nil || o.Tags == nil {
		return nil, false
	}
	return o.Tags, true
}

// HasTags returns a boolean if a field has been set.
func (o *InlineResponse20054Projects) HasTags() bool {
	if o != nil && o.Tags != nil {
		return true
	}

	return false
}

// SetTags gets a reference to the given []InlineResponse20054Tags and assigns it to the Tags field.
func (o *InlineResponse20054Projects) SetTags(v []InlineResponse20054Tags) {
	o.Tags = &v
}

// GetTasksStartPage returns the TasksStartPage field value if set, zero value otherwise.
func (o *InlineResponse20054Projects) GetTasksStartPage() string {
	if o == nil || o.TasksStartPage == nil {
		var ret string
		return ret
	}
	return *o.TasksStartPage
}

// GetTasksStartPageOk returns a tuple with the TasksStartPage field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InlineResponse20054Projects) GetTasksStartPageOk() (*string, bool) {
	if o == nil || o.TasksStartPage == nil {
		return nil, false
	}
	return o.TasksStartPage, true
}

// HasTasksStartPage returns a boolean if a field has been set.
func (o *InlineResponse20054Projects) HasTasksStartPage() bool {
	if o != nil && o.TasksStartPage != nil {
		return true
	}

	return false
}

// SetTasksStartPage gets a reference to the given string and assigns it to the TasksStartPage field.
func (o *InlineResponse20054Projects) SetTasksStartPage(v string) {
	o.TasksStartPage = &v
}

// GetTemplateDateTargetDefault returns the TemplateDateTargetDefault field value if set, zero value otherwise.
func (o *InlineResponse20054Projects) GetTemplateDateTargetDefault() string {
	if o == nil || o.TemplateDateTargetDefault == nil {
		var ret string
		return ret
	}
	return *o.TemplateDateTargetDefault
}

// GetTemplateDateTargetDefaultOk returns a tuple with the TemplateDateTargetDefault field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InlineResponse20054Projects) GetTemplateDateTargetDefaultOk() (*string, bool) {
	if o == nil || o.TemplateDateTargetDefault == nil {
		return nil, false
	}
	return o.TemplateDateTargetDefault, true
}

// HasTemplateDateTargetDefault returns a boolean if a field has been set.
func (o *InlineResponse20054Projects) HasTemplateDateTargetDefault() bool {
	if o != nil && o.TemplateDateTargetDefault != nil {
		return true
	}

	return false
}

// SetTemplateDateTargetDefault gets a reference to the given string and assigns it to the TemplateDateTargetDefault field.
func (o *InlineResponse20054Projects) SetTemplateDateTargetDefault(v string) {
	o.TemplateDateTargetDefault = &v
}

// GetType returns the Type field value if set, zero value otherwise.
func (o *InlineResponse20054Projects) GetType() string {
	if o == nil || o.Type == nil {
		var ret string
		return ret
	}
	return *o.Type
}

// GetTypeOk returns a tuple with the Type field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InlineResponse20054Projects) GetTypeOk() (*string, bool) {
	if o == nil || o.Type == nil {
		return nil, false
	}
	return o.Type, true
}

// HasType returns a boolean if a field has been set.
func (o *InlineResponse20054Projects) HasType() bool {
	if o != nil && o.Type != nil {
		return true
	}

	return false
}

// SetType gets a reference to the given string and assigns it to the Type field.
func (o *InlineResponse20054Projects) SetType(v string) {
	o.Type = &v
}

func (o InlineResponse20054Projects) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.ActivePages != nil {
		toSerialize["activePages"] = o.ActivePages
	}
	if o.ActiveUserIsProjectAdmin != nil {
		toSerialize["activeUserIsProjectAdmin"] = o.ActiveUserIsProjectAdmin
	}
	if o.Announcement != nil {
		toSerialize["announcement"] = o.Announcement
	}
	if o.AnnouncementHTML != nil {
		toSerialize["announcementHTML"] = o.AnnouncementHTML
	}
	if o.Category != nil {
		toSerialize["category"] = o.Category
	}
	if o.Company != nil {
		toSerialize["company"] = o.Company
	}
	if o.CreatedOn != nil {
		toSerialize["createdOn"] = o.CreatedOn
	}
	if o.DefaultPrivacy != nil {
		toSerialize["defaultPrivacy"] = o.DefaultPrivacy
	}
	if o.Defaults != nil {
		toSerialize["defaults"] = o.Defaults
	}
	if o.Description != nil {
		toSerialize["description"] = o.Description
	}
	if o.DirectFileUploadsEnabled != nil {
		toSerialize["directFileUploadsEnabled"] = o.DirectFileUploadsEnabled
	}
	if o.FilesAutoNewVersion != nil {
		toSerialize["filesAutoNewVersion"] = o.FilesAutoNewVersion
	}
	if o.HarvestTimersEnabled != nil {
		toSerialize["harvestTimersEnabled"] = o.HarvestTimersEnabled
	}
	if o.Id != nil {
		toSerialize["id"] = o.Id
	}
	if o.Integrations != nil {
		toSerialize["integrations"] = o.Integrations
	}
	if o.IsProjectAdmin != nil {
		toSerialize["isProjectAdmin"] = o.IsProjectAdmin
	}
	if o.LastChangedOn != nil {
		toSerialize["lastChangedOn"] = o.LastChangedOn
	}
	if o.LastWorkedOn != nil {
		toSerialize["lastWorkedOn"] = o.LastWorkedOn
	}
	if o.Logo != nil {
		toSerialize["logo"] = o.Logo
	}
	if o.LogoFromCompany != nil {
		toSerialize["logoFromCompany"] = o.LogoFromCompany
	}
	if o.MinMaxAvailableDates != nil {
		toSerialize["minMaxAvailableDates"] = o.MinMaxAvailableDates
	}
	if o.Name != nil {
		toSerialize["name"] = o.Name
	}
	if o.NotifyEveryone != nil {
		toSerialize["notifyEveryone"] = o.NotifyEveryone
	}
	if o.OverviewStartPage != nil {
		toSerialize["overviewStartPage"] = o.OverviewStartPage
	}
	if o.PrivacyEnabled != nil {
		toSerialize["privacyEnabled"] = o.PrivacyEnabled
	}
	if o.ProjectOwnerId != nil {
		toSerialize["projectOwnerId"] = o.ProjectOwnerId
	}
	if o.ReplyByEmailEnabled != nil {
		toSerialize["replyByEmailEnabled"] = o.ReplyByEmailEnabled
	}
	if o.ShowAnnouncement != nil {
		toSerialize["showAnnouncement"] = o.ShowAnnouncement
	}
	if o.SkipWeekends != nil {
		toSerialize["skipWeekends"] = o.SkipWeekends
	}
	if o.Starred != nil {
		toSerialize["starred"] = o.Starred
	}
	if o.StartPage != nil {
		toSerialize["startPage"] = o.StartPage
	}
	if o.Status != nil {
		toSerialize["status"] = o.Status
	}
	if o.SubStatus != nil {
		toSerialize["subStatus"] = o.SubStatus
	}
	if o.Tags != nil {
		toSerialize["tags"] = o.Tags
	}
	if o.TasksStartPage != nil {
		toSerialize["tasksStartPage"] = o.TasksStartPage
	}
	if o.TemplateDateTargetDefault != nil {
		toSerialize["templateDateTargetDefault"] = o.TemplateDateTargetDefault
	}
	if o.Type != nil {
		toSerialize["type"] = o.Type
	}
	return json.Marshal(toSerialize)
}

type NullableInlineResponse20054Projects struct {
	value *InlineResponse20054Projects
	isSet bool
}

func (v NullableInlineResponse20054Projects) Get() *InlineResponse20054Projects {
	return v.value
}

func (v *NullableInlineResponse20054Projects) Set(val *InlineResponse20054Projects) {
	v.value = val
	v.isSet = true
}

func (v NullableInlineResponse20054Projects) IsSet() bool {
	return v.isSet
}

func (v *NullableInlineResponse20054Projects) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableInlineResponse20054Projects(val *InlineResponse20054Projects) *NullableInlineResponse20054Projects {
	return &NullableInlineResponse20054Projects{value: val, isSet: true}
}

func (v NullableInlineResponse20054Projects) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableInlineResponse20054Projects) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


