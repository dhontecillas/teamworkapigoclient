/*
 * Teamwork Projects API
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * API version: 
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package pmv1

import (
	"encoding/json"
)

// MessageRepliesIdJsonMessagereply struct for MessageRepliesIdJsonMessagereply
type MessageRepliesIdJsonMessagereply struct {
	Body *string `json:"body,omitempty"`
	Notify *string `json:"notify,omitempty"`
}

// NewMessageRepliesIdJsonMessagereply instantiates a new MessageRepliesIdJsonMessagereply object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewMessageRepliesIdJsonMessagereply() *MessageRepliesIdJsonMessagereply {
	this := MessageRepliesIdJsonMessagereply{}
	return &this
}

// NewMessageRepliesIdJsonMessagereplyWithDefaults instantiates a new MessageRepliesIdJsonMessagereply object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewMessageRepliesIdJsonMessagereplyWithDefaults() *MessageRepliesIdJsonMessagereply {
	this := MessageRepliesIdJsonMessagereply{}
	return &this
}

// GetBody returns the Body field value if set, zero value otherwise.
func (o *MessageRepliesIdJsonMessagereply) GetBody() string {
	if o == nil || o.Body == nil {
		var ret string
		return ret
	}
	return *o.Body
}

// GetBodyOk returns a tuple with the Body field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MessageRepliesIdJsonMessagereply) GetBodyOk() (*string, bool) {
	if o == nil || o.Body == nil {
		return nil, false
	}
	return o.Body, true
}

// HasBody returns a boolean if a field has been set.
func (o *MessageRepliesIdJsonMessagereply) HasBody() bool {
	if o != nil && o.Body != nil {
		return true
	}

	return false
}

// SetBody gets a reference to the given string and assigns it to the Body field.
func (o *MessageRepliesIdJsonMessagereply) SetBody(v string) {
	o.Body = &v
}

// GetNotify returns the Notify field value if set, zero value otherwise.
func (o *MessageRepliesIdJsonMessagereply) GetNotify() string {
	if o == nil || o.Notify == nil {
		var ret string
		return ret
	}
	return *o.Notify
}

// GetNotifyOk returns a tuple with the Notify field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MessageRepliesIdJsonMessagereply) GetNotifyOk() (*string, bool) {
	if o == nil || o.Notify == nil {
		return nil, false
	}
	return o.Notify, true
}

// HasNotify returns a boolean if a field has been set.
func (o *MessageRepliesIdJsonMessagereply) HasNotify() bool {
	if o != nil && o.Notify != nil {
		return true
	}

	return false
}

// SetNotify gets a reference to the given string and assigns it to the Notify field.
func (o *MessageRepliesIdJsonMessagereply) SetNotify(v string) {
	o.Notify = &v
}

func (o MessageRepliesIdJsonMessagereply) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.Body != nil {
		toSerialize["body"] = o.Body
	}
	if o.Notify != nil {
		toSerialize["notify"] = o.Notify
	}
	return json.Marshal(toSerialize)
}

type NullableMessageRepliesIdJsonMessagereply struct {
	value *MessageRepliesIdJsonMessagereply
	isSet bool
}

func (v NullableMessageRepliesIdJsonMessagereply) Get() *MessageRepliesIdJsonMessagereply {
	return v.value
}

func (v *NullableMessageRepliesIdJsonMessagereply) Set(val *MessageRepliesIdJsonMessagereply) {
	v.value = val
	v.isSet = true
}

func (v NullableMessageRepliesIdJsonMessagereply) IsSet() bool {
	return v.isSet
}

func (v *NullableMessageRepliesIdJsonMessagereply) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableMessageRepliesIdJsonMessagereply(val *MessageRepliesIdJsonMessagereply) *NullableMessageRepliesIdJsonMessagereply {
	return &NullableMessageRepliesIdJsonMessagereply{value: val, isSet: true}
}

func (v NullableMessageRepliesIdJsonMessagereply) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableMessageRepliesIdJsonMessagereply) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


