/*
 * Teamwork.com Projects API
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * API version: 3.0
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package projv3

import (
	"encoding/json"
)

// PlannerWorkloadPlannerCapacityTask WorkloadPlannerCapacityTask provides how many minutes should a user work in a task for a specific date.
type PlannerWorkloadPlannerCapacityTask struct {
	EstimateMinutes *int32 `json:"estimateMinutes,omitempty"`
	TaskId *int32 `json:"taskId,omitempty"`
}

// NewPlannerWorkloadPlannerCapacityTask instantiates a new PlannerWorkloadPlannerCapacityTask object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewPlannerWorkloadPlannerCapacityTask() *PlannerWorkloadPlannerCapacityTask {
	this := PlannerWorkloadPlannerCapacityTask{}
	return &this
}

// NewPlannerWorkloadPlannerCapacityTaskWithDefaults instantiates a new PlannerWorkloadPlannerCapacityTask object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewPlannerWorkloadPlannerCapacityTaskWithDefaults() *PlannerWorkloadPlannerCapacityTask {
	this := PlannerWorkloadPlannerCapacityTask{}
	return &this
}

// GetEstimateMinutes returns the EstimateMinutes field value if set, zero value otherwise.
func (o *PlannerWorkloadPlannerCapacityTask) GetEstimateMinutes() int32 {
	if o == nil || o.EstimateMinutes == nil {
		var ret int32
		return ret
	}
	return *o.EstimateMinutes
}

// GetEstimateMinutesOk returns a tuple with the EstimateMinutes field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PlannerWorkloadPlannerCapacityTask) GetEstimateMinutesOk() (*int32, bool) {
	if o == nil || o.EstimateMinutes == nil {
		return nil, false
	}
	return o.EstimateMinutes, true
}

// HasEstimateMinutes returns a boolean if a field has been set.
func (o *PlannerWorkloadPlannerCapacityTask) HasEstimateMinutes() bool {
	if o != nil && o.EstimateMinutes != nil {
		return true
	}

	return false
}

// SetEstimateMinutes gets a reference to the given int32 and assigns it to the EstimateMinutes field.
func (o *PlannerWorkloadPlannerCapacityTask) SetEstimateMinutes(v int32) {
	o.EstimateMinutes = &v
}

// GetTaskId returns the TaskId field value if set, zero value otherwise.
func (o *PlannerWorkloadPlannerCapacityTask) GetTaskId() int32 {
	if o == nil || o.TaskId == nil {
		var ret int32
		return ret
	}
	return *o.TaskId
}

// GetTaskIdOk returns a tuple with the TaskId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PlannerWorkloadPlannerCapacityTask) GetTaskIdOk() (*int32, bool) {
	if o == nil || o.TaskId == nil {
		return nil, false
	}
	return o.TaskId, true
}

// HasTaskId returns a boolean if a field has been set.
func (o *PlannerWorkloadPlannerCapacityTask) HasTaskId() bool {
	if o != nil && o.TaskId != nil {
		return true
	}

	return false
}

// SetTaskId gets a reference to the given int32 and assigns it to the TaskId field.
func (o *PlannerWorkloadPlannerCapacityTask) SetTaskId(v int32) {
	o.TaskId = &v
}

func (o PlannerWorkloadPlannerCapacityTask) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.EstimateMinutes != nil {
		toSerialize["estimateMinutes"] = o.EstimateMinutes
	}
	if o.TaskId != nil {
		toSerialize["taskId"] = o.TaskId
	}
	return json.Marshal(toSerialize)
}

type NullablePlannerWorkloadPlannerCapacityTask struct {
	value *PlannerWorkloadPlannerCapacityTask
	isSet bool
}

func (v NullablePlannerWorkloadPlannerCapacityTask) Get() *PlannerWorkloadPlannerCapacityTask {
	return v.value
}

func (v *NullablePlannerWorkloadPlannerCapacityTask) Set(val *PlannerWorkloadPlannerCapacityTask) {
	v.value = val
	v.isSet = true
}

func (v NullablePlannerWorkloadPlannerCapacityTask) IsSet() bool {
	return v.isSet
}

func (v *NullablePlannerWorkloadPlannerCapacityTask) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullablePlannerWorkloadPlannerCapacityTask(val *PlannerWorkloadPlannerCapacityTask) *NullablePlannerWorkloadPlannerCapacityTask {
	return &NullablePlannerWorkloadPlannerCapacityTask{value: val, isSet: true}
}

func (v NullablePlannerWorkloadPlannerCapacityTask) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullablePlannerWorkloadPlannerCapacityTask) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


