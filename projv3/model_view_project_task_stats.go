/*
 * Teamwork.com Projects API
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * API version: 3.0
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package projv3

import (
	"encoding/json"
)

// ViewProjectTaskStats ProjectTaskStats shows basic task stats for a project
type ViewProjectTaskStats struct {
	Active *int32 `json:"active,omitempty"`
	Complete *int32 `json:"complete,omitempty"`
	Id *int32 `json:"id,omitempty"`
	Late *int32 `json:"late,omitempty"`
}

// NewViewProjectTaskStats instantiates a new ViewProjectTaskStats object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewViewProjectTaskStats() *ViewProjectTaskStats {
	this := ViewProjectTaskStats{}
	return &this
}

// NewViewProjectTaskStatsWithDefaults instantiates a new ViewProjectTaskStats object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewViewProjectTaskStatsWithDefaults() *ViewProjectTaskStats {
	this := ViewProjectTaskStats{}
	return &this
}

// GetActive returns the Active field value if set, zero value otherwise.
func (o *ViewProjectTaskStats) GetActive() int32 {
	if o == nil || o.Active == nil {
		var ret int32
		return ret
	}
	return *o.Active
}

// GetActiveOk returns a tuple with the Active field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ViewProjectTaskStats) GetActiveOk() (*int32, bool) {
	if o == nil || o.Active == nil {
		return nil, false
	}
	return o.Active, true
}

// HasActive returns a boolean if a field has been set.
func (o *ViewProjectTaskStats) HasActive() bool {
	if o != nil && o.Active != nil {
		return true
	}

	return false
}

// SetActive gets a reference to the given int32 and assigns it to the Active field.
func (o *ViewProjectTaskStats) SetActive(v int32) {
	o.Active = &v
}

// GetComplete returns the Complete field value if set, zero value otherwise.
func (o *ViewProjectTaskStats) GetComplete() int32 {
	if o == nil || o.Complete == nil {
		var ret int32
		return ret
	}
	return *o.Complete
}

// GetCompleteOk returns a tuple with the Complete field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ViewProjectTaskStats) GetCompleteOk() (*int32, bool) {
	if o == nil || o.Complete == nil {
		return nil, false
	}
	return o.Complete, true
}

// HasComplete returns a boolean if a field has been set.
func (o *ViewProjectTaskStats) HasComplete() bool {
	if o != nil && o.Complete != nil {
		return true
	}

	return false
}

// SetComplete gets a reference to the given int32 and assigns it to the Complete field.
func (o *ViewProjectTaskStats) SetComplete(v int32) {
	o.Complete = &v
}

// GetId returns the Id field value if set, zero value otherwise.
func (o *ViewProjectTaskStats) GetId() int32 {
	if o == nil || o.Id == nil {
		var ret int32
		return ret
	}
	return *o.Id
}

// GetIdOk returns a tuple with the Id field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ViewProjectTaskStats) GetIdOk() (*int32, bool) {
	if o == nil || o.Id == nil {
		return nil, false
	}
	return o.Id, true
}

// HasId returns a boolean if a field has been set.
func (o *ViewProjectTaskStats) HasId() bool {
	if o != nil && o.Id != nil {
		return true
	}

	return false
}

// SetId gets a reference to the given int32 and assigns it to the Id field.
func (o *ViewProjectTaskStats) SetId(v int32) {
	o.Id = &v
}

// GetLate returns the Late field value if set, zero value otherwise.
func (o *ViewProjectTaskStats) GetLate() int32 {
	if o == nil || o.Late == nil {
		var ret int32
		return ret
	}
	return *o.Late
}

// GetLateOk returns a tuple with the Late field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ViewProjectTaskStats) GetLateOk() (*int32, bool) {
	if o == nil || o.Late == nil {
		return nil, false
	}
	return o.Late, true
}

// HasLate returns a boolean if a field has been set.
func (o *ViewProjectTaskStats) HasLate() bool {
	if o != nil && o.Late != nil {
		return true
	}

	return false
}

// SetLate gets a reference to the given int32 and assigns it to the Late field.
func (o *ViewProjectTaskStats) SetLate(v int32) {
	o.Late = &v
}

func (o ViewProjectTaskStats) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.Active != nil {
		toSerialize["active"] = o.Active
	}
	if o.Complete != nil {
		toSerialize["complete"] = o.Complete
	}
	if o.Id != nil {
		toSerialize["id"] = o.Id
	}
	if o.Late != nil {
		toSerialize["late"] = o.Late
	}
	return json.Marshal(toSerialize)
}

type NullableViewProjectTaskStats struct {
	value *ViewProjectTaskStats
	isSet bool
}

func (v NullableViewProjectTaskStats) Get() *ViewProjectTaskStats {
	return v.value
}

func (v *NullableViewProjectTaskStats) Set(val *ViewProjectTaskStats) {
	v.value = val
	v.isSet = true
}

func (v NullableViewProjectTaskStats) IsSet() bool {
	return v.isSet
}

func (v *NullableViewProjectTaskStats) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableViewProjectTaskStats(val *ViewProjectTaskStats) *NullableViewProjectTaskStats {
	return &NullableViewProjectTaskStats{value: val, isSet: true}
}

func (v NullableViewProjectTaskStats) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableViewProjectTaskStats) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


