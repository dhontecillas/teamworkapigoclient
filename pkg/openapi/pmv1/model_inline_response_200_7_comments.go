/*
 * Teamwork Projects API
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * API version: 
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package pmv1

import (
	"encoding/json"
)

// InlineResponse2007Comments struct for InlineResponse2007Comments
type InlineResponse2007Comments struct {
	Attachments *[]map[string]interface{} `json:"attachments,omitempty"`
	AttachmentsCount *string `json:"attachments-count,omitempty"`
	AuthorAvatarUrl *string `json:"author-avatar-url,omitempty"`
	AuthorFirstname *string `json:"author-firstname,omitempty"`
	AuthorId *string `json:"author-id,omitempty"`
	AuthorLastname *string `json:"author-lastname,omitempty"`
	Body *string `json:"body,omitempty"`
	CommentLink *string `json:"comment-link,omitempty"`
	CommentNo *string `json:"commentNo,omitempty"`
	CommentableId *string `json:"commentable-id,omitempty"`
	CommentableType *string `json:"commentable_type,omitempty"`
	CompanyId *string `json:"company-id,omitempty"`
	CompanyName *string `json:"company-name,omitempty"`
	ContentType *string `json:"content-type,omitempty"`
	Datetime *string `json:"datetime,omitempty"`
	EmailedFrom *string `json:"emailed-from,omitempty"`
	HtmlBody *string `json:"html-body,omitempty"`
	Id *string `json:"id,omitempty"`
	IsRead *string `json:"isRead,omitempty"`
	ItemName *string `json:"item-name,omitempty"`
	LastChangedOn *string `json:"last-changed-on,omitempty"`
	LockdownId *string `json:"lockdown-id,omitempty"`
	NrNotifiedPeople *string `json:"nr-notified-people,omitempty"`
	Private *string `json:"private,omitempty"`
	ProjectId *string `json:"project-id,omitempty"`
	ProjectName *string `json:"project-name,omitempty"`
	Type *string `json:"type,omitempty"`
}

// NewInlineResponse2007Comments instantiates a new InlineResponse2007Comments object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewInlineResponse2007Comments() *InlineResponse2007Comments {
	this := InlineResponse2007Comments{}
	return &this
}

// NewInlineResponse2007CommentsWithDefaults instantiates a new InlineResponse2007Comments object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewInlineResponse2007CommentsWithDefaults() *InlineResponse2007Comments {
	this := InlineResponse2007Comments{}
	return &this
}

// GetAttachments returns the Attachments field value if set, zero value otherwise.
func (o *InlineResponse2007Comments) GetAttachments() []map[string]interface{} {
	if o == nil || o.Attachments == nil {
		var ret []map[string]interface{}
		return ret
	}
	return *o.Attachments
}

// GetAttachmentsOk returns a tuple with the Attachments field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InlineResponse2007Comments) GetAttachmentsOk() (*[]map[string]interface{}, bool) {
	if o == nil || o.Attachments == nil {
		return nil, false
	}
	return o.Attachments, true
}

// HasAttachments returns a boolean if a field has been set.
func (o *InlineResponse2007Comments) HasAttachments() bool {
	if o != nil && o.Attachments != nil {
		return true
	}

	return false
}

// SetAttachments gets a reference to the given []map[string]interface{} and assigns it to the Attachments field.
func (o *InlineResponse2007Comments) SetAttachments(v []map[string]interface{}) {
	o.Attachments = &v
}

// GetAttachmentsCount returns the AttachmentsCount field value if set, zero value otherwise.
func (o *InlineResponse2007Comments) GetAttachmentsCount() string {
	if o == nil || o.AttachmentsCount == nil {
		var ret string
		return ret
	}
	return *o.AttachmentsCount
}

// GetAttachmentsCountOk returns a tuple with the AttachmentsCount field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InlineResponse2007Comments) GetAttachmentsCountOk() (*string, bool) {
	if o == nil || o.AttachmentsCount == nil {
		return nil, false
	}
	return o.AttachmentsCount, true
}

// HasAttachmentsCount returns a boolean if a field has been set.
func (o *InlineResponse2007Comments) HasAttachmentsCount() bool {
	if o != nil && o.AttachmentsCount != nil {
		return true
	}

	return false
}

// SetAttachmentsCount gets a reference to the given string and assigns it to the AttachmentsCount field.
func (o *InlineResponse2007Comments) SetAttachmentsCount(v string) {
	o.AttachmentsCount = &v
}

// GetAuthorAvatarUrl returns the AuthorAvatarUrl field value if set, zero value otherwise.
func (o *InlineResponse2007Comments) GetAuthorAvatarUrl() string {
	if o == nil || o.AuthorAvatarUrl == nil {
		var ret string
		return ret
	}
	return *o.AuthorAvatarUrl
}

// GetAuthorAvatarUrlOk returns a tuple with the AuthorAvatarUrl field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InlineResponse2007Comments) GetAuthorAvatarUrlOk() (*string, bool) {
	if o == nil || o.AuthorAvatarUrl == nil {
		return nil, false
	}
	return o.AuthorAvatarUrl, true
}

// HasAuthorAvatarUrl returns a boolean if a field has been set.
func (o *InlineResponse2007Comments) HasAuthorAvatarUrl() bool {
	if o != nil && o.AuthorAvatarUrl != nil {
		return true
	}

	return false
}

// SetAuthorAvatarUrl gets a reference to the given string and assigns it to the AuthorAvatarUrl field.
func (o *InlineResponse2007Comments) SetAuthorAvatarUrl(v string) {
	o.AuthorAvatarUrl = &v
}

// GetAuthorFirstname returns the AuthorFirstname field value if set, zero value otherwise.
func (o *InlineResponse2007Comments) GetAuthorFirstname() string {
	if o == nil || o.AuthorFirstname == nil {
		var ret string
		return ret
	}
	return *o.AuthorFirstname
}

// GetAuthorFirstnameOk returns a tuple with the AuthorFirstname field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InlineResponse2007Comments) GetAuthorFirstnameOk() (*string, bool) {
	if o == nil || o.AuthorFirstname == nil {
		return nil, false
	}
	return o.AuthorFirstname, true
}

// HasAuthorFirstname returns a boolean if a field has been set.
func (o *InlineResponse2007Comments) HasAuthorFirstname() bool {
	if o != nil && o.AuthorFirstname != nil {
		return true
	}

	return false
}

// SetAuthorFirstname gets a reference to the given string and assigns it to the AuthorFirstname field.
func (o *InlineResponse2007Comments) SetAuthorFirstname(v string) {
	o.AuthorFirstname = &v
}

// GetAuthorId returns the AuthorId field value if set, zero value otherwise.
func (o *InlineResponse2007Comments) GetAuthorId() string {
	if o == nil || o.AuthorId == nil {
		var ret string
		return ret
	}
	return *o.AuthorId
}

// GetAuthorIdOk returns a tuple with the AuthorId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InlineResponse2007Comments) GetAuthorIdOk() (*string, bool) {
	if o == nil || o.AuthorId == nil {
		return nil, false
	}
	return o.AuthorId, true
}

// HasAuthorId returns a boolean if a field has been set.
func (o *InlineResponse2007Comments) HasAuthorId() bool {
	if o != nil && o.AuthorId != nil {
		return true
	}

	return false
}

// SetAuthorId gets a reference to the given string and assigns it to the AuthorId field.
func (o *InlineResponse2007Comments) SetAuthorId(v string) {
	o.AuthorId = &v
}

// GetAuthorLastname returns the AuthorLastname field value if set, zero value otherwise.
func (o *InlineResponse2007Comments) GetAuthorLastname() string {
	if o == nil || o.AuthorLastname == nil {
		var ret string
		return ret
	}
	return *o.AuthorLastname
}

// GetAuthorLastnameOk returns a tuple with the AuthorLastname field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InlineResponse2007Comments) GetAuthorLastnameOk() (*string, bool) {
	if o == nil || o.AuthorLastname == nil {
		return nil, false
	}
	return o.AuthorLastname, true
}

// HasAuthorLastname returns a boolean if a field has been set.
func (o *InlineResponse2007Comments) HasAuthorLastname() bool {
	if o != nil && o.AuthorLastname != nil {
		return true
	}

	return false
}

// SetAuthorLastname gets a reference to the given string and assigns it to the AuthorLastname field.
func (o *InlineResponse2007Comments) SetAuthorLastname(v string) {
	o.AuthorLastname = &v
}

// GetBody returns the Body field value if set, zero value otherwise.
func (o *InlineResponse2007Comments) GetBody() string {
	if o == nil || o.Body == nil {
		var ret string
		return ret
	}
	return *o.Body
}

// GetBodyOk returns a tuple with the Body field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InlineResponse2007Comments) GetBodyOk() (*string, bool) {
	if o == nil || o.Body == nil {
		return nil, false
	}
	return o.Body, true
}

// HasBody returns a boolean if a field has been set.
func (o *InlineResponse2007Comments) HasBody() bool {
	if o != nil && o.Body != nil {
		return true
	}

	return false
}

// SetBody gets a reference to the given string and assigns it to the Body field.
func (o *InlineResponse2007Comments) SetBody(v string) {
	o.Body = &v
}

// GetCommentLink returns the CommentLink field value if set, zero value otherwise.
func (o *InlineResponse2007Comments) GetCommentLink() string {
	if o == nil || o.CommentLink == nil {
		var ret string
		return ret
	}
	return *o.CommentLink
}

// GetCommentLinkOk returns a tuple with the CommentLink field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InlineResponse2007Comments) GetCommentLinkOk() (*string, bool) {
	if o == nil || o.CommentLink == nil {
		return nil, false
	}
	return o.CommentLink, true
}

// HasCommentLink returns a boolean if a field has been set.
func (o *InlineResponse2007Comments) HasCommentLink() bool {
	if o != nil && o.CommentLink != nil {
		return true
	}

	return false
}

// SetCommentLink gets a reference to the given string and assigns it to the CommentLink field.
func (o *InlineResponse2007Comments) SetCommentLink(v string) {
	o.CommentLink = &v
}

// GetCommentNo returns the CommentNo field value if set, zero value otherwise.
func (o *InlineResponse2007Comments) GetCommentNo() string {
	if o == nil || o.CommentNo == nil {
		var ret string
		return ret
	}
	return *o.CommentNo
}

// GetCommentNoOk returns a tuple with the CommentNo field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InlineResponse2007Comments) GetCommentNoOk() (*string, bool) {
	if o == nil || o.CommentNo == nil {
		return nil, false
	}
	return o.CommentNo, true
}

// HasCommentNo returns a boolean if a field has been set.
func (o *InlineResponse2007Comments) HasCommentNo() bool {
	if o != nil && o.CommentNo != nil {
		return true
	}

	return false
}

// SetCommentNo gets a reference to the given string and assigns it to the CommentNo field.
func (o *InlineResponse2007Comments) SetCommentNo(v string) {
	o.CommentNo = &v
}

// GetCommentableId returns the CommentableId field value if set, zero value otherwise.
func (o *InlineResponse2007Comments) GetCommentableId() string {
	if o == nil || o.CommentableId == nil {
		var ret string
		return ret
	}
	return *o.CommentableId
}

// GetCommentableIdOk returns a tuple with the CommentableId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InlineResponse2007Comments) GetCommentableIdOk() (*string, bool) {
	if o == nil || o.CommentableId == nil {
		return nil, false
	}
	return o.CommentableId, true
}

// HasCommentableId returns a boolean if a field has been set.
func (o *InlineResponse2007Comments) HasCommentableId() bool {
	if o != nil && o.CommentableId != nil {
		return true
	}

	return false
}

// SetCommentableId gets a reference to the given string and assigns it to the CommentableId field.
func (o *InlineResponse2007Comments) SetCommentableId(v string) {
	o.CommentableId = &v
}

// GetCommentableType returns the CommentableType field value if set, zero value otherwise.
func (o *InlineResponse2007Comments) GetCommentableType() string {
	if o == nil || o.CommentableType == nil {
		var ret string
		return ret
	}
	return *o.CommentableType
}

// GetCommentableTypeOk returns a tuple with the CommentableType field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InlineResponse2007Comments) GetCommentableTypeOk() (*string, bool) {
	if o == nil || o.CommentableType == nil {
		return nil, false
	}
	return o.CommentableType, true
}

// HasCommentableType returns a boolean if a field has been set.
func (o *InlineResponse2007Comments) HasCommentableType() bool {
	if o != nil && o.CommentableType != nil {
		return true
	}

	return false
}

// SetCommentableType gets a reference to the given string and assigns it to the CommentableType field.
func (o *InlineResponse2007Comments) SetCommentableType(v string) {
	o.CommentableType = &v
}

// GetCompanyId returns the CompanyId field value if set, zero value otherwise.
func (o *InlineResponse2007Comments) GetCompanyId() string {
	if o == nil || o.CompanyId == nil {
		var ret string
		return ret
	}
	return *o.CompanyId
}

// GetCompanyIdOk returns a tuple with the CompanyId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InlineResponse2007Comments) GetCompanyIdOk() (*string, bool) {
	if o == nil || o.CompanyId == nil {
		return nil, false
	}
	return o.CompanyId, true
}

// HasCompanyId returns a boolean if a field has been set.
func (o *InlineResponse2007Comments) HasCompanyId() bool {
	if o != nil && o.CompanyId != nil {
		return true
	}

	return false
}

// SetCompanyId gets a reference to the given string and assigns it to the CompanyId field.
func (o *InlineResponse2007Comments) SetCompanyId(v string) {
	o.CompanyId = &v
}

// GetCompanyName returns the CompanyName field value if set, zero value otherwise.
func (o *InlineResponse2007Comments) GetCompanyName() string {
	if o == nil || o.CompanyName == nil {
		var ret string
		return ret
	}
	return *o.CompanyName
}

// GetCompanyNameOk returns a tuple with the CompanyName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InlineResponse2007Comments) GetCompanyNameOk() (*string, bool) {
	if o == nil || o.CompanyName == nil {
		return nil, false
	}
	return o.CompanyName, true
}

// HasCompanyName returns a boolean if a field has been set.
func (o *InlineResponse2007Comments) HasCompanyName() bool {
	if o != nil && o.CompanyName != nil {
		return true
	}

	return false
}

// SetCompanyName gets a reference to the given string and assigns it to the CompanyName field.
func (o *InlineResponse2007Comments) SetCompanyName(v string) {
	o.CompanyName = &v
}

// GetContentType returns the ContentType field value if set, zero value otherwise.
func (o *InlineResponse2007Comments) GetContentType() string {
	if o == nil || o.ContentType == nil {
		var ret string
		return ret
	}
	return *o.ContentType
}

// GetContentTypeOk returns a tuple with the ContentType field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InlineResponse2007Comments) GetContentTypeOk() (*string, bool) {
	if o == nil || o.ContentType == nil {
		return nil, false
	}
	return o.ContentType, true
}

// HasContentType returns a boolean if a field has been set.
func (o *InlineResponse2007Comments) HasContentType() bool {
	if o != nil && o.ContentType != nil {
		return true
	}

	return false
}

// SetContentType gets a reference to the given string and assigns it to the ContentType field.
func (o *InlineResponse2007Comments) SetContentType(v string) {
	o.ContentType = &v
}

// GetDatetime returns the Datetime field value if set, zero value otherwise.
func (o *InlineResponse2007Comments) GetDatetime() string {
	if o == nil || o.Datetime == nil {
		var ret string
		return ret
	}
	return *o.Datetime
}

// GetDatetimeOk returns a tuple with the Datetime field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InlineResponse2007Comments) GetDatetimeOk() (*string, bool) {
	if o == nil || o.Datetime == nil {
		return nil, false
	}
	return o.Datetime, true
}

// HasDatetime returns a boolean if a field has been set.
func (o *InlineResponse2007Comments) HasDatetime() bool {
	if o != nil && o.Datetime != nil {
		return true
	}

	return false
}

// SetDatetime gets a reference to the given string and assigns it to the Datetime field.
func (o *InlineResponse2007Comments) SetDatetime(v string) {
	o.Datetime = &v
}

// GetEmailedFrom returns the EmailedFrom field value if set, zero value otherwise.
func (o *InlineResponse2007Comments) GetEmailedFrom() string {
	if o == nil || o.EmailedFrom == nil {
		var ret string
		return ret
	}
	return *o.EmailedFrom
}

// GetEmailedFromOk returns a tuple with the EmailedFrom field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InlineResponse2007Comments) GetEmailedFromOk() (*string, bool) {
	if o == nil || o.EmailedFrom == nil {
		return nil, false
	}
	return o.EmailedFrom, true
}

// HasEmailedFrom returns a boolean if a field has been set.
func (o *InlineResponse2007Comments) HasEmailedFrom() bool {
	if o != nil && o.EmailedFrom != nil {
		return true
	}

	return false
}

// SetEmailedFrom gets a reference to the given string and assigns it to the EmailedFrom field.
func (o *InlineResponse2007Comments) SetEmailedFrom(v string) {
	o.EmailedFrom = &v
}

// GetHtmlBody returns the HtmlBody field value if set, zero value otherwise.
func (o *InlineResponse2007Comments) GetHtmlBody() string {
	if o == nil || o.HtmlBody == nil {
		var ret string
		return ret
	}
	return *o.HtmlBody
}

// GetHtmlBodyOk returns a tuple with the HtmlBody field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InlineResponse2007Comments) GetHtmlBodyOk() (*string, bool) {
	if o == nil || o.HtmlBody == nil {
		return nil, false
	}
	return o.HtmlBody, true
}

// HasHtmlBody returns a boolean if a field has been set.
func (o *InlineResponse2007Comments) HasHtmlBody() bool {
	if o != nil && o.HtmlBody != nil {
		return true
	}

	return false
}

// SetHtmlBody gets a reference to the given string and assigns it to the HtmlBody field.
func (o *InlineResponse2007Comments) SetHtmlBody(v string) {
	o.HtmlBody = &v
}

// GetId returns the Id field value if set, zero value otherwise.
func (o *InlineResponse2007Comments) GetId() string {
	if o == nil || o.Id == nil {
		var ret string
		return ret
	}
	return *o.Id
}

// GetIdOk returns a tuple with the Id field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InlineResponse2007Comments) GetIdOk() (*string, bool) {
	if o == nil || o.Id == nil {
		return nil, false
	}
	return o.Id, true
}

// HasId returns a boolean if a field has been set.
func (o *InlineResponse2007Comments) HasId() bool {
	if o != nil && o.Id != nil {
		return true
	}

	return false
}

// SetId gets a reference to the given string and assigns it to the Id field.
func (o *InlineResponse2007Comments) SetId(v string) {
	o.Id = &v
}

// GetIsRead returns the IsRead field value if set, zero value otherwise.
func (o *InlineResponse2007Comments) GetIsRead() string {
	if o == nil || o.IsRead == nil {
		var ret string
		return ret
	}
	return *o.IsRead
}

// GetIsReadOk returns a tuple with the IsRead field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InlineResponse2007Comments) GetIsReadOk() (*string, bool) {
	if o == nil || o.IsRead == nil {
		return nil, false
	}
	return o.IsRead, true
}

// HasIsRead returns a boolean if a field has been set.
func (o *InlineResponse2007Comments) HasIsRead() bool {
	if o != nil && o.IsRead != nil {
		return true
	}

	return false
}

// SetIsRead gets a reference to the given string and assigns it to the IsRead field.
func (o *InlineResponse2007Comments) SetIsRead(v string) {
	o.IsRead = &v
}

// GetItemName returns the ItemName field value if set, zero value otherwise.
func (o *InlineResponse2007Comments) GetItemName() string {
	if o == nil || o.ItemName == nil {
		var ret string
		return ret
	}
	return *o.ItemName
}

// GetItemNameOk returns a tuple with the ItemName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InlineResponse2007Comments) GetItemNameOk() (*string, bool) {
	if o == nil || o.ItemName == nil {
		return nil, false
	}
	return o.ItemName, true
}

// HasItemName returns a boolean if a field has been set.
func (o *InlineResponse2007Comments) HasItemName() bool {
	if o != nil && o.ItemName != nil {
		return true
	}

	return false
}

// SetItemName gets a reference to the given string and assigns it to the ItemName field.
func (o *InlineResponse2007Comments) SetItemName(v string) {
	o.ItemName = &v
}

// GetLastChangedOn returns the LastChangedOn field value if set, zero value otherwise.
func (o *InlineResponse2007Comments) GetLastChangedOn() string {
	if o == nil || o.LastChangedOn == nil {
		var ret string
		return ret
	}
	return *o.LastChangedOn
}

// GetLastChangedOnOk returns a tuple with the LastChangedOn field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InlineResponse2007Comments) GetLastChangedOnOk() (*string, bool) {
	if o == nil || o.LastChangedOn == nil {
		return nil, false
	}
	return o.LastChangedOn, true
}

// HasLastChangedOn returns a boolean if a field has been set.
func (o *InlineResponse2007Comments) HasLastChangedOn() bool {
	if o != nil && o.LastChangedOn != nil {
		return true
	}

	return false
}

// SetLastChangedOn gets a reference to the given string and assigns it to the LastChangedOn field.
func (o *InlineResponse2007Comments) SetLastChangedOn(v string) {
	o.LastChangedOn = &v
}

// GetLockdownId returns the LockdownId field value if set, zero value otherwise.
func (o *InlineResponse2007Comments) GetLockdownId() string {
	if o == nil || o.LockdownId == nil {
		var ret string
		return ret
	}
	return *o.LockdownId
}

// GetLockdownIdOk returns a tuple with the LockdownId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InlineResponse2007Comments) GetLockdownIdOk() (*string, bool) {
	if o == nil || o.LockdownId == nil {
		return nil, false
	}
	return o.LockdownId, true
}

// HasLockdownId returns a boolean if a field has been set.
func (o *InlineResponse2007Comments) HasLockdownId() bool {
	if o != nil && o.LockdownId != nil {
		return true
	}

	return false
}

// SetLockdownId gets a reference to the given string and assigns it to the LockdownId field.
func (o *InlineResponse2007Comments) SetLockdownId(v string) {
	o.LockdownId = &v
}

// GetNrNotifiedPeople returns the NrNotifiedPeople field value if set, zero value otherwise.
func (o *InlineResponse2007Comments) GetNrNotifiedPeople() string {
	if o == nil || o.NrNotifiedPeople == nil {
		var ret string
		return ret
	}
	return *o.NrNotifiedPeople
}

// GetNrNotifiedPeopleOk returns a tuple with the NrNotifiedPeople field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InlineResponse2007Comments) GetNrNotifiedPeopleOk() (*string, bool) {
	if o == nil || o.NrNotifiedPeople == nil {
		return nil, false
	}
	return o.NrNotifiedPeople, true
}

// HasNrNotifiedPeople returns a boolean if a field has been set.
func (o *InlineResponse2007Comments) HasNrNotifiedPeople() bool {
	if o != nil && o.NrNotifiedPeople != nil {
		return true
	}

	return false
}

// SetNrNotifiedPeople gets a reference to the given string and assigns it to the NrNotifiedPeople field.
func (o *InlineResponse2007Comments) SetNrNotifiedPeople(v string) {
	o.NrNotifiedPeople = &v
}

// GetPrivate returns the Private field value if set, zero value otherwise.
func (o *InlineResponse2007Comments) GetPrivate() string {
	if o == nil || o.Private == nil {
		var ret string
		return ret
	}
	return *o.Private
}

// GetPrivateOk returns a tuple with the Private field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InlineResponse2007Comments) GetPrivateOk() (*string, bool) {
	if o == nil || o.Private == nil {
		return nil, false
	}
	return o.Private, true
}

// HasPrivate returns a boolean if a field has been set.
func (o *InlineResponse2007Comments) HasPrivate() bool {
	if o != nil && o.Private != nil {
		return true
	}

	return false
}

// SetPrivate gets a reference to the given string and assigns it to the Private field.
func (o *InlineResponse2007Comments) SetPrivate(v string) {
	o.Private = &v
}

// GetProjectId returns the ProjectId field value if set, zero value otherwise.
func (o *InlineResponse2007Comments) GetProjectId() string {
	if o == nil || o.ProjectId == nil {
		var ret string
		return ret
	}
	return *o.ProjectId
}

// GetProjectIdOk returns a tuple with the ProjectId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InlineResponse2007Comments) GetProjectIdOk() (*string, bool) {
	if o == nil || o.ProjectId == nil {
		return nil, false
	}
	return o.ProjectId, true
}

// HasProjectId returns a boolean if a field has been set.
func (o *InlineResponse2007Comments) HasProjectId() bool {
	if o != nil && o.ProjectId != nil {
		return true
	}

	return false
}

// SetProjectId gets a reference to the given string and assigns it to the ProjectId field.
func (o *InlineResponse2007Comments) SetProjectId(v string) {
	o.ProjectId = &v
}

// GetProjectName returns the ProjectName field value if set, zero value otherwise.
func (o *InlineResponse2007Comments) GetProjectName() string {
	if o == nil || o.ProjectName == nil {
		var ret string
		return ret
	}
	return *o.ProjectName
}

// GetProjectNameOk returns a tuple with the ProjectName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InlineResponse2007Comments) GetProjectNameOk() (*string, bool) {
	if o == nil || o.ProjectName == nil {
		return nil, false
	}
	return o.ProjectName, true
}

// HasProjectName returns a boolean if a field has been set.
func (o *InlineResponse2007Comments) HasProjectName() bool {
	if o != nil && o.ProjectName != nil {
		return true
	}

	return false
}

// SetProjectName gets a reference to the given string and assigns it to the ProjectName field.
func (o *InlineResponse2007Comments) SetProjectName(v string) {
	o.ProjectName = &v
}

// GetType returns the Type field value if set, zero value otherwise.
func (o *InlineResponse2007Comments) GetType() string {
	if o == nil || o.Type == nil {
		var ret string
		return ret
	}
	return *o.Type
}

// GetTypeOk returns a tuple with the Type field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InlineResponse2007Comments) GetTypeOk() (*string, bool) {
	if o == nil || o.Type == nil {
		return nil, false
	}
	return o.Type, true
}

// HasType returns a boolean if a field has been set.
func (o *InlineResponse2007Comments) HasType() bool {
	if o != nil && o.Type != nil {
		return true
	}

	return false
}

// SetType gets a reference to the given string and assigns it to the Type field.
func (o *InlineResponse2007Comments) SetType(v string) {
	o.Type = &v
}

func (o InlineResponse2007Comments) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.Attachments != nil {
		toSerialize["attachments"] = o.Attachments
	}
	if o.AttachmentsCount != nil {
		toSerialize["attachments-count"] = o.AttachmentsCount
	}
	if o.AuthorAvatarUrl != nil {
		toSerialize["author-avatar-url"] = o.AuthorAvatarUrl
	}
	if o.AuthorFirstname != nil {
		toSerialize["author-firstname"] = o.AuthorFirstname
	}
	if o.AuthorId != nil {
		toSerialize["author-id"] = o.AuthorId
	}
	if o.AuthorLastname != nil {
		toSerialize["author-lastname"] = o.AuthorLastname
	}
	if o.Body != nil {
		toSerialize["body"] = o.Body
	}
	if o.CommentLink != nil {
		toSerialize["comment-link"] = o.CommentLink
	}
	if o.CommentNo != nil {
		toSerialize["commentNo"] = o.CommentNo
	}
	if o.CommentableId != nil {
		toSerialize["commentable-id"] = o.CommentableId
	}
	if o.CommentableType != nil {
		toSerialize["commentable_type"] = o.CommentableType
	}
	if o.CompanyId != nil {
		toSerialize["company-id"] = o.CompanyId
	}
	if o.CompanyName != nil {
		toSerialize["company-name"] = o.CompanyName
	}
	if o.ContentType != nil {
		toSerialize["content-type"] = o.ContentType
	}
	if o.Datetime != nil {
		toSerialize["datetime"] = o.Datetime
	}
	if o.EmailedFrom != nil {
		toSerialize["emailed-from"] = o.EmailedFrom
	}
	if o.HtmlBody != nil {
		toSerialize["html-body"] = o.HtmlBody
	}
	if o.Id != nil {
		toSerialize["id"] = o.Id
	}
	if o.IsRead != nil {
		toSerialize["isRead"] = o.IsRead
	}
	if o.ItemName != nil {
		toSerialize["item-name"] = o.ItemName
	}
	if o.LastChangedOn != nil {
		toSerialize["last-changed-on"] = o.LastChangedOn
	}
	if o.LockdownId != nil {
		toSerialize["lockdown-id"] = o.LockdownId
	}
	if o.NrNotifiedPeople != nil {
		toSerialize["nr-notified-people"] = o.NrNotifiedPeople
	}
	if o.Private != nil {
		toSerialize["private"] = o.Private
	}
	if o.ProjectId != nil {
		toSerialize["project-id"] = o.ProjectId
	}
	if o.ProjectName != nil {
		toSerialize["project-name"] = o.ProjectName
	}
	if o.Type != nil {
		toSerialize["type"] = o.Type
	}
	return json.Marshal(toSerialize)
}

type NullableInlineResponse2007Comments struct {
	value *InlineResponse2007Comments
	isSet bool
}

func (v NullableInlineResponse2007Comments) Get() *InlineResponse2007Comments {
	return v.value
}

func (v *NullableInlineResponse2007Comments) Set(val *InlineResponse2007Comments) {
	v.value = val
	v.isSet = true
}

func (v NullableInlineResponse2007Comments) IsSet() bool {
	return v.isSet
}

func (v *NullableInlineResponse2007Comments) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableInlineResponse2007Comments(val *InlineResponse2007Comments) *NullableInlineResponse2007Comments {
	return &NullableInlineResponse2007Comments{value: val, isSet: true}
}

func (v NullableInlineResponse2007Comments) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableInlineResponse2007Comments) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


