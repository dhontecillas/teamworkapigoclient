/*
 * Teamwork Projects API
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * API version: 
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package pmv1

import (
	"encoding/json"
)

// InlineResponse20078Projects struct for InlineResponse20078Projects
type InlineResponse20078Projects struct {
	Company *InlineResponse2002People12345Company `json:"company,omitempty"`
	Id *string `json:"id,omitempty"`
	Name *string `json:"name,omitempty"`
	TimeEstimates *InlineResponse20078TimeEstimates `json:"time-estimates,omitempty"`
	TimeTotals *InlineResponse20078TimeTotals `json:"time-totals,omitempty"`
}

// NewInlineResponse20078Projects instantiates a new InlineResponse20078Projects object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewInlineResponse20078Projects() *InlineResponse20078Projects {
	this := InlineResponse20078Projects{}
	return &this
}

// NewInlineResponse20078ProjectsWithDefaults instantiates a new InlineResponse20078Projects object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewInlineResponse20078ProjectsWithDefaults() *InlineResponse20078Projects {
	this := InlineResponse20078Projects{}
	return &this
}

// GetCompany returns the Company field value if set, zero value otherwise.
func (o *InlineResponse20078Projects) GetCompany() InlineResponse2002People12345Company {
	if o == nil || o.Company == nil {
		var ret InlineResponse2002People12345Company
		return ret
	}
	return *o.Company
}

// GetCompanyOk returns a tuple with the Company field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InlineResponse20078Projects) GetCompanyOk() (*InlineResponse2002People12345Company, bool) {
	if o == nil || o.Company == nil {
		return nil, false
	}
	return o.Company, true
}

// HasCompany returns a boolean if a field has been set.
func (o *InlineResponse20078Projects) HasCompany() bool {
	if o != nil && o.Company != nil {
		return true
	}

	return false
}

// SetCompany gets a reference to the given InlineResponse2002People12345Company and assigns it to the Company field.
func (o *InlineResponse20078Projects) SetCompany(v InlineResponse2002People12345Company) {
	o.Company = &v
}

// GetId returns the Id field value if set, zero value otherwise.
func (o *InlineResponse20078Projects) GetId() string {
	if o == nil || o.Id == nil {
		var ret string
		return ret
	}
	return *o.Id
}

// GetIdOk returns a tuple with the Id field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InlineResponse20078Projects) GetIdOk() (*string, bool) {
	if o == nil || o.Id == nil {
		return nil, false
	}
	return o.Id, true
}

// HasId returns a boolean if a field has been set.
func (o *InlineResponse20078Projects) HasId() bool {
	if o != nil && o.Id != nil {
		return true
	}

	return false
}

// SetId gets a reference to the given string and assigns it to the Id field.
func (o *InlineResponse20078Projects) SetId(v string) {
	o.Id = &v
}

// GetName returns the Name field value if set, zero value otherwise.
func (o *InlineResponse20078Projects) GetName() string {
	if o == nil || o.Name == nil {
		var ret string
		return ret
	}
	return *o.Name
}

// GetNameOk returns a tuple with the Name field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InlineResponse20078Projects) GetNameOk() (*string, bool) {
	if o == nil || o.Name == nil {
		return nil, false
	}
	return o.Name, true
}

// HasName returns a boolean if a field has been set.
func (o *InlineResponse20078Projects) HasName() bool {
	if o != nil && o.Name != nil {
		return true
	}

	return false
}

// SetName gets a reference to the given string and assigns it to the Name field.
func (o *InlineResponse20078Projects) SetName(v string) {
	o.Name = &v
}

// GetTimeEstimates returns the TimeEstimates field value if set, zero value otherwise.
func (o *InlineResponse20078Projects) GetTimeEstimates() InlineResponse20078TimeEstimates {
	if o == nil || o.TimeEstimates == nil {
		var ret InlineResponse20078TimeEstimates
		return ret
	}
	return *o.TimeEstimates
}

// GetTimeEstimatesOk returns a tuple with the TimeEstimates field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InlineResponse20078Projects) GetTimeEstimatesOk() (*InlineResponse20078TimeEstimates, bool) {
	if o == nil || o.TimeEstimates == nil {
		return nil, false
	}
	return o.TimeEstimates, true
}

// HasTimeEstimates returns a boolean if a field has been set.
func (o *InlineResponse20078Projects) HasTimeEstimates() bool {
	if o != nil && o.TimeEstimates != nil {
		return true
	}

	return false
}

// SetTimeEstimates gets a reference to the given InlineResponse20078TimeEstimates and assigns it to the TimeEstimates field.
func (o *InlineResponse20078Projects) SetTimeEstimates(v InlineResponse20078TimeEstimates) {
	o.TimeEstimates = &v
}

// GetTimeTotals returns the TimeTotals field value if set, zero value otherwise.
func (o *InlineResponse20078Projects) GetTimeTotals() InlineResponse20078TimeTotals {
	if o == nil || o.TimeTotals == nil {
		var ret InlineResponse20078TimeTotals
		return ret
	}
	return *o.TimeTotals
}

// GetTimeTotalsOk returns a tuple with the TimeTotals field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InlineResponse20078Projects) GetTimeTotalsOk() (*InlineResponse20078TimeTotals, bool) {
	if o == nil || o.TimeTotals == nil {
		return nil, false
	}
	return o.TimeTotals, true
}

// HasTimeTotals returns a boolean if a field has been set.
func (o *InlineResponse20078Projects) HasTimeTotals() bool {
	if o != nil && o.TimeTotals != nil {
		return true
	}

	return false
}

// SetTimeTotals gets a reference to the given InlineResponse20078TimeTotals and assigns it to the TimeTotals field.
func (o *InlineResponse20078Projects) SetTimeTotals(v InlineResponse20078TimeTotals) {
	o.TimeTotals = &v
}

func (o InlineResponse20078Projects) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.Company != nil {
		toSerialize["company"] = o.Company
	}
	if o.Id != nil {
		toSerialize["id"] = o.Id
	}
	if o.Name != nil {
		toSerialize["name"] = o.Name
	}
	if o.TimeEstimates != nil {
		toSerialize["time-estimates"] = o.TimeEstimates
	}
	if o.TimeTotals != nil {
		toSerialize["time-totals"] = o.TimeTotals
	}
	return json.Marshal(toSerialize)
}

type NullableInlineResponse20078Projects struct {
	value *InlineResponse20078Projects
	isSet bool
}

func (v NullableInlineResponse20078Projects) Get() *InlineResponse20078Projects {
	return v.value
}

func (v *NullableInlineResponse20078Projects) Set(val *InlineResponse20078Projects) {
	v.value = val
	v.isSet = true
}

func (v NullableInlineResponse20078Projects) IsSet() bool {
	return v.isSet
}

func (v *NullableInlineResponse20078Projects) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableInlineResponse20078Projects(val *InlineResponse20078Projects) *NullableInlineResponse20078Projects {
	return &NullableInlineResponse20078Projects{value: val, isSet: true}
}

func (v NullableInlineResponse20078Projects) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableInlineResponse20078Projects) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


