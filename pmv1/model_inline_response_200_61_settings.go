/*
 * Teamwork Projects API
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * API version: 
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package pmv1

import (
	"encoding/json"
)

// InlineResponse20061Settings struct for InlineResponse20061Settings
type InlineResponse20061Settings struct {
	Assignee *bool `json:"assignee,omitempty"`
	Avatar *bool `json:"avatar,omitempty"`
	Comments *bool `json:"comments,omitempty"`
	Dependencies *bool `json:"dependencies,omitempty"`
	Enddate *bool `json:"enddate,omitempty"`
	Estimatedtime *bool `json:"estimatedtime,omitempty"`
	Files *bool `json:"files,omitempty"`
	Followers *bool `json:"followers,omitempty"`
	Name *bool `json:"name,omitempty"`
	Priority *bool `json:"priority,omitempty"`
	Private *bool `json:"private,omitempty"`
	Progress *bool `json:"progress,omitempty"`
	Recurring *bool `json:"recurring,omitempty"`
	Reminders *bool `json:"reminders,omitempty"`
	Startdate *bool `json:"startdate,omitempty"`
	Subtasklabel *bool `json:"subtasklabel,omitempty"`
	Tags *bool `json:"tags,omitempty"`
	Tasklist *bool `json:"tasklist,omitempty"`
	Tickets *bool `json:"tickets,omitempty"`
	Time *bool `json:"time,omitempty"`
}

// NewInlineResponse20061Settings instantiates a new InlineResponse20061Settings object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewInlineResponse20061Settings() *InlineResponse20061Settings {
	this := InlineResponse20061Settings{}
	return &this
}

// NewInlineResponse20061SettingsWithDefaults instantiates a new InlineResponse20061Settings object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewInlineResponse20061SettingsWithDefaults() *InlineResponse20061Settings {
	this := InlineResponse20061Settings{}
	return &this
}

// GetAssignee returns the Assignee field value if set, zero value otherwise.
func (o *InlineResponse20061Settings) GetAssignee() bool {
	if o == nil || o.Assignee == nil {
		var ret bool
		return ret
	}
	return *o.Assignee
}

// GetAssigneeOk returns a tuple with the Assignee field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InlineResponse20061Settings) GetAssigneeOk() (*bool, bool) {
	if o == nil || o.Assignee == nil {
		return nil, false
	}
	return o.Assignee, true
}

// HasAssignee returns a boolean if a field has been set.
func (o *InlineResponse20061Settings) HasAssignee() bool {
	if o != nil && o.Assignee != nil {
		return true
	}

	return false
}

// SetAssignee gets a reference to the given bool and assigns it to the Assignee field.
func (o *InlineResponse20061Settings) SetAssignee(v bool) {
	o.Assignee = &v
}

// GetAvatar returns the Avatar field value if set, zero value otherwise.
func (o *InlineResponse20061Settings) GetAvatar() bool {
	if o == nil || o.Avatar == nil {
		var ret bool
		return ret
	}
	return *o.Avatar
}

// GetAvatarOk returns a tuple with the Avatar field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InlineResponse20061Settings) GetAvatarOk() (*bool, bool) {
	if o == nil || o.Avatar == nil {
		return nil, false
	}
	return o.Avatar, true
}

// HasAvatar returns a boolean if a field has been set.
func (o *InlineResponse20061Settings) HasAvatar() bool {
	if o != nil && o.Avatar != nil {
		return true
	}

	return false
}

// SetAvatar gets a reference to the given bool and assigns it to the Avatar field.
func (o *InlineResponse20061Settings) SetAvatar(v bool) {
	o.Avatar = &v
}

// GetComments returns the Comments field value if set, zero value otherwise.
func (o *InlineResponse20061Settings) GetComments() bool {
	if o == nil || o.Comments == nil {
		var ret bool
		return ret
	}
	return *o.Comments
}

// GetCommentsOk returns a tuple with the Comments field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InlineResponse20061Settings) GetCommentsOk() (*bool, bool) {
	if o == nil || o.Comments == nil {
		return nil, false
	}
	return o.Comments, true
}

// HasComments returns a boolean if a field has been set.
func (o *InlineResponse20061Settings) HasComments() bool {
	if o != nil && o.Comments != nil {
		return true
	}

	return false
}

// SetComments gets a reference to the given bool and assigns it to the Comments field.
func (o *InlineResponse20061Settings) SetComments(v bool) {
	o.Comments = &v
}

// GetDependencies returns the Dependencies field value if set, zero value otherwise.
func (o *InlineResponse20061Settings) GetDependencies() bool {
	if o == nil || o.Dependencies == nil {
		var ret bool
		return ret
	}
	return *o.Dependencies
}

// GetDependenciesOk returns a tuple with the Dependencies field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InlineResponse20061Settings) GetDependenciesOk() (*bool, bool) {
	if o == nil || o.Dependencies == nil {
		return nil, false
	}
	return o.Dependencies, true
}

// HasDependencies returns a boolean if a field has been set.
func (o *InlineResponse20061Settings) HasDependencies() bool {
	if o != nil && o.Dependencies != nil {
		return true
	}

	return false
}

// SetDependencies gets a reference to the given bool and assigns it to the Dependencies field.
func (o *InlineResponse20061Settings) SetDependencies(v bool) {
	o.Dependencies = &v
}

// GetEnddate returns the Enddate field value if set, zero value otherwise.
func (o *InlineResponse20061Settings) GetEnddate() bool {
	if o == nil || o.Enddate == nil {
		var ret bool
		return ret
	}
	return *o.Enddate
}

// GetEnddateOk returns a tuple with the Enddate field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InlineResponse20061Settings) GetEnddateOk() (*bool, bool) {
	if o == nil || o.Enddate == nil {
		return nil, false
	}
	return o.Enddate, true
}

// HasEnddate returns a boolean if a field has been set.
func (o *InlineResponse20061Settings) HasEnddate() bool {
	if o != nil && o.Enddate != nil {
		return true
	}

	return false
}

// SetEnddate gets a reference to the given bool and assigns it to the Enddate field.
func (o *InlineResponse20061Settings) SetEnddate(v bool) {
	o.Enddate = &v
}

// GetEstimatedtime returns the Estimatedtime field value if set, zero value otherwise.
func (o *InlineResponse20061Settings) GetEstimatedtime() bool {
	if o == nil || o.Estimatedtime == nil {
		var ret bool
		return ret
	}
	return *o.Estimatedtime
}

// GetEstimatedtimeOk returns a tuple with the Estimatedtime field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InlineResponse20061Settings) GetEstimatedtimeOk() (*bool, bool) {
	if o == nil || o.Estimatedtime == nil {
		return nil, false
	}
	return o.Estimatedtime, true
}

// HasEstimatedtime returns a boolean if a field has been set.
func (o *InlineResponse20061Settings) HasEstimatedtime() bool {
	if o != nil && o.Estimatedtime != nil {
		return true
	}

	return false
}

// SetEstimatedtime gets a reference to the given bool and assigns it to the Estimatedtime field.
func (o *InlineResponse20061Settings) SetEstimatedtime(v bool) {
	o.Estimatedtime = &v
}

// GetFiles returns the Files field value if set, zero value otherwise.
func (o *InlineResponse20061Settings) GetFiles() bool {
	if o == nil || o.Files == nil {
		var ret bool
		return ret
	}
	return *o.Files
}

// GetFilesOk returns a tuple with the Files field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InlineResponse20061Settings) GetFilesOk() (*bool, bool) {
	if o == nil || o.Files == nil {
		return nil, false
	}
	return o.Files, true
}

// HasFiles returns a boolean if a field has been set.
func (o *InlineResponse20061Settings) HasFiles() bool {
	if o != nil && o.Files != nil {
		return true
	}

	return false
}

// SetFiles gets a reference to the given bool and assigns it to the Files field.
func (o *InlineResponse20061Settings) SetFiles(v bool) {
	o.Files = &v
}

// GetFollowers returns the Followers field value if set, zero value otherwise.
func (o *InlineResponse20061Settings) GetFollowers() bool {
	if o == nil || o.Followers == nil {
		var ret bool
		return ret
	}
	return *o.Followers
}

// GetFollowersOk returns a tuple with the Followers field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InlineResponse20061Settings) GetFollowersOk() (*bool, bool) {
	if o == nil || o.Followers == nil {
		return nil, false
	}
	return o.Followers, true
}

// HasFollowers returns a boolean if a field has been set.
func (o *InlineResponse20061Settings) HasFollowers() bool {
	if o != nil && o.Followers != nil {
		return true
	}

	return false
}

// SetFollowers gets a reference to the given bool and assigns it to the Followers field.
func (o *InlineResponse20061Settings) SetFollowers(v bool) {
	o.Followers = &v
}

// GetName returns the Name field value if set, zero value otherwise.
func (o *InlineResponse20061Settings) GetName() bool {
	if o == nil || o.Name == nil {
		var ret bool
		return ret
	}
	return *o.Name
}

// GetNameOk returns a tuple with the Name field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InlineResponse20061Settings) GetNameOk() (*bool, bool) {
	if o == nil || o.Name == nil {
		return nil, false
	}
	return o.Name, true
}

// HasName returns a boolean if a field has been set.
func (o *InlineResponse20061Settings) HasName() bool {
	if o != nil && o.Name != nil {
		return true
	}

	return false
}

// SetName gets a reference to the given bool and assigns it to the Name field.
func (o *InlineResponse20061Settings) SetName(v bool) {
	o.Name = &v
}

// GetPriority returns the Priority field value if set, zero value otherwise.
func (o *InlineResponse20061Settings) GetPriority() bool {
	if o == nil || o.Priority == nil {
		var ret bool
		return ret
	}
	return *o.Priority
}

// GetPriorityOk returns a tuple with the Priority field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InlineResponse20061Settings) GetPriorityOk() (*bool, bool) {
	if o == nil || o.Priority == nil {
		return nil, false
	}
	return o.Priority, true
}

// HasPriority returns a boolean if a field has been set.
func (o *InlineResponse20061Settings) HasPriority() bool {
	if o != nil && o.Priority != nil {
		return true
	}

	return false
}

// SetPriority gets a reference to the given bool and assigns it to the Priority field.
func (o *InlineResponse20061Settings) SetPriority(v bool) {
	o.Priority = &v
}

// GetPrivate returns the Private field value if set, zero value otherwise.
func (o *InlineResponse20061Settings) GetPrivate() bool {
	if o == nil || o.Private == nil {
		var ret bool
		return ret
	}
	return *o.Private
}

// GetPrivateOk returns a tuple with the Private field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InlineResponse20061Settings) GetPrivateOk() (*bool, bool) {
	if o == nil || o.Private == nil {
		return nil, false
	}
	return o.Private, true
}

// HasPrivate returns a boolean if a field has been set.
func (o *InlineResponse20061Settings) HasPrivate() bool {
	if o != nil && o.Private != nil {
		return true
	}

	return false
}

// SetPrivate gets a reference to the given bool and assigns it to the Private field.
func (o *InlineResponse20061Settings) SetPrivate(v bool) {
	o.Private = &v
}

// GetProgress returns the Progress field value if set, zero value otherwise.
func (o *InlineResponse20061Settings) GetProgress() bool {
	if o == nil || o.Progress == nil {
		var ret bool
		return ret
	}
	return *o.Progress
}

// GetProgressOk returns a tuple with the Progress field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InlineResponse20061Settings) GetProgressOk() (*bool, bool) {
	if o == nil || o.Progress == nil {
		return nil, false
	}
	return o.Progress, true
}

// HasProgress returns a boolean if a field has been set.
func (o *InlineResponse20061Settings) HasProgress() bool {
	if o != nil && o.Progress != nil {
		return true
	}

	return false
}

// SetProgress gets a reference to the given bool and assigns it to the Progress field.
func (o *InlineResponse20061Settings) SetProgress(v bool) {
	o.Progress = &v
}

// GetRecurring returns the Recurring field value if set, zero value otherwise.
func (o *InlineResponse20061Settings) GetRecurring() bool {
	if o == nil || o.Recurring == nil {
		var ret bool
		return ret
	}
	return *o.Recurring
}

// GetRecurringOk returns a tuple with the Recurring field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InlineResponse20061Settings) GetRecurringOk() (*bool, bool) {
	if o == nil || o.Recurring == nil {
		return nil, false
	}
	return o.Recurring, true
}

// HasRecurring returns a boolean if a field has been set.
func (o *InlineResponse20061Settings) HasRecurring() bool {
	if o != nil && o.Recurring != nil {
		return true
	}

	return false
}

// SetRecurring gets a reference to the given bool and assigns it to the Recurring field.
func (o *InlineResponse20061Settings) SetRecurring(v bool) {
	o.Recurring = &v
}

// GetReminders returns the Reminders field value if set, zero value otherwise.
func (o *InlineResponse20061Settings) GetReminders() bool {
	if o == nil || o.Reminders == nil {
		var ret bool
		return ret
	}
	return *o.Reminders
}

// GetRemindersOk returns a tuple with the Reminders field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InlineResponse20061Settings) GetRemindersOk() (*bool, bool) {
	if o == nil || o.Reminders == nil {
		return nil, false
	}
	return o.Reminders, true
}

// HasReminders returns a boolean if a field has been set.
func (o *InlineResponse20061Settings) HasReminders() bool {
	if o != nil && o.Reminders != nil {
		return true
	}

	return false
}

// SetReminders gets a reference to the given bool and assigns it to the Reminders field.
func (o *InlineResponse20061Settings) SetReminders(v bool) {
	o.Reminders = &v
}

// GetStartdate returns the Startdate field value if set, zero value otherwise.
func (o *InlineResponse20061Settings) GetStartdate() bool {
	if o == nil || o.Startdate == nil {
		var ret bool
		return ret
	}
	return *o.Startdate
}

// GetStartdateOk returns a tuple with the Startdate field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InlineResponse20061Settings) GetStartdateOk() (*bool, bool) {
	if o == nil || o.Startdate == nil {
		return nil, false
	}
	return o.Startdate, true
}

// HasStartdate returns a boolean if a field has been set.
func (o *InlineResponse20061Settings) HasStartdate() bool {
	if o != nil && o.Startdate != nil {
		return true
	}

	return false
}

// SetStartdate gets a reference to the given bool and assigns it to the Startdate field.
func (o *InlineResponse20061Settings) SetStartdate(v bool) {
	o.Startdate = &v
}

// GetSubtasklabel returns the Subtasklabel field value if set, zero value otherwise.
func (o *InlineResponse20061Settings) GetSubtasklabel() bool {
	if o == nil || o.Subtasklabel == nil {
		var ret bool
		return ret
	}
	return *o.Subtasklabel
}

// GetSubtasklabelOk returns a tuple with the Subtasklabel field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InlineResponse20061Settings) GetSubtasklabelOk() (*bool, bool) {
	if o == nil || o.Subtasklabel == nil {
		return nil, false
	}
	return o.Subtasklabel, true
}

// HasSubtasklabel returns a boolean if a field has been set.
func (o *InlineResponse20061Settings) HasSubtasklabel() bool {
	if o != nil && o.Subtasklabel != nil {
		return true
	}

	return false
}

// SetSubtasklabel gets a reference to the given bool and assigns it to the Subtasklabel field.
func (o *InlineResponse20061Settings) SetSubtasklabel(v bool) {
	o.Subtasklabel = &v
}

// GetTags returns the Tags field value if set, zero value otherwise.
func (o *InlineResponse20061Settings) GetTags() bool {
	if o == nil || o.Tags == nil {
		var ret bool
		return ret
	}
	return *o.Tags
}

// GetTagsOk returns a tuple with the Tags field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InlineResponse20061Settings) GetTagsOk() (*bool, bool) {
	if o == nil || o.Tags == nil {
		return nil, false
	}
	return o.Tags, true
}

// HasTags returns a boolean if a field has been set.
func (o *InlineResponse20061Settings) HasTags() bool {
	if o != nil && o.Tags != nil {
		return true
	}

	return false
}

// SetTags gets a reference to the given bool and assigns it to the Tags field.
func (o *InlineResponse20061Settings) SetTags(v bool) {
	o.Tags = &v
}

// GetTasklist returns the Tasklist field value if set, zero value otherwise.
func (o *InlineResponse20061Settings) GetTasklist() bool {
	if o == nil || o.Tasklist == nil {
		var ret bool
		return ret
	}
	return *o.Tasklist
}

// GetTasklistOk returns a tuple with the Tasklist field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InlineResponse20061Settings) GetTasklistOk() (*bool, bool) {
	if o == nil || o.Tasklist == nil {
		return nil, false
	}
	return o.Tasklist, true
}

// HasTasklist returns a boolean if a field has been set.
func (o *InlineResponse20061Settings) HasTasklist() bool {
	if o != nil && o.Tasklist != nil {
		return true
	}

	return false
}

// SetTasklist gets a reference to the given bool and assigns it to the Tasklist field.
func (o *InlineResponse20061Settings) SetTasklist(v bool) {
	o.Tasklist = &v
}

// GetTickets returns the Tickets field value if set, zero value otherwise.
func (o *InlineResponse20061Settings) GetTickets() bool {
	if o == nil || o.Tickets == nil {
		var ret bool
		return ret
	}
	return *o.Tickets
}

// GetTicketsOk returns a tuple with the Tickets field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InlineResponse20061Settings) GetTicketsOk() (*bool, bool) {
	if o == nil || o.Tickets == nil {
		return nil, false
	}
	return o.Tickets, true
}

// HasTickets returns a boolean if a field has been set.
func (o *InlineResponse20061Settings) HasTickets() bool {
	if o != nil && o.Tickets != nil {
		return true
	}

	return false
}

// SetTickets gets a reference to the given bool and assigns it to the Tickets field.
func (o *InlineResponse20061Settings) SetTickets(v bool) {
	o.Tickets = &v
}

// GetTime returns the Time field value if set, zero value otherwise.
func (o *InlineResponse20061Settings) GetTime() bool {
	if o == nil || o.Time == nil {
		var ret bool
		return ret
	}
	return *o.Time
}

// GetTimeOk returns a tuple with the Time field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InlineResponse20061Settings) GetTimeOk() (*bool, bool) {
	if o == nil || o.Time == nil {
		return nil, false
	}
	return o.Time, true
}

// HasTime returns a boolean if a field has been set.
func (o *InlineResponse20061Settings) HasTime() bool {
	if o != nil && o.Time != nil {
		return true
	}

	return false
}

// SetTime gets a reference to the given bool and assigns it to the Time field.
func (o *InlineResponse20061Settings) SetTime(v bool) {
	o.Time = &v
}

func (o InlineResponse20061Settings) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.Assignee != nil {
		toSerialize["assignee"] = o.Assignee
	}
	if o.Avatar != nil {
		toSerialize["avatar"] = o.Avatar
	}
	if o.Comments != nil {
		toSerialize["comments"] = o.Comments
	}
	if o.Dependencies != nil {
		toSerialize["dependencies"] = o.Dependencies
	}
	if o.Enddate != nil {
		toSerialize["enddate"] = o.Enddate
	}
	if o.Estimatedtime != nil {
		toSerialize["estimatedtime"] = o.Estimatedtime
	}
	if o.Files != nil {
		toSerialize["files"] = o.Files
	}
	if o.Followers != nil {
		toSerialize["followers"] = o.Followers
	}
	if o.Name != nil {
		toSerialize["name"] = o.Name
	}
	if o.Priority != nil {
		toSerialize["priority"] = o.Priority
	}
	if o.Private != nil {
		toSerialize["private"] = o.Private
	}
	if o.Progress != nil {
		toSerialize["progress"] = o.Progress
	}
	if o.Recurring != nil {
		toSerialize["recurring"] = o.Recurring
	}
	if o.Reminders != nil {
		toSerialize["reminders"] = o.Reminders
	}
	if o.Startdate != nil {
		toSerialize["startdate"] = o.Startdate
	}
	if o.Subtasklabel != nil {
		toSerialize["subtasklabel"] = o.Subtasklabel
	}
	if o.Tags != nil {
		toSerialize["tags"] = o.Tags
	}
	if o.Tasklist != nil {
		toSerialize["tasklist"] = o.Tasklist
	}
	if o.Tickets != nil {
		toSerialize["tickets"] = o.Tickets
	}
	if o.Time != nil {
		toSerialize["time"] = o.Time
	}
	return json.Marshal(toSerialize)
}

type NullableInlineResponse20061Settings struct {
	value *InlineResponse20061Settings
	isSet bool
}

func (v NullableInlineResponse20061Settings) Get() *InlineResponse20061Settings {
	return v.value
}

func (v *NullableInlineResponse20061Settings) Set(val *InlineResponse20061Settings) {
	v.value = val
	v.isSet = true
}

func (v NullableInlineResponse20061Settings) IsSet() bool {
	return v.isSet
}

func (v *NullableInlineResponse20061Settings) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableInlineResponse20061Settings(val *InlineResponse20061Settings) *NullableInlineResponse20061Settings {
	return &NullableInlineResponse20061Settings{value: val, isSet: true}
}

func (v NullableInlineResponse20061Settings) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableInlineResponse20061Settings) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


