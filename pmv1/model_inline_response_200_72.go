/*
 * Teamwork Projects API
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * API version: 
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package pmv1

import (
	"encoding/json"
)

// InlineResponse20072 struct for InlineResponse20072
type InlineResponse20072 struct {
	STATUS *string `json:"STATUS,omitempty"`
	Rates *InlineResponse20072Rates `json:"rates,omitempty"`
}

// NewInlineResponse20072 instantiates a new InlineResponse20072 object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewInlineResponse20072() *InlineResponse20072 {
	this := InlineResponse20072{}
	return &this
}

// NewInlineResponse20072WithDefaults instantiates a new InlineResponse20072 object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewInlineResponse20072WithDefaults() *InlineResponse20072 {
	this := InlineResponse20072{}
	return &this
}

// GetSTATUS returns the STATUS field value if set, zero value otherwise.
func (o *InlineResponse20072) GetSTATUS() string {
	if o == nil || o.STATUS == nil {
		var ret string
		return ret
	}
	return *o.STATUS
}

// GetSTATUSOk returns a tuple with the STATUS field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InlineResponse20072) GetSTATUSOk() (*string, bool) {
	if o == nil || o.STATUS == nil {
		return nil, false
	}
	return o.STATUS, true
}

// HasSTATUS returns a boolean if a field has been set.
func (o *InlineResponse20072) HasSTATUS() bool {
	if o != nil && o.STATUS != nil {
		return true
	}

	return false
}

// SetSTATUS gets a reference to the given string and assigns it to the STATUS field.
func (o *InlineResponse20072) SetSTATUS(v string) {
	o.STATUS = &v
}

// GetRates returns the Rates field value if set, zero value otherwise.
func (o *InlineResponse20072) GetRates() InlineResponse20072Rates {
	if o == nil || o.Rates == nil {
		var ret InlineResponse20072Rates
		return ret
	}
	return *o.Rates
}

// GetRatesOk returns a tuple with the Rates field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InlineResponse20072) GetRatesOk() (*InlineResponse20072Rates, bool) {
	if o == nil || o.Rates == nil {
		return nil, false
	}
	return o.Rates, true
}

// HasRates returns a boolean if a field has been set.
func (o *InlineResponse20072) HasRates() bool {
	if o != nil && o.Rates != nil {
		return true
	}

	return false
}

// SetRates gets a reference to the given InlineResponse20072Rates and assigns it to the Rates field.
func (o *InlineResponse20072) SetRates(v InlineResponse20072Rates) {
	o.Rates = &v
}

func (o InlineResponse20072) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.STATUS != nil {
		toSerialize["STATUS"] = o.STATUS
	}
	if o.Rates != nil {
		toSerialize["rates"] = o.Rates
	}
	return json.Marshal(toSerialize)
}

type NullableInlineResponse20072 struct {
	value *InlineResponse20072
	isSet bool
}

func (v NullableInlineResponse20072) Get() *InlineResponse20072 {
	return v.value
}

func (v *NullableInlineResponse20072) Set(val *InlineResponse20072) {
	v.value = val
	v.isSet = true
}

func (v NullableInlineResponse20072) IsSet() bool {
	return v.isSet
}

func (v *NullableInlineResponse20072) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableInlineResponse20072(val *InlineResponse20072) *NullableInlineResponse20072 {
	return &NullableInlineResponse20072{value: val, isSet: true}
}

func (v NullableInlineResponse20072) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableInlineResponse20072) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


