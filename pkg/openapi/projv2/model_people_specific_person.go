/*
 * Teamwork.com Projects API
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * API version: 3.0
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package projv2

import (
	"encoding/json"
)

// PeopleSpecificPerson struct for PeopleSpecificPerson
type PeopleSpecificPerson struct {
	APIEnabled *bool `json:"APIEnabled,omitempty"`
	Accounts *[]TwcoreusersbaseAccount `json:"accounts,omitempty"`
	Address *PeopleAddress `json:"address,omitempty"`
	Administrator *bool `json:"administrator,omitempty"`
	Auth *PeopleAuthData `json:"auth,omitempty"`
	AvatarUrl *string `json:"avatarUrl,omitempty"`
	CanManageProjectTemplates *bool `json:"canManageProjectTemplates,omitempty"`
	CanViewProjectTemplates *bool `json:"canViewProjectTemplates,omitempty"`
	Company *PeopleCompany `json:"company,omitempty"`
	CompanyId *int32 `json:"companyId,omitempty"`
	CompanyName *string `json:"companyName,omitempty"`
	CreatedAt *string `json:"createdAt,omitempty"`
	CurrentFeatureAnnouncement *TwdataaccountAnnouncementResponse `json:"currentFeatureAnnouncement,omitempty"`
	DefaultFilters *map[string]interface{} `json:"defaultFilters,omitempty"`
	Deleted *bool `json:"deleted,omitempty"`
	DocumentEditorInstalled *bool `json:"documentEditorInstalled,omitempty"`
	EmailAddress *string `json:"emailAddress,omitempty"`
	EmailAlt1 *string `json:"emailAlt1,omitempty"`
	EmailAlt2 *string `json:"emailAlt2,omitempty"`
	EmailAlt3 *string `json:"emailAlt3,omitempty"`
	FeatureUpdatesCount *int32 `json:"featureUpdatesCount,omitempty"`
	FirstName *string `json:"firstName,omitempty"`
	HasAccessToNewProjects *bool `json:"hasAccessToNewProjects,omitempty"`
	HasDeskAccount *bool `json:"hasDeskAccount,omitempty"`
	HasFeatureUpdates *bool `json:"hasFeatureUpdates,omitempty"`
	HubspotEnabled *bool `json:"hubspotEnabled,omitempty"`
	Id *int32 `json:"id,omitempty"`
	ImHandle *string `json:"imHandle,omitempty"`
	ImService *string `json:"imService,omitempty"`
	Impersonating *PeopleImpersonating `json:"impersonating,omitempty"`
	InOwnerCompany *bool `json:"inOwnerCompany,omitempty"`
	InitialPage *string `json:"initialPage,omitempty"`
	Integrations *PeopleIntegrations `json:"integrations,omitempty"`
	IsClockedIn *bool `json:"isClockedIn,omitempty"`
	LastActive *string `json:"lastActive,omitempty"`
	LastChangedOn *string `json:"lastChangedOn,omitempty"`
	LastLogin *string `json:"lastLogin,omitempty"`
	LastName *string `json:"lastName,omitempty"`
	LengthOfDay *float32 `json:"lengthOfDay,omitempty"`
	Localization *PeopleLocalization `json:"localization,omitempty"`
	LoginCount *int32 `json:"loginCount,omitempty"`
	Milestones *map[string]interface{} `json:"milestones,omitempty"`
	Notes *string `json:"notes,omitempty"`
	Notifications *PeopleNotifications `json:"notifications,omitempty"`
	NumActiveProjects *int32 `json:"numActiveProjects,omitempty"`
	OpenId *string `json:"openId,omitempty"`
	Permissions *PeoplePermissions `json:"permissions,omitempty"`
	PhoneNumberFax *string `json:"phoneNumberFax,omitempty"`
	PhoneNumberHome *string `json:"phoneNumberHome,omitempty"`
	PhoneNumberMobile *string `json:"phoneNumberMobile,omitempty"`
	PhoneNumberMobileParts *PeoplePhoneParts `json:"phoneNumberMobileParts,omitempty"`
	PhoneNumberOffice *string `json:"phoneNumberOffice,omitempty"`
	PhoneNumberOfficeExt *string `json:"phoneNumberOfficeExt,omitempty"`
	Pid *string `json:"pid,omitempty"`
	Preferences *map[string]interface{} `json:"preferences,omitempty"`
	PrivateNotes *string `json:"privateNotes,omitempty"`
	PrivateNotesText *string `json:"privateNotesText,omitempty"`
	Profile *string `json:"profile,omitempty"`
	ProfileText *string `json:"profileText,omitempty"`
	Projects *map[string]interface{} `json:"projects,omitempty"`
	SharedUserFilter *map[string]interface{} `json:"sharedUserFilter,omitempty"`
	SiteOwner *bool `json:"siteOwner,omitempty"`
	Social *PeopleSocial `json:"social,omitempty"`
	Tags *[]TwcoreTagsTag `json:"tags,omitempty"`
	Tasks *map[string]interface{} `json:"tasks,omitempty"`
	Teams *[]string `json:"teams,omitempty"`
	TeamsCount *int32 `json:"teamsCount,omitempty"`
	TextFormat *string `json:"textFormat,omitempty"`
	Title *string `json:"title,omitempty"`
	Twitter *string `json:"twitter,omitempty"`
	TwoFactorAuthEnabled *bool `json:"twoFactorAuthEnabled,omitempty"`
	UseShorthandDurations *bool `json:"useShorthandDurations,omitempty"`
	UserInvited *int32 `json:"userInvited,omitempty"`
	UserInvitedDate *string `json:"userInvitedDate,omitempty"`
	UserInvitedStatus *string `json:"userInvitedStatus,omitempty"`
	UserName *string `json:"userName,omitempty"`
	UserType *string `json:"userType,omitempty"`
	UserUUID *string `json:"userUUID,omitempty"`
	WorkingHours *PeopleWorkingHours `json:"workingHours,omitempty"`
}

// NewPeopleSpecificPerson instantiates a new PeopleSpecificPerson object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewPeopleSpecificPerson() *PeopleSpecificPerson {
	this := PeopleSpecificPerson{}
	return &this
}

// NewPeopleSpecificPersonWithDefaults instantiates a new PeopleSpecificPerson object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewPeopleSpecificPersonWithDefaults() *PeopleSpecificPerson {
	this := PeopleSpecificPerson{}
	return &this
}

// GetAPIEnabled returns the APIEnabled field value if set, zero value otherwise.
func (o *PeopleSpecificPerson) GetAPIEnabled() bool {
	if o == nil || o.APIEnabled == nil {
		var ret bool
		return ret
	}
	return *o.APIEnabled
}

// GetAPIEnabledOk returns a tuple with the APIEnabled field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PeopleSpecificPerson) GetAPIEnabledOk() (*bool, bool) {
	if o == nil || o.APIEnabled == nil {
		return nil, false
	}
	return o.APIEnabled, true
}

// HasAPIEnabled returns a boolean if a field has been set.
func (o *PeopleSpecificPerson) HasAPIEnabled() bool {
	if o != nil && o.APIEnabled != nil {
		return true
	}

	return false
}

// SetAPIEnabled gets a reference to the given bool and assigns it to the APIEnabled field.
func (o *PeopleSpecificPerson) SetAPIEnabled(v bool) {
	o.APIEnabled = &v
}

// GetAccounts returns the Accounts field value if set, zero value otherwise.
func (o *PeopleSpecificPerson) GetAccounts() []TwcoreusersbaseAccount {
	if o == nil || o.Accounts == nil {
		var ret []TwcoreusersbaseAccount
		return ret
	}
	return *o.Accounts
}

// GetAccountsOk returns a tuple with the Accounts field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PeopleSpecificPerson) GetAccountsOk() (*[]TwcoreusersbaseAccount, bool) {
	if o == nil || o.Accounts == nil {
		return nil, false
	}
	return o.Accounts, true
}

// HasAccounts returns a boolean if a field has been set.
func (o *PeopleSpecificPerson) HasAccounts() bool {
	if o != nil && o.Accounts != nil {
		return true
	}

	return false
}

// SetAccounts gets a reference to the given []TwcoreusersbaseAccount and assigns it to the Accounts field.
func (o *PeopleSpecificPerson) SetAccounts(v []TwcoreusersbaseAccount) {
	o.Accounts = &v
}

// GetAddress returns the Address field value if set, zero value otherwise.
func (o *PeopleSpecificPerson) GetAddress() PeopleAddress {
	if o == nil || o.Address == nil {
		var ret PeopleAddress
		return ret
	}
	return *o.Address
}

// GetAddressOk returns a tuple with the Address field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PeopleSpecificPerson) GetAddressOk() (*PeopleAddress, bool) {
	if o == nil || o.Address == nil {
		return nil, false
	}
	return o.Address, true
}

// HasAddress returns a boolean if a field has been set.
func (o *PeopleSpecificPerson) HasAddress() bool {
	if o != nil && o.Address != nil {
		return true
	}

	return false
}

// SetAddress gets a reference to the given PeopleAddress and assigns it to the Address field.
func (o *PeopleSpecificPerson) SetAddress(v PeopleAddress) {
	o.Address = &v
}

// GetAdministrator returns the Administrator field value if set, zero value otherwise.
func (o *PeopleSpecificPerson) GetAdministrator() bool {
	if o == nil || o.Administrator == nil {
		var ret bool
		return ret
	}
	return *o.Administrator
}

// GetAdministratorOk returns a tuple with the Administrator field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PeopleSpecificPerson) GetAdministratorOk() (*bool, bool) {
	if o == nil || o.Administrator == nil {
		return nil, false
	}
	return o.Administrator, true
}

// HasAdministrator returns a boolean if a field has been set.
func (o *PeopleSpecificPerson) HasAdministrator() bool {
	if o != nil && o.Administrator != nil {
		return true
	}

	return false
}

// SetAdministrator gets a reference to the given bool and assigns it to the Administrator field.
func (o *PeopleSpecificPerson) SetAdministrator(v bool) {
	o.Administrator = &v
}

// GetAuth returns the Auth field value if set, zero value otherwise.
func (o *PeopleSpecificPerson) GetAuth() PeopleAuthData {
	if o == nil || o.Auth == nil {
		var ret PeopleAuthData
		return ret
	}
	return *o.Auth
}

// GetAuthOk returns a tuple with the Auth field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PeopleSpecificPerson) GetAuthOk() (*PeopleAuthData, bool) {
	if o == nil || o.Auth == nil {
		return nil, false
	}
	return o.Auth, true
}

// HasAuth returns a boolean if a field has been set.
func (o *PeopleSpecificPerson) HasAuth() bool {
	if o != nil && o.Auth != nil {
		return true
	}

	return false
}

// SetAuth gets a reference to the given PeopleAuthData and assigns it to the Auth field.
func (o *PeopleSpecificPerson) SetAuth(v PeopleAuthData) {
	o.Auth = &v
}

// GetAvatarUrl returns the AvatarUrl field value if set, zero value otherwise.
func (o *PeopleSpecificPerson) GetAvatarUrl() string {
	if o == nil || o.AvatarUrl == nil {
		var ret string
		return ret
	}
	return *o.AvatarUrl
}

// GetAvatarUrlOk returns a tuple with the AvatarUrl field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PeopleSpecificPerson) GetAvatarUrlOk() (*string, bool) {
	if o == nil || o.AvatarUrl == nil {
		return nil, false
	}
	return o.AvatarUrl, true
}

// HasAvatarUrl returns a boolean if a field has been set.
func (o *PeopleSpecificPerson) HasAvatarUrl() bool {
	if o != nil && o.AvatarUrl != nil {
		return true
	}

	return false
}

// SetAvatarUrl gets a reference to the given string and assigns it to the AvatarUrl field.
func (o *PeopleSpecificPerson) SetAvatarUrl(v string) {
	o.AvatarUrl = &v
}

// GetCanManageProjectTemplates returns the CanManageProjectTemplates field value if set, zero value otherwise.
func (o *PeopleSpecificPerson) GetCanManageProjectTemplates() bool {
	if o == nil || o.CanManageProjectTemplates == nil {
		var ret bool
		return ret
	}
	return *o.CanManageProjectTemplates
}

// GetCanManageProjectTemplatesOk returns a tuple with the CanManageProjectTemplates field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PeopleSpecificPerson) GetCanManageProjectTemplatesOk() (*bool, bool) {
	if o == nil || o.CanManageProjectTemplates == nil {
		return nil, false
	}
	return o.CanManageProjectTemplates, true
}

// HasCanManageProjectTemplates returns a boolean if a field has been set.
func (o *PeopleSpecificPerson) HasCanManageProjectTemplates() bool {
	if o != nil && o.CanManageProjectTemplates != nil {
		return true
	}

	return false
}

// SetCanManageProjectTemplates gets a reference to the given bool and assigns it to the CanManageProjectTemplates field.
func (o *PeopleSpecificPerson) SetCanManageProjectTemplates(v bool) {
	o.CanManageProjectTemplates = &v
}

// GetCanViewProjectTemplates returns the CanViewProjectTemplates field value if set, zero value otherwise.
func (o *PeopleSpecificPerson) GetCanViewProjectTemplates() bool {
	if o == nil || o.CanViewProjectTemplates == nil {
		var ret bool
		return ret
	}
	return *o.CanViewProjectTemplates
}

// GetCanViewProjectTemplatesOk returns a tuple with the CanViewProjectTemplates field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PeopleSpecificPerson) GetCanViewProjectTemplatesOk() (*bool, bool) {
	if o == nil || o.CanViewProjectTemplates == nil {
		return nil, false
	}
	return o.CanViewProjectTemplates, true
}

// HasCanViewProjectTemplates returns a boolean if a field has been set.
func (o *PeopleSpecificPerson) HasCanViewProjectTemplates() bool {
	if o != nil && o.CanViewProjectTemplates != nil {
		return true
	}

	return false
}

// SetCanViewProjectTemplates gets a reference to the given bool and assigns it to the CanViewProjectTemplates field.
func (o *PeopleSpecificPerson) SetCanViewProjectTemplates(v bool) {
	o.CanViewProjectTemplates = &v
}

// GetCompany returns the Company field value if set, zero value otherwise.
func (o *PeopleSpecificPerson) GetCompany() PeopleCompany {
	if o == nil || o.Company == nil {
		var ret PeopleCompany
		return ret
	}
	return *o.Company
}

// GetCompanyOk returns a tuple with the Company field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PeopleSpecificPerson) GetCompanyOk() (*PeopleCompany, bool) {
	if o == nil || o.Company == nil {
		return nil, false
	}
	return o.Company, true
}

// HasCompany returns a boolean if a field has been set.
func (o *PeopleSpecificPerson) HasCompany() bool {
	if o != nil && o.Company != nil {
		return true
	}

	return false
}

// SetCompany gets a reference to the given PeopleCompany and assigns it to the Company field.
func (o *PeopleSpecificPerson) SetCompany(v PeopleCompany) {
	o.Company = &v
}

// GetCompanyId returns the CompanyId field value if set, zero value otherwise.
func (o *PeopleSpecificPerson) GetCompanyId() int32 {
	if o == nil || o.CompanyId == nil {
		var ret int32
		return ret
	}
	return *o.CompanyId
}

// GetCompanyIdOk returns a tuple with the CompanyId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PeopleSpecificPerson) GetCompanyIdOk() (*int32, bool) {
	if o == nil || o.CompanyId == nil {
		return nil, false
	}
	return o.CompanyId, true
}

// HasCompanyId returns a boolean if a field has been set.
func (o *PeopleSpecificPerson) HasCompanyId() bool {
	if o != nil && o.CompanyId != nil {
		return true
	}

	return false
}

// SetCompanyId gets a reference to the given int32 and assigns it to the CompanyId field.
func (o *PeopleSpecificPerson) SetCompanyId(v int32) {
	o.CompanyId = &v
}

// GetCompanyName returns the CompanyName field value if set, zero value otherwise.
func (o *PeopleSpecificPerson) GetCompanyName() string {
	if o == nil || o.CompanyName == nil {
		var ret string
		return ret
	}
	return *o.CompanyName
}

// GetCompanyNameOk returns a tuple with the CompanyName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PeopleSpecificPerson) GetCompanyNameOk() (*string, bool) {
	if o == nil || o.CompanyName == nil {
		return nil, false
	}
	return o.CompanyName, true
}

// HasCompanyName returns a boolean if a field has been set.
func (o *PeopleSpecificPerson) HasCompanyName() bool {
	if o != nil && o.CompanyName != nil {
		return true
	}

	return false
}

// SetCompanyName gets a reference to the given string and assigns it to the CompanyName field.
func (o *PeopleSpecificPerson) SetCompanyName(v string) {
	o.CompanyName = &v
}

// GetCreatedAt returns the CreatedAt field value if set, zero value otherwise.
func (o *PeopleSpecificPerson) GetCreatedAt() string {
	if o == nil || o.CreatedAt == nil {
		var ret string
		return ret
	}
	return *o.CreatedAt
}

// GetCreatedAtOk returns a tuple with the CreatedAt field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PeopleSpecificPerson) GetCreatedAtOk() (*string, bool) {
	if o == nil || o.CreatedAt == nil {
		return nil, false
	}
	return o.CreatedAt, true
}

// HasCreatedAt returns a boolean if a field has been set.
func (o *PeopleSpecificPerson) HasCreatedAt() bool {
	if o != nil && o.CreatedAt != nil {
		return true
	}

	return false
}

// SetCreatedAt gets a reference to the given string and assigns it to the CreatedAt field.
func (o *PeopleSpecificPerson) SetCreatedAt(v string) {
	o.CreatedAt = &v
}

// GetCurrentFeatureAnnouncement returns the CurrentFeatureAnnouncement field value if set, zero value otherwise.
func (o *PeopleSpecificPerson) GetCurrentFeatureAnnouncement() TwdataaccountAnnouncementResponse {
	if o == nil || o.CurrentFeatureAnnouncement == nil {
		var ret TwdataaccountAnnouncementResponse
		return ret
	}
	return *o.CurrentFeatureAnnouncement
}

// GetCurrentFeatureAnnouncementOk returns a tuple with the CurrentFeatureAnnouncement field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PeopleSpecificPerson) GetCurrentFeatureAnnouncementOk() (*TwdataaccountAnnouncementResponse, bool) {
	if o == nil || o.CurrentFeatureAnnouncement == nil {
		return nil, false
	}
	return o.CurrentFeatureAnnouncement, true
}

// HasCurrentFeatureAnnouncement returns a boolean if a field has been set.
func (o *PeopleSpecificPerson) HasCurrentFeatureAnnouncement() bool {
	if o != nil && o.CurrentFeatureAnnouncement != nil {
		return true
	}

	return false
}

// SetCurrentFeatureAnnouncement gets a reference to the given TwdataaccountAnnouncementResponse and assigns it to the CurrentFeatureAnnouncement field.
func (o *PeopleSpecificPerson) SetCurrentFeatureAnnouncement(v TwdataaccountAnnouncementResponse) {
	o.CurrentFeatureAnnouncement = &v
}

// GetDefaultFilters returns the DefaultFilters field value if set, zero value otherwise.
func (o *PeopleSpecificPerson) GetDefaultFilters() map[string]interface{} {
	if o == nil || o.DefaultFilters == nil {
		var ret map[string]interface{}
		return ret
	}
	return *o.DefaultFilters
}

// GetDefaultFiltersOk returns a tuple with the DefaultFilters field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PeopleSpecificPerson) GetDefaultFiltersOk() (*map[string]interface{}, bool) {
	if o == nil || o.DefaultFilters == nil {
		return nil, false
	}
	return o.DefaultFilters, true
}

// HasDefaultFilters returns a boolean if a field has been set.
func (o *PeopleSpecificPerson) HasDefaultFilters() bool {
	if o != nil && o.DefaultFilters != nil {
		return true
	}

	return false
}

// SetDefaultFilters gets a reference to the given map[string]interface{} and assigns it to the DefaultFilters field.
func (o *PeopleSpecificPerson) SetDefaultFilters(v map[string]interface{}) {
	o.DefaultFilters = &v
}

// GetDeleted returns the Deleted field value if set, zero value otherwise.
func (o *PeopleSpecificPerson) GetDeleted() bool {
	if o == nil || o.Deleted == nil {
		var ret bool
		return ret
	}
	return *o.Deleted
}

// GetDeletedOk returns a tuple with the Deleted field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PeopleSpecificPerson) GetDeletedOk() (*bool, bool) {
	if o == nil || o.Deleted == nil {
		return nil, false
	}
	return o.Deleted, true
}

// HasDeleted returns a boolean if a field has been set.
func (o *PeopleSpecificPerson) HasDeleted() bool {
	if o != nil && o.Deleted != nil {
		return true
	}

	return false
}

// SetDeleted gets a reference to the given bool and assigns it to the Deleted field.
func (o *PeopleSpecificPerson) SetDeleted(v bool) {
	o.Deleted = &v
}

// GetDocumentEditorInstalled returns the DocumentEditorInstalled field value if set, zero value otherwise.
func (o *PeopleSpecificPerson) GetDocumentEditorInstalled() bool {
	if o == nil || o.DocumentEditorInstalled == nil {
		var ret bool
		return ret
	}
	return *o.DocumentEditorInstalled
}

// GetDocumentEditorInstalledOk returns a tuple with the DocumentEditorInstalled field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PeopleSpecificPerson) GetDocumentEditorInstalledOk() (*bool, bool) {
	if o == nil || o.DocumentEditorInstalled == nil {
		return nil, false
	}
	return o.DocumentEditorInstalled, true
}

// HasDocumentEditorInstalled returns a boolean if a field has been set.
func (o *PeopleSpecificPerson) HasDocumentEditorInstalled() bool {
	if o != nil && o.DocumentEditorInstalled != nil {
		return true
	}

	return false
}

// SetDocumentEditorInstalled gets a reference to the given bool and assigns it to the DocumentEditorInstalled field.
func (o *PeopleSpecificPerson) SetDocumentEditorInstalled(v bool) {
	o.DocumentEditorInstalled = &v
}

// GetEmailAddress returns the EmailAddress field value if set, zero value otherwise.
func (o *PeopleSpecificPerson) GetEmailAddress() string {
	if o == nil || o.EmailAddress == nil {
		var ret string
		return ret
	}
	return *o.EmailAddress
}

// GetEmailAddressOk returns a tuple with the EmailAddress field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PeopleSpecificPerson) GetEmailAddressOk() (*string, bool) {
	if o == nil || o.EmailAddress == nil {
		return nil, false
	}
	return o.EmailAddress, true
}

// HasEmailAddress returns a boolean if a field has been set.
func (o *PeopleSpecificPerson) HasEmailAddress() bool {
	if o != nil && o.EmailAddress != nil {
		return true
	}

	return false
}

// SetEmailAddress gets a reference to the given string and assigns it to the EmailAddress field.
func (o *PeopleSpecificPerson) SetEmailAddress(v string) {
	o.EmailAddress = &v
}

// GetEmailAlt1 returns the EmailAlt1 field value if set, zero value otherwise.
func (o *PeopleSpecificPerson) GetEmailAlt1() string {
	if o == nil || o.EmailAlt1 == nil {
		var ret string
		return ret
	}
	return *o.EmailAlt1
}

// GetEmailAlt1Ok returns a tuple with the EmailAlt1 field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PeopleSpecificPerson) GetEmailAlt1Ok() (*string, bool) {
	if o == nil || o.EmailAlt1 == nil {
		return nil, false
	}
	return o.EmailAlt1, true
}

// HasEmailAlt1 returns a boolean if a field has been set.
func (o *PeopleSpecificPerson) HasEmailAlt1() bool {
	if o != nil && o.EmailAlt1 != nil {
		return true
	}

	return false
}

// SetEmailAlt1 gets a reference to the given string and assigns it to the EmailAlt1 field.
func (o *PeopleSpecificPerson) SetEmailAlt1(v string) {
	o.EmailAlt1 = &v
}

// GetEmailAlt2 returns the EmailAlt2 field value if set, zero value otherwise.
func (o *PeopleSpecificPerson) GetEmailAlt2() string {
	if o == nil || o.EmailAlt2 == nil {
		var ret string
		return ret
	}
	return *o.EmailAlt2
}

// GetEmailAlt2Ok returns a tuple with the EmailAlt2 field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PeopleSpecificPerson) GetEmailAlt2Ok() (*string, bool) {
	if o == nil || o.EmailAlt2 == nil {
		return nil, false
	}
	return o.EmailAlt2, true
}

// HasEmailAlt2 returns a boolean if a field has been set.
func (o *PeopleSpecificPerson) HasEmailAlt2() bool {
	if o != nil && o.EmailAlt2 != nil {
		return true
	}

	return false
}

// SetEmailAlt2 gets a reference to the given string and assigns it to the EmailAlt2 field.
func (o *PeopleSpecificPerson) SetEmailAlt2(v string) {
	o.EmailAlt2 = &v
}

// GetEmailAlt3 returns the EmailAlt3 field value if set, zero value otherwise.
func (o *PeopleSpecificPerson) GetEmailAlt3() string {
	if o == nil || o.EmailAlt3 == nil {
		var ret string
		return ret
	}
	return *o.EmailAlt3
}

// GetEmailAlt3Ok returns a tuple with the EmailAlt3 field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PeopleSpecificPerson) GetEmailAlt3Ok() (*string, bool) {
	if o == nil || o.EmailAlt3 == nil {
		return nil, false
	}
	return o.EmailAlt3, true
}

// HasEmailAlt3 returns a boolean if a field has been set.
func (o *PeopleSpecificPerson) HasEmailAlt3() bool {
	if o != nil && o.EmailAlt3 != nil {
		return true
	}

	return false
}

// SetEmailAlt3 gets a reference to the given string and assigns it to the EmailAlt3 field.
func (o *PeopleSpecificPerson) SetEmailAlt3(v string) {
	o.EmailAlt3 = &v
}

// GetFeatureUpdatesCount returns the FeatureUpdatesCount field value if set, zero value otherwise.
func (o *PeopleSpecificPerson) GetFeatureUpdatesCount() int32 {
	if o == nil || o.FeatureUpdatesCount == nil {
		var ret int32
		return ret
	}
	return *o.FeatureUpdatesCount
}

// GetFeatureUpdatesCountOk returns a tuple with the FeatureUpdatesCount field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PeopleSpecificPerson) GetFeatureUpdatesCountOk() (*int32, bool) {
	if o == nil || o.FeatureUpdatesCount == nil {
		return nil, false
	}
	return o.FeatureUpdatesCount, true
}

// HasFeatureUpdatesCount returns a boolean if a field has been set.
func (o *PeopleSpecificPerson) HasFeatureUpdatesCount() bool {
	if o != nil && o.FeatureUpdatesCount != nil {
		return true
	}

	return false
}

// SetFeatureUpdatesCount gets a reference to the given int32 and assigns it to the FeatureUpdatesCount field.
func (o *PeopleSpecificPerson) SetFeatureUpdatesCount(v int32) {
	o.FeatureUpdatesCount = &v
}

// GetFirstName returns the FirstName field value if set, zero value otherwise.
func (o *PeopleSpecificPerson) GetFirstName() string {
	if o == nil || o.FirstName == nil {
		var ret string
		return ret
	}
	return *o.FirstName
}

// GetFirstNameOk returns a tuple with the FirstName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PeopleSpecificPerson) GetFirstNameOk() (*string, bool) {
	if o == nil || o.FirstName == nil {
		return nil, false
	}
	return o.FirstName, true
}

// HasFirstName returns a boolean if a field has been set.
func (o *PeopleSpecificPerson) HasFirstName() bool {
	if o != nil && o.FirstName != nil {
		return true
	}

	return false
}

// SetFirstName gets a reference to the given string and assigns it to the FirstName field.
func (o *PeopleSpecificPerson) SetFirstName(v string) {
	o.FirstName = &v
}

// GetHasAccessToNewProjects returns the HasAccessToNewProjects field value if set, zero value otherwise.
func (o *PeopleSpecificPerson) GetHasAccessToNewProjects() bool {
	if o == nil || o.HasAccessToNewProjects == nil {
		var ret bool
		return ret
	}
	return *o.HasAccessToNewProjects
}

// GetHasAccessToNewProjectsOk returns a tuple with the HasAccessToNewProjects field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PeopleSpecificPerson) GetHasAccessToNewProjectsOk() (*bool, bool) {
	if o == nil || o.HasAccessToNewProjects == nil {
		return nil, false
	}
	return o.HasAccessToNewProjects, true
}

// HasHasAccessToNewProjects returns a boolean if a field has been set.
func (o *PeopleSpecificPerson) HasHasAccessToNewProjects() bool {
	if o != nil && o.HasAccessToNewProjects != nil {
		return true
	}

	return false
}

// SetHasAccessToNewProjects gets a reference to the given bool and assigns it to the HasAccessToNewProjects field.
func (o *PeopleSpecificPerson) SetHasAccessToNewProjects(v bool) {
	o.HasAccessToNewProjects = &v
}

// GetHasDeskAccount returns the HasDeskAccount field value if set, zero value otherwise.
func (o *PeopleSpecificPerson) GetHasDeskAccount() bool {
	if o == nil || o.HasDeskAccount == nil {
		var ret bool
		return ret
	}
	return *o.HasDeskAccount
}

// GetHasDeskAccountOk returns a tuple with the HasDeskAccount field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PeopleSpecificPerson) GetHasDeskAccountOk() (*bool, bool) {
	if o == nil || o.HasDeskAccount == nil {
		return nil, false
	}
	return o.HasDeskAccount, true
}

// HasHasDeskAccount returns a boolean if a field has been set.
func (o *PeopleSpecificPerson) HasHasDeskAccount() bool {
	if o != nil && o.HasDeskAccount != nil {
		return true
	}

	return false
}

// SetHasDeskAccount gets a reference to the given bool and assigns it to the HasDeskAccount field.
func (o *PeopleSpecificPerson) SetHasDeskAccount(v bool) {
	o.HasDeskAccount = &v
}

// GetHasFeatureUpdates returns the HasFeatureUpdates field value if set, zero value otherwise.
func (o *PeopleSpecificPerson) GetHasFeatureUpdates() bool {
	if o == nil || o.HasFeatureUpdates == nil {
		var ret bool
		return ret
	}
	return *o.HasFeatureUpdates
}

// GetHasFeatureUpdatesOk returns a tuple with the HasFeatureUpdates field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PeopleSpecificPerson) GetHasFeatureUpdatesOk() (*bool, bool) {
	if o == nil || o.HasFeatureUpdates == nil {
		return nil, false
	}
	return o.HasFeatureUpdates, true
}

// HasHasFeatureUpdates returns a boolean if a field has been set.
func (o *PeopleSpecificPerson) HasHasFeatureUpdates() bool {
	if o != nil && o.HasFeatureUpdates != nil {
		return true
	}

	return false
}

// SetHasFeatureUpdates gets a reference to the given bool and assigns it to the HasFeatureUpdates field.
func (o *PeopleSpecificPerson) SetHasFeatureUpdates(v bool) {
	o.HasFeatureUpdates = &v
}

// GetHubspotEnabled returns the HubspotEnabled field value if set, zero value otherwise.
func (o *PeopleSpecificPerson) GetHubspotEnabled() bool {
	if o == nil || o.HubspotEnabled == nil {
		var ret bool
		return ret
	}
	return *o.HubspotEnabled
}

// GetHubspotEnabledOk returns a tuple with the HubspotEnabled field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PeopleSpecificPerson) GetHubspotEnabledOk() (*bool, bool) {
	if o == nil || o.HubspotEnabled == nil {
		return nil, false
	}
	return o.HubspotEnabled, true
}

// HasHubspotEnabled returns a boolean if a field has been set.
func (o *PeopleSpecificPerson) HasHubspotEnabled() bool {
	if o != nil && o.HubspotEnabled != nil {
		return true
	}

	return false
}

// SetHubspotEnabled gets a reference to the given bool and assigns it to the HubspotEnabled field.
func (o *PeopleSpecificPerson) SetHubspotEnabled(v bool) {
	o.HubspotEnabled = &v
}

// GetId returns the Id field value if set, zero value otherwise.
func (o *PeopleSpecificPerson) GetId() int32 {
	if o == nil || o.Id == nil {
		var ret int32
		return ret
	}
	return *o.Id
}

// GetIdOk returns a tuple with the Id field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PeopleSpecificPerson) GetIdOk() (*int32, bool) {
	if o == nil || o.Id == nil {
		return nil, false
	}
	return o.Id, true
}

// HasId returns a boolean if a field has been set.
func (o *PeopleSpecificPerson) HasId() bool {
	if o != nil && o.Id != nil {
		return true
	}

	return false
}

// SetId gets a reference to the given int32 and assigns it to the Id field.
func (o *PeopleSpecificPerson) SetId(v int32) {
	o.Id = &v
}

// GetImHandle returns the ImHandle field value if set, zero value otherwise.
func (o *PeopleSpecificPerson) GetImHandle() string {
	if o == nil || o.ImHandle == nil {
		var ret string
		return ret
	}
	return *o.ImHandle
}

// GetImHandleOk returns a tuple with the ImHandle field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PeopleSpecificPerson) GetImHandleOk() (*string, bool) {
	if o == nil || o.ImHandle == nil {
		return nil, false
	}
	return o.ImHandle, true
}

// HasImHandle returns a boolean if a field has been set.
func (o *PeopleSpecificPerson) HasImHandle() bool {
	if o != nil && o.ImHandle != nil {
		return true
	}

	return false
}

// SetImHandle gets a reference to the given string and assigns it to the ImHandle field.
func (o *PeopleSpecificPerson) SetImHandle(v string) {
	o.ImHandle = &v
}

// GetImService returns the ImService field value if set, zero value otherwise.
func (o *PeopleSpecificPerson) GetImService() string {
	if o == nil || o.ImService == nil {
		var ret string
		return ret
	}
	return *o.ImService
}

// GetImServiceOk returns a tuple with the ImService field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PeopleSpecificPerson) GetImServiceOk() (*string, bool) {
	if o == nil || o.ImService == nil {
		return nil, false
	}
	return o.ImService, true
}

// HasImService returns a boolean if a field has been set.
func (o *PeopleSpecificPerson) HasImService() bool {
	if o != nil && o.ImService != nil {
		return true
	}

	return false
}

// SetImService gets a reference to the given string and assigns it to the ImService field.
func (o *PeopleSpecificPerson) SetImService(v string) {
	o.ImService = &v
}

// GetImpersonating returns the Impersonating field value if set, zero value otherwise.
func (o *PeopleSpecificPerson) GetImpersonating() PeopleImpersonating {
	if o == nil || o.Impersonating == nil {
		var ret PeopleImpersonating
		return ret
	}
	return *o.Impersonating
}

// GetImpersonatingOk returns a tuple with the Impersonating field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PeopleSpecificPerson) GetImpersonatingOk() (*PeopleImpersonating, bool) {
	if o == nil || o.Impersonating == nil {
		return nil, false
	}
	return o.Impersonating, true
}

// HasImpersonating returns a boolean if a field has been set.
func (o *PeopleSpecificPerson) HasImpersonating() bool {
	if o != nil && o.Impersonating != nil {
		return true
	}

	return false
}

// SetImpersonating gets a reference to the given PeopleImpersonating and assigns it to the Impersonating field.
func (o *PeopleSpecificPerson) SetImpersonating(v PeopleImpersonating) {
	o.Impersonating = &v
}

// GetInOwnerCompany returns the InOwnerCompany field value if set, zero value otherwise.
func (o *PeopleSpecificPerson) GetInOwnerCompany() bool {
	if o == nil || o.InOwnerCompany == nil {
		var ret bool
		return ret
	}
	return *o.InOwnerCompany
}

// GetInOwnerCompanyOk returns a tuple with the InOwnerCompany field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PeopleSpecificPerson) GetInOwnerCompanyOk() (*bool, bool) {
	if o == nil || o.InOwnerCompany == nil {
		return nil, false
	}
	return o.InOwnerCompany, true
}

// HasInOwnerCompany returns a boolean if a field has been set.
func (o *PeopleSpecificPerson) HasInOwnerCompany() bool {
	if o != nil && o.InOwnerCompany != nil {
		return true
	}

	return false
}

// SetInOwnerCompany gets a reference to the given bool and assigns it to the InOwnerCompany field.
func (o *PeopleSpecificPerson) SetInOwnerCompany(v bool) {
	o.InOwnerCompany = &v
}

// GetInitialPage returns the InitialPage field value if set, zero value otherwise.
func (o *PeopleSpecificPerson) GetInitialPage() string {
	if o == nil || o.InitialPage == nil {
		var ret string
		return ret
	}
	return *o.InitialPage
}

// GetInitialPageOk returns a tuple with the InitialPage field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PeopleSpecificPerson) GetInitialPageOk() (*string, bool) {
	if o == nil || o.InitialPage == nil {
		return nil, false
	}
	return o.InitialPage, true
}

// HasInitialPage returns a boolean if a field has been set.
func (o *PeopleSpecificPerson) HasInitialPage() bool {
	if o != nil && o.InitialPage != nil {
		return true
	}

	return false
}

// SetInitialPage gets a reference to the given string and assigns it to the InitialPage field.
func (o *PeopleSpecificPerson) SetInitialPage(v string) {
	o.InitialPage = &v
}

// GetIntegrations returns the Integrations field value if set, zero value otherwise.
func (o *PeopleSpecificPerson) GetIntegrations() PeopleIntegrations {
	if o == nil || o.Integrations == nil {
		var ret PeopleIntegrations
		return ret
	}
	return *o.Integrations
}

// GetIntegrationsOk returns a tuple with the Integrations field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PeopleSpecificPerson) GetIntegrationsOk() (*PeopleIntegrations, bool) {
	if o == nil || o.Integrations == nil {
		return nil, false
	}
	return o.Integrations, true
}

// HasIntegrations returns a boolean if a field has been set.
func (o *PeopleSpecificPerson) HasIntegrations() bool {
	if o != nil && o.Integrations != nil {
		return true
	}

	return false
}

// SetIntegrations gets a reference to the given PeopleIntegrations and assigns it to the Integrations field.
func (o *PeopleSpecificPerson) SetIntegrations(v PeopleIntegrations) {
	o.Integrations = &v
}

// GetIsClockedIn returns the IsClockedIn field value if set, zero value otherwise.
func (o *PeopleSpecificPerson) GetIsClockedIn() bool {
	if o == nil || o.IsClockedIn == nil {
		var ret bool
		return ret
	}
	return *o.IsClockedIn
}

// GetIsClockedInOk returns a tuple with the IsClockedIn field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PeopleSpecificPerson) GetIsClockedInOk() (*bool, bool) {
	if o == nil || o.IsClockedIn == nil {
		return nil, false
	}
	return o.IsClockedIn, true
}

// HasIsClockedIn returns a boolean if a field has been set.
func (o *PeopleSpecificPerson) HasIsClockedIn() bool {
	if o != nil && o.IsClockedIn != nil {
		return true
	}

	return false
}

// SetIsClockedIn gets a reference to the given bool and assigns it to the IsClockedIn field.
func (o *PeopleSpecificPerson) SetIsClockedIn(v bool) {
	o.IsClockedIn = &v
}

// GetLastActive returns the LastActive field value if set, zero value otherwise.
func (o *PeopleSpecificPerson) GetLastActive() string {
	if o == nil || o.LastActive == nil {
		var ret string
		return ret
	}
	return *o.LastActive
}

// GetLastActiveOk returns a tuple with the LastActive field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PeopleSpecificPerson) GetLastActiveOk() (*string, bool) {
	if o == nil || o.LastActive == nil {
		return nil, false
	}
	return o.LastActive, true
}

// HasLastActive returns a boolean if a field has been set.
func (o *PeopleSpecificPerson) HasLastActive() bool {
	if o != nil && o.LastActive != nil {
		return true
	}

	return false
}

// SetLastActive gets a reference to the given string and assigns it to the LastActive field.
func (o *PeopleSpecificPerson) SetLastActive(v string) {
	o.LastActive = &v
}

// GetLastChangedOn returns the LastChangedOn field value if set, zero value otherwise.
func (o *PeopleSpecificPerson) GetLastChangedOn() string {
	if o == nil || o.LastChangedOn == nil {
		var ret string
		return ret
	}
	return *o.LastChangedOn
}

// GetLastChangedOnOk returns a tuple with the LastChangedOn field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PeopleSpecificPerson) GetLastChangedOnOk() (*string, bool) {
	if o == nil || o.LastChangedOn == nil {
		return nil, false
	}
	return o.LastChangedOn, true
}

// HasLastChangedOn returns a boolean if a field has been set.
func (o *PeopleSpecificPerson) HasLastChangedOn() bool {
	if o != nil && o.LastChangedOn != nil {
		return true
	}

	return false
}

// SetLastChangedOn gets a reference to the given string and assigns it to the LastChangedOn field.
func (o *PeopleSpecificPerson) SetLastChangedOn(v string) {
	o.LastChangedOn = &v
}

// GetLastLogin returns the LastLogin field value if set, zero value otherwise.
func (o *PeopleSpecificPerson) GetLastLogin() string {
	if o == nil || o.LastLogin == nil {
		var ret string
		return ret
	}
	return *o.LastLogin
}

// GetLastLoginOk returns a tuple with the LastLogin field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PeopleSpecificPerson) GetLastLoginOk() (*string, bool) {
	if o == nil || o.LastLogin == nil {
		return nil, false
	}
	return o.LastLogin, true
}

// HasLastLogin returns a boolean if a field has been set.
func (o *PeopleSpecificPerson) HasLastLogin() bool {
	if o != nil && o.LastLogin != nil {
		return true
	}

	return false
}

// SetLastLogin gets a reference to the given string and assigns it to the LastLogin field.
func (o *PeopleSpecificPerson) SetLastLogin(v string) {
	o.LastLogin = &v
}

// GetLastName returns the LastName field value if set, zero value otherwise.
func (o *PeopleSpecificPerson) GetLastName() string {
	if o == nil || o.LastName == nil {
		var ret string
		return ret
	}
	return *o.LastName
}

// GetLastNameOk returns a tuple with the LastName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PeopleSpecificPerson) GetLastNameOk() (*string, bool) {
	if o == nil || o.LastName == nil {
		return nil, false
	}
	return o.LastName, true
}

// HasLastName returns a boolean if a field has been set.
func (o *PeopleSpecificPerson) HasLastName() bool {
	if o != nil && o.LastName != nil {
		return true
	}

	return false
}

// SetLastName gets a reference to the given string and assigns it to the LastName field.
func (o *PeopleSpecificPerson) SetLastName(v string) {
	o.LastName = &v
}

// GetLengthOfDay returns the LengthOfDay field value if set, zero value otherwise.
func (o *PeopleSpecificPerson) GetLengthOfDay() float32 {
	if o == nil || o.LengthOfDay == nil {
		var ret float32
		return ret
	}
	return *o.LengthOfDay
}

// GetLengthOfDayOk returns a tuple with the LengthOfDay field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PeopleSpecificPerson) GetLengthOfDayOk() (*float32, bool) {
	if o == nil || o.LengthOfDay == nil {
		return nil, false
	}
	return o.LengthOfDay, true
}

// HasLengthOfDay returns a boolean if a field has been set.
func (o *PeopleSpecificPerson) HasLengthOfDay() bool {
	if o != nil && o.LengthOfDay != nil {
		return true
	}

	return false
}

// SetLengthOfDay gets a reference to the given float32 and assigns it to the LengthOfDay field.
func (o *PeopleSpecificPerson) SetLengthOfDay(v float32) {
	o.LengthOfDay = &v
}

// GetLocalization returns the Localization field value if set, zero value otherwise.
func (o *PeopleSpecificPerson) GetLocalization() PeopleLocalization {
	if o == nil || o.Localization == nil {
		var ret PeopleLocalization
		return ret
	}
	return *o.Localization
}

// GetLocalizationOk returns a tuple with the Localization field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PeopleSpecificPerson) GetLocalizationOk() (*PeopleLocalization, bool) {
	if o == nil || o.Localization == nil {
		return nil, false
	}
	return o.Localization, true
}

// HasLocalization returns a boolean if a field has been set.
func (o *PeopleSpecificPerson) HasLocalization() bool {
	if o != nil && o.Localization != nil {
		return true
	}

	return false
}

// SetLocalization gets a reference to the given PeopleLocalization and assigns it to the Localization field.
func (o *PeopleSpecificPerson) SetLocalization(v PeopleLocalization) {
	o.Localization = &v
}

// GetLoginCount returns the LoginCount field value if set, zero value otherwise.
func (o *PeopleSpecificPerson) GetLoginCount() int32 {
	if o == nil || o.LoginCount == nil {
		var ret int32
		return ret
	}
	return *o.LoginCount
}

// GetLoginCountOk returns a tuple with the LoginCount field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PeopleSpecificPerson) GetLoginCountOk() (*int32, bool) {
	if o == nil || o.LoginCount == nil {
		return nil, false
	}
	return o.LoginCount, true
}

// HasLoginCount returns a boolean if a field has been set.
func (o *PeopleSpecificPerson) HasLoginCount() bool {
	if o != nil && o.LoginCount != nil {
		return true
	}

	return false
}

// SetLoginCount gets a reference to the given int32 and assigns it to the LoginCount field.
func (o *PeopleSpecificPerson) SetLoginCount(v int32) {
	o.LoginCount = &v
}

// GetMilestones returns the Milestones field value if set, zero value otherwise.
func (o *PeopleSpecificPerson) GetMilestones() map[string]interface{} {
	if o == nil || o.Milestones == nil {
		var ret map[string]interface{}
		return ret
	}
	return *o.Milestones
}

// GetMilestonesOk returns a tuple with the Milestones field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PeopleSpecificPerson) GetMilestonesOk() (*map[string]interface{}, bool) {
	if o == nil || o.Milestones == nil {
		return nil, false
	}
	return o.Milestones, true
}

// HasMilestones returns a boolean if a field has been set.
func (o *PeopleSpecificPerson) HasMilestones() bool {
	if o != nil && o.Milestones != nil {
		return true
	}

	return false
}

// SetMilestones gets a reference to the given map[string]interface{} and assigns it to the Milestones field.
func (o *PeopleSpecificPerson) SetMilestones(v map[string]interface{}) {
	o.Milestones = &v
}

// GetNotes returns the Notes field value if set, zero value otherwise.
func (o *PeopleSpecificPerson) GetNotes() string {
	if o == nil || o.Notes == nil {
		var ret string
		return ret
	}
	return *o.Notes
}

// GetNotesOk returns a tuple with the Notes field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PeopleSpecificPerson) GetNotesOk() (*string, bool) {
	if o == nil || o.Notes == nil {
		return nil, false
	}
	return o.Notes, true
}

// HasNotes returns a boolean if a field has been set.
func (o *PeopleSpecificPerson) HasNotes() bool {
	if o != nil && o.Notes != nil {
		return true
	}

	return false
}

// SetNotes gets a reference to the given string and assigns it to the Notes field.
func (o *PeopleSpecificPerson) SetNotes(v string) {
	o.Notes = &v
}

// GetNotifications returns the Notifications field value if set, zero value otherwise.
func (o *PeopleSpecificPerson) GetNotifications() PeopleNotifications {
	if o == nil || o.Notifications == nil {
		var ret PeopleNotifications
		return ret
	}
	return *o.Notifications
}

// GetNotificationsOk returns a tuple with the Notifications field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PeopleSpecificPerson) GetNotificationsOk() (*PeopleNotifications, bool) {
	if o == nil || o.Notifications == nil {
		return nil, false
	}
	return o.Notifications, true
}

// HasNotifications returns a boolean if a field has been set.
func (o *PeopleSpecificPerson) HasNotifications() bool {
	if o != nil && o.Notifications != nil {
		return true
	}

	return false
}

// SetNotifications gets a reference to the given PeopleNotifications and assigns it to the Notifications field.
func (o *PeopleSpecificPerson) SetNotifications(v PeopleNotifications) {
	o.Notifications = &v
}

// GetNumActiveProjects returns the NumActiveProjects field value if set, zero value otherwise.
func (o *PeopleSpecificPerson) GetNumActiveProjects() int32 {
	if o == nil || o.NumActiveProjects == nil {
		var ret int32
		return ret
	}
	return *o.NumActiveProjects
}

// GetNumActiveProjectsOk returns a tuple with the NumActiveProjects field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PeopleSpecificPerson) GetNumActiveProjectsOk() (*int32, bool) {
	if o == nil || o.NumActiveProjects == nil {
		return nil, false
	}
	return o.NumActiveProjects, true
}

// HasNumActiveProjects returns a boolean if a field has been set.
func (o *PeopleSpecificPerson) HasNumActiveProjects() bool {
	if o != nil && o.NumActiveProjects != nil {
		return true
	}

	return false
}

// SetNumActiveProjects gets a reference to the given int32 and assigns it to the NumActiveProjects field.
func (o *PeopleSpecificPerson) SetNumActiveProjects(v int32) {
	o.NumActiveProjects = &v
}

// GetOpenId returns the OpenId field value if set, zero value otherwise.
func (o *PeopleSpecificPerson) GetOpenId() string {
	if o == nil || o.OpenId == nil {
		var ret string
		return ret
	}
	return *o.OpenId
}

// GetOpenIdOk returns a tuple with the OpenId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PeopleSpecificPerson) GetOpenIdOk() (*string, bool) {
	if o == nil || o.OpenId == nil {
		return nil, false
	}
	return o.OpenId, true
}

// HasOpenId returns a boolean if a field has been set.
func (o *PeopleSpecificPerson) HasOpenId() bool {
	if o != nil && o.OpenId != nil {
		return true
	}

	return false
}

// SetOpenId gets a reference to the given string and assigns it to the OpenId field.
func (o *PeopleSpecificPerson) SetOpenId(v string) {
	o.OpenId = &v
}

// GetPermissions returns the Permissions field value if set, zero value otherwise.
func (o *PeopleSpecificPerson) GetPermissions() PeoplePermissions {
	if o == nil || o.Permissions == nil {
		var ret PeoplePermissions
		return ret
	}
	return *o.Permissions
}

// GetPermissionsOk returns a tuple with the Permissions field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PeopleSpecificPerson) GetPermissionsOk() (*PeoplePermissions, bool) {
	if o == nil || o.Permissions == nil {
		return nil, false
	}
	return o.Permissions, true
}

// HasPermissions returns a boolean if a field has been set.
func (o *PeopleSpecificPerson) HasPermissions() bool {
	if o != nil && o.Permissions != nil {
		return true
	}

	return false
}

// SetPermissions gets a reference to the given PeoplePermissions and assigns it to the Permissions field.
func (o *PeopleSpecificPerson) SetPermissions(v PeoplePermissions) {
	o.Permissions = &v
}

// GetPhoneNumberFax returns the PhoneNumberFax field value if set, zero value otherwise.
func (o *PeopleSpecificPerson) GetPhoneNumberFax() string {
	if o == nil || o.PhoneNumberFax == nil {
		var ret string
		return ret
	}
	return *o.PhoneNumberFax
}

// GetPhoneNumberFaxOk returns a tuple with the PhoneNumberFax field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PeopleSpecificPerson) GetPhoneNumberFaxOk() (*string, bool) {
	if o == nil || o.PhoneNumberFax == nil {
		return nil, false
	}
	return o.PhoneNumberFax, true
}

// HasPhoneNumberFax returns a boolean if a field has been set.
func (o *PeopleSpecificPerson) HasPhoneNumberFax() bool {
	if o != nil && o.PhoneNumberFax != nil {
		return true
	}

	return false
}

// SetPhoneNumberFax gets a reference to the given string and assigns it to the PhoneNumberFax field.
func (o *PeopleSpecificPerson) SetPhoneNumberFax(v string) {
	o.PhoneNumberFax = &v
}

// GetPhoneNumberHome returns the PhoneNumberHome field value if set, zero value otherwise.
func (o *PeopleSpecificPerson) GetPhoneNumberHome() string {
	if o == nil || o.PhoneNumberHome == nil {
		var ret string
		return ret
	}
	return *o.PhoneNumberHome
}

// GetPhoneNumberHomeOk returns a tuple with the PhoneNumberHome field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PeopleSpecificPerson) GetPhoneNumberHomeOk() (*string, bool) {
	if o == nil || o.PhoneNumberHome == nil {
		return nil, false
	}
	return o.PhoneNumberHome, true
}

// HasPhoneNumberHome returns a boolean if a field has been set.
func (o *PeopleSpecificPerson) HasPhoneNumberHome() bool {
	if o != nil && o.PhoneNumberHome != nil {
		return true
	}

	return false
}

// SetPhoneNumberHome gets a reference to the given string and assigns it to the PhoneNumberHome field.
func (o *PeopleSpecificPerson) SetPhoneNumberHome(v string) {
	o.PhoneNumberHome = &v
}

// GetPhoneNumberMobile returns the PhoneNumberMobile field value if set, zero value otherwise.
func (o *PeopleSpecificPerson) GetPhoneNumberMobile() string {
	if o == nil || o.PhoneNumberMobile == nil {
		var ret string
		return ret
	}
	return *o.PhoneNumberMobile
}

// GetPhoneNumberMobileOk returns a tuple with the PhoneNumberMobile field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PeopleSpecificPerson) GetPhoneNumberMobileOk() (*string, bool) {
	if o == nil || o.PhoneNumberMobile == nil {
		return nil, false
	}
	return o.PhoneNumberMobile, true
}

// HasPhoneNumberMobile returns a boolean if a field has been set.
func (o *PeopleSpecificPerson) HasPhoneNumberMobile() bool {
	if o != nil && o.PhoneNumberMobile != nil {
		return true
	}

	return false
}

// SetPhoneNumberMobile gets a reference to the given string and assigns it to the PhoneNumberMobile field.
func (o *PeopleSpecificPerson) SetPhoneNumberMobile(v string) {
	o.PhoneNumberMobile = &v
}

// GetPhoneNumberMobileParts returns the PhoneNumberMobileParts field value if set, zero value otherwise.
func (o *PeopleSpecificPerson) GetPhoneNumberMobileParts() PeoplePhoneParts {
	if o == nil || o.PhoneNumberMobileParts == nil {
		var ret PeoplePhoneParts
		return ret
	}
	return *o.PhoneNumberMobileParts
}

// GetPhoneNumberMobilePartsOk returns a tuple with the PhoneNumberMobileParts field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PeopleSpecificPerson) GetPhoneNumberMobilePartsOk() (*PeoplePhoneParts, bool) {
	if o == nil || o.PhoneNumberMobileParts == nil {
		return nil, false
	}
	return o.PhoneNumberMobileParts, true
}

// HasPhoneNumberMobileParts returns a boolean if a field has been set.
func (o *PeopleSpecificPerson) HasPhoneNumberMobileParts() bool {
	if o != nil && o.PhoneNumberMobileParts != nil {
		return true
	}

	return false
}

// SetPhoneNumberMobileParts gets a reference to the given PeoplePhoneParts and assigns it to the PhoneNumberMobileParts field.
func (o *PeopleSpecificPerson) SetPhoneNumberMobileParts(v PeoplePhoneParts) {
	o.PhoneNumberMobileParts = &v
}

// GetPhoneNumberOffice returns the PhoneNumberOffice field value if set, zero value otherwise.
func (o *PeopleSpecificPerson) GetPhoneNumberOffice() string {
	if o == nil || o.PhoneNumberOffice == nil {
		var ret string
		return ret
	}
	return *o.PhoneNumberOffice
}

// GetPhoneNumberOfficeOk returns a tuple with the PhoneNumberOffice field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PeopleSpecificPerson) GetPhoneNumberOfficeOk() (*string, bool) {
	if o == nil || o.PhoneNumberOffice == nil {
		return nil, false
	}
	return o.PhoneNumberOffice, true
}

// HasPhoneNumberOffice returns a boolean if a field has been set.
func (o *PeopleSpecificPerson) HasPhoneNumberOffice() bool {
	if o != nil && o.PhoneNumberOffice != nil {
		return true
	}

	return false
}

// SetPhoneNumberOffice gets a reference to the given string and assigns it to the PhoneNumberOffice field.
func (o *PeopleSpecificPerson) SetPhoneNumberOffice(v string) {
	o.PhoneNumberOffice = &v
}

// GetPhoneNumberOfficeExt returns the PhoneNumberOfficeExt field value if set, zero value otherwise.
func (o *PeopleSpecificPerson) GetPhoneNumberOfficeExt() string {
	if o == nil || o.PhoneNumberOfficeExt == nil {
		var ret string
		return ret
	}
	return *o.PhoneNumberOfficeExt
}

// GetPhoneNumberOfficeExtOk returns a tuple with the PhoneNumberOfficeExt field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PeopleSpecificPerson) GetPhoneNumberOfficeExtOk() (*string, bool) {
	if o == nil || o.PhoneNumberOfficeExt == nil {
		return nil, false
	}
	return o.PhoneNumberOfficeExt, true
}

// HasPhoneNumberOfficeExt returns a boolean if a field has been set.
func (o *PeopleSpecificPerson) HasPhoneNumberOfficeExt() bool {
	if o != nil && o.PhoneNumberOfficeExt != nil {
		return true
	}

	return false
}

// SetPhoneNumberOfficeExt gets a reference to the given string and assigns it to the PhoneNumberOfficeExt field.
func (o *PeopleSpecificPerson) SetPhoneNumberOfficeExt(v string) {
	o.PhoneNumberOfficeExt = &v
}

// GetPid returns the Pid field value if set, zero value otherwise.
func (o *PeopleSpecificPerson) GetPid() string {
	if o == nil || o.Pid == nil {
		var ret string
		return ret
	}
	return *o.Pid
}

// GetPidOk returns a tuple with the Pid field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PeopleSpecificPerson) GetPidOk() (*string, bool) {
	if o == nil || o.Pid == nil {
		return nil, false
	}
	return o.Pid, true
}

// HasPid returns a boolean if a field has been set.
func (o *PeopleSpecificPerson) HasPid() bool {
	if o != nil && o.Pid != nil {
		return true
	}

	return false
}

// SetPid gets a reference to the given string and assigns it to the Pid field.
func (o *PeopleSpecificPerson) SetPid(v string) {
	o.Pid = &v
}

// GetPreferences returns the Preferences field value if set, zero value otherwise.
func (o *PeopleSpecificPerson) GetPreferences() map[string]interface{} {
	if o == nil || o.Preferences == nil {
		var ret map[string]interface{}
		return ret
	}
	return *o.Preferences
}

// GetPreferencesOk returns a tuple with the Preferences field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PeopleSpecificPerson) GetPreferencesOk() (*map[string]interface{}, bool) {
	if o == nil || o.Preferences == nil {
		return nil, false
	}
	return o.Preferences, true
}

// HasPreferences returns a boolean if a field has been set.
func (o *PeopleSpecificPerson) HasPreferences() bool {
	if o != nil && o.Preferences != nil {
		return true
	}

	return false
}

// SetPreferences gets a reference to the given map[string]interface{} and assigns it to the Preferences field.
func (o *PeopleSpecificPerson) SetPreferences(v map[string]interface{}) {
	o.Preferences = &v
}

// GetPrivateNotes returns the PrivateNotes field value if set, zero value otherwise.
func (o *PeopleSpecificPerson) GetPrivateNotes() string {
	if o == nil || o.PrivateNotes == nil {
		var ret string
		return ret
	}
	return *o.PrivateNotes
}

// GetPrivateNotesOk returns a tuple with the PrivateNotes field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PeopleSpecificPerson) GetPrivateNotesOk() (*string, bool) {
	if o == nil || o.PrivateNotes == nil {
		return nil, false
	}
	return o.PrivateNotes, true
}

// HasPrivateNotes returns a boolean if a field has been set.
func (o *PeopleSpecificPerson) HasPrivateNotes() bool {
	if o != nil && o.PrivateNotes != nil {
		return true
	}

	return false
}

// SetPrivateNotes gets a reference to the given string and assigns it to the PrivateNotes field.
func (o *PeopleSpecificPerson) SetPrivateNotes(v string) {
	o.PrivateNotes = &v
}

// GetPrivateNotesText returns the PrivateNotesText field value if set, zero value otherwise.
func (o *PeopleSpecificPerson) GetPrivateNotesText() string {
	if o == nil || o.PrivateNotesText == nil {
		var ret string
		return ret
	}
	return *o.PrivateNotesText
}

// GetPrivateNotesTextOk returns a tuple with the PrivateNotesText field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PeopleSpecificPerson) GetPrivateNotesTextOk() (*string, bool) {
	if o == nil || o.PrivateNotesText == nil {
		return nil, false
	}
	return o.PrivateNotesText, true
}

// HasPrivateNotesText returns a boolean if a field has been set.
func (o *PeopleSpecificPerson) HasPrivateNotesText() bool {
	if o != nil && o.PrivateNotesText != nil {
		return true
	}

	return false
}

// SetPrivateNotesText gets a reference to the given string and assigns it to the PrivateNotesText field.
func (o *PeopleSpecificPerson) SetPrivateNotesText(v string) {
	o.PrivateNotesText = &v
}

// GetProfile returns the Profile field value if set, zero value otherwise.
func (o *PeopleSpecificPerson) GetProfile() string {
	if o == nil || o.Profile == nil {
		var ret string
		return ret
	}
	return *o.Profile
}

// GetProfileOk returns a tuple with the Profile field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PeopleSpecificPerson) GetProfileOk() (*string, bool) {
	if o == nil || o.Profile == nil {
		return nil, false
	}
	return o.Profile, true
}

// HasProfile returns a boolean if a field has been set.
func (o *PeopleSpecificPerson) HasProfile() bool {
	if o != nil && o.Profile != nil {
		return true
	}

	return false
}

// SetProfile gets a reference to the given string and assigns it to the Profile field.
func (o *PeopleSpecificPerson) SetProfile(v string) {
	o.Profile = &v
}

// GetProfileText returns the ProfileText field value if set, zero value otherwise.
func (o *PeopleSpecificPerson) GetProfileText() string {
	if o == nil || o.ProfileText == nil {
		var ret string
		return ret
	}
	return *o.ProfileText
}

// GetProfileTextOk returns a tuple with the ProfileText field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PeopleSpecificPerson) GetProfileTextOk() (*string, bool) {
	if o == nil || o.ProfileText == nil {
		return nil, false
	}
	return o.ProfileText, true
}

// HasProfileText returns a boolean if a field has been set.
func (o *PeopleSpecificPerson) HasProfileText() bool {
	if o != nil && o.ProfileText != nil {
		return true
	}

	return false
}

// SetProfileText gets a reference to the given string and assigns it to the ProfileText field.
func (o *PeopleSpecificPerson) SetProfileText(v string) {
	o.ProfileText = &v
}

// GetProjects returns the Projects field value if set, zero value otherwise.
func (o *PeopleSpecificPerson) GetProjects() map[string]interface{} {
	if o == nil || o.Projects == nil {
		var ret map[string]interface{}
		return ret
	}
	return *o.Projects
}

// GetProjectsOk returns a tuple with the Projects field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PeopleSpecificPerson) GetProjectsOk() (*map[string]interface{}, bool) {
	if o == nil || o.Projects == nil {
		return nil, false
	}
	return o.Projects, true
}

// HasProjects returns a boolean if a field has been set.
func (o *PeopleSpecificPerson) HasProjects() bool {
	if o != nil && o.Projects != nil {
		return true
	}

	return false
}

// SetProjects gets a reference to the given map[string]interface{} and assigns it to the Projects field.
func (o *PeopleSpecificPerson) SetProjects(v map[string]interface{}) {
	o.Projects = &v
}

// GetSharedUserFilter returns the SharedUserFilter field value if set, zero value otherwise.
func (o *PeopleSpecificPerson) GetSharedUserFilter() map[string]interface{} {
	if o == nil || o.SharedUserFilter == nil {
		var ret map[string]interface{}
		return ret
	}
	return *o.SharedUserFilter
}

// GetSharedUserFilterOk returns a tuple with the SharedUserFilter field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PeopleSpecificPerson) GetSharedUserFilterOk() (*map[string]interface{}, bool) {
	if o == nil || o.SharedUserFilter == nil {
		return nil, false
	}
	return o.SharedUserFilter, true
}

// HasSharedUserFilter returns a boolean if a field has been set.
func (o *PeopleSpecificPerson) HasSharedUserFilter() bool {
	if o != nil && o.SharedUserFilter != nil {
		return true
	}

	return false
}

// SetSharedUserFilter gets a reference to the given map[string]interface{} and assigns it to the SharedUserFilter field.
func (o *PeopleSpecificPerson) SetSharedUserFilter(v map[string]interface{}) {
	o.SharedUserFilter = &v
}

// GetSiteOwner returns the SiteOwner field value if set, zero value otherwise.
func (o *PeopleSpecificPerson) GetSiteOwner() bool {
	if o == nil || o.SiteOwner == nil {
		var ret bool
		return ret
	}
	return *o.SiteOwner
}

// GetSiteOwnerOk returns a tuple with the SiteOwner field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PeopleSpecificPerson) GetSiteOwnerOk() (*bool, bool) {
	if o == nil || o.SiteOwner == nil {
		return nil, false
	}
	return o.SiteOwner, true
}

// HasSiteOwner returns a boolean if a field has been set.
func (o *PeopleSpecificPerson) HasSiteOwner() bool {
	if o != nil && o.SiteOwner != nil {
		return true
	}

	return false
}

// SetSiteOwner gets a reference to the given bool and assigns it to the SiteOwner field.
func (o *PeopleSpecificPerson) SetSiteOwner(v bool) {
	o.SiteOwner = &v
}

// GetSocial returns the Social field value if set, zero value otherwise.
func (o *PeopleSpecificPerson) GetSocial() PeopleSocial {
	if o == nil || o.Social == nil {
		var ret PeopleSocial
		return ret
	}
	return *o.Social
}

// GetSocialOk returns a tuple with the Social field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PeopleSpecificPerson) GetSocialOk() (*PeopleSocial, bool) {
	if o == nil || o.Social == nil {
		return nil, false
	}
	return o.Social, true
}

// HasSocial returns a boolean if a field has been set.
func (o *PeopleSpecificPerson) HasSocial() bool {
	if o != nil && o.Social != nil {
		return true
	}

	return false
}

// SetSocial gets a reference to the given PeopleSocial and assigns it to the Social field.
func (o *PeopleSpecificPerson) SetSocial(v PeopleSocial) {
	o.Social = &v
}

// GetTags returns the Tags field value if set, zero value otherwise.
func (o *PeopleSpecificPerson) GetTags() []TwcoreTagsTag {
	if o == nil || o.Tags == nil {
		var ret []TwcoreTagsTag
		return ret
	}
	return *o.Tags
}

// GetTagsOk returns a tuple with the Tags field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PeopleSpecificPerson) GetTagsOk() (*[]TwcoreTagsTag, bool) {
	if o == nil || o.Tags == nil {
		return nil, false
	}
	return o.Tags, true
}

// HasTags returns a boolean if a field has been set.
func (o *PeopleSpecificPerson) HasTags() bool {
	if o != nil && o.Tags != nil {
		return true
	}

	return false
}

// SetTags gets a reference to the given []TwcoreTagsTag and assigns it to the Tags field.
func (o *PeopleSpecificPerson) SetTags(v []TwcoreTagsTag) {
	o.Tags = &v
}

// GetTasks returns the Tasks field value if set, zero value otherwise.
func (o *PeopleSpecificPerson) GetTasks() map[string]interface{} {
	if o == nil || o.Tasks == nil {
		var ret map[string]interface{}
		return ret
	}
	return *o.Tasks
}

// GetTasksOk returns a tuple with the Tasks field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PeopleSpecificPerson) GetTasksOk() (*map[string]interface{}, bool) {
	if o == nil || o.Tasks == nil {
		return nil, false
	}
	return o.Tasks, true
}

// HasTasks returns a boolean if a field has been set.
func (o *PeopleSpecificPerson) HasTasks() bool {
	if o != nil && o.Tasks != nil {
		return true
	}

	return false
}

// SetTasks gets a reference to the given map[string]interface{} and assigns it to the Tasks field.
func (o *PeopleSpecificPerson) SetTasks(v map[string]interface{}) {
	o.Tasks = &v
}

// GetTeams returns the Teams field value if set, zero value otherwise.
func (o *PeopleSpecificPerson) GetTeams() []string {
	if o == nil || o.Teams == nil {
		var ret []string
		return ret
	}
	return *o.Teams
}

// GetTeamsOk returns a tuple with the Teams field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PeopleSpecificPerson) GetTeamsOk() (*[]string, bool) {
	if o == nil || o.Teams == nil {
		return nil, false
	}
	return o.Teams, true
}

// HasTeams returns a boolean if a field has been set.
func (o *PeopleSpecificPerson) HasTeams() bool {
	if o != nil && o.Teams != nil {
		return true
	}

	return false
}

// SetTeams gets a reference to the given []string and assigns it to the Teams field.
func (o *PeopleSpecificPerson) SetTeams(v []string) {
	o.Teams = &v
}

// GetTeamsCount returns the TeamsCount field value if set, zero value otherwise.
func (o *PeopleSpecificPerson) GetTeamsCount() int32 {
	if o == nil || o.TeamsCount == nil {
		var ret int32
		return ret
	}
	return *o.TeamsCount
}

// GetTeamsCountOk returns a tuple with the TeamsCount field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PeopleSpecificPerson) GetTeamsCountOk() (*int32, bool) {
	if o == nil || o.TeamsCount == nil {
		return nil, false
	}
	return o.TeamsCount, true
}

// HasTeamsCount returns a boolean if a field has been set.
func (o *PeopleSpecificPerson) HasTeamsCount() bool {
	if o != nil && o.TeamsCount != nil {
		return true
	}

	return false
}

// SetTeamsCount gets a reference to the given int32 and assigns it to the TeamsCount field.
func (o *PeopleSpecificPerson) SetTeamsCount(v int32) {
	o.TeamsCount = &v
}

// GetTextFormat returns the TextFormat field value if set, zero value otherwise.
func (o *PeopleSpecificPerson) GetTextFormat() string {
	if o == nil || o.TextFormat == nil {
		var ret string
		return ret
	}
	return *o.TextFormat
}

// GetTextFormatOk returns a tuple with the TextFormat field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PeopleSpecificPerson) GetTextFormatOk() (*string, bool) {
	if o == nil || o.TextFormat == nil {
		return nil, false
	}
	return o.TextFormat, true
}

// HasTextFormat returns a boolean if a field has been set.
func (o *PeopleSpecificPerson) HasTextFormat() bool {
	if o != nil && o.TextFormat != nil {
		return true
	}

	return false
}

// SetTextFormat gets a reference to the given string and assigns it to the TextFormat field.
func (o *PeopleSpecificPerson) SetTextFormat(v string) {
	o.TextFormat = &v
}

// GetTitle returns the Title field value if set, zero value otherwise.
func (o *PeopleSpecificPerson) GetTitle() string {
	if o == nil || o.Title == nil {
		var ret string
		return ret
	}
	return *o.Title
}

// GetTitleOk returns a tuple with the Title field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PeopleSpecificPerson) GetTitleOk() (*string, bool) {
	if o == nil || o.Title == nil {
		return nil, false
	}
	return o.Title, true
}

// HasTitle returns a boolean if a field has been set.
func (o *PeopleSpecificPerson) HasTitle() bool {
	if o != nil && o.Title != nil {
		return true
	}

	return false
}

// SetTitle gets a reference to the given string and assigns it to the Title field.
func (o *PeopleSpecificPerson) SetTitle(v string) {
	o.Title = &v
}

// GetTwitter returns the Twitter field value if set, zero value otherwise.
func (o *PeopleSpecificPerson) GetTwitter() string {
	if o == nil || o.Twitter == nil {
		var ret string
		return ret
	}
	return *o.Twitter
}

// GetTwitterOk returns a tuple with the Twitter field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PeopleSpecificPerson) GetTwitterOk() (*string, bool) {
	if o == nil || o.Twitter == nil {
		return nil, false
	}
	return o.Twitter, true
}

// HasTwitter returns a boolean if a field has been set.
func (o *PeopleSpecificPerson) HasTwitter() bool {
	if o != nil && o.Twitter != nil {
		return true
	}

	return false
}

// SetTwitter gets a reference to the given string and assigns it to the Twitter field.
func (o *PeopleSpecificPerson) SetTwitter(v string) {
	o.Twitter = &v
}

// GetTwoFactorAuthEnabled returns the TwoFactorAuthEnabled field value if set, zero value otherwise.
func (o *PeopleSpecificPerson) GetTwoFactorAuthEnabled() bool {
	if o == nil || o.TwoFactorAuthEnabled == nil {
		var ret bool
		return ret
	}
	return *o.TwoFactorAuthEnabled
}

// GetTwoFactorAuthEnabledOk returns a tuple with the TwoFactorAuthEnabled field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PeopleSpecificPerson) GetTwoFactorAuthEnabledOk() (*bool, bool) {
	if o == nil || o.TwoFactorAuthEnabled == nil {
		return nil, false
	}
	return o.TwoFactorAuthEnabled, true
}

// HasTwoFactorAuthEnabled returns a boolean if a field has been set.
func (o *PeopleSpecificPerson) HasTwoFactorAuthEnabled() bool {
	if o != nil && o.TwoFactorAuthEnabled != nil {
		return true
	}

	return false
}

// SetTwoFactorAuthEnabled gets a reference to the given bool and assigns it to the TwoFactorAuthEnabled field.
func (o *PeopleSpecificPerson) SetTwoFactorAuthEnabled(v bool) {
	o.TwoFactorAuthEnabled = &v
}

// GetUseShorthandDurations returns the UseShorthandDurations field value if set, zero value otherwise.
func (o *PeopleSpecificPerson) GetUseShorthandDurations() bool {
	if o == nil || o.UseShorthandDurations == nil {
		var ret bool
		return ret
	}
	return *o.UseShorthandDurations
}

// GetUseShorthandDurationsOk returns a tuple with the UseShorthandDurations field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PeopleSpecificPerson) GetUseShorthandDurationsOk() (*bool, bool) {
	if o == nil || o.UseShorthandDurations == nil {
		return nil, false
	}
	return o.UseShorthandDurations, true
}

// HasUseShorthandDurations returns a boolean if a field has been set.
func (o *PeopleSpecificPerson) HasUseShorthandDurations() bool {
	if o != nil && o.UseShorthandDurations != nil {
		return true
	}

	return false
}

// SetUseShorthandDurations gets a reference to the given bool and assigns it to the UseShorthandDurations field.
func (o *PeopleSpecificPerson) SetUseShorthandDurations(v bool) {
	o.UseShorthandDurations = &v
}

// GetUserInvited returns the UserInvited field value if set, zero value otherwise.
func (o *PeopleSpecificPerson) GetUserInvited() int32 {
	if o == nil || o.UserInvited == nil {
		var ret int32
		return ret
	}
	return *o.UserInvited
}

// GetUserInvitedOk returns a tuple with the UserInvited field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PeopleSpecificPerson) GetUserInvitedOk() (*int32, bool) {
	if o == nil || o.UserInvited == nil {
		return nil, false
	}
	return o.UserInvited, true
}

// HasUserInvited returns a boolean if a field has been set.
func (o *PeopleSpecificPerson) HasUserInvited() bool {
	if o != nil && o.UserInvited != nil {
		return true
	}

	return false
}

// SetUserInvited gets a reference to the given int32 and assigns it to the UserInvited field.
func (o *PeopleSpecificPerson) SetUserInvited(v int32) {
	o.UserInvited = &v
}

// GetUserInvitedDate returns the UserInvitedDate field value if set, zero value otherwise.
func (o *PeopleSpecificPerson) GetUserInvitedDate() string {
	if o == nil || o.UserInvitedDate == nil {
		var ret string
		return ret
	}
	return *o.UserInvitedDate
}

// GetUserInvitedDateOk returns a tuple with the UserInvitedDate field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PeopleSpecificPerson) GetUserInvitedDateOk() (*string, bool) {
	if o == nil || o.UserInvitedDate == nil {
		return nil, false
	}
	return o.UserInvitedDate, true
}

// HasUserInvitedDate returns a boolean if a field has been set.
func (o *PeopleSpecificPerson) HasUserInvitedDate() bool {
	if o != nil && o.UserInvitedDate != nil {
		return true
	}

	return false
}

// SetUserInvitedDate gets a reference to the given string and assigns it to the UserInvitedDate field.
func (o *PeopleSpecificPerson) SetUserInvitedDate(v string) {
	o.UserInvitedDate = &v
}

// GetUserInvitedStatus returns the UserInvitedStatus field value if set, zero value otherwise.
func (o *PeopleSpecificPerson) GetUserInvitedStatus() string {
	if o == nil || o.UserInvitedStatus == nil {
		var ret string
		return ret
	}
	return *o.UserInvitedStatus
}

// GetUserInvitedStatusOk returns a tuple with the UserInvitedStatus field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PeopleSpecificPerson) GetUserInvitedStatusOk() (*string, bool) {
	if o == nil || o.UserInvitedStatus == nil {
		return nil, false
	}
	return o.UserInvitedStatus, true
}

// HasUserInvitedStatus returns a boolean if a field has been set.
func (o *PeopleSpecificPerson) HasUserInvitedStatus() bool {
	if o != nil && o.UserInvitedStatus != nil {
		return true
	}

	return false
}

// SetUserInvitedStatus gets a reference to the given string and assigns it to the UserInvitedStatus field.
func (o *PeopleSpecificPerson) SetUserInvitedStatus(v string) {
	o.UserInvitedStatus = &v
}

// GetUserName returns the UserName field value if set, zero value otherwise.
func (o *PeopleSpecificPerson) GetUserName() string {
	if o == nil || o.UserName == nil {
		var ret string
		return ret
	}
	return *o.UserName
}

// GetUserNameOk returns a tuple with the UserName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PeopleSpecificPerson) GetUserNameOk() (*string, bool) {
	if o == nil || o.UserName == nil {
		return nil, false
	}
	return o.UserName, true
}

// HasUserName returns a boolean if a field has been set.
func (o *PeopleSpecificPerson) HasUserName() bool {
	if o != nil && o.UserName != nil {
		return true
	}

	return false
}

// SetUserName gets a reference to the given string and assigns it to the UserName field.
func (o *PeopleSpecificPerson) SetUserName(v string) {
	o.UserName = &v
}

// GetUserType returns the UserType field value if set, zero value otherwise.
func (o *PeopleSpecificPerson) GetUserType() string {
	if o == nil || o.UserType == nil {
		var ret string
		return ret
	}
	return *o.UserType
}

// GetUserTypeOk returns a tuple with the UserType field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PeopleSpecificPerson) GetUserTypeOk() (*string, bool) {
	if o == nil || o.UserType == nil {
		return nil, false
	}
	return o.UserType, true
}

// HasUserType returns a boolean if a field has been set.
func (o *PeopleSpecificPerson) HasUserType() bool {
	if o != nil && o.UserType != nil {
		return true
	}

	return false
}

// SetUserType gets a reference to the given string and assigns it to the UserType field.
func (o *PeopleSpecificPerson) SetUserType(v string) {
	o.UserType = &v
}

// GetUserUUID returns the UserUUID field value if set, zero value otherwise.
func (o *PeopleSpecificPerson) GetUserUUID() string {
	if o == nil || o.UserUUID == nil {
		var ret string
		return ret
	}
	return *o.UserUUID
}

// GetUserUUIDOk returns a tuple with the UserUUID field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PeopleSpecificPerson) GetUserUUIDOk() (*string, bool) {
	if o == nil || o.UserUUID == nil {
		return nil, false
	}
	return o.UserUUID, true
}

// HasUserUUID returns a boolean if a field has been set.
func (o *PeopleSpecificPerson) HasUserUUID() bool {
	if o != nil && o.UserUUID != nil {
		return true
	}

	return false
}

// SetUserUUID gets a reference to the given string and assigns it to the UserUUID field.
func (o *PeopleSpecificPerson) SetUserUUID(v string) {
	o.UserUUID = &v
}

// GetWorkingHours returns the WorkingHours field value if set, zero value otherwise.
func (o *PeopleSpecificPerson) GetWorkingHours() PeopleWorkingHours {
	if o == nil || o.WorkingHours == nil {
		var ret PeopleWorkingHours
		return ret
	}
	return *o.WorkingHours
}

// GetWorkingHoursOk returns a tuple with the WorkingHours field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PeopleSpecificPerson) GetWorkingHoursOk() (*PeopleWorkingHours, bool) {
	if o == nil || o.WorkingHours == nil {
		return nil, false
	}
	return o.WorkingHours, true
}

// HasWorkingHours returns a boolean if a field has been set.
func (o *PeopleSpecificPerson) HasWorkingHours() bool {
	if o != nil && o.WorkingHours != nil {
		return true
	}

	return false
}

// SetWorkingHours gets a reference to the given PeopleWorkingHours and assigns it to the WorkingHours field.
func (o *PeopleSpecificPerson) SetWorkingHours(v PeopleWorkingHours) {
	o.WorkingHours = &v
}

func (o PeopleSpecificPerson) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.APIEnabled != nil {
		toSerialize["APIEnabled"] = o.APIEnabled
	}
	if o.Accounts != nil {
		toSerialize["accounts"] = o.Accounts
	}
	if o.Address != nil {
		toSerialize["address"] = o.Address
	}
	if o.Administrator != nil {
		toSerialize["administrator"] = o.Administrator
	}
	if o.Auth != nil {
		toSerialize["auth"] = o.Auth
	}
	if o.AvatarUrl != nil {
		toSerialize["avatarUrl"] = o.AvatarUrl
	}
	if o.CanManageProjectTemplates != nil {
		toSerialize["canManageProjectTemplates"] = o.CanManageProjectTemplates
	}
	if o.CanViewProjectTemplates != nil {
		toSerialize["canViewProjectTemplates"] = o.CanViewProjectTemplates
	}
	if o.Company != nil {
		toSerialize["company"] = o.Company
	}
	if o.CompanyId != nil {
		toSerialize["companyId"] = o.CompanyId
	}
	if o.CompanyName != nil {
		toSerialize["companyName"] = o.CompanyName
	}
	if o.CreatedAt != nil {
		toSerialize["createdAt"] = o.CreatedAt
	}
	if o.CurrentFeatureAnnouncement != nil {
		toSerialize["currentFeatureAnnouncement"] = o.CurrentFeatureAnnouncement
	}
	if o.DefaultFilters != nil {
		toSerialize["defaultFilters"] = o.DefaultFilters
	}
	if o.Deleted != nil {
		toSerialize["deleted"] = o.Deleted
	}
	if o.DocumentEditorInstalled != nil {
		toSerialize["documentEditorInstalled"] = o.DocumentEditorInstalled
	}
	if o.EmailAddress != nil {
		toSerialize["emailAddress"] = o.EmailAddress
	}
	if o.EmailAlt1 != nil {
		toSerialize["emailAlt1"] = o.EmailAlt1
	}
	if o.EmailAlt2 != nil {
		toSerialize["emailAlt2"] = o.EmailAlt2
	}
	if o.EmailAlt3 != nil {
		toSerialize["emailAlt3"] = o.EmailAlt3
	}
	if o.FeatureUpdatesCount != nil {
		toSerialize["featureUpdatesCount"] = o.FeatureUpdatesCount
	}
	if o.FirstName != nil {
		toSerialize["firstName"] = o.FirstName
	}
	if o.HasAccessToNewProjects != nil {
		toSerialize["hasAccessToNewProjects"] = o.HasAccessToNewProjects
	}
	if o.HasDeskAccount != nil {
		toSerialize["hasDeskAccount"] = o.HasDeskAccount
	}
	if o.HasFeatureUpdates != nil {
		toSerialize["hasFeatureUpdates"] = o.HasFeatureUpdates
	}
	if o.HubspotEnabled != nil {
		toSerialize["hubspotEnabled"] = o.HubspotEnabled
	}
	if o.Id != nil {
		toSerialize["id"] = o.Id
	}
	if o.ImHandle != nil {
		toSerialize["imHandle"] = o.ImHandle
	}
	if o.ImService != nil {
		toSerialize["imService"] = o.ImService
	}
	if o.Impersonating != nil {
		toSerialize["impersonating"] = o.Impersonating
	}
	if o.InOwnerCompany != nil {
		toSerialize["inOwnerCompany"] = o.InOwnerCompany
	}
	if o.InitialPage != nil {
		toSerialize["initialPage"] = o.InitialPage
	}
	if o.Integrations != nil {
		toSerialize["integrations"] = o.Integrations
	}
	if o.IsClockedIn != nil {
		toSerialize["isClockedIn"] = o.IsClockedIn
	}
	if o.LastActive != nil {
		toSerialize["lastActive"] = o.LastActive
	}
	if o.LastChangedOn != nil {
		toSerialize["lastChangedOn"] = o.LastChangedOn
	}
	if o.LastLogin != nil {
		toSerialize["lastLogin"] = o.LastLogin
	}
	if o.LastName != nil {
		toSerialize["lastName"] = o.LastName
	}
	if o.LengthOfDay != nil {
		toSerialize["lengthOfDay"] = o.LengthOfDay
	}
	if o.Localization != nil {
		toSerialize["localization"] = o.Localization
	}
	if o.LoginCount != nil {
		toSerialize["loginCount"] = o.LoginCount
	}
	if o.Milestones != nil {
		toSerialize["milestones"] = o.Milestones
	}
	if o.Notes != nil {
		toSerialize["notes"] = o.Notes
	}
	if o.Notifications != nil {
		toSerialize["notifications"] = o.Notifications
	}
	if o.NumActiveProjects != nil {
		toSerialize["numActiveProjects"] = o.NumActiveProjects
	}
	if o.OpenId != nil {
		toSerialize["openId"] = o.OpenId
	}
	if o.Permissions != nil {
		toSerialize["permissions"] = o.Permissions
	}
	if o.PhoneNumberFax != nil {
		toSerialize["phoneNumberFax"] = o.PhoneNumberFax
	}
	if o.PhoneNumberHome != nil {
		toSerialize["phoneNumberHome"] = o.PhoneNumberHome
	}
	if o.PhoneNumberMobile != nil {
		toSerialize["phoneNumberMobile"] = o.PhoneNumberMobile
	}
	if o.PhoneNumberMobileParts != nil {
		toSerialize["phoneNumberMobileParts"] = o.PhoneNumberMobileParts
	}
	if o.PhoneNumberOffice != nil {
		toSerialize["phoneNumberOffice"] = o.PhoneNumberOffice
	}
	if o.PhoneNumberOfficeExt != nil {
		toSerialize["phoneNumberOfficeExt"] = o.PhoneNumberOfficeExt
	}
	if o.Pid != nil {
		toSerialize["pid"] = o.Pid
	}
	if o.Preferences != nil {
		toSerialize["preferences"] = o.Preferences
	}
	if o.PrivateNotes != nil {
		toSerialize["privateNotes"] = o.PrivateNotes
	}
	if o.PrivateNotesText != nil {
		toSerialize["privateNotesText"] = o.PrivateNotesText
	}
	if o.Profile != nil {
		toSerialize["profile"] = o.Profile
	}
	if o.ProfileText != nil {
		toSerialize["profileText"] = o.ProfileText
	}
	if o.Projects != nil {
		toSerialize["projects"] = o.Projects
	}
	if o.SharedUserFilter != nil {
		toSerialize["sharedUserFilter"] = o.SharedUserFilter
	}
	if o.SiteOwner != nil {
		toSerialize["siteOwner"] = o.SiteOwner
	}
	if o.Social != nil {
		toSerialize["social"] = o.Social
	}
	if o.Tags != nil {
		toSerialize["tags"] = o.Tags
	}
	if o.Tasks != nil {
		toSerialize["tasks"] = o.Tasks
	}
	if o.Teams != nil {
		toSerialize["teams"] = o.Teams
	}
	if o.TeamsCount != nil {
		toSerialize["teamsCount"] = o.TeamsCount
	}
	if o.TextFormat != nil {
		toSerialize["textFormat"] = o.TextFormat
	}
	if o.Title != nil {
		toSerialize["title"] = o.Title
	}
	if o.Twitter != nil {
		toSerialize["twitter"] = o.Twitter
	}
	if o.TwoFactorAuthEnabled != nil {
		toSerialize["twoFactorAuthEnabled"] = o.TwoFactorAuthEnabled
	}
	if o.UseShorthandDurations != nil {
		toSerialize["useShorthandDurations"] = o.UseShorthandDurations
	}
	if o.UserInvited != nil {
		toSerialize["userInvited"] = o.UserInvited
	}
	if o.UserInvitedDate != nil {
		toSerialize["userInvitedDate"] = o.UserInvitedDate
	}
	if o.UserInvitedStatus != nil {
		toSerialize["userInvitedStatus"] = o.UserInvitedStatus
	}
	if o.UserName != nil {
		toSerialize["userName"] = o.UserName
	}
	if o.UserType != nil {
		toSerialize["userType"] = o.UserType
	}
	if o.UserUUID != nil {
		toSerialize["userUUID"] = o.UserUUID
	}
	if o.WorkingHours != nil {
		toSerialize["workingHours"] = o.WorkingHours
	}
	return json.Marshal(toSerialize)
}

type NullablePeopleSpecificPerson struct {
	value *PeopleSpecificPerson
	isSet bool
}

func (v NullablePeopleSpecificPerson) Get() *PeopleSpecificPerson {
	return v.value
}

func (v *NullablePeopleSpecificPerson) Set(val *PeopleSpecificPerson) {
	v.value = val
	v.isSet = true
}

func (v NullablePeopleSpecificPerson) IsSet() bool {
	return v.isSet
}

func (v *NullablePeopleSpecificPerson) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullablePeopleSpecificPerson(val *PeopleSpecificPerson) *NullablePeopleSpecificPerson {
	return &NullablePeopleSpecificPerson{value: val, isSet: true}
}

func (v NullablePeopleSpecificPerson) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullablePeopleSpecificPerson) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


