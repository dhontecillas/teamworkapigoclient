/*
 * Teamwork Projects API
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * API version: 
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package pmv1

import (
	"encoding/json"
)

// TasklistsIdTasksJsonTodoItemRepeatOptions struct for TasklistsIdTasksJsonTodoItemRepeatOptions
type TasklistsIdTasksJsonTodoItemRepeatOptions struct {
	MonthlyRepeatType *string `json:"monthlyRepeatType,omitempty"`
	RepeatEndDate *string `json:"repeatEndDate,omitempty"`
	RepeatsFreq *string `json:"repeatsFreq,omitempty"`
	Selecteddays *string `json:"selecteddays,omitempty"`
}

// NewTasklistsIdTasksJsonTodoItemRepeatOptions instantiates a new TasklistsIdTasksJsonTodoItemRepeatOptions object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewTasklistsIdTasksJsonTodoItemRepeatOptions() *TasklistsIdTasksJsonTodoItemRepeatOptions {
	this := TasklistsIdTasksJsonTodoItemRepeatOptions{}
	return &this
}

// NewTasklistsIdTasksJsonTodoItemRepeatOptionsWithDefaults instantiates a new TasklistsIdTasksJsonTodoItemRepeatOptions object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewTasklistsIdTasksJsonTodoItemRepeatOptionsWithDefaults() *TasklistsIdTasksJsonTodoItemRepeatOptions {
	this := TasklistsIdTasksJsonTodoItemRepeatOptions{}
	return &this
}

// GetMonthlyRepeatType returns the MonthlyRepeatType field value if set, zero value otherwise.
func (o *TasklistsIdTasksJsonTodoItemRepeatOptions) GetMonthlyRepeatType() string {
	if o == nil || o.MonthlyRepeatType == nil {
		var ret string
		return ret
	}
	return *o.MonthlyRepeatType
}

// GetMonthlyRepeatTypeOk returns a tuple with the MonthlyRepeatType field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TasklistsIdTasksJsonTodoItemRepeatOptions) GetMonthlyRepeatTypeOk() (*string, bool) {
	if o == nil || o.MonthlyRepeatType == nil {
		return nil, false
	}
	return o.MonthlyRepeatType, true
}

// HasMonthlyRepeatType returns a boolean if a field has been set.
func (o *TasklistsIdTasksJsonTodoItemRepeatOptions) HasMonthlyRepeatType() bool {
	if o != nil && o.MonthlyRepeatType != nil {
		return true
	}

	return false
}

// SetMonthlyRepeatType gets a reference to the given string and assigns it to the MonthlyRepeatType field.
func (o *TasklistsIdTasksJsonTodoItemRepeatOptions) SetMonthlyRepeatType(v string) {
	o.MonthlyRepeatType = &v
}

// GetRepeatEndDate returns the RepeatEndDate field value if set, zero value otherwise.
func (o *TasklistsIdTasksJsonTodoItemRepeatOptions) GetRepeatEndDate() string {
	if o == nil || o.RepeatEndDate == nil {
		var ret string
		return ret
	}
	return *o.RepeatEndDate
}

// GetRepeatEndDateOk returns a tuple with the RepeatEndDate field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TasklistsIdTasksJsonTodoItemRepeatOptions) GetRepeatEndDateOk() (*string, bool) {
	if o == nil || o.RepeatEndDate == nil {
		return nil, false
	}
	return o.RepeatEndDate, true
}

// HasRepeatEndDate returns a boolean if a field has been set.
func (o *TasklistsIdTasksJsonTodoItemRepeatOptions) HasRepeatEndDate() bool {
	if o != nil && o.RepeatEndDate != nil {
		return true
	}

	return false
}

// SetRepeatEndDate gets a reference to the given string and assigns it to the RepeatEndDate field.
func (o *TasklistsIdTasksJsonTodoItemRepeatOptions) SetRepeatEndDate(v string) {
	o.RepeatEndDate = &v
}

// GetRepeatsFreq returns the RepeatsFreq field value if set, zero value otherwise.
func (o *TasklistsIdTasksJsonTodoItemRepeatOptions) GetRepeatsFreq() string {
	if o == nil || o.RepeatsFreq == nil {
		var ret string
		return ret
	}
	return *o.RepeatsFreq
}

// GetRepeatsFreqOk returns a tuple with the RepeatsFreq field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TasklistsIdTasksJsonTodoItemRepeatOptions) GetRepeatsFreqOk() (*string, bool) {
	if o == nil || o.RepeatsFreq == nil {
		return nil, false
	}
	return o.RepeatsFreq, true
}

// HasRepeatsFreq returns a boolean if a field has been set.
func (o *TasklistsIdTasksJsonTodoItemRepeatOptions) HasRepeatsFreq() bool {
	if o != nil && o.RepeatsFreq != nil {
		return true
	}

	return false
}

// SetRepeatsFreq gets a reference to the given string and assigns it to the RepeatsFreq field.
func (o *TasklistsIdTasksJsonTodoItemRepeatOptions) SetRepeatsFreq(v string) {
	o.RepeatsFreq = &v
}

// GetSelecteddays returns the Selecteddays field value if set, zero value otherwise.
func (o *TasklistsIdTasksJsonTodoItemRepeatOptions) GetSelecteddays() string {
	if o == nil || o.Selecteddays == nil {
		var ret string
		return ret
	}
	return *o.Selecteddays
}

// GetSelecteddaysOk returns a tuple with the Selecteddays field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TasklistsIdTasksJsonTodoItemRepeatOptions) GetSelecteddaysOk() (*string, bool) {
	if o == nil || o.Selecteddays == nil {
		return nil, false
	}
	return o.Selecteddays, true
}

// HasSelecteddays returns a boolean if a field has been set.
func (o *TasklistsIdTasksJsonTodoItemRepeatOptions) HasSelecteddays() bool {
	if o != nil && o.Selecteddays != nil {
		return true
	}

	return false
}

// SetSelecteddays gets a reference to the given string and assigns it to the Selecteddays field.
func (o *TasklistsIdTasksJsonTodoItemRepeatOptions) SetSelecteddays(v string) {
	o.Selecteddays = &v
}

func (o TasklistsIdTasksJsonTodoItemRepeatOptions) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.MonthlyRepeatType != nil {
		toSerialize["monthlyRepeatType"] = o.MonthlyRepeatType
	}
	if o.RepeatEndDate != nil {
		toSerialize["repeatEndDate"] = o.RepeatEndDate
	}
	if o.RepeatsFreq != nil {
		toSerialize["repeatsFreq"] = o.RepeatsFreq
	}
	if o.Selecteddays != nil {
		toSerialize["selecteddays"] = o.Selecteddays
	}
	return json.Marshal(toSerialize)
}

type NullableTasklistsIdTasksJsonTodoItemRepeatOptions struct {
	value *TasklistsIdTasksJsonTodoItemRepeatOptions
	isSet bool
}

func (v NullableTasklistsIdTasksJsonTodoItemRepeatOptions) Get() *TasklistsIdTasksJsonTodoItemRepeatOptions {
	return v.value
}

func (v *NullableTasklistsIdTasksJsonTodoItemRepeatOptions) Set(val *TasklistsIdTasksJsonTodoItemRepeatOptions) {
	v.value = val
	v.isSet = true
}

func (v NullableTasklistsIdTasksJsonTodoItemRepeatOptions) IsSet() bool {
	return v.isSet
}

func (v *NullableTasklistsIdTasksJsonTodoItemRepeatOptions) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableTasklistsIdTasksJsonTodoItemRepeatOptions(val *TasklistsIdTasksJsonTodoItemRepeatOptions) *NullableTasklistsIdTasksJsonTodoItemRepeatOptions {
	return &NullableTasklistsIdTasksJsonTodoItemRepeatOptions{value: val, isSet: true}
}

func (v NullableTasklistsIdTasksJsonTodoItemRepeatOptions) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableTasklistsIdTasksJsonTodoItemRepeatOptions) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


