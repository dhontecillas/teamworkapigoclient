/*
 * Teamwork.com Projects API
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * API version: 3.0
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package projv3

import (
	"encoding/json"
)

// SummaryProjectResponse ProjectResponse contains all the information returned when sending a GET request to the summary endpoint (project).
type SummaryProjectResponse struct {
	Columns *SummaryColumnResponse `json:"columns,omitempty"`
	Events *SummaryEventResponse `json:"events,omitempty"`
	Health *SummaryHealthResponse `json:"health,omitempty"`
	Milestones *SummaryMilestoneResponse `json:"milestones,omitempty"`
	Risks *SummaryRiskResponse `json:"risks,omitempty"`
	Since *SummarySinceResponse `json:"since,omitempty"`
	Tasks *SummaryProjectTasksResponse `json:"tasks,omitempty"`
	Time *SummaryTimeResponse `json:"time,omitempty"`
	Unread *SummaryUnreadResponse `json:"unread,omitempty"`
}

// NewSummaryProjectResponse instantiates a new SummaryProjectResponse object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewSummaryProjectResponse() *SummaryProjectResponse {
	this := SummaryProjectResponse{}
	return &this
}

// NewSummaryProjectResponseWithDefaults instantiates a new SummaryProjectResponse object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewSummaryProjectResponseWithDefaults() *SummaryProjectResponse {
	this := SummaryProjectResponse{}
	return &this
}

// GetColumns returns the Columns field value if set, zero value otherwise.
func (o *SummaryProjectResponse) GetColumns() SummaryColumnResponse {
	if o == nil || o.Columns == nil {
		var ret SummaryColumnResponse
		return ret
	}
	return *o.Columns
}

// GetColumnsOk returns a tuple with the Columns field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SummaryProjectResponse) GetColumnsOk() (*SummaryColumnResponse, bool) {
	if o == nil || o.Columns == nil {
		return nil, false
	}
	return o.Columns, true
}

// HasColumns returns a boolean if a field has been set.
func (o *SummaryProjectResponse) HasColumns() bool {
	if o != nil && o.Columns != nil {
		return true
	}

	return false
}

// SetColumns gets a reference to the given SummaryColumnResponse and assigns it to the Columns field.
func (o *SummaryProjectResponse) SetColumns(v SummaryColumnResponse) {
	o.Columns = &v
}

// GetEvents returns the Events field value if set, zero value otherwise.
func (o *SummaryProjectResponse) GetEvents() SummaryEventResponse {
	if o == nil || o.Events == nil {
		var ret SummaryEventResponse
		return ret
	}
	return *o.Events
}

// GetEventsOk returns a tuple with the Events field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SummaryProjectResponse) GetEventsOk() (*SummaryEventResponse, bool) {
	if o == nil || o.Events == nil {
		return nil, false
	}
	return o.Events, true
}

// HasEvents returns a boolean if a field has been set.
func (o *SummaryProjectResponse) HasEvents() bool {
	if o != nil && o.Events != nil {
		return true
	}

	return false
}

// SetEvents gets a reference to the given SummaryEventResponse and assigns it to the Events field.
func (o *SummaryProjectResponse) SetEvents(v SummaryEventResponse) {
	o.Events = &v
}

// GetHealth returns the Health field value if set, zero value otherwise.
func (o *SummaryProjectResponse) GetHealth() SummaryHealthResponse {
	if o == nil || o.Health == nil {
		var ret SummaryHealthResponse
		return ret
	}
	return *o.Health
}

// GetHealthOk returns a tuple with the Health field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SummaryProjectResponse) GetHealthOk() (*SummaryHealthResponse, bool) {
	if o == nil || o.Health == nil {
		return nil, false
	}
	return o.Health, true
}

// HasHealth returns a boolean if a field has been set.
func (o *SummaryProjectResponse) HasHealth() bool {
	if o != nil && o.Health != nil {
		return true
	}

	return false
}

// SetHealth gets a reference to the given SummaryHealthResponse and assigns it to the Health field.
func (o *SummaryProjectResponse) SetHealth(v SummaryHealthResponse) {
	o.Health = &v
}

// GetMilestones returns the Milestones field value if set, zero value otherwise.
func (o *SummaryProjectResponse) GetMilestones() SummaryMilestoneResponse {
	if o == nil || o.Milestones == nil {
		var ret SummaryMilestoneResponse
		return ret
	}
	return *o.Milestones
}

// GetMilestonesOk returns a tuple with the Milestones field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SummaryProjectResponse) GetMilestonesOk() (*SummaryMilestoneResponse, bool) {
	if o == nil || o.Milestones == nil {
		return nil, false
	}
	return o.Milestones, true
}

// HasMilestones returns a boolean if a field has been set.
func (o *SummaryProjectResponse) HasMilestones() bool {
	if o != nil && o.Milestones != nil {
		return true
	}

	return false
}

// SetMilestones gets a reference to the given SummaryMilestoneResponse and assigns it to the Milestones field.
func (o *SummaryProjectResponse) SetMilestones(v SummaryMilestoneResponse) {
	o.Milestones = &v
}

// GetRisks returns the Risks field value if set, zero value otherwise.
func (o *SummaryProjectResponse) GetRisks() SummaryRiskResponse {
	if o == nil || o.Risks == nil {
		var ret SummaryRiskResponse
		return ret
	}
	return *o.Risks
}

// GetRisksOk returns a tuple with the Risks field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SummaryProjectResponse) GetRisksOk() (*SummaryRiskResponse, bool) {
	if o == nil || o.Risks == nil {
		return nil, false
	}
	return o.Risks, true
}

// HasRisks returns a boolean if a field has been set.
func (o *SummaryProjectResponse) HasRisks() bool {
	if o != nil && o.Risks != nil {
		return true
	}

	return false
}

// SetRisks gets a reference to the given SummaryRiskResponse and assigns it to the Risks field.
func (o *SummaryProjectResponse) SetRisks(v SummaryRiskResponse) {
	o.Risks = &v
}

// GetSince returns the Since field value if set, zero value otherwise.
func (o *SummaryProjectResponse) GetSince() SummarySinceResponse {
	if o == nil || o.Since == nil {
		var ret SummarySinceResponse
		return ret
	}
	return *o.Since
}

// GetSinceOk returns a tuple with the Since field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SummaryProjectResponse) GetSinceOk() (*SummarySinceResponse, bool) {
	if o == nil || o.Since == nil {
		return nil, false
	}
	return o.Since, true
}

// HasSince returns a boolean if a field has been set.
func (o *SummaryProjectResponse) HasSince() bool {
	if o != nil && o.Since != nil {
		return true
	}

	return false
}

// SetSince gets a reference to the given SummarySinceResponse and assigns it to the Since field.
func (o *SummaryProjectResponse) SetSince(v SummarySinceResponse) {
	o.Since = &v
}

// GetTasks returns the Tasks field value if set, zero value otherwise.
func (o *SummaryProjectResponse) GetTasks() SummaryProjectTasksResponse {
	if o == nil || o.Tasks == nil {
		var ret SummaryProjectTasksResponse
		return ret
	}
	return *o.Tasks
}

// GetTasksOk returns a tuple with the Tasks field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SummaryProjectResponse) GetTasksOk() (*SummaryProjectTasksResponse, bool) {
	if o == nil || o.Tasks == nil {
		return nil, false
	}
	return o.Tasks, true
}

// HasTasks returns a boolean if a field has been set.
func (o *SummaryProjectResponse) HasTasks() bool {
	if o != nil && o.Tasks != nil {
		return true
	}

	return false
}

// SetTasks gets a reference to the given SummaryProjectTasksResponse and assigns it to the Tasks field.
func (o *SummaryProjectResponse) SetTasks(v SummaryProjectTasksResponse) {
	o.Tasks = &v
}

// GetTime returns the Time field value if set, zero value otherwise.
func (o *SummaryProjectResponse) GetTime() SummaryTimeResponse {
	if o == nil || o.Time == nil {
		var ret SummaryTimeResponse
		return ret
	}
	return *o.Time
}

// GetTimeOk returns a tuple with the Time field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SummaryProjectResponse) GetTimeOk() (*SummaryTimeResponse, bool) {
	if o == nil || o.Time == nil {
		return nil, false
	}
	return o.Time, true
}

// HasTime returns a boolean if a field has been set.
func (o *SummaryProjectResponse) HasTime() bool {
	if o != nil && o.Time != nil {
		return true
	}

	return false
}

// SetTime gets a reference to the given SummaryTimeResponse and assigns it to the Time field.
func (o *SummaryProjectResponse) SetTime(v SummaryTimeResponse) {
	o.Time = &v
}

// GetUnread returns the Unread field value if set, zero value otherwise.
func (o *SummaryProjectResponse) GetUnread() SummaryUnreadResponse {
	if o == nil || o.Unread == nil {
		var ret SummaryUnreadResponse
		return ret
	}
	return *o.Unread
}

// GetUnreadOk returns a tuple with the Unread field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SummaryProjectResponse) GetUnreadOk() (*SummaryUnreadResponse, bool) {
	if o == nil || o.Unread == nil {
		return nil, false
	}
	return o.Unread, true
}

// HasUnread returns a boolean if a field has been set.
func (o *SummaryProjectResponse) HasUnread() bool {
	if o != nil && o.Unread != nil {
		return true
	}

	return false
}

// SetUnread gets a reference to the given SummaryUnreadResponse and assigns it to the Unread field.
func (o *SummaryProjectResponse) SetUnread(v SummaryUnreadResponse) {
	o.Unread = &v
}

func (o SummaryProjectResponse) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.Columns != nil {
		toSerialize["columns"] = o.Columns
	}
	if o.Events != nil {
		toSerialize["events"] = o.Events
	}
	if o.Health != nil {
		toSerialize["health"] = o.Health
	}
	if o.Milestones != nil {
		toSerialize["milestones"] = o.Milestones
	}
	if o.Risks != nil {
		toSerialize["risks"] = o.Risks
	}
	if o.Since != nil {
		toSerialize["since"] = o.Since
	}
	if o.Tasks != nil {
		toSerialize["tasks"] = o.Tasks
	}
	if o.Time != nil {
		toSerialize["time"] = o.Time
	}
	if o.Unread != nil {
		toSerialize["unread"] = o.Unread
	}
	return json.Marshal(toSerialize)
}

type NullableSummaryProjectResponse struct {
	value *SummaryProjectResponse
	isSet bool
}

func (v NullableSummaryProjectResponse) Get() *SummaryProjectResponse {
	return v.value
}

func (v *NullableSummaryProjectResponse) Set(val *SummaryProjectResponse) {
	v.value = val
	v.isSet = true
}

func (v NullableSummaryProjectResponse) IsSet() bool {
	return v.isSet
}

func (v *NullableSummaryProjectResponse) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableSummaryProjectResponse(val *SummaryProjectResponse) *NullableSummaryProjectResponse {
	return &NullableSummaryProjectResponse{value: val, isSet: true}
}

func (v NullableSummaryProjectResponse) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableSummaryProjectResponse) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


