/*
 * Teamwork Projects API
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * API version: 
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package pmv1

import (
	"encoding/json"
)

// CommentsIdJsonComment struct for CommentsIdJsonComment
type CommentsIdJsonComment struct {
	Body string `json:"body"`
	ContentType *string `json:"content-type,omitempty"`
	Isprivate *bool `json:"isprivate,omitempty"`
	Notify *string `json:"notify,omitempty"`
	PendingFileAttachments *string `json:"pendingFileAttachments,omitempty"`
}

// NewCommentsIdJsonComment instantiates a new CommentsIdJsonComment object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewCommentsIdJsonComment(body string) *CommentsIdJsonComment {
	this := CommentsIdJsonComment{}
	this.Body = body
	return &this
}

// NewCommentsIdJsonCommentWithDefaults instantiates a new CommentsIdJsonComment object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewCommentsIdJsonCommentWithDefaults() *CommentsIdJsonComment {
	this := CommentsIdJsonComment{}
	return &this
}

// GetBody returns the Body field value
func (o *CommentsIdJsonComment) GetBody() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Body
}

// GetBodyOk returns a tuple with the Body field value
// and a boolean to check if the value has been set.
func (o *CommentsIdJsonComment) GetBodyOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.Body, true
}

// SetBody sets field value
func (o *CommentsIdJsonComment) SetBody(v string) {
	o.Body = v
}

// GetContentType returns the ContentType field value if set, zero value otherwise.
func (o *CommentsIdJsonComment) GetContentType() string {
	if o == nil || o.ContentType == nil {
		var ret string
		return ret
	}
	return *o.ContentType
}

// GetContentTypeOk returns a tuple with the ContentType field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CommentsIdJsonComment) GetContentTypeOk() (*string, bool) {
	if o == nil || o.ContentType == nil {
		return nil, false
	}
	return o.ContentType, true
}

// HasContentType returns a boolean if a field has been set.
func (o *CommentsIdJsonComment) HasContentType() bool {
	if o != nil && o.ContentType != nil {
		return true
	}

	return false
}

// SetContentType gets a reference to the given string and assigns it to the ContentType field.
func (o *CommentsIdJsonComment) SetContentType(v string) {
	o.ContentType = &v
}

// GetIsprivate returns the Isprivate field value if set, zero value otherwise.
func (o *CommentsIdJsonComment) GetIsprivate() bool {
	if o == nil || o.Isprivate == nil {
		var ret bool
		return ret
	}
	return *o.Isprivate
}

// GetIsprivateOk returns a tuple with the Isprivate field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CommentsIdJsonComment) GetIsprivateOk() (*bool, bool) {
	if o == nil || o.Isprivate == nil {
		return nil, false
	}
	return o.Isprivate, true
}

// HasIsprivate returns a boolean if a field has been set.
func (o *CommentsIdJsonComment) HasIsprivate() bool {
	if o != nil && o.Isprivate != nil {
		return true
	}

	return false
}

// SetIsprivate gets a reference to the given bool and assigns it to the Isprivate field.
func (o *CommentsIdJsonComment) SetIsprivate(v bool) {
	o.Isprivate = &v
}

// GetNotify returns the Notify field value if set, zero value otherwise.
func (o *CommentsIdJsonComment) GetNotify() string {
	if o == nil || o.Notify == nil {
		var ret string
		return ret
	}
	return *o.Notify
}

// GetNotifyOk returns a tuple with the Notify field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CommentsIdJsonComment) GetNotifyOk() (*string, bool) {
	if o == nil || o.Notify == nil {
		return nil, false
	}
	return o.Notify, true
}

// HasNotify returns a boolean if a field has been set.
func (o *CommentsIdJsonComment) HasNotify() bool {
	if o != nil && o.Notify != nil {
		return true
	}

	return false
}

// SetNotify gets a reference to the given string and assigns it to the Notify field.
func (o *CommentsIdJsonComment) SetNotify(v string) {
	o.Notify = &v
}

// GetPendingFileAttachments returns the PendingFileAttachments field value if set, zero value otherwise.
func (o *CommentsIdJsonComment) GetPendingFileAttachments() string {
	if o == nil || o.PendingFileAttachments == nil {
		var ret string
		return ret
	}
	return *o.PendingFileAttachments
}

// GetPendingFileAttachmentsOk returns a tuple with the PendingFileAttachments field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CommentsIdJsonComment) GetPendingFileAttachmentsOk() (*string, bool) {
	if o == nil || o.PendingFileAttachments == nil {
		return nil, false
	}
	return o.PendingFileAttachments, true
}

// HasPendingFileAttachments returns a boolean if a field has been set.
func (o *CommentsIdJsonComment) HasPendingFileAttachments() bool {
	if o != nil && o.PendingFileAttachments != nil {
		return true
	}

	return false
}

// SetPendingFileAttachments gets a reference to the given string and assigns it to the PendingFileAttachments field.
func (o *CommentsIdJsonComment) SetPendingFileAttachments(v string) {
	o.PendingFileAttachments = &v
}

func (o CommentsIdJsonComment) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if true {
		toSerialize["body"] = o.Body
	}
	if o.ContentType != nil {
		toSerialize["content-type"] = o.ContentType
	}
	if o.Isprivate != nil {
		toSerialize["isprivate"] = o.Isprivate
	}
	if o.Notify != nil {
		toSerialize["notify"] = o.Notify
	}
	if o.PendingFileAttachments != nil {
		toSerialize["pendingFileAttachments"] = o.PendingFileAttachments
	}
	return json.Marshal(toSerialize)
}

type NullableCommentsIdJsonComment struct {
	value *CommentsIdJsonComment
	isSet bool
}

func (v NullableCommentsIdJsonComment) Get() *CommentsIdJsonComment {
	return v.value
}

func (v *NullableCommentsIdJsonComment) Set(val *CommentsIdJsonComment) {
	v.value = val
	v.isSet = true
}

func (v NullableCommentsIdJsonComment) IsSet() bool {
	return v.isSet
}

func (v *NullableCommentsIdJsonComment) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableCommentsIdJsonComment(val *CommentsIdJsonComment) *NullableCommentsIdJsonComment {
	return &NullableCommentsIdJsonComment{value: val, isSet: true}
}

func (v NullableCommentsIdJsonComment) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableCommentsIdJsonComment) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


