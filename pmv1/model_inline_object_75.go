/*
 * Teamwork Projects API
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * API version: 
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package pmv1

import (
	"encoding/json"
)

// InlineObject75 struct for InlineObject75
type InlineObject75 struct {
	TimeEntry *ProjectsIdTimeEntriesJsonTimeEntry `json:"time-entry,omitempty"`
}

// NewInlineObject75 instantiates a new InlineObject75 object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewInlineObject75() *InlineObject75 {
	this := InlineObject75{}
	return &this
}

// NewInlineObject75WithDefaults instantiates a new InlineObject75 object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewInlineObject75WithDefaults() *InlineObject75 {
	this := InlineObject75{}
	return &this
}

// GetTimeEntry returns the TimeEntry field value if set, zero value otherwise.
func (o *InlineObject75) GetTimeEntry() ProjectsIdTimeEntriesJsonTimeEntry {
	if o == nil || o.TimeEntry == nil {
		var ret ProjectsIdTimeEntriesJsonTimeEntry
		return ret
	}
	return *o.TimeEntry
}

// GetTimeEntryOk returns a tuple with the TimeEntry field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InlineObject75) GetTimeEntryOk() (*ProjectsIdTimeEntriesJsonTimeEntry, bool) {
	if o == nil || o.TimeEntry == nil {
		return nil, false
	}
	return o.TimeEntry, true
}

// HasTimeEntry returns a boolean if a field has been set.
func (o *InlineObject75) HasTimeEntry() bool {
	if o != nil && o.TimeEntry != nil {
		return true
	}

	return false
}

// SetTimeEntry gets a reference to the given ProjectsIdTimeEntriesJsonTimeEntry and assigns it to the TimeEntry field.
func (o *InlineObject75) SetTimeEntry(v ProjectsIdTimeEntriesJsonTimeEntry) {
	o.TimeEntry = &v
}

func (o InlineObject75) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.TimeEntry != nil {
		toSerialize["time-entry"] = o.TimeEntry
	}
	return json.Marshal(toSerialize)
}

type NullableInlineObject75 struct {
	value *InlineObject75
	isSet bool
}

func (v NullableInlineObject75) Get() *InlineObject75 {
	return v.value
}

func (v *NullableInlineObject75) Set(val *InlineObject75) {
	v.value = val
	v.isSet = true
}

func (v NullableInlineObject75) IsSet() bool {
	return v.isSet
}

func (v *NullableInlineObject75) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableInlineObject75(val *InlineObject75) *NullableInlineObject75 {
	return &NullableInlineObject75{value: val, isSet: true}
}

func (v NullableInlineObject75) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableInlineObject75) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


