/*
 * Teamwork.com Projects API
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * API version: 3.0
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package projv3

import (
	"encoding/json"
)

// SummaryMilestoneCountsResponse MilestoneCountsResponse contains counters for milestones.
type SummaryMilestoneCountsResponse struct {
	Active *int32 `json:"active,omitempty"`
	Complete *int32 `json:"complete,omitempty"`
	Late *int32 `json:"late,omitempty"`
	Today *int32 `json:"today,omitempty"`
	Upcoming *int32 `json:"upcoming,omitempty"`
}

// NewSummaryMilestoneCountsResponse instantiates a new SummaryMilestoneCountsResponse object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewSummaryMilestoneCountsResponse() *SummaryMilestoneCountsResponse {
	this := SummaryMilestoneCountsResponse{}
	return &this
}

// NewSummaryMilestoneCountsResponseWithDefaults instantiates a new SummaryMilestoneCountsResponse object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewSummaryMilestoneCountsResponseWithDefaults() *SummaryMilestoneCountsResponse {
	this := SummaryMilestoneCountsResponse{}
	return &this
}

// GetActive returns the Active field value if set, zero value otherwise.
func (o *SummaryMilestoneCountsResponse) GetActive() int32 {
	if o == nil || o.Active == nil {
		var ret int32
		return ret
	}
	return *o.Active
}

// GetActiveOk returns a tuple with the Active field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SummaryMilestoneCountsResponse) GetActiveOk() (*int32, bool) {
	if o == nil || o.Active == nil {
		return nil, false
	}
	return o.Active, true
}

// HasActive returns a boolean if a field has been set.
func (o *SummaryMilestoneCountsResponse) HasActive() bool {
	if o != nil && o.Active != nil {
		return true
	}

	return false
}

// SetActive gets a reference to the given int32 and assigns it to the Active field.
func (o *SummaryMilestoneCountsResponse) SetActive(v int32) {
	o.Active = &v
}

// GetComplete returns the Complete field value if set, zero value otherwise.
func (o *SummaryMilestoneCountsResponse) GetComplete() int32 {
	if o == nil || o.Complete == nil {
		var ret int32
		return ret
	}
	return *o.Complete
}

// GetCompleteOk returns a tuple with the Complete field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SummaryMilestoneCountsResponse) GetCompleteOk() (*int32, bool) {
	if o == nil || o.Complete == nil {
		return nil, false
	}
	return o.Complete, true
}

// HasComplete returns a boolean if a field has been set.
func (o *SummaryMilestoneCountsResponse) HasComplete() bool {
	if o != nil && o.Complete != nil {
		return true
	}

	return false
}

// SetComplete gets a reference to the given int32 and assigns it to the Complete field.
func (o *SummaryMilestoneCountsResponse) SetComplete(v int32) {
	o.Complete = &v
}

// GetLate returns the Late field value if set, zero value otherwise.
func (o *SummaryMilestoneCountsResponse) GetLate() int32 {
	if o == nil || o.Late == nil {
		var ret int32
		return ret
	}
	return *o.Late
}

// GetLateOk returns a tuple with the Late field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SummaryMilestoneCountsResponse) GetLateOk() (*int32, bool) {
	if o == nil || o.Late == nil {
		return nil, false
	}
	return o.Late, true
}

// HasLate returns a boolean if a field has been set.
func (o *SummaryMilestoneCountsResponse) HasLate() bool {
	if o != nil && o.Late != nil {
		return true
	}

	return false
}

// SetLate gets a reference to the given int32 and assigns it to the Late field.
func (o *SummaryMilestoneCountsResponse) SetLate(v int32) {
	o.Late = &v
}

// GetToday returns the Today field value if set, zero value otherwise.
func (o *SummaryMilestoneCountsResponse) GetToday() int32 {
	if o == nil || o.Today == nil {
		var ret int32
		return ret
	}
	return *o.Today
}

// GetTodayOk returns a tuple with the Today field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SummaryMilestoneCountsResponse) GetTodayOk() (*int32, bool) {
	if o == nil || o.Today == nil {
		return nil, false
	}
	return o.Today, true
}

// HasToday returns a boolean if a field has been set.
func (o *SummaryMilestoneCountsResponse) HasToday() bool {
	if o != nil && o.Today != nil {
		return true
	}

	return false
}

// SetToday gets a reference to the given int32 and assigns it to the Today field.
func (o *SummaryMilestoneCountsResponse) SetToday(v int32) {
	o.Today = &v
}

// GetUpcoming returns the Upcoming field value if set, zero value otherwise.
func (o *SummaryMilestoneCountsResponse) GetUpcoming() int32 {
	if o == nil || o.Upcoming == nil {
		var ret int32
		return ret
	}
	return *o.Upcoming
}

// GetUpcomingOk returns a tuple with the Upcoming field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SummaryMilestoneCountsResponse) GetUpcomingOk() (*int32, bool) {
	if o == nil || o.Upcoming == nil {
		return nil, false
	}
	return o.Upcoming, true
}

// HasUpcoming returns a boolean if a field has been set.
func (o *SummaryMilestoneCountsResponse) HasUpcoming() bool {
	if o != nil && o.Upcoming != nil {
		return true
	}

	return false
}

// SetUpcoming gets a reference to the given int32 and assigns it to the Upcoming field.
func (o *SummaryMilestoneCountsResponse) SetUpcoming(v int32) {
	o.Upcoming = &v
}

func (o SummaryMilestoneCountsResponse) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.Active != nil {
		toSerialize["active"] = o.Active
	}
	if o.Complete != nil {
		toSerialize["complete"] = o.Complete
	}
	if o.Late != nil {
		toSerialize["late"] = o.Late
	}
	if o.Today != nil {
		toSerialize["today"] = o.Today
	}
	if o.Upcoming != nil {
		toSerialize["upcoming"] = o.Upcoming
	}
	return json.Marshal(toSerialize)
}

type NullableSummaryMilestoneCountsResponse struct {
	value *SummaryMilestoneCountsResponse
	isSet bool
}

func (v NullableSummaryMilestoneCountsResponse) Get() *SummaryMilestoneCountsResponse {
	return v.value
}

func (v *NullableSummaryMilestoneCountsResponse) Set(val *SummaryMilestoneCountsResponse) {
	v.value = val
	v.isSet = true
}

func (v NullableSummaryMilestoneCountsResponse) IsSet() bool {
	return v.isSet
}

func (v *NullableSummaryMilestoneCountsResponse) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableSummaryMilestoneCountsResponse(val *SummaryMilestoneCountsResponse) *NullableSummaryMilestoneCountsResponse {
	return &NullableSummaryMilestoneCountsResponse{value: val, isSet: true}
}

func (v NullableSummaryMilestoneCountsResponse) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableSummaryMilestoneCountsResponse) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


