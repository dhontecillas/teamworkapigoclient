/*
 * Teamwork Projects API
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * API version: 
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package pmv1

import (
	"encoding/json"
)

// ProjectsIdLinksJsonLink struct for ProjectsIdLinksJsonLink
type ProjectsIdLinksJsonLink struct {
	CategoryId *string `json:"category-id,omitempty"`
	CategoryName *string `json:"category-name,omitempty"`
	Code *string `json:"code,omitempty"`
	Description *string `json:"description,omitempty"`
	Height *string `json:"height,omitempty"`
	Name *string `json:"name,omitempty"`
	// \"All\" - means notify all project users
	Notify *string `json:"notify,omitempty"`
	OpenInNewWindow *string `json:"open-in-new-window,omitempty"`
	Private *string `json:"private,omitempty"`
	Tags *string `json:"tags,omitempty"`
	Width *string `json:"width,omitempty"`
}

// NewProjectsIdLinksJsonLink instantiates a new ProjectsIdLinksJsonLink object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewProjectsIdLinksJsonLink() *ProjectsIdLinksJsonLink {
	this := ProjectsIdLinksJsonLink{}
	return &this
}

// NewProjectsIdLinksJsonLinkWithDefaults instantiates a new ProjectsIdLinksJsonLink object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewProjectsIdLinksJsonLinkWithDefaults() *ProjectsIdLinksJsonLink {
	this := ProjectsIdLinksJsonLink{}
	return &this
}

// GetCategoryId returns the CategoryId field value if set, zero value otherwise.
func (o *ProjectsIdLinksJsonLink) GetCategoryId() string {
	if o == nil || o.CategoryId == nil {
		var ret string
		return ret
	}
	return *o.CategoryId
}

// GetCategoryIdOk returns a tuple with the CategoryId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ProjectsIdLinksJsonLink) GetCategoryIdOk() (*string, bool) {
	if o == nil || o.CategoryId == nil {
		return nil, false
	}
	return o.CategoryId, true
}

// HasCategoryId returns a boolean if a field has been set.
func (o *ProjectsIdLinksJsonLink) HasCategoryId() bool {
	if o != nil && o.CategoryId != nil {
		return true
	}

	return false
}

// SetCategoryId gets a reference to the given string and assigns it to the CategoryId field.
func (o *ProjectsIdLinksJsonLink) SetCategoryId(v string) {
	o.CategoryId = &v
}

// GetCategoryName returns the CategoryName field value if set, zero value otherwise.
func (o *ProjectsIdLinksJsonLink) GetCategoryName() string {
	if o == nil || o.CategoryName == nil {
		var ret string
		return ret
	}
	return *o.CategoryName
}

// GetCategoryNameOk returns a tuple with the CategoryName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ProjectsIdLinksJsonLink) GetCategoryNameOk() (*string, bool) {
	if o == nil || o.CategoryName == nil {
		return nil, false
	}
	return o.CategoryName, true
}

// HasCategoryName returns a boolean if a field has been set.
func (o *ProjectsIdLinksJsonLink) HasCategoryName() bool {
	if o != nil && o.CategoryName != nil {
		return true
	}

	return false
}

// SetCategoryName gets a reference to the given string and assigns it to the CategoryName field.
func (o *ProjectsIdLinksJsonLink) SetCategoryName(v string) {
	o.CategoryName = &v
}

// GetCode returns the Code field value if set, zero value otherwise.
func (o *ProjectsIdLinksJsonLink) GetCode() string {
	if o == nil || o.Code == nil {
		var ret string
		return ret
	}
	return *o.Code
}

// GetCodeOk returns a tuple with the Code field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ProjectsIdLinksJsonLink) GetCodeOk() (*string, bool) {
	if o == nil || o.Code == nil {
		return nil, false
	}
	return o.Code, true
}

// HasCode returns a boolean if a field has been set.
func (o *ProjectsIdLinksJsonLink) HasCode() bool {
	if o != nil && o.Code != nil {
		return true
	}

	return false
}

// SetCode gets a reference to the given string and assigns it to the Code field.
func (o *ProjectsIdLinksJsonLink) SetCode(v string) {
	o.Code = &v
}

// GetDescription returns the Description field value if set, zero value otherwise.
func (o *ProjectsIdLinksJsonLink) GetDescription() string {
	if o == nil || o.Description == nil {
		var ret string
		return ret
	}
	return *o.Description
}

// GetDescriptionOk returns a tuple with the Description field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ProjectsIdLinksJsonLink) GetDescriptionOk() (*string, bool) {
	if o == nil || o.Description == nil {
		return nil, false
	}
	return o.Description, true
}

// HasDescription returns a boolean if a field has been set.
func (o *ProjectsIdLinksJsonLink) HasDescription() bool {
	if o != nil && o.Description != nil {
		return true
	}

	return false
}

// SetDescription gets a reference to the given string and assigns it to the Description field.
func (o *ProjectsIdLinksJsonLink) SetDescription(v string) {
	o.Description = &v
}

// GetHeight returns the Height field value if set, zero value otherwise.
func (o *ProjectsIdLinksJsonLink) GetHeight() string {
	if o == nil || o.Height == nil {
		var ret string
		return ret
	}
	return *o.Height
}

// GetHeightOk returns a tuple with the Height field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ProjectsIdLinksJsonLink) GetHeightOk() (*string, bool) {
	if o == nil || o.Height == nil {
		return nil, false
	}
	return o.Height, true
}

// HasHeight returns a boolean if a field has been set.
func (o *ProjectsIdLinksJsonLink) HasHeight() bool {
	if o != nil && o.Height != nil {
		return true
	}

	return false
}

// SetHeight gets a reference to the given string and assigns it to the Height field.
func (o *ProjectsIdLinksJsonLink) SetHeight(v string) {
	o.Height = &v
}

// GetName returns the Name field value if set, zero value otherwise.
func (o *ProjectsIdLinksJsonLink) GetName() string {
	if o == nil || o.Name == nil {
		var ret string
		return ret
	}
	return *o.Name
}

// GetNameOk returns a tuple with the Name field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ProjectsIdLinksJsonLink) GetNameOk() (*string, bool) {
	if o == nil || o.Name == nil {
		return nil, false
	}
	return o.Name, true
}

// HasName returns a boolean if a field has been set.
func (o *ProjectsIdLinksJsonLink) HasName() bool {
	if o != nil && o.Name != nil {
		return true
	}

	return false
}

// SetName gets a reference to the given string and assigns it to the Name field.
func (o *ProjectsIdLinksJsonLink) SetName(v string) {
	o.Name = &v
}

// GetNotify returns the Notify field value if set, zero value otherwise.
func (o *ProjectsIdLinksJsonLink) GetNotify() string {
	if o == nil || o.Notify == nil {
		var ret string
		return ret
	}
	return *o.Notify
}

// GetNotifyOk returns a tuple with the Notify field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ProjectsIdLinksJsonLink) GetNotifyOk() (*string, bool) {
	if o == nil || o.Notify == nil {
		return nil, false
	}
	return o.Notify, true
}

// HasNotify returns a boolean if a field has been set.
func (o *ProjectsIdLinksJsonLink) HasNotify() bool {
	if o != nil && o.Notify != nil {
		return true
	}

	return false
}

// SetNotify gets a reference to the given string and assigns it to the Notify field.
func (o *ProjectsIdLinksJsonLink) SetNotify(v string) {
	o.Notify = &v
}

// GetOpenInNewWindow returns the OpenInNewWindow field value if set, zero value otherwise.
func (o *ProjectsIdLinksJsonLink) GetOpenInNewWindow() string {
	if o == nil || o.OpenInNewWindow == nil {
		var ret string
		return ret
	}
	return *o.OpenInNewWindow
}

// GetOpenInNewWindowOk returns a tuple with the OpenInNewWindow field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ProjectsIdLinksJsonLink) GetOpenInNewWindowOk() (*string, bool) {
	if o == nil || o.OpenInNewWindow == nil {
		return nil, false
	}
	return o.OpenInNewWindow, true
}

// HasOpenInNewWindow returns a boolean if a field has been set.
func (o *ProjectsIdLinksJsonLink) HasOpenInNewWindow() bool {
	if o != nil && o.OpenInNewWindow != nil {
		return true
	}

	return false
}

// SetOpenInNewWindow gets a reference to the given string and assigns it to the OpenInNewWindow field.
func (o *ProjectsIdLinksJsonLink) SetOpenInNewWindow(v string) {
	o.OpenInNewWindow = &v
}

// GetPrivate returns the Private field value if set, zero value otherwise.
func (o *ProjectsIdLinksJsonLink) GetPrivate() string {
	if o == nil || o.Private == nil {
		var ret string
		return ret
	}
	return *o.Private
}

// GetPrivateOk returns a tuple with the Private field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ProjectsIdLinksJsonLink) GetPrivateOk() (*string, bool) {
	if o == nil || o.Private == nil {
		return nil, false
	}
	return o.Private, true
}

// HasPrivate returns a boolean if a field has been set.
func (o *ProjectsIdLinksJsonLink) HasPrivate() bool {
	if o != nil && o.Private != nil {
		return true
	}

	return false
}

// SetPrivate gets a reference to the given string and assigns it to the Private field.
func (o *ProjectsIdLinksJsonLink) SetPrivate(v string) {
	o.Private = &v
}

// GetTags returns the Tags field value if set, zero value otherwise.
func (o *ProjectsIdLinksJsonLink) GetTags() string {
	if o == nil || o.Tags == nil {
		var ret string
		return ret
	}
	return *o.Tags
}

// GetTagsOk returns a tuple with the Tags field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ProjectsIdLinksJsonLink) GetTagsOk() (*string, bool) {
	if o == nil || o.Tags == nil {
		return nil, false
	}
	return o.Tags, true
}

// HasTags returns a boolean if a field has been set.
func (o *ProjectsIdLinksJsonLink) HasTags() bool {
	if o != nil && o.Tags != nil {
		return true
	}

	return false
}

// SetTags gets a reference to the given string and assigns it to the Tags field.
func (o *ProjectsIdLinksJsonLink) SetTags(v string) {
	o.Tags = &v
}

// GetWidth returns the Width field value if set, zero value otherwise.
func (o *ProjectsIdLinksJsonLink) GetWidth() string {
	if o == nil || o.Width == nil {
		var ret string
		return ret
	}
	return *o.Width
}

// GetWidthOk returns a tuple with the Width field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ProjectsIdLinksJsonLink) GetWidthOk() (*string, bool) {
	if o == nil || o.Width == nil {
		return nil, false
	}
	return o.Width, true
}

// HasWidth returns a boolean if a field has been set.
func (o *ProjectsIdLinksJsonLink) HasWidth() bool {
	if o != nil && o.Width != nil {
		return true
	}

	return false
}

// SetWidth gets a reference to the given string and assigns it to the Width field.
func (o *ProjectsIdLinksJsonLink) SetWidth(v string) {
	o.Width = &v
}

func (o ProjectsIdLinksJsonLink) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.CategoryId != nil {
		toSerialize["category-id"] = o.CategoryId
	}
	if o.CategoryName != nil {
		toSerialize["category-name"] = o.CategoryName
	}
	if o.Code != nil {
		toSerialize["code"] = o.Code
	}
	if o.Description != nil {
		toSerialize["description"] = o.Description
	}
	if o.Height != nil {
		toSerialize["height"] = o.Height
	}
	if o.Name != nil {
		toSerialize["name"] = o.Name
	}
	if o.Notify != nil {
		toSerialize["notify"] = o.Notify
	}
	if o.OpenInNewWindow != nil {
		toSerialize["open-in-new-window"] = o.OpenInNewWindow
	}
	if o.Private != nil {
		toSerialize["private"] = o.Private
	}
	if o.Tags != nil {
		toSerialize["tags"] = o.Tags
	}
	if o.Width != nil {
		toSerialize["width"] = o.Width
	}
	return json.Marshal(toSerialize)
}

type NullableProjectsIdLinksJsonLink struct {
	value *ProjectsIdLinksJsonLink
	isSet bool
}

func (v NullableProjectsIdLinksJsonLink) Get() *ProjectsIdLinksJsonLink {
	return v.value
}

func (v *NullableProjectsIdLinksJsonLink) Set(val *ProjectsIdLinksJsonLink) {
	v.value = val
	v.isSet = true
}

func (v NullableProjectsIdLinksJsonLink) IsSet() bool {
	return v.isSet
}

func (v *NullableProjectsIdLinksJsonLink) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableProjectsIdLinksJsonLink(val *ProjectsIdLinksJsonLink) *NullableProjectsIdLinksJsonLink {
	return &NullableProjectsIdLinksJsonLink{value: val, isSet: true}
}

func (v NullableProjectsIdLinksJsonLink) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableProjectsIdLinksJsonLink) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


