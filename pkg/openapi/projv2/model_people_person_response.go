/*
 * Teamwork.com Projects API
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * API version: 3.0
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package projv2

import (
	"encoding/json"
)

// PeoplePersonResponse struct for PeoplePersonResponse
type PeoplePersonResponse struct {
	STATUS *string `json:"STATUS,omitempty"`
	Person *PeopleSpecificPerson `json:"person,omitempty"`
}

// NewPeoplePersonResponse instantiates a new PeoplePersonResponse object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewPeoplePersonResponse() *PeoplePersonResponse {
	this := PeoplePersonResponse{}
	return &this
}

// NewPeoplePersonResponseWithDefaults instantiates a new PeoplePersonResponse object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewPeoplePersonResponseWithDefaults() *PeoplePersonResponse {
	this := PeoplePersonResponse{}
	return &this
}

// GetSTATUS returns the STATUS field value if set, zero value otherwise.
func (o *PeoplePersonResponse) GetSTATUS() string {
	if o == nil || o.STATUS == nil {
		var ret string
		return ret
	}
	return *o.STATUS
}

// GetSTATUSOk returns a tuple with the STATUS field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PeoplePersonResponse) GetSTATUSOk() (*string, bool) {
	if o == nil || o.STATUS == nil {
		return nil, false
	}
	return o.STATUS, true
}

// HasSTATUS returns a boolean if a field has been set.
func (o *PeoplePersonResponse) HasSTATUS() bool {
	if o != nil && o.STATUS != nil {
		return true
	}

	return false
}

// SetSTATUS gets a reference to the given string and assigns it to the STATUS field.
func (o *PeoplePersonResponse) SetSTATUS(v string) {
	o.STATUS = &v
}

// GetPerson returns the Person field value if set, zero value otherwise.
func (o *PeoplePersonResponse) GetPerson() PeopleSpecificPerson {
	if o == nil || o.Person == nil {
		var ret PeopleSpecificPerson
		return ret
	}
	return *o.Person
}

// GetPersonOk returns a tuple with the Person field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PeoplePersonResponse) GetPersonOk() (*PeopleSpecificPerson, bool) {
	if o == nil || o.Person == nil {
		return nil, false
	}
	return o.Person, true
}

// HasPerson returns a boolean if a field has been set.
func (o *PeoplePersonResponse) HasPerson() bool {
	if o != nil && o.Person != nil {
		return true
	}

	return false
}

// SetPerson gets a reference to the given PeopleSpecificPerson and assigns it to the Person field.
func (o *PeoplePersonResponse) SetPerson(v PeopleSpecificPerson) {
	o.Person = &v
}

func (o PeoplePersonResponse) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.STATUS != nil {
		toSerialize["STATUS"] = o.STATUS
	}
	if o.Person != nil {
		toSerialize["person"] = o.Person
	}
	return json.Marshal(toSerialize)
}

type NullablePeoplePersonResponse struct {
	value *PeoplePersonResponse
	isSet bool
}

func (v NullablePeoplePersonResponse) Get() *PeoplePersonResponse {
	return v.value
}

func (v *NullablePeoplePersonResponse) Set(val *PeoplePersonResponse) {
	v.value = val
	v.isSet = true
}

func (v NullablePeoplePersonResponse) IsSet() bool {
	return v.isSet
}

func (v *NullablePeoplePersonResponse) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullablePeoplePersonResponse(val *PeoplePersonResponse) *NullablePeoplePersonResponse {
	return &NullablePeoplePersonResponse{value: val, isSet: true}
}

func (v NullablePeoplePersonResponse) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullablePeoplePersonResponse) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


