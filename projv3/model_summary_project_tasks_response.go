/*
 * Teamwork.com Projects API
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * API version: 3.0
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package projv3

import (
	"encoding/json"
)

// SummaryProjectTasksResponse ProjectTasksResponse contains groups of counters tasks.
type SummaryProjectTasksResponse struct {
	Everyone *SummaryTaskResponse `json:"everyone,omitempty"`
	Mine *SummaryTaskResponse `json:"mine,omitempty"`
	User *SummaryTaskResponse `json:"user,omitempty"`
}

// NewSummaryProjectTasksResponse instantiates a new SummaryProjectTasksResponse object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewSummaryProjectTasksResponse() *SummaryProjectTasksResponse {
	this := SummaryProjectTasksResponse{}
	return &this
}

// NewSummaryProjectTasksResponseWithDefaults instantiates a new SummaryProjectTasksResponse object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewSummaryProjectTasksResponseWithDefaults() *SummaryProjectTasksResponse {
	this := SummaryProjectTasksResponse{}
	return &this
}

// GetEveryone returns the Everyone field value if set, zero value otherwise.
func (o *SummaryProjectTasksResponse) GetEveryone() SummaryTaskResponse {
	if o == nil || o.Everyone == nil {
		var ret SummaryTaskResponse
		return ret
	}
	return *o.Everyone
}

// GetEveryoneOk returns a tuple with the Everyone field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SummaryProjectTasksResponse) GetEveryoneOk() (*SummaryTaskResponse, bool) {
	if o == nil || o.Everyone == nil {
		return nil, false
	}
	return o.Everyone, true
}

// HasEveryone returns a boolean if a field has been set.
func (o *SummaryProjectTasksResponse) HasEveryone() bool {
	if o != nil && o.Everyone != nil {
		return true
	}

	return false
}

// SetEveryone gets a reference to the given SummaryTaskResponse and assigns it to the Everyone field.
func (o *SummaryProjectTasksResponse) SetEveryone(v SummaryTaskResponse) {
	o.Everyone = &v
}

// GetMine returns the Mine field value if set, zero value otherwise.
func (o *SummaryProjectTasksResponse) GetMine() SummaryTaskResponse {
	if o == nil || o.Mine == nil {
		var ret SummaryTaskResponse
		return ret
	}
	return *o.Mine
}

// GetMineOk returns a tuple with the Mine field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SummaryProjectTasksResponse) GetMineOk() (*SummaryTaskResponse, bool) {
	if o == nil || o.Mine == nil {
		return nil, false
	}
	return o.Mine, true
}

// HasMine returns a boolean if a field has been set.
func (o *SummaryProjectTasksResponse) HasMine() bool {
	if o != nil && o.Mine != nil {
		return true
	}

	return false
}

// SetMine gets a reference to the given SummaryTaskResponse and assigns it to the Mine field.
func (o *SummaryProjectTasksResponse) SetMine(v SummaryTaskResponse) {
	o.Mine = &v
}

// GetUser returns the User field value if set, zero value otherwise.
func (o *SummaryProjectTasksResponse) GetUser() SummaryTaskResponse {
	if o == nil || o.User == nil {
		var ret SummaryTaskResponse
		return ret
	}
	return *o.User
}

// GetUserOk returns a tuple with the User field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SummaryProjectTasksResponse) GetUserOk() (*SummaryTaskResponse, bool) {
	if o == nil || o.User == nil {
		return nil, false
	}
	return o.User, true
}

// HasUser returns a boolean if a field has been set.
func (o *SummaryProjectTasksResponse) HasUser() bool {
	if o != nil && o.User != nil {
		return true
	}

	return false
}

// SetUser gets a reference to the given SummaryTaskResponse and assigns it to the User field.
func (o *SummaryProjectTasksResponse) SetUser(v SummaryTaskResponse) {
	o.User = &v
}

func (o SummaryProjectTasksResponse) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.Everyone != nil {
		toSerialize["everyone"] = o.Everyone
	}
	if o.Mine != nil {
		toSerialize["mine"] = o.Mine
	}
	if o.User != nil {
		toSerialize["user"] = o.User
	}
	return json.Marshal(toSerialize)
}

type NullableSummaryProjectTasksResponse struct {
	value *SummaryProjectTasksResponse
	isSet bool
}

func (v NullableSummaryProjectTasksResponse) Get() *SummaryProjectTasksResponse {
	return v.value
}

func (v *NullableSummaryProjectTasksResponse) Set(val *SummaryProjectTasksResponse) {
	v.value = val
	v.isSet = true
}

func (v NullableSummaryProjectTasksResponse) IsSet() bool {
	return v.isSet
}

func (v *NullableSummaryProjectTasksResponse) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableSummaryProjectTasksResponse(val *SummaryProjectTasksResponse) *NullableSummaryProjectTasksResponse {
	return &NullableSummaryProjectTasksResponse{value: val, isSet: true}
}

func (v NullableSummaryProjectTasksResponse) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableSummaryProjectTasksResponse) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


