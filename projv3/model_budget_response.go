/*
 * Teamwork.com Projects API
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * API version: 3.0
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package projv3

import (
	"encoding/json"
)

// BudgetResponse Response contains information about a specific budget.
type BudgetResponse struct {
	Budget *ViewProjectBudget `json:"budget,omitempty"`
	RepeatStatus *string `json:"repeatStatus,omitempty"`
}

// NewBudgetResponse instantiates a new BudgetResponse object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewBudgetResponse() *BudgetResponse {
	this := BudgetResponse{}
	return &this
}

// NewBudgetResponseWithDefaults instantiates a new BudgetResponse object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewBudgetResponseWithDefaults() *BudgetResponse {
	this := BudgetResponse{}
	return &this
}

// GetBudget returns the Budget field value if set, zero value otherwise.
func (o *BudgetResponse) GetBudget() ViewProjectBudget {
	if o == nil || o.Budget == nil {
		var ret ViewProjectBudget
		return ret
	}
	return *o.Budget
}

// GetBudgetOk returns a tuple with the Budget field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BudgetResponse) GetBudgetOk() (*ViewProjectBudget, bool) {
	if o == nil || o.Budget == nil {
		return nil, false
	}
	return o.Budget, true
}

// HasBudget returns a boolean if a field has been set.
func (o *BudgetResponse) HasBudget() bool {
	if o != nil && o.Budget != nil {
		return true
	}

	return false
}

// SetBudget gets a reference to the given ViewProjectBudget and assigns it to the Budget field.
func (o *BudgetResponse) SetBudget(v ViewProjectBudget) {
	o.Budget = &v
}

// GetRepeatStatus returns the RepeatStatus field value if set, zero value otherwise.
func (o *BudgetResponse) GetRepeatStatus() string {
	if o == nil || o.RepeatStatus == nil {
		var ret string
		return ret
	}
	return *o.RepeatStatus
}

// GetRepeatStatusOk returns a tuple with the RepeatStatus field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BudgetResponse) GetRepeatStatusOk() (*string, bool) {
	if o == nil || o.RepeatStatus == nil {
		return nil, false
	}
	return o.RepeatStatus, true
}

// HasRepeatStatus returns a boolean if a field has been set.
func (o *BudgetResponse) HasRepeatStatus() bool {
	if o != nil && o.RepeatStatus != nil {
		return true
	}

	return false
}

// SetRepeatStatus gets a reference to the given string and assigns it to the RepeatStatus field.
func (o *BudgetResponse) SetRepeatStatus(v string) {
	o.RepeatStatus = &v
}

func (o BudgetResponse) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.Budget != nil {
		toSerialize["budget"] = o.Budget
	}
	if o.RepeatStatus != nil {
		toSerialize["repeatStatus"] = o.RepeatStatus
	}
	return json.Marshal(toSerialize)
}

type NullableBudgetResponse struct {
	value *BudgetResponse
	isSet bool
}

func (v NullableBudgetResponse) Get() *BudgetResponse {
	return v.value
}

func (v *NullableBudgetResponse) Set(val *BudgetResponse) {
	v.value = val
	v.isSet = true
}

func (v NullableBudgetResponse) IsSet() bool {
	return v.isSet
}

func (v *NullableBudgetResponse) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableBudgetResponse(val *BudgetResponse) *NullableBudgetResponse {
	return &NullableBudgetResponse{value: val, isSet: true}
}

func (v NullableBudgetResponse) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableBudgetResponse) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


