/*
 * Teamwork Projects API
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * API version: 
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package pmv1

import (
	"encoding/json"
)

// InlineResponse200110 struct for InlineResponse200110
type InlineResponse200110 struct {
	STATUS *string `json:"STATUS,omitempty"`
	DatesSet *map[string]interface{} `json:"dates-set,omitempty"`
	RecurringDates *[]string `json:"recurring-dates,omitempty"`
}

// NewInlineResponse200110 instantiates a new InlineResponse200110 object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewInlineResponse200110() *InlineResponse200110 {
	this := InlineResponse200110{}
	return &this
}

// NewInlineResponse200110WithDefaults instantiates a new InlineResponse200110 object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewInlineResponse200110WithDefaults() *InlineResponse200110 {
	this := InlineResponse200110{}
	return &this
}

// GetSTATUS returns the STATUS field value if set, zero value otherwise.
func (o *InlineResponse200110) GetSTATUS() string {
	if o == nil || o.STATUS == nil {
		var ret string
		return ret
	}
	return *o.STATUS
}

// GetSTATUSOk returns a tuple with the STATUS field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InlineResponse200110) GetSTATUSOk() (*string, bool) {
	if o == nil || o.STATUS == nil {
		return nil, false
	}
	return o.STATUS, true
}

// HasSTATUS returns a boolean if a field has been set.
func (o *InlineResponse200110) HasSTATUS() bool {
	if o != nil && o.STATUS != nil {
		return true
	}

	return false
}

// SetSTATUS gets a reference to the given string and assigns it to the STATUS field.
func (o *InlineResponse200110) SetSTATUS(v string) {
	o.STATUS = &v
}

// GetDatesSet returns the DatesSet field value if set, zero value otherwise.
func (o *InlineResponse200110) GetDatesSet() map[string]interface{} {
	if o == nil || o.DatesSet == nil {
		var ret map[string]interface{}
		return ret
	}
	return *o.DatesSet
}

// GetDatesSetOk returns a tuple with the DatesSet field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InlineResponse200110) GetDatesSetOk() (*map[string]interface{}, bool) {
	if o == nil || o.DatesSet == nil {
		return nil, false
	}
	return o.DatesSet, true
}

// HasDatesSet returns a boolean if a field has been set.
func (o *InlineResponse200110) HasDatesSet() bool {
	if o != nil && o.DatesSet != nil {
		return true
	}

	return false
}

// SetDatesSet gets a reference to the given map[string]interface{} and assigns it to the DatesSet field.
func (o *InlineResponse200110) SetDatesSet(v map[string]interface{}) {
	o.DatesSet = &v
}

// GetRecurringDates returns the RecurringDates field value if set, zero value otherwise.
func (o *InlineResponse200110) GetRecurringDates() []string {
	if o == nil || o.RecurringDates == nil {
		var ret []string
		return ret
	}
	return *o.RecurringDates
}

// GetRecurringDatesOk returns a tuple with the RecurringDates field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InlineResponse200110) GetRecurringDatesOk() (*[]string, bool) {
	if o == nil || o.RecurringDates == nil {
		return nil, false
	}
	return o.RecurringDates, true
}

// HasRecurringDates returns a boolean if a field has been set.
func (o *InlineResponse200110) HasRecurringDates() bool {
	if o != nil && o.RecurringDates != nil {
		return true
	}

	return false
}

// SetRecurringDates gets a reference to the given []string and assigns it to the RecurringDates field.
func (o *InlineResponse200110) SetRecurringDates(v []string) {
	o.RecurringDates = &v
}

func (o InlineResponse200110) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.STATUS != nil {
		toSerialize["STATUS"] = o.STATUS
	}
	if o.DatesSet != nil {
		toSerialize["dates-set"] = o.DatesSet
	}
	if o.RecurringDates != nil {
		toSerialize["recurring-dates"] = o.RecurringDates
	}
	return json.Marshal(toSerialize)
}

type NullableInlineResponse200110 struct {
	value *InlineResponse200110
	isSet bool
}

func (v NullableInlineResponse200110) Get() *InlineResponse200110 {
	return v.value
}

func (v *NullableInlineResponse200110) Set(val *InlineResponse200110) {
	v.value = val
	v.isSet = true
}

func (v NullableInlineResponse200110) IsSet() bool {
	return v.isSet
}

func (v *NullableInlineResponse200110) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableInlineResponse200110(val *InlineResponse200110) *NullableInlineResponse200110 {
	return &NullableInlineResponse200110{value: val, isSet: true}
}

func (v NullableInlineResponse200110) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableInlineResponse200110) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


