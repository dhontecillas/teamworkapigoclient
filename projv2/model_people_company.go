/*
 * Teamwork.com Projects API
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * API version: 3.0
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package projv2

import (
	"encoding/json"
)

// PeopleCompany struct for PeopleCompany
type PeopleCompany struct {
	AddressLine1 *string `json:"addressLine1,omitempty"`
	AddressLine2 *string `json:"addressLine2,omitempty"`
	City *string `json:"city,omitempty"`
	Email1 *string `json:"email1,omitempty"`
	Email2 *string `json:"email2,omitempty"`
	Email3 *string `json:"email3,omitempty"`
	Fax *string `json:"fax,omitempty"`
	Id *int32 `json:"id,omitempty"`
	LogoURL *string `json:"logoURL,omitempty"`
	Name *string `json:"name,omitempty"`
	Phone *string `json:"phone,omitempty"`
	State *string `json:"state,omitempty"`
	Website *string `json:"website,omitempty"`
	Zip *string `json:"zip,omitempty"`
}

// NewPeopleCompany instantiates a new PeopleCompany object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewPeopleCompany() *PeopleCompany {
	this := PeopleCompany{}
	return &this
}

// NewPeopleCompanyWithDefaults instantiates a new PeopleCompany object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewPeopleCompanyWithDefaults() *PeopleCompany {
	this := PeopleCompany{}
	return &this
}

// GetAddressLine1 returns the AddressLine1 field value if set, zero value otherwise.
func (o *PeopleCompany) GetAddressLine1() string {
	if o == nil || o.AddressLine1 == nil {
		var ret string
		return ret
	}
	return *o.AddressLine1
}

// GetAddressLine1Ok returns a tuple with the AddressLine1 field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PeopleCompany) GetAddressLine1Ok() (*string, bool) {
	if o == nil || o.AddressLine1 == nil {
		return nil, false
	}
	return o.AddressLine1, true
}

// HasAddressLine1 returns a boolean if a field has been set.
func (o *PeopleCompany) HasAddressLine1() bool {
	if o != nil && o.AddressLine1 != nil {
		return true
	}

	return false
}

// SetAddressLine1 gets a reference to the given string and assigns it to the AddressLine1 field.
func (o *PeopleCompany) SetAddressLine1(v string) {
	o.AddressLine1 = &v
}

// GetAddressLine2 returns the AddressLine2 field value if set, zero value otherwise.
func (o *PeopleCompany) GetAddressLine2() string {
	if o == nil || o.AddressLine2 == nil {
		var ret string
		return ret
	}
	return *o.AddressLine2
}

// GetAddressLine2Ok returns a tuple with the AddressLine2 field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PeopleCompany) GetAddressLine2Ok() (*string, bool) {
	if o == nil || o.AddressLine2 == nil {
		return nil, false
	}
	return o.AddressLine2, true
}

// HasAddressLine2 returns a boolean if a field has been set.
func (o *PeopleCompany) HasAddressLine2() bool {
	if o != nil && o.AddressLine2 != nil {
		return true
	}

	return false
}

// SetAddressLine2 gets a reference to the given string and assigns it to the AddressLine2 field.
func (o *PeopleCompany) SetAddressLine2(v string) {
	o.AddressLine2 = &v
}

// GetCity returns the City field value if set, zero value otherwise.
func (o *PeopleCompany) GetCity() string {
	if o == nil || o.City == nil {
		var ret string
		return ret
	}
	return *o.City
}

// GetCityOk returns a tuple with the City field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PeopleCompany) GetCityOk() (*string, bool) {
	if o == nil || o.City == nil {
		return nil, false
	}
	return o.City, true
}

// HasCity returns a boolean if a field has been set.
func (o *PeopleCompany) HasCity() bool {
	if o != nil && o.City != nil {
		return true
	}

	return false
}

// SetCity gets a reference to the given string and assigns it to the City field.
func (o *PeopleCompany) SetCity(v string) {
	o.City = &v
}

// GetEmail1 returns the Email1 field value if set, zero value otherwise.
func (o *PeopleCompany) GetEmail1() string {
	if o == nil || o.Email1 == nil {
		var ret string
		return ret
	}
	return *o.Email1
}

// GetEmail1Ok returns a tuple with the Email1 field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PeopleCompany) GetEmail1Ok() (*string, bool) {
	if o == nil || o.Email1 == nil {
		return nil, false
	}
	return o.Email1, true
}

// HasEmail1 returns a boolean if a field has been set.
func (o *PeopleCompany) HasEmail1() bool {
	if o != nil && o.Email1 != nil {
		return true
	}

	return false
}

// SetEmail1 gets a reference to the given string and assigns it to the Email1 field.
func (o *PeopleCompany) SetEmail1(v string) {
	o.Email1 = &v
}

// GetEmail2 returns the Email2 field value if set, zero value otherwise.
func (o *PeopleCompany) GetEmail2() string {
	if o == nil || o.Email2 == nil {
		var ret string
		return ret
	}
	return *o.Email2
}

// GetEmail2Ok returns a tuple with the Email2 field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PeopleCompany) GetEmail2Ok() (*string, bool) {
	if o == nil || o.Email2 == nil {
		return nil, false
	}
	return o.Email2, true
}

// HasEmail2 returns a boolean if a field has been set.
func (o *PeopleCompany) HasEmail2() bool {
	if o != nil && o.Email2 != nil {
		return true
	}

	return false
}

// SetEmail2 gets a reference to the given string and assigns it to the Email2 field.
func (o *PeopleCompany) SetEmail2(v string) {
	o.Email2 = &v
}

// GetEmail3 returns the Email3 field value if set, zero value otherwise.
func (o *PeopleCompany) GetEmail3() string {
	if o == nil || o.Email3 == nil {
		var ret string
		return ret
	}
	return *o.Email3
}

// GetEmail3Ok returns a tuple with the Email3 field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PeopleCompany) GetEmail3Ok() (*string, bool) {
	if o == nil || o.Email3 == nil {
		return nil, false
	}
	return o.Email3, true
}

// HasEmail3 returns a boolean if a field has been set.
func (o *PeopleCompany) HasEmail3() bool {
	if o != nil && o.Email3 != nil {
		return true
	}

	return false
}

// SetEmail3 gets a reference to the given string and assigns it to the Email3 field.
func (o *PeopleCompany) SetEmail3(v string) {
	o.Email3 = &v
}

// GetFax returns the Fax field value if set, zero value otherwise.
func (o *PeopleCompany) GetFax() string {
	if o == nil || o.Fax == nil {
		var ret string
		return ret
	}
	return *o.Fax
}

// GetFaxOk returns a tuple with the Fax field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PeopleCompany) GetFaxOk() (*string, bool) {
	if o == nil || o.Fax == nil {
		return nil, false
	}
	return o.Fax, true
}

// HasFax returns a boolean if a field has been set.
func (o *PeopleCompany) HasFax() bool {
	if o != nil && o.Fax != nil {
		return true
	}

	return false
}

// SetFax gets a reference to the given string and assigns it to the Fax field.
func (o *PeopleCompany) SetFax(v string) {
	o.Fax = &v
}

// GetId returns the Id field value if set, zero value otherwise.
func (o *PeopleCompany) GetId() int32 {
	if o == nil || o.Id == nil {
		var ret int32
		return ret
	}
	return *o.Id
}

// GetIdOk returns a tuple with the Id field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PeopleCompany) GetIdOk() (*int32, bool) {
	if o == nil || o.Id == nil {
		return nil, false
	}
	return o.Id, true
}

// HasId returns a boolean if a field has been set.
func (o *PeopleCompany) HasId() bool {
	if o != nil && o.Id != nil {
		return true
	}

	return false
}

// SetId gets a reference to the given int32 and assigns it to the Id field.
func (o *PeopleCompany) SetId(v int32) {
	o.Id = &v
}

// GetLogoURL returns the LogoURL field value if set, zero value otherwise.
func (o *PeopleCompany) GetLogoURL() string {
	if o == nil || o.LogoURL == nil {
		var ret string
		return ret
	}
	return *o.LogoURL
}

// GetLogoURLOk returns a tuple with the LogoURL field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PeopleCompany) GetLogoURLOk() (*string, bool) {
	if o == nil || o.LogoURL == nil {
		return nil, false
	}
	return o.LogoURL, true
}

// HasLogoURL returns a boolean if a field has been set.
func (o *PeopleCompany) HasLogoURL() bool {
	if o != nil && o.LogoURL != nil {
		return true
	}

	return false
}

// SetLogoURL gets a reference to the given string and assigns it to the LogoURL field.
func (o *PeopleCompany) SetLogoURL(v string) {
	o.LogoURL = &v
}

// GetName returns the Name field value if set, zero value otherwise.
func (o *PeopleCompany) GetName() string {
	if o == nil || o.Name == nil {
		var ret string
		return ret
	}
	return *o.Name
}

// GetNameOk returns a tuple with the Name field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PeopleCompany) GetNameOk() (*string, bool) {
	if o == nil || o.Name == nil {
		return nil, false
	}
	return o.Name, true
}

// HasName returns a boolean if a field has been set.
func (o *PeopleCompany) HasName() bool {
	if o != nil && o.Name != nil {
		return true
	}

	return false
}

// SetName gets a reference to the given string and assigns it to the Name field.
func (o *PeopleCompany) SetName(v string) {
	o.Name = &v
}

// GetPhone returns the Phone field value if set, zero value otherwise.
func (o *PeopleCompany) GetPhone() string {
	if o == nil || o.Phone == nil {
		var ret string
		return ret
	}
	return *o.Phone
}

// GetPhoneOk returns a tuple with the Phone field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PeopleCompany) GetPhoneOk() (*string, bool) {
	if o == nil || o.Phone == nil {
		return nil, false
	}
	return o.Phone, true
}

// HasPhone returns a boolean if a field has been set.
func (o *PeopleCompany) HasPhone() bool {
	if o != nil && o.Phone != nil {
		return true
	}

	return false
}

// SetPhone gets a reference to the given string and assigns it to the Phone field.
func (o *PeopleCompany) SetPhone(v string) {
	o.Phone = &v
}

// GetState returns the State field value if set, zero value otherwise.
func (o *PeopleCompany) GetState() string {
	if o == nil || o.State == nil {
		var ret string
		return ret
	}
	return *o.State
}

// GetStateOk returns a tuple with the State field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PeopleCompany) GetStateOk() (*string, bool) {
	if o == nil || o.State == nil {
		return nil, false
	}
	return o.State, true
}

// HasState returns a boolean if a field has been set.
func (o *PeopleCompany) HasState() bool {
	if o != nil && o.State != nil {
		return true
	}

	return false
}

// SetState gets a reference to the given string and assigns it to the State field.
func (o *PeopleCompany) SetState(v string) {
	o.State = &v
}

// GetWebsite returns the Website field value if set, zero value otherwise.
func (o *PeopleCompany) GetWebsite() string {
	if o == nil || o.Website == nil {
		var ret string
		return ret
	}
	return *o.Website
}

// GetWebsiteOk returns a tuple with the Website field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PeopleCompany) GetWebsiteOk() (*string, bool) {
	if o == nil || o.Website == nil {
		return nil, false
	}
	return o.Website, true
}

// HasWebsite returns a boolean if a field has been set.
func (o *PeopleCompany) HasWebsite() bool {
	if o != nil && o.Website != nil {
		return true
	}

	return false
}

// SetWebsite gets a reference to the given string and assigns it to the Website field.
func (o *PeopleCompany) SetWebsite(v string) {
	o.Website = &v
}

// GetZip returns the Zip field value if set, zero value otherwise.
func (o *PeopleCompany) GetZip() string {
	if o == nil || o.Zip == nil {
		var ret string
		return ret
	}
	return *o.Zip
}

// GetZipOk returns a tuple with the Zip field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PeopleCompany) GetZipOk() (*string, bool) {
	if o == nil || o.Zip == nil {
		return nil, false
	}
	return o.Zip, true
}

// HasZip returns a boolean if a field has been set.
func (o *PeopleCompany) HasZip() bool {
	if o != nil && o.Zip != nil {
		return true
	}

	return false
}

// SetZip gets a reference to the given string and assigns it to the Zip field.
func (o *PeopleCompany) SetZip(v string) {
	o.Zip = &v
}

func (o PeopleCompany) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.AddressLine1 != nil {
		toSerialize["addressLine1"] = o.AddressLine1
	}
	if o.AddressLine2 != nil {
		toSerialize["addressLine2"] = o.AddressLine2
	}
	if o.City != nil {
		toSerialize["city"] = o.City
	}
	if o.Email1 != nil {
		toSerialize["email1"] = o.Email1
	}
	if o.Email2 != nil {
		toSerialize["email2"] = o.Email2
	}
	if o.Email3 != nil {
		toSerialize["email3"] = o.Email3
	}
	if o.Fax != nil {
		toSerialize["fax"] = o.Fax
	}
	if o.Id != nil {
		toSerialize["id"] = o.Id
	}
	if o.LogoURL != nil {
		toSerialize["logoURL"] = o.LogoURL
	}
	if o.Name != nil {
		toSerialize["name"] = o.Name
	}
	if o.Phone != nil {
		toSerialize["phone"] = o.Phone
	}
	if o.State != nil {
		toSerialize["state"] = o.State
	}
	if o.Website != nil {
		toSerialize["website"] = o.Website
	}
	if o.Zip != nil {
		toSerialize["zip"] = o.Zip
	}
	return json.Marshal(toSerialize)
}

type NullablePeopleCompany struct {
	value *PeopleCompany
	isSet bool
}

func (v NullablePeopleCompany) Get() *PeopleCompany {
	return v.value
}

func (v *NullablePeopleCompany) Set(val *PeopleCompany) {
	v.value = val
	v.isSet = true
}

func (v NullablePeopleCompany) IsSet() bool {
	return v.isSet
}

func (v *NullablePeopleCompany) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullablePeopleCompany(val *PeopleCompany) *NullablePeopleCompany {
	return &NullablePeopleCompany{value: val, isSet: true}
}

func (v NullablePeopleCompany) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullablePeopleCompany) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


