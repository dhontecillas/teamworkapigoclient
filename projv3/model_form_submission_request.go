/*
 * Teamwork.com Projects API
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * API version: 3.0
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package projv3

import (
	"encoding/json"
)

// FormSubmissionRequest SubmissionRequest contains information of a form submitted by a user.
type FormSubmissionRequest struct {
	Form *FormSubmission `json:"form,omitempty"`
}

// NewFormSubmissionRequest instantiates a new FormSubmissionRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewFormSubmissionRequest() *FormSubmissionRequest {
	this := FormSubmissionRequest{}
	return &this
}

// NewFormSubmissionRequestWithDefaults instantiates a new FormSubmissionRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewFormSubmissionRequestWithDefaults() *FormSubmissionRequest {
	this := FormSubmissionRequest{}
	return &this
}

// GetForm returns the Form field value if set, zero value otherwise.
func (o *FormSubmissionRequest) GetForm() FormSubmission {
	if o == nil || o.Form == nil {
		var ret FormSubmission
		return ret
	}
	return *o.Form
}

// GetFormOk returns a tuple with the Form field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *FormSubmissionRequest) GetFormOk() (*FormSubmission, bool) {
	if o == nil || o.Form == nil {
		return nil, false
	}
	return o.Form, true
}

// HasForm returns a boolean if a field has been set.
func (o *FormSubmissionRequest) HasForm() bool {
	if o != nil && o.Form != nil {
		return true
	}

	return false
}

// SetForm gets a reference to the given FormSubmission and assigns it to the Form field.
func (o *FormSubmissionRequest) SetForm(v FormSubmission) {
	o.Form = &v
}

func (o FormSubmissionRequest) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.Form != nil {
		toSerialize["form"] = o.Form
	}
	return json.Marshal(toSerialize)
}

type NullableFormSubmissionRequest struct {
	value *FormSubmissionRequest
	isSet bool
}

func (v NullableFormSubmissionRequest) Get() *FormSubmissionRequest {
	return v.value
}

func (v *NullableFormSubmissionRequest) Set(val *FormSubmissionRequest) {
	v.value = val
	v.isSet = true
}

func (v NullableFormSubmissionRequest) IsSet() bool {
	return v.isSet
}

func (v *NullableFormSubmissionRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableFormSubmissionRequest(val *FormSubmissionRequest) *NullableFormSubmissionRequest {
	return &NullableFormSubmissionRequest{value: val, isSet: true}
}

func (v NullableFormSubmissionRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableFormSubmissionRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


