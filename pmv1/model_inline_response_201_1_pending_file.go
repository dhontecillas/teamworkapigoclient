/*
 * Teamwork Projects API
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * API version: 
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package pmv1

import (
	"encoding/json"
)

// InlineResponse2011PendingFile struct for InlineResponse2011PendingFile
type InlineResponse2011PendingFile struct {
	Ref *string `json:"ref,omitempty"`
}

// NewInlineResponse2011PendingFile instantiates a new InlineResponse2011PendingFile object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewInlineResponse2011PendingFile() *InlineResponse2011PendingFile {
	this := InlineResponse2011PendingFile{}
	return &this
}

// NewInlineResponse2011PendingFileWithDefaults instantiates a new InlineResponse2011PendingFile object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewInlineResponse2011PendingFileWithDefaults() *InlineResponse2011PendingFile {
	this := InlineResponse2011PendingFile{}
	return &this
}

// GetRef returns the Ref field value if set, zero value otherwise.
func (o *InlineResponse2011PendingFile) GetRef() string {
	if o == nil || o.Ref == nil {
		var ret string
		return ret
	}
	return *o.Ref
}

// GetRefOk returns a tuple with the Ref field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InlineResponse2011PendingFile) GetRefOk() (*string, bool) {
	if o == nil || o.Ref == nil {
		return nil, false
	}
	return o.Ref, true
}

// HasRef returns a boolean if a field has been set.
func (o *InlineResponse2011PendingFile) HasRef() bool {
	if o != nil && o.Ref != nil {
		return true
	}

	return false
}

// SetRef gets a reference to the given string and assigns it to the Ref field.
func (o *InlineResponse2011PendingFile) SetRef(v string) {
	o.Ref = &v
}

func (o InlineResponse2011PendingFile) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.Ref != nil {
		toSerialize["ref"] = o.Ref
	}
	return json.Marshal(toSerialize)
}

type NullableInlineResponse2011PendingFile struct {
	value *InlineResponse2011PendingFile
	isSet bool
}

func (v NullableInlineResponse2011PendingFile) Get() *InlineResponse2011PendingFile {
	return v.value
}

func (v *NullableInlineResponse2011PendingFile) Set(val *InlineResponse2011PendingFile) {
	v.value = val
	v.isSet = true
}

func (v NullableInlineResponse2011PendingFile) IsSet() bool {
	return v.isSet
}

func (v *NullableInlineResponse2011PendingFile) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableInlineResponse2011PendingFile(val *InlineResponse2011PendingFile) *NullableInlineResponse2011PendingFile {
	return &NullableInlineResponse2011PendingFile{value: val, isSet: true}
}

func (v NullableInlineResponse2011PendingFile) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableInlineResponse2011PendingFile) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


