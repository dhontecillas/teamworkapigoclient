/*
 * Teamwork.com Projects API
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * API version: 3.0
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package projv3

import (
	"encoding/json"
)

// ViewMilestone Milestone contains all the information returned from a milestone.
type ViewMilestone struct {
	CanComplete *bool `json:"canComplete,omitempty"`
	// permissions
	CanEdit *bool `json:"canEdit,omitempty"`
	ChangeFollowerIds *[]int32 `json:"changeFollowerIds,omitempty"`
	ChangeFollowers *[]ViewRelationship `json:"changeFollowers,omitempty"`
	CommentFollowerIds *[]int32 `json:"commentFollowerIds,omitempty"`
	CommentFollowers *[]ViewRelationship `json:"commentFollowers,omitempty"`
	CommentsCount *int32 `json:"commentsCount,omitempty"`
	Completed *bool `json:"completed,omitempty"`
	CompletedBy *int32 `json:"completedBy,omitempty"`
	CompletedOn *string `json:"completedOn,omitempty"`
	CompleterId *int32 `json:"completerId,omitempty"`
	CreatedBy *int32 `json:"createdBy,omitempty"`
	CreatedOn *string `json:"createdOn,omitempty"`
	CreatorUserId *int32 `json:"creatorUserId,omitempty"`
	Deadline *string `json:"deadline,omitempty"`
	Description *string `json:"description,omitempty"`
	Id *int32 `json:"id,omitempty"`
	LastChangedOn *string `json:"lastChangedOn,omitempty"`
	Lockdown *ViewRelationship `json:"lockdown,omitempty"`
	LockdownId *int32 `json:"lockdownId,omitempty"`
	Name *string `json:"name,omitempty"`
	NumCommentsRead *int32 `json:"numCommentsRead,omitempty"`
	OriginalDueDate *string `json:"originalDueDate,omitempty"`
	PercentageComplete *int32 `json:"percentageComplete,omitempty"`
	PercentageTasksCompleted *int32 `json:"percentageTasksCompleted,omitempty"`
	Private *bool `json:"private,omitempty"`
	Project *ViewRelationship `json:"project,omitempty"`
	ProjectId *int32 `json:"projectId,omitempty"`
	Reminder *bool `json:"reminder,omitempty"`
	ResponsibleParties *[]ViewRelationship `json:"responsibleParties,omitempty"`
	// optional fields that are returned only when querying a milestone endpoint
	ResponsiblePartyIds *[]int32 `json:"responsiblePartyIds,omitempty"`
	Status *string `json:"status,omitempty"`
	TagIds *[]int32 `json:"tagIds,omitempty"`
	Tags *[]ViewRelationship `json:"tags,omitempty"`
	TasklistIds *[]int32 `json:"tasklistIds,omitempty"`
	Tasklists *[]ViewRelationship `json:"tasklists,omitempty"`
	UserFollowingChanges *bool `json:"userFollowingChanges,omitempty"`
	UserFollowingComments *bool `json:"userFollowingComments,omitempty"`
}

// NewViewMilestone instantiates a new ViewMilestone object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewViewMilestone() *ViewMilestone {
	this := ViewMilestone{}
	return &this
}

// NewViewMilestoneWithDefaults instantiates a new ViewMilestone object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewViewMilestoneWithDefaults() *ViewMilestone {
	this := ViewMilestone{}
	return &this
}

// GetCanComplete returns the CanComplete field value if set, zero value otherwise.
func (o *ViewMilestone) GetCanComplete() bool {
	if o == nil || o.CanComplete == nil {
		var ret bool
		return ret
	}
	return *o.CanComplete
}

// GetCanCompleteOk returns a tuple with the CanComplete field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ViewMilestone) GetCanCompleteOk() (*bool, bool) {
	if o == nil || o.CanComplete == nil {
		return nil, false
	}
	return o.CanComplete, true
}

// HasCanComplete returns a boolean if a field has been set.
func (o *ViewMilestone) HasCanComplete() bool {
	if o != nil && o.CanComplete != nil {
		return true
	}

	return false
}

// SetCanComplete gets a reference to the given bool and assigns it to the CanComplete field.
func (o *ViewMilestone) SetCanComplete(v bool) {
	o.CanComplete = &v
}

// GetCanEdit returns the CanEdit field value if set, zero value otherwise.
func (o *ViewMilestone) GetCanEdit() bool {
	if o == nil || o.CanEdit == nil {
		var ret bool
		return ret
	}
	return *o.CanEdit
}

// GetCanEditOk returns a tuple with the CanEdit field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ViewMilestone) GetCanEditOk() (*bool, bool) {
	if o == nil || o.CanEdit == nil {
		return nil, false
	}
	return o.CanEdit, true
}

// HasCanEdit returns a boolean if a field has been set.
func (o *ViewMilestone) HasCanEdit() bool {
	if o != nil && o.CanEdit != nil {
		return true
	}

	return false
}

// SetCanEdit gets a reference to the given bool and assigns it to the CanEdit field.
func (o *ViewMilestone) SetCanEdit(v bool) {
	o.CanEdit = &v
}

// GetChangeFollowerIds returns the ChangeFollowerIds field value if set, zero value otherwise.
func (o *ViewMilestone) GetChangeFollowerIds() []int32 {
	if o == nil || o.ChangeFollowerIds == nil {
		var ret []int32
		return ret
	}
	return *o.ChangeFollowerIds
}

// GetChangeFollowerIdsOk returns a tuple with the ChangeFollowerIds field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ViewMilestone) GetChangeFollowerIdsOk() (*[]int32, bool) {
	if o == nil || o.ChangeFollowerIds == nil {
		return nil, false
	}
	return o.ChangeFollowerIds, true
}

// HasChangeFollowerIds returns a boolean if a field has been set.
func (o *ViewMilestone) HasChangeFollowerIds() bool {
	if o != nil && o.ChangeFollowerIds != nil {
		return true
	}

	return false
}

// SetChangeFollowerIds gets a reference to the given []int32 and assigns it to the ChangeFollowerIds field.
func (o *ViewMilestone) SetChangeFollowerIds(v []int32) {
	o.ChangeFollowerIds = &v
}

// GetChangeFollowers returns the ChangeFollowers field value if set, zero value otherwise.
func (o *ViewMilestone) GetChangeFollowers() []ViewRelationship {
	if o == nil || o.ChangeFollowers == nil {
		var ret []ViewRelationship
		return ret
	}
	return *o.ChangeFollowers
}

// GetChangeFollowersOk returns a tuple with the ChangeFollowers field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ViewMilestone) GetChangeFollowersOk() (*[]ViewRelationship, bool) {
	if o == nil || o.ChangeFollowers == nil {
		return nil, false
	}
	return o.ChangeFollowers, true
}

// HasChangeFollowers returns a boolean if a field has been set.
func (o *ViewMilestone) HasChangeFollowers() bool {
	if o != nil && o.ChangeFollowers != nil {
		return true
	}

	return false
}

// SetChangeFollowers gets a reference to the given []ViewRelationship and assigns it to the ChangeFollowers field.
func (o *ViewMilestone) SetChangeFollowers(v []ViewRelationship) {
	o.ChangeFollowers = &v
}

// GetCommentFollowerIds returns the CommentFollowerIds field value if set, zero value otherwise.
func (o *ViewMilestone) GetCommentFollowerIds() []int32 {
	if o == nil || o.CommentFollowerIds == nil {
		var ret []int32
		return ret
	}
	return *o.CommentFollowerIds
}

// GetCommentFollowerIdsOk returns a tuple with the CommentFollowerIds field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ViewMilestone) GetCommentFollowerIdsOk() (*[]int32, bool) {
	if o == nil || o.CommentFollowerIds == nil {
		return nil, false
	}
	return o.CommentFollowerIds, true
}

// HasCommentFollowerIds returns a boolean if a field has been set.
func (o *ViewMilestone) HasCommentFollowerIds() bool {
	if o != nil && o.CommentFollowerIds != nil {
		return true
	}

	return false
}

// SetCommentFollowerIds gets a reference to the given []int32 and assigns it to the CommentFollowerIds field.
func (o *ViewMilestone) SetCommentFollowerIds(v []int32) {
	o.CommentFollowerIds = &v
}

// GetCommentFollowers returns the CommentFollowers field value if set, zero value otherwise.
func (o *ViewMilestone) GetCommentFollowers() []ViewRelationship {
	if o == nil || o.CommentFollowers == nil {
		var ret []ViewRelationship
		return ret
	}
	return *o.CommentFollowers
}

// GetCommentFollowersOk returns a tuple with the CommentFollowers field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ViewMilestone) GetCommentFollowersOk() (*[]ViewRelationship, bool) {
	if o == nil || o.CommentFollowers == nil {
		return nil, false
	}
	return o.CommentFollowers, true
}

// HasCommentFollowers returns a boolean if a field has been set.
func (o *ViewMilestone) HasCommentFollowers() bool {
	if o != nil && o.CommentFollowers != nil {
		return true
	}

	return false
}

// SetCommentFollowers gets a reference to the given []ViewRelationship and assigns it to the CommentFollowers field.
func (o *ViewMilestone) SetCommentFollowers(v []ViewRelationship) {
	o.CommentFollowers = &v
}

// GetCommentsCount returns the CommentsCount field value if set, zero value otherwise.
func (o *ViewMilestone) GetCommentsCount() int32 {
	if o == nil || o.CommentsCount == nil {
		var ret int32
		return ret
	}
	return *o.CommentsCount
}

// GetCommentsCountOk returns a tuple with the CommentsCount field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ViewMilestone) GetCommentsCountOk() (*int32, bool) {
	if o == nil || o.CommentsCount == nil {
		return nil, false
	}
	return o.CommentsCount, true
}

// HasCommentsCount returns a boolean if a field has been set.
func (o *ViewMilestone) HasCommentsCount() bool {
	if o != nil && o.CommentsCount != nil {
		return true
	}

	return false
}

// SetCommentsCount gets a reference to the given int32 and assigns it to the CommentsCount field.
func (o *ViewMilestone) SetCommentsCount(v int32) {
	o.CommentsCount = &v
}

// GetCompleted returns the Completed field value if set, zero value otherwise.
func (o *ViewMilestone) GetCompleted() bool {
	if o == nil || o.Completed == nil {
		var ret bool
		return ret
	}
	return *o.Completed
}

// GetCompletedOk returns a tuple with the Completed field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ViewMilestone) GetCompletedOk() (*bool, bool) {
	if o == nil || o.Completed == nil {
		return nil, false
	}
	return o.Completed, true
}

// HasCompleted returns a boolean if a field has been set.
func (o *ViewMilestone) HasCompleted() bool {
	if o != nil && o.Completed != nil {
		return true
	}

	return false
}

// SetCompleted gets a reference to the given bool and assigns it to the Completed field.
func (o *ViewMilestone) SetCompleted(v bool) {
	o.Completed = &v
}

// GetCompletedBy returns the CompletedBy field value if set, zero value otherwise.
func (o *ViewMilestone) GetCompletedBy() int32 {
	if o == nil || o.CompletedBy == nil {
		var ret int32
		return ret
	}
	return *o.CompletedBy
}

// GetCompletedByOk returns a tuple with the CompletedBy field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ViewMilestone) GetCompletedByOk() (*int32, bool) {
	if o == nil || o.CompletedBy == nil {
		return nil, false
	}
	return o.CompletedBy, true
}

// HasCompletedBy returns a boolean if a field has been set.
func (o *ViewMilestone) HasCompletedBy() bool {
	if o != nil && o.CompletedBy != nil {
		return true
	}

	return false
}

// SetCompletedBy gets a reference to the given int32 and assigns it to the CompletedBy field.
func (o *ViewMilestone) SetCompletedBy(v int32) {
	o.CompletedBy = &v
}

// GetCompletedOn returns the CompletedOn field value if set, zero value otherwise.
func (o *ViewMilestone) GetCompletedOn() string {
	if o == nil || o.CompletedOn == nil {
		var ret string
		return ret
	}
	return *o.CompletedOn
}

// GetCompletedOnOk returns a tuple with the CompletedOn field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ViewMilestone) GetCompletedOnOk() (*string, bool) {
	if o == nil || o.CompletedOn == nil {
		return nil, false
	}
	return o.CompletedOn, true
}

// HasCompletedOn returns a boolean if a field has been set.
func (o *ViewMilestone) HasCompletedOn() bool {
	if o != nil && o.CompletedOn != nil {
		return true
	}

	return false
}

// SetCompletedOn gets a reference to the given string and assigns it to the CompletedOn field.
func (o *ViewMilestone) SetCompletedOn(v string) {
	o.CompletedOn = &v
}

// GetCompleterId returns the CompleterId field value if set, zero value otherwise.
func (o *ViewMilestone) GetCompleterId() int32 {
	if o == nil || o.CompleterId == nil {
		var ret int32
		return ret
	}
	return *o.CompleterId
}

// GetCompleterIdOk returns a tuple with the CompleterId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ViewMilestone) GetCompleterIdOk() (*int32, bool) {
	if o == nil || o.CompleterId == nil {
		return nil, false
	}
	return o.CompleterId, true
}

// HasCompleterId returns a boolean if a field has been set.
func (o *ViewMilestone) HasCompleterId() bool {
	if o != nil && o.CompleterId != nil {
		return true
	}

	return false
}

// SetCompleterId gets a reference to the given int32 and assigns it to the CompleterId field.
func (o *ViewMilestone) SetCompleterId(v int32) {
	o.CompleterId = &v
}

// GetCreatedBy returns the CreatedBy field value if set, zero value otherwise.
func (o *ViewMilestone) GetCreatedBy() int32 {
	if o == nil || o.CreatedBy == nil {
		var ret int32
		return ret
	}
	return *o.CreatedBy
}

// GetCreatedByOk returns a tuple with the CreatedBy field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ViewMilestone) GetCreatedByOk() (*int32, bool) {
	if o == nil || o.CreatedBy == nil {
		return nil, false
	}
	return o.CreatedBy, true
}

// HasCreatedBy returns a boolean if a field has been set.
func (o *ViewMilestone) HasCreatedBy() bool {
	if o != nil && o.CreatedBy != nil {
		return true
	}

	return false
}

// SetCreatedBy gets a reference to the given int32 and assigns it to the CreatedBy field.
func (o *ViewMilestone) SetCreatedBy(v int32) {
	o.CreatedBy = &v
}

// GetCreatedOn returns the CreatedOn field value if set, zero value otherwise.
func (o *ViewMilestone) GetCreatedOn() string {
	if o == nil || o.CreatedOn == nil {
		var ret string
		return ret
	}
	return *o.CreatedOn
}

// GetCreatedOnOk returns a tuple with the CreatedOn field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ViewMilestone) GetCreatedOnOk() (*string, bool) {
	if o == nil || o.CreatedOn == nil {
		return nil, false
	}
	return o.CreatedOn, true
}

// HasCreatedOn returns a boolean if a field has been set.
func (o *ViewMilestone) HasCreatedOn() bool {
	if o != nil && o.CreatedOn != nil {
		return true
	}

	return false
}

// SetCreatedOn gets a reference to the given string and assigns it to the CreatedOn field.
func (o *ViewMilestone) SetCreatedOn(v string) {
	o.CreatedOn = &v
}

// GetCreatorUserId returns the CreatorUserId field value if set, zero value otherwise.
func (o *ViewMilestone) GetCreatorUserId() int32 {
	if o == nil || o.CreatorUserId == nil {
		var ret int32
		return ret
	}
	return *o.CreatorUserId
}

// GetCreatorUserIdOk returns a tuple with the CreatorUserId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ViewMilestone) GetCreatorUserIdOk() (*int32, bool) {
	if o == nil || o.CreatorUserId == nil {
		return nil, false
	}
	return o.CreatorUserId, true
}

// HasCreatorUserId returns a boolean if a field has been set.
func (o *ViewMilestone) HasCreatorUserId() bool {
	if o != nil && o.CreatorUserId != nil {
		return true
	}

	return false
}

// SetCreatorUserId gets a reference to the given int32 and assigns it to the CreatorUserId field.
func (o *ViewMilestone) SetCreatorUserId(v int32) {
	o.CreatorUserId = &v
}

// GetDeadline returns the Deadline field value if set, zero value otherwise.
func (o *ViewMilestone) GetDeadline() string {
	if o == nil || o.Deadline == nil {
		var ret string
		return ret
	}
	return *o.Deadline
}

// GetDeadlineOk returns a tuple with the Deadline field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ViewMilestone) GetDeadlineOk() (*string, bool) {
	if o == nil || o.Deadline == nil {
		return nil, false
	}
	return o.Deadline, true
}

// HasDeadline returns a boolean if a field has been set.
func (o *ViewMilestone) HasDeadline() bool {
	if o != nil && o.Deadline != nil {
		return true
	}

	return false
}

// SetDeadline gets a reference to the given string and assigns it to the Deadline field.
func (o *ViewMilestone) SetDeadline(v string) {
	o.Deadline = &v
}

// GetDescription returns the Description field value if set, zero value otherwise.
func (o *ViewMilestone) GetDescription() string {
	if o == nil || o.Description == nil {
		var ret string
		return ret
	}
	return *o.Description
}

// GetDescriptionOk returns a tuple with the Description field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ViewMilestone) GetDescriptionOk() (*string, bool) {
	if o == nil || o.Description == nil {
		return nil, false
	}
	return o.Description, true
}

// HasDescription returns a boolean if a field has been set.
func (o *ViewMilestone) HasDescription() bool {
	if o != nil && o.Description != nil {
		return true
	}

	return false
}

// SetDescription gets a reference to the given string and assigns it to the Description field.
func (o *ViewMilestone) SetDescription(v string) {
	o.Description = &v
}

// GetId returns the Id field value if set, zero value otherwise.
func (o *ViewMilestone) GetId() int32 {
	if o == nil || o.Id == nil {
		var ret int32
		return ret
	}
	return *o.Id
}

// GetIdOk returns a tuple with the Id field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ViewMilestone) GetIdOk() (*int32, bool) {
	if o == nil || o.Id == nil {
		return nil, false
	}
	return o.Id, true
}

// HasId returns a boolean if a field has been set.
func (o *ViewMilestone) HasId() bool {
	if o != nil && o.Id != nil {
		return true
	}

	return false
}

// SetId gets a reference to the given int32 and assigns it to the Id field.
func (o *ViewMilestone) SetId(v int32) {
	o.Id = &v
}

// GetLastChangedOn returns the LastChangedOn field value if set, zero value otherwise.
func (o *ViewMilestone) GetLastChangedOn() string {
	if o == nil || o.LastChangedOn == nil {
		var ret string
		return ret
	}
	return *o.LastChangedOn
}

// GetLastChangedOnOk returns a tuple with the LastChangedOn field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ViewMilestone) GetLastChangedOnOk() (*string, bool) {
	if o == nil || o.LastChangedOn == nil {
		return nil, false
	}
	return o.LastChangedOn, true
}

// HasLastChangedOn returns a boolean if a field has been set.
func (o *ViewMilestone) HasLastChangedOn() bool {
	if o != nil && o.LastChangedOn != nil {
		return true
	}

	return false
}

// SetLastChangedOn gets a reference to the given string and assigns it to the LastChangedOn field.
func (o *ViewMilestone) SetLastChangedOn(v string) {
	o.LastChangedOn = &v
}

// GetLockdown returns the Lockdown field value if set, zero value otherwise.
func (o *ViewMilestone) GetLockdown() ViewRelationship {
	if o == nil || o.Lockdown == nil {
		var ret ViewRelationship
		return ret
	}
	return *o.Lockdown
}

// GetLockdownOk returns a tuple with the Lockdown field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ViewMilestone) GetLockdownOk() (*ViewRelationship, bool) {
	if o == nil || o.Lockdown == nil {
		return nil, false
	}
	return o.Lockdown, true
}

// HasLockdown returns a boolean if a field has been set.
func (o *ViewMilestone) HasLockdown() bool {
	if o != nil && o.Lockdown != nil {
		return true
	}

	return false
}

// SetLockdown gets a reference to the given ViewRelationship and assigns it to the Lockdown field.
func (o *ViewMilestone) SetLockdown(v ViewRelationship) {
	o.Lockdown = &v
}

// GetLockdownId returns the LockdownId field value if set, zero value otherwise.
func (o *ViewMilestone) GetLockdownId() int32 {
	if o == nil || o.LockdownId == nil {
		var ret int32
		return ret
	}
	return *o.LockdownId
}

// GetLockdownIdOk returns a tuple with the LockdownId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ViewMilestone) GetLockdownIdOk() (*int32, bool) {
	if o == nil || o.LockdownId == nil {
		return nil, false
	}
	return o.LockdownId, true
}

// HasLockdownId returns a boolean if a field has been set.
func (o *ViewMilestone) HasLockdownId() bool {
	if o != nil && o.LockdownId != nil {
		return true
	}

	return false
}

// SetLockdownId gets a reference to the given int32 and assigns it to the LockdownId field.
func (o *ViewMilestone) SetLockdownId(v int32) {
	o.LockdownId = &v
}

// GetName returns the Name field value if set, zero value otherwise.
func (o *ViewMilestone) GetName() string {
	if o == nil || o.Name == nil {
		var ret string
		return ret
	}
	return *o.Name
}

// GetNameOk returns a tuple with the Name field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ViewMilestone) GetNameOk() (*string, bool) {
	if o == nil || o.Name == nil {
		return nil, false
	}
	return o.Name, true
}

// HasName returns a boolean if a field has been set.
func (o *ViewMilestone) HasName() bool {
	if o != nil && o.Name != nil {
		return true
	}

	return false
}

// SetName gets a reference to the given string and assigns it to the Name field.
func (o *ViewMilestone) SetName(v string) {
	o.Name = &v
}

// GetNumCommentsRead returns the NumCommentsRead field value if set, zero value otherwise.
func (o *ViewMilestone) GetNumCommentsRead() int32 {
	if o == nil || o.NumCommentsRead == nil {
		var ret int32
		return ret
	}
	return *o.NumCommentsRead
}

// GetNumCommentsReadOk returns a tuple with the NumCommentsRead field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ViewMilestone) GetNumCommentsReadOk() (*int32, bool) {
	if o == nil || o.NumCommentsRead == nil {
		return nil, false
	}
	return o.NumCommentsRead, true
}

// HasNumCommentsRead returns a boolean if a field has been set.
func (o *ViewMilestone) HasNumCommentsRead() bool {
	if o != nil && o.NumCommentsRead != nil {
		return true
	}

	return false
}

// SetNumCommentsRead gets a reference to the given int32 and assigns it to the NumCommentsRead field.
func (o *ViewMilestone) SetNumCommentsRead(v int32) {
	o.NumCommentsRead = &v
}

// GetOriginalDueDate returns the OriginalDueDate field value if set, zero value otherwise.
func (o *ViewMilestone) GetOriginalDueDate() string {
	if o == nil || o.OriginalDueDate == nil {
		var ret string
		return ret
	}
	return *o.OriginalDueDate
}

// GetOriginalDueDateOk returns a tuple with the OriginalDueDate field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ViewMilestone) GetOriginalDueDateOk() (*string, bool) {
	if o == nil || o.OriginalDueDate == nil {
		return nil, false
	}
	return o.OriginalDueDate, true
}

// HasOriginalDueDate returns a boolean if a field has been set.
func (o *ViewMilestone) HasOriginalDueDate() bool {
	if o != nil && o.OriginalDueDate != nil {
		return true
	}

	return false
}

// SetOriginalDueDate gets a reference to the given string and assigns it to the OriginalDueDate field.
func (o *ViewMilestone) SetOriginalDueDate(v string) {
	o.OriginalDueDate = &v
}

// GetPercentageComplete returns the PercentageComplete field value if set, zero value otherwise.
func (o *ViewMilestone) GetPercentageComplete() int32 {
	if o == nil || o.PercentageComplete == nil {
		var ret int32
		return ret
	}
	return *o.PercentageComplete
}

// GetPercentageCompleteOk returns a tuple with the PercentageComplete field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ViewMilestone) GetPercentageCompleteOk() (*int32, bool) {
	if o == nil || o.PercentageComplete == nil {
		return nil, false
	}
	return o.PercentageComplete, true
}

// HasPercentageComplete returns a boolean if a field has been set.
func (o *ViewMilestone) HasPercentageComplete() bool {
	if o != nil && o.PercentageComplete != nil {
		return true
	}

	return false
}

// SetPercentageComplete gets a reference to the given int32 and assigns it to the PercentageComplete field.
func (o *ViewMilestone) SetPercentageComplete(v int32) {
	o.PercentageComplete = &v
}

// GetPercentageTasksCompleted returns the PercentageTasksCompleted field value if set, zero value otherwise.
func (o *ViewMilestone) GetPercentageTasksCompleted() int32 {
	if o == nil || o.PercentageTasksCompleted == nil {
		var ret int32
		return ret
	}
	return *o.PercentageTasksCompleted
}

// GetPercentageTasksCompletedOk returns a tuple with the PercentageTasksCompleted field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ViewMilestone) GetPercentageTasksCompletedOk() (*int32, bool) {
	if o == nil || o.PercentageTasksCompleted == nil {
		return nil, false
	}
	return o.PercentageTasksCompleted, true
}

// HasPercentageTasksCompleted returns a boolean if a field has been set.
func (o *ViewMilestone) HasPercentageTasksCompleted() bool {
	if o != nil && o.PercentageTasksCompleted != nil {
		return true
	}

	return false
}

// SetPercentageTasksCompleted gets a reference to the given int32 and assigns it to the PercentageTasksCompleted field.
func (o *ViewMilestone) SetPercentageTasksCompleted(v int32) {
	o.PercentageTasksCompleted = &v
}

// GetPrivate returns the Private field value if set, zero value otherwise.
func (o *ViewMilestone) GetPrivate() bool {
	if o == nil || o.Private == nil {
		var ret bool
		return ret
	}
	return *o.Private
}

// GetPrivateOk returns a tuple with the Private field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ViewMilestone) GetPrivateOk() (*bool, bool) {
	if o == nil || o.Private == nil {
		return nil, false
	}
	return o.Private, true
}

// HasPrivate returns a boolean if a field has been set.
func (o *ViewMilestone) HasPrivate() bool {
	if o != nil && o.Private != nil {
		return true
	}

	return false
}

// SetPrivate gets a reference to the given bool and assigns it to the Private field.
func (o *ViewMilestone) SetPrivate(v bool) {
	o.Private = &v
}

// GetProject returns the Project field value if set, zero value otherwise.
func (o *ViewMilestone) GetProject() ViewRelationship {
	if o == nil || o.Project == nil {
		var ret ViewRelationship
		return ret
	}
	return *o.Project
}

// GetProjectOk returns a tuple with the Project field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ViewMilestone) GetProjectOk() (*ViewRelationship, bool) {
	if o == nil || o.Project == nil {
		return nil, false
	}
	return o.Project, true
}

// HasProject returns a boolean if a field has been set.
func (o *ViewMilestone) HasProject() bool {
	if o != nil && o.Project != nil {
		return true
	}

	return false
}

// SetProject gets a reference to the given ViewRelationship and assigns it to the Project field.
func (o *ViewMilestone) SetProject(v ViewRelationship) {
	o.Project = &v
}

// GetProjectId returns the ProjectId field value if set, zero value otherwise.
func (o *ViewMilestone) GetProjectId() int32 {
	if o == nil || o.ProjectId == nil {
		var ret int32
		return ret
	}
	return *o.ProjectId
}

// GetProjectIdOk returns a tuple with the ProjectId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ViewMilestone) GetProjectIdOk() (*int32, bool) {
	if o == nil || o.ProjectId == nil {
		return nil, false
	}
	return o.ProjectId, true
}

// HasProjectId returns a boolean if a field has been set.
func (o *ViewMilestone) HasProjectId() bool {
	if o != nil && o.ProjectId != nil {
		return true
	}

	return false
}

// SetProjectId gets a reference to the given int32 and assigns it to the ProjectId field.
func (o *ViewMilestone) SetProjectId(v int32) {
	o.ProjectId = &v
}

// GetReminder returns the Reminder field value if set, zero value otherwise.
func (o *ViewMilestone) GetReminder() bool {
	if o == nil || o.Reminder == nil {
		var ret bool
		return ret
	}
	return *o.Reminder
}

// GetReminderOk returns a tuple with the Reminder field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ViewMilestone) GetReminderOk() (*bool, bool) {
	if o == nil || o.Reminder == nil {
		return nil, false
	}
	return o.Reminder, true
}

// HasReminder returns a boolean if a field has been set.
func (o *ViewMilestone) HasReminder() bool {
	if o != nil && o.Reminder != nil {
		return true
	}

	return false
}

// SetReminder gets a reference to the given bool and assigns it to the Reminder field.
func (o *ViewMilestone) SetReminder(v bool) {
	o.Reminder = &v
}

// GetResponsibleParties returns the ResponsibleParties field value if set, zero value otherwise.
func (o *ViewMilestone) GetResponsibleParties() []ViewRelationship {
	if o == nil || o.ResponsibleParties == nil {
		var ret []ViewRelationship
		return ret
	}
	return *o.ResponsibleParties
}

// GetResponsiblePartiesOk returns a tuple with the ResponsibleParties field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ViewMilestone) GetResponsiblePartiesOk() (*[]ViewRelationship, bool) {
	if o == nil || o.ResponsibleParties == nil {
		return nil, false
	}
	return o.ResponsibleParties, true
}

// HasResponsibleParties returns a boolean if a field has been set.
func (o *ViewMilestone) HasResponsibleParties() bool {
	if o != nil && o.ResponsibleParties != nil {
		return true
	}

	return false
}

// SetResponsibleParties gets a reference to the given []ViewRelationship and assigns it to the ResponsibleParties field.
func (o *ViewMilestone) SetResponsibleParties(v []ViewRelationship) {
	o.ResponsibleParties = &v
}

// GetResponsiblePartyIds returns the ResponsiblePartyIds field value if set, zero value otherwise.
func (o *ViewMilestone) GetResponsiblePartyIds() []int32 {
	if o == nil || o.ResponsiblePartyIds == nil {
		var ret []int32
		return ret
	}
	return *o.ResponsiblePartyIds
}

// GetResponsiblePartyIdsOk returns a tuple with the ResponsiblePartyIds field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ViewMilestone) GetResponsiblePartyIdsOk() (*[]int32, bool) {
	if o == nil || o.ResponsiblePartyIds == nil {
		return nil, false
	}
	return o.ResponsiblePartyIds, true
}

// HasResponsiblePartyIds returns a boolean if a field has been set.
func (o *ViewMilestone) HasResponsiblePartyIds() bool {
	if o != nil && o.ResponsiblePartyIds != nil {
		return true
	}

	return false
}

// SetResponsiblePartyIds gets a reference to the given []int32 and assigns it to the ResponsiblePartyIds field.
func (o *ViewMilestone) SetResponsiblePartyIds(v []int32) {
	o.ResponsiblePartyIds = &v
}

// GetStatus returns the Status field value if set, zero value otherwise.
func (o *ViewMilestone) GetStatus() string {
	if o == nil || o.Status == nil {
		var ret string
		return ret
	}
	return *o.Status
}

// GetStatusOk returns a tuple with the Status field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ViewMilestone) GetStatusOk() (*string, bool) {
	if o == nil || o.Status == nil {
		return nil, false
	}
	return o.Status, true
}

// HasStatus returns a boolean if a field has been set.
func (o *ViewMilestone) HasStatus() bool {
	if o != nil && o.Status != nil {
		return true
	}

	return false
}

// SetStatus gets a reference to the given string and assigns it to the Status field.
func (o *ViewMilestone) SetStatus(v string) {
	o.Status = &v
}

// GetTagIds returns the TagIds field value if set, zero value otherwise.
func (o *ViewMilestone) GetTagIds() []int32 {
	if o == nil || o.TagIds == nil {
		var ret []int32
		return ret
	}
	return *o.TagIds
}

// GetTagIdsOk returns a tuple with the TagIds field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ViewMilestone) GetTagIdsOk() (*[]int32, bool) {
	if o == nil || o.TagIds == nil {
		return nil, false
	}
	return o.TagIds, true
}

// HasTagIds returns a boolean if a field has been set.
func (o *ViewMilestone) HasTagIds() bool {
	if o != nil && o.TagIds != nil {
		return true
	}

	return false
}

// SetTagIds gets a reference to the given []int32 and assigns it to the TagIds field.
func (o *ViewMilestone) SetTagIds(v []int32) {
	o.TagIds = &v
}

// GetTags returns the Tags field value if set, zero value otherwise.
func (o *ViewMilestone) GetTags() []ViewRelationship {
	if o == nil || o.Tags == nil {
		var ret []ViewRelationship
		return ret
	}
	return *o.Tags
}

// GetTagsOk returns a tuple with the Tags field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ViewMilestone) GetTagsOk() (*[]ViewRelationship, bool) {
	if o == nil || o.Tags == nil {
		return nil, false
	}
	return o.Tags, true
}

// HasTags returns a boolean if a field has been set.
func (o *ViewMilestone) HasTags() bool {
	if o != nil && o.Tags != nil {
		return true
	}

	return false
}

// SetTags gets a reference to the given []ViewRelationship and assigns it to the Tags field.
func (o *ViewMilestone) SetTags(v []ViewRelationship) {
	o.Tags = &v
}

// GetTasklistIds returns the TasklistIds field value if set, zero value otherwise.
func (o *ViewMilestone) GetTasklistIds() []int32 {
	if o == nil || o.TasklistIds == nil {
		var ret []int32
		return ret
	}
	return *o.TasklistIds
}

// GetTasklistIdsOk returns a tuple with the TasklistIds field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ViewMilestone) GetTasklistIdsOk() (*[]int32, bool) {
	if o == nil || o.TasklistIds == nil {
		return nil, false
	}
	return o.TasklistIds, true
}

// HasTasklistIds returns a boolean if a field has been set.
func (o *ViewMilestone) HasTasklistIds() bool {
	if o != nil && o.TasklistIds != nil {
		return true
	}

	return false
}

// SetTasklistIds gets a reference to the given []int32 and assigns it to the TasklistIds field.
func (o *ViewMilestone) SetTasklistIds(v []int32) {
	o.TasklistIds = &v
}

// GetTasklists returns the Tasklists field value if set, zero value otherwise.
func (o *ViewMilestone) GetTasklists() []ViewRelationship {
	if o == nil || o.Tasklists == nil {
		var ret []ViewRelationship
		return ret
	}
	return *o.Tasklists
}

// GetTasklistsOk returns a tuple with the Tasklists field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ViewMilestone) GetTasklistsOk() (*[]ViewRelationship, bool) {
	if o == nil || o.Tasklists == nil {
		return nil, false
	}
	return o.Tasklists, true
}

// HasTasklists returns a boolean if a field has been set.
func (o *ViewMilestone) HasTasklists() bool {
	if o != nil && o.Tasklists != nil {
		return true
	}

	return false
}

// SetTasklists gets a reference to the given []ViewRelationship and assigns it to the Tasklists field.
func (o *ViewMilestone) SetTasklists(v []ViewRelationship) {
	o.Tasklists = &v
}

// GetUserFollowingChanges returns the UserFollowingChanges field value if set, zero value otherwise.
func (o *ViewMilestone) GetUserFollowingChanges() bool {
	if o == nil || o.UserFollowingChanges == nil {
		var ret bool
		return ret
	}
	return *o.UserFollowingChanges
}

// GetUserFollowingChangesOk returns a tuple with the UserFollowingChanges field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ViewMilestone) GetUserFollowingChangesOk() (*bool, bool) {
	if o == nil || o.UserFollowingChanges == nil {
		return nil, false
	}
	return o.UserFollowingChanges, true
}

// HasUserFollowingChanges returns a boolean if a field has been set.
func (o *ViewMilestone) HasUserFollowingChanges() bool {
	if o != nil && o.UserFollowingChanges != nil {
		return true
	}

	return false
}

// SetUserFollowingChanges gets a reference to the given bool and assigns it to the UserFollowingChanges field.
func (o *ViewMilestone) SetUserFollowingChanges(v bool) {
	o.UserFollowingChanges = &v
}

// GetUserFollowingComments returns the UserFollowingComments field value if set, zero value otherwise.
func (o *ViewMilestone) GetUserFollowingComments() bool {
	if o == nil || o.UserFollowingComments == nil {
		var ret bool
		return ret
	}
	return *o.UserFollowingComments
}

// GetUserFollowingCommentsOk returns a tuple with the UserFollowingComments field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ViewMilestone) GetUserFollowingCommentsOk() (*bool, bool) {
	if o == nil || o.UserFollowingComments == nil {
		return nil, false
	}
	return o.UserFollowingComments, true
}

// HasUserFollowingComments returns a boolean if a field has been set.
func (o *ViewMilestone) HasUserFollowingComments() bool {
	if o != nil && o.UserFollowingComments != nil {
		return true
	}

	return false
}

// SetUserFollowingComments gets a reference to the given bool and assigns it to the UserFollowingComments field.
func (o *ViewMilestone) SetUserFollowingComments(v bool) {
	o.UserFollowingComments = &v
}

func (o ViewMilestone) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.CanComplete != nil {
		toSerialize["canComplete"] = o.CanComplete
	}
	if o.CanEdit != nil {
		toSerialize["canEdit"] = o.CanEdit
	}
	if o.ChangeFollowerIds != nil {
		toSerialize["changeFollowerIds"] = o.ChangeFollowerIds
	}
	if o.ChangeFollowers != nil {
		toSerialize["changeFollowers"] = o.ChangeFollowers
	}
	if o.CommentFollowerIds != nil {
		toSerialize["commentFollowerIds"] = o.CommentFollowerIds
	}
	if o.CommentFollowers != nil {
		toSerialize["commentFollowers"] = o.CommentFollowers
	}
	if o.CommentsCount != nil {
		toSerialize["commentsCount"] = o.CommentsCount
	}
	if o.Completed != nil {
		toSerialize["completed"] = o.Completed
	}
	if o.CompletedBy != nil {
		toSerialize["completedBy"] = o.CompletedBy
	}
	if o.CompletedOn != nil {
		toSerialize["completedOn"] = o.CompletedOn
	}
	if o.CompleterId != nil {
		toSerialize["completerId"] = o.CompleterId
	}
	if o.CreatedBy != nil {
		toSerialize["createdBy"] = o.CreatedBy
	}
	if o.CreatedOn != nil {
		toSerialize["createdOn"] = o.CreatedOn
	}
	if o.CreatorUserId != nil {
		toSerialize["creatorUserId"] = o.CreatorUserId
	}
	if o.Deadline != nil {
		toSerialize["deadline"] = o.Deadline
	}
	if o.Description != nil {
		toSerialize["description"] = o.Description
	}
	if o.Id != nil {
		toSerialize["id"] = o.Id
	}
	if o.LastChangedOn != nil {
		toSerialize["lastChangedOn"] = o.LastChangedOn
	}
	if o.Lockdown != nil {
		toSerialize["lockdown"] = o.Lockdown
	}
	if o.LockdownId != nil {
		toSerialize["lockdownId"] = o.LockdownId
	}
	if o.Name != nil {
		toSerialize["name"] = o.Name
	}
	if o.NumCommentsRead != nil {
		toSerialize["numCommentsRead"] = o.NumCommentsRead
	}
	if o.OriginalDueDate != nil {
		toSerialize["originalDueDate"] = o.OriginalDueDate
	}
	if o.PercentageComplete != nil {
		toSerialize["percentageComplete"] = o.PercentageComplete
	}
	if o.PercentageTasksCompleted != nil {
		toSerialize["percentageTasksCompleted"] = o.PercentageTasksCompleted
	}
	if o.Private != nil {
		toSerialize["private"] = o.Private
	}
	if o.Project != nil {
		toSerialize["project"] = o.Project
	}
	if o.ProjectId != nil {
		toSerialize["projectId"] = o.ProjectId
	}
	if o.Reminder != nil {
		toSerialize["reminder"] = o.Reminder
	}
	if o.ResponsibleParties != nil {
		toSerialize["responsibleParties"] = o.ResponsibleParties
	}
	if o.ResponsiblePartyIds != nil {
		toSerialize["responsiblePartyIds"] = o.ResponsiblePartyIds
	}
	if o.Status != nil {
		toSerialize["status"] = o.Status
	}
	if o.TagIds != nil {
		toSerialize["tagIds"] = o.TagIds
	}
	if o.Tags != nil {
		toSerialize["tags"] = o.Tags
	}
	if o.TasklistIds != nil {
		toSerialize["tasklistIds"] = o.TasklistIds
	}
	if o.Tasklists != nil {
		toSerialize["tasklists"] = o.Tasklists
	}
	if o.UserFollowingChanges != nil {
		toSerialize["userFollowingChanges"] = o.UserFollowingChanges
	}
	if o.UserFollowingComments != nil {
		toSerialize["userFollowingComments"] = o.UserFollowingComments
	}
	return json.Marshal(toSerialize)
}

type NullableViewMilestone struct {
	value *ViewMilestone
	isSet bool
}

func (v NullableViewMilestone) Get() *ViewMilestone {
	return v.value
}

func (v *NullableViewMilestone) Set(val *ViewMilestone) {
	v.value = val
	v.isSet = true
}

func (v NullableViewMilestone) IsSet() bool {
	return v.isSet
}

func (v *NullableViewMilestone) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableViewMilestone(val *ViewMilestone) *NullableViewMilestone {
	return &NullableViewMilestone{value: val, isSet: true}
}

func (v NullableViewMilestone) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableViewMilestone) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


