/*
 * Teamwork Projects API
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * API version: 
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package pmv1

import (
	"encoding/json"
)

// InlineResponse200102 struct for InlineResponse200102
type InlineResponse200102 struct {
	STATUS *string `json:"STATUS,omitempty"`
	Dependents *[]InlineResponse200102Dependents `json:"dependents,omitempty"`
}

// NewInlineResponse200102 instantiates a new InlineResponse200102 object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewInlineResponse200102() *InlineResponse200102 {
	this := InlineResponse200102{}
	return &this
}

// NewInlineResponse200102WithDefaults instantiates a new InlineResponse200102 object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewInlineResponse200102WithDefaults() *InlineResponse200102 {
	this := InlineResponse200102{}
	return &this
}

// GetSTATUS returns the STATUS field value if set, zero value otherwise.
func (o *InlineResponse200102) GetSTATUS() string {
	if o == nil || o.STATUS == nil {
		var ret string
		return ret
	}
	return *o.STATUS
}

// GetSTATUSOk returns a tuple with the STATUS field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InlineResponse200102) GetSTATUSOk() (*string, bool) {
	if o == nil || o.STATUS == nil {
		return nil, false
	}
	return o.STATUS, true
}

// HasSTATUS returns a boolean if a field has been set.
func (o *InlineResponse200102) HasSTATUS() bool {
	if o != nil && o.STATUS != nil {
		return true
	}

	return false
}

// SetSTATUS gets a reference to the given string and assigns it to the STATUS field.
func (o *InlineResponse200102) SetSTATUS(v string) {
	o.STATUS = &v
}

// GetDependents returns the Dependents field value if set, zero value otherwise.
func (o *InlineResponse200102) GetDependents() []InlineResponse200102Dependents {
	if o == nil || o.Dependents == nil {
		var ret []InlineResponse200102Dependents
		return ret
	}
	return *o.Dependents
}

// GetDependentsOk returns a tuple with the Dependents field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InlineResponse200102) GetDependentsOk() (*[]InlineResponse200102Dependents, bool) {
	if o == nil || o.Dependents == nil {
		return nil, false
	}
	return o.Dependents, true
}

// HasDependents returns a boolean if a field has been set.
func (o *InlineResponse200102) HasDependents() bool {
	if o != nil && o.Dependents != nil {
		return true
	}

	return false
}

// SetDependents gets a reference to the given []InlineResponse200102Dependents and assigns it to the Dependents field.
func (o *InlineResponse200102) SetDependents(v []InlineResponse200102Dependents) {
	o.Dependents = &v
}

func (o InlineResponse200102) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.STATUS != nil {
		toSerialize["STATUS"] = o.STATUS
	}
	if o.Dependents != nil {
		toSerialize["dependents"] = o.Dependents
	}
	return json.Marshal(toSerialize)
}

type NullableInlineResponse200102 struct {
	value *InlineResponse200102
	isSet bool
}

func (v NullableInlineResponse200102) Get() *InlineResponse200102 {
	return v.value
}

func (v *NullableInlineResponse200102) Set(val *InlineResponse200102) {
	v.value = val
	v.isSet = true
}

func (v NullableInlineResponse200102) IsSet() bool {
	return v.isSet
}

func (v *NullableInlineResponse200102) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableInlineResponse200102(val *InlineResponse200102) *NullableInlineResponse200102 {
	return &NullableInlineResponse200102{value: val, isSet: true}
}

func (v NullableInlineResponse200102) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableInlineResponse200102) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


