/*
 * Teamwork.com Projects API
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * API version: 3.0
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package projv3

import (
	"encoding/json"
)

// ViewMeta Meta represents the Unified API meta object.
type ViewMeta struct {
	Page *ViewMetaPage `json:"page,omitempty"`
}

// NewViewMeta instantiates a new ViewMeta object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewViewMeta() *ViewMeta {
	this := ViewMeta{}
	return &this
}

// NewViewMetaWithDefaults instantiates a new ViewMeta object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewViewMetaWithDefaults() *ViewMeta {
	this := ViewMeta{}
	return &this
}

// GetPage returns the Page field value if set, zero value otherwise.
func (o *ViewMeta) GetPage() ViewMetaPage {
	if o == nil || o.Page == nil {
		var ret ViewMetaPage
		return ret
	}
	return *o.Page
}

// GetPageOk returns a tuple with the Page field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ViewMeta) GetPageOk() (*ViewMetaPage, bool) {
	if o == nil || o.Page == nil {
		return nil, false
	}
	return o.Page, true
}

// HasPage returns a boolean if a field has been set.
func (o *ViewMeta) HasPage() bool {
	if o != nil && o.Page != nil {
		return true
	}

	return false
}

// SetPage gets a reference to the given ViewMetaPage and assigns it to the Page field.
func (o *ViewMeta) SetPage(v ViewMetaPage) {
	o.Page = &v
}

func (o ViewMeta) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.Page != nil {
		toSerialize["page"] = o.Page
	}
	return json.Marshal(toSerialize)
}

type NullableViewMeta struct {
	value *ViewMeta
	isSet bool
}

func (v NullableViewMeta) Get() *ViewMeta {
	return v.value
}

func (v *NullableViewMeta) Set(val *ViewMeta) {
	v.value = val
	v.isSet = true
}

func (v NullableViewMeta) IsSet() bool {
	return v.isSet
}

func (v *NullableViewMeta) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableViewMeta(val *ViewMeta) *NullableViewMeta {
	return &NullableViewMeta{value: val, isSet: true}
}

func (v NullableViewMeta) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableViewMeta) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


