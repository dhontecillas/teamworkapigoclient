/*
 * Teamwork Projects API
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * API version: 
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package pmv1

import (
	"encoding/json"
)

// InlineResponse20030Timers struct for InlineResponse20030Timers
type InlineResponse20030Timers struct {
	Billable *bool `json:"billable,omitempty"`
	DateCreated *string `json:"dateCreated,omitempty"`
	DateDeleted *string `json:"dateDeleted,omitempty"`
	DateUpdated *string `json:"dateUpdated,omitempty"`
	Deleted *bool `json:"deleted,omitempty"`
	Description *string `json:"description,omitempty"`
	Duration *string `json:"duration,omitempty"`
	Id *string `json:"id,omitempty"`
	Intervals *[]InlineResponse20030Intervals `json:"intervals,omitempty"`
	LastStartedAt *string `json:"lastStartedAt,omitempty"`
	ProjectId *string `json:"projectId,omitempty"`
	ProjectName *string `json:"projectName,omitempty"`
	Running *bool `json:"running,omitempty"`
	ServerTime *string `json:"serverTime,omitempty"`
	TaskId *string `json:"taskId,omitempty"`
	TaskName *string `json:"taskName,omitempty"`
	UserId *string `json:"userId,omitempty"`
}

// NewInlineResponse20030Timers instantiates a new InlineResponse20030Timers object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewInlineResponse20030Timers() *InlineResponse20030Timers {
	this := InlineResponse20030Timers{}
	return &this
}

// NewInlineResponse20030TimersWithDefaults instantiates a new InlineResponse20030Timers object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewInlineResponse20030TimersWithDefaults() *InlineResponse20030Timers {
	this := InlineResponse20030Timers{}
	return &this
}

// GetBillable returns the Billable field value if set, zero value otherwise.
func (o *InlineResponse20030Timers) GetBillable() bool {
	if o == nil || o.Billable == nil {
		var ret bool
		return ret
	}
	return *o.Billable
}

// GetBillableOk returns a tuple with the Billable field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InlineResponse20030Timers) GetBillableOk() (*bool, bool) {
	if o == nil || o.Billable == nil {
		return nil, false
	}
	return o.Billable, true
}

// HasBillable returns a boolean if a field has been set.
func (o *InlineResponse20030Timers) HasBillable() bool {
	if o != nil && o.Billable != nil {
		return true
	}

	return false
}

// SetBillable gets a reference to the given bool and assigns it to the Billable field.
func (o *InlineResponse20030Timers) SetBillable(v bool) {
	o.Billable = &v
}

// GetDateCreated returns the DateCreated field value if set, zero value otherwise.
func (o *InlineResponse20030Timers) GetDateCreated() string {
	if o == nil || o.DateCreated == nil {
		var ret string
		return ret
	}
	return *o.DateCreated
}

// GetDateCreatedOk returns a tuple with the DateCreated field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InlineResponse20030Timers) GetDateCreatedOk() (*string, bool) {
	if o == nil || o.DateCreated == nil {
		return nil, false
	}
	return o.DateCreated, true
}

// HasDateCreated returns a boolean if a field has been set.
func (o *InlineResponse20030Timers) HasDateCreated() bool {
	if o != nil && o.DateCreated != nil {
		return true
	}

	return false
}

// SetDateCreated gets a reference to the given string and assigns it to the DateCreated field.
func (o *InlineResponse20030Timers) SetDateCreated(v string) {
	o.DateCreated = &v
}

// GetDateDeleted returns the DateDeleted field value if set, zero value otherwise.
func (o *InlineResponse20030Timers) GetDateDeleted() string {
	if o == nil || o.DateDeleted == nil {
		var ret string
		return ret
	}
	return *o.DateDeleted
}

// GetDateDeletedOk returns a tuple with the DateDeleted field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InlineResponse20030Timers) GetDateDeletedOk() (*string, bool) {
	if o == nil || o.DateDeleted == nil {
		return nil, false
	}
	return o.DateDeleted, true
}

// HasDateDeleted returns a boolean if a field has been set.
func (o *InlineResponse20030Timers) HasDateDeleted() bool {
	if o != nil && o.DateDeleted != nil {
		return true
	}

	return false
}

// SetDateDeleted gets a reference to the given string and assigns it to the DateDeleted field.
func (o *InlineResponse20030Timers) SetDateDeleted(v string) {
	o.DateDeleted = &v
}

// GetDateUpdated returns the DateUpdated field value if set, zero value otherwise.
func (o *InlineResponse20030Timers) GetDateUpdated() string {
	if o == nil || o.DateUpdated == nil {
		var ret string
		return ret
	}
	return *o.DateUpdated
}

// GetDateUpdatedOk returns a tuple with the DateUpdated field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InlineResponse20030Timers) GetDateUpdatedOk() (*string, bool) {
	if o == nil || o.DateUpdated == nil {
		return nil, false
	}
	return o.DateUpdated, true
}

// HasDateUpdated returns a boolean if a field has been set.
func (o *InlineResponse20030Timers) HasDateUpdated() bool {
	if o != nil && o.DateUpdated != nil {
		return true
	}

	return false
}

// SetDateUpdated gets a reference to the given string and assigns it to the DateUpdated field.
func (o *InlineResponse20030Timers) SetDateUpdated(v string) {
	o.DateUpdated = &v
}

// GetDeleted returns the Deleted field value if set, zero value otherwise.
func (o *InlineResponse20030Timers) GetDeleted() bool {
	if o == nil || o.Deleted == nil {
		var ret bool
		return ret
	}
	return *o.Deleted
}

// GetDeletedOk returns a tuple with the Deleted field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InlineResponse20030Timers) GetDeletedOk() (*bool, bool) {
	if o == nil || o.Deleted == nil {
		return nil, false
	}
	return o.Deleted, true
}

// HasDeleted returns a boolean if a field has been set.
func (o *InlineResponse20030Timers) HasDeleted() bool {
	if o != nil && o.Deleted != nil {
		return true
	}

	return false
}

// SetDeleted gets a reference to the given bool and assigns it to the Deleted field.
func (o *InlineResponse20030Timers) SetDeleted(v bool) {
	o.Deleted = &v
}

// GetDescription returns the Description field value if set, zero value otherwise.
func (o *InlineResponse20030Timers) GetDescription() string {
	if o == nil || o.Description == nil {
		var ret string
		return ret
	}
	return *o.Description
}

// GetDescriptionOk returns a tuple with the Description field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InlineResponse20030Timers) GetDescriptionOk() (*string, bool) {
	if o == nil || o.Description == nil {
		return nil, false
	}
	return o.Description, true
}

// HasDescription returns a boolean if a field has been set.
func (o *InlineResponse20030Timers) HasDescription() bool {
	if o != nil && o.Description != nil {
		return true
	}

	return false
}

// SetDescription gets a reference to the given string and assigns it to the Description field.
func (o *InlineResponse20030Timers) SetDescription(v string) {
	o.Description = &v
}

// GetDuration returns the Duration field value if set, zero value otherwise.
func (o *InlineResponse20030Timers) GetDuration() string {
	if o == nil || o.Duration == nil {
		var ret string
		return ret
	}
	return *o.Duration
}

// GetDurationOk returns a tuple with the Duration field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InlineResponse20030Timers) GetDurationOk() (*string, bool) {
	if o == nil || o.Duration == nil {
		return nil, false
	}
	return o.Duration, true
}

// HasDuration returns a boolean if a field has been set.
func (o *InlineResponse20030Timers) HasDuration() bool {
	if o != nil && o.Duration != nil {
		return true
	}

	return false
}

// SetDuration gets a reference to the given string and assigns it to the Duration field.
func (o *InlineResponse20030Timers) SetDuration(v string) {
	o.Duration = &v
}

// GetId returns the Id field value if set, zero value otherwise.
func (o *InlineResponse20030Timers) GetId() string {
	if o == nil || o.Id == nil {
		var ret string
		return ret
	}
	return *o.Id
}

// GetIdOk returns a tuple with the Id field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InlineResponse20030Timers) GetIdOk() (*string, bool) {
	if o == nil || o.Id == nil {
		return nil, false
	}
	return o.Id, true
}

// HasId returns a boolean if a field has been set.
func (o *InlineResponse20030Timers) HasId() bool {
	if o != nil && o.Id != nil {
		return true
	}

	return false
}

// SetId gets a reference to the given string and assigns it to the Id field.
func (o *InlineResponse20030Timers) SetId(v string) {
	o.Id = &v
}

// GetIntervals returns the Intervals field value if set, zero value otherwise.
func (o *InlineResponse20030Timers) GetIntervals() []InlineResponse20030Intervals {
	if o == nil || o.Intervals == nil {
		var ret []InlineResponse20030Intervals
		return ret
	}
	return *o.Intervals
}

// GetIntervalsOk returns a tuple with the Intervals field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InlineResponse20030Timers) GetIntervalsOk() (*[]InlineResponse20030Intervals, bool) {
	if o == nil || o.Intervals == nil {
		return nil, false
	}
	return o.Intervals, true
}

// HasIntervals returns a boolean if a field has been set.
func (o *InlineResponse20030Timers) HasIntervals() bool {
	if o != nil && o.Intervals != nil {
		return true
	}

	return false
}

// SetIntervals gets a reference to the given []InlineResponse20030Intervals and assigns it to the Intervals field.
func (o *InlineResponse20030Timers) SetIntervals(v []InlineResponse20030Intervals) {
	o.Intervals = &v
}

// GetLastStartedAt returns the LastStartedAt field value if set, zero value otherwise.
func (o *InlineResponse20030Timers) GetLastStartedAt() string {
	if o == nil || o.LastStartedAt == nil {
		var ret string
		return ret
	}
	return *o.LastStartedAt
}

// GetLastStartedAtOk returns a tuple with the LastStartedAt field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InlineResponse20030Timers) GetLastStartedAtOk() (*string, bool) {
	if o == nil || o.LastStartedAt == nil {
		return nil, false
	}
	return o.LastStartedAt, true
}

// HasLastStartedAt returns a boolean if a field has been set.
func (o *InlineResponse20030Timers) HasLastStartedAt() bool {
	if o != nil && o.LastStartedAt != nil {
		return true
	}

	return false
}

// SetLastStartedAt gets a reference to the given string and assigns it to the LastStartedAt field.
func (o *InlineResponse20030Timers) SetLastStartedAt(v string) {
	o.LastStartedAt = &v
}

// GetProjectId returns the ProjectId field value if set, zero value otherwise.
func (o *InlineResponse20030Timers) GetProjectId() string {
	if o == nil || o.ProjectId == nil {
		var ret string
		return ret
	}
	return *o.ProjectId
}

// GetProjectIdOk returns a tuple with the ProjectId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InlineResponse20030Timers) GetProjectIdOk() (*string, bool) {
	if o == nil || o.ProjectId == nil {
		return nil, false
	}
	return o.ProjectId, true
}

// HasProjectId returns a boolean if a field has been set.
func (o *InlineResponse20030Timers) HasProjectId() bool {
	if o != nil && o.ProjectId != nil {
		return true
	}

	return false
}

// SetProjectId gets a reference to the given string and assigns it to the ProjectId field.
func (o *InlineResponse20030Timers) SetProjectId(v string) {
	o.ProjectId = &v
}

// GetProjectName returns the ProjectName field value if set, zero value otherwise.
func (o *InlineResponse20030Timers) GetProjectName() string {
	if o == nil || o.ProjectName == nil {
		var ret string
		return ret
	}
	return *o.ProjectName
}

// GetProjectNameOk returns a tuple with the ProjectName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InlineResponse20030Timers) GetProjectNameOk() (*string, bool) {
	if o == nil || o.ProjectName == nil {
		return nil, false
	}
	return o.ProjectName, true
}

// HasProjectName returns a boolean if a field has been set.
func (o *InlineResponse20030Timers) HasProjectName() bool {
	if o != nil && o.ProjectName != nil {
		return true
	}

	return false
}

// SetProjectName gets a reference to the given string and assigns it to the ProjectName field.
func (o *InlineResponse20030Timers) SetProjectName(v string) {
	o.ProjectName = &v
}

// GetRunning returns the Running field value if set, zero value otherwise.
func (o *InlineResponse20030Timers) GetRunning() bool {
	if o == nil || o.Running == nil {
		var ret bool
		return ret
	}
	return *o.Running
}

// GetRunningOk returns a tuple with the Running field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InlineResponse20030Timers) GetRunningOk() (*bool, bool) {
	if o == nil || o.Running == nil {
		return nil, false
	}
	return o.Running, true
}

// HasRunning returns a boolean if a field has been set.
func (o *InlineResponse20030Timers) HasRunning() bool {
	if o != nil && o.Running != nil {
		return true
	}

	return false
}

// SetRunning gets a reference to the given bool and assigns it to the Running field.
func (o *InlineResponse20030Timers) SetRunning(v bool) {
	o.Running = &v
}

// GetServerTime returns the ServerTime field value if set, zero value otherwise.
func (o *InlineResponse20030Timers) GetServerTime() string {
	if o == nil || o.ServerTime == nil {
		var ret string
		return ret
	}
	return *o.ServerTime
}

// GetServerTimeOk returns a tuple with the ServerTime field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InlineResponse20030Timers) GetServerTimeOk() (*string, bool) {
	if o == nil || o.ServerTime == nil {
		return nil, false
	}
	return o.ServerTime, true
}

// HasServerTime returns a boolean if a field has been set.
func (o *InlineResponse20030Timers) HasServerTime() bool {
	if o != nil && o.ServerTime != nil {
		return true
	}

	return false
}

// SetServerTime gets a reference to the given string and assigns it to the ServerTime field.
func (o *InlineResponse20030Timers) SetServerTime(v string) {
	o.ServerTime = &v
}

// GetTaskId returns the TaskId field value if set, zero value otherwise.
func (o *InlineResponse20030Timers) GetTaskId() string {
	if o == nil || o.TaskId == nil {
		var ret string
		return ret
	}
	return *o.TaskId
}

// GetTaskIdOk returns a tuple with the TaskId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InlineResponse20030Timers) GetTaskIdOk() (*string, bool) {
	if o == nil || o.TaskId == nil {
		return nil, false
	}
	return o.TaskId, true
}

// HasTaskId returns a boolean if a field has been set.
func (o *InlineResponse20030Timers) HasTaskId() bool {
	if o != nil && o.TaskId != nil {
		return true
	}

	return false
}

// SetTaskId gets a reference to the given string and assigns it to the TaskId field.
func (o *InlineResponse20030Timers) SetTaskId(v string) {
	o.TaskId = &v
}

// GetTaskName returns the TaskName field value if set, zero value otherwise.
func (o *InlineResponse20030Timers) GetTaskName() string {
	if o == nil || o.TaskName == nil {
		var ret string
		return ret
	}
	return *o.TaskName
}

// GetTaskNameOk returns a tuple with the TaskName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InlineResponse20030Timers) GetTaskNameOk() (*string, bool) {
	if o == nil || o.TaskName == nil {
		return nil, false
	}
	return o.TaskName, true
}

// HasTaskName returns a boolean if a field has been set.
func (o *InlineResponse20030Timers) HasTaskName() bool {
	if o != nil && o.TaskName != nil {
		return true
	}

	return false
}

// SetTaskName gets a reference to the given string and assigns it to the TaskName field.
func (o *InlineResponse20030Timers) SetTaskName(v string) {
	o.TaskName = &v
}

// GetUserId returns the UserId field value if set, zero value otherwise.
func (o *InlineResponse20030Timers) GetUserId() string {
	if o == nil || o.UserId == nil {
		var ret string
		return ret
	}
	return *o.UserId
}

// GetUserIdOk returns a tuple with the UserId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InlineResponse20030Timers) GetUserIdOk() (*string, bool) {
	if o == nil || o.UserId == nil {
		return nil, false
	}
	return o.UserId, true
}

// HasUserId returns a boolean if a field has been set.
func (o *InlineResponse20030Timers) HasUserId() bool {
	if o != nil && o.UserId != nil {
		return true
	}

	return false
}

// SetUserId gets a reference to the given string and assigns it to the UserId field.
func (o *InlineResponse20030Timers) SetUserId(v string) {
	o.UserId = &v
}

func (o InlineResponse20030Timers) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.Billable != nil {
		toSerialize["billable"] = o.Billable
	}
	if o.DateCreated != nil {
		toSerialize["dateCreated"] = o.DateCreated
	}
	if o.DateDeleted != nil {
		toSerialize["dateDeleted"] = o.DateDeleted
	}
	if o.DateUpdated != nil {
		toSerialize["dateUpdated"] = o.DateUpdated
	}
	if o.Deleted != nil {
		toSerialize["deleted"] = o.Deleted
	}
	if o.Description != nil {
		toSerialize["description"] = o.Description
	}
	if o.Duration != nil {
		toSerialize["duration"] = o.Duration
	}
	if o.Id != nil {
		toSerialize["id"] = o.Id
	}
	if o.Intervals != nil {
		toSerialize["intervals"] = o.Intervals
	}
	if o.LastStartedAt != nil {
		toSerialize["lastStartedAt"] = o.LastStartedAt
	}
	if o.ProjectId != nil {
		toSerialize["projectId"] = o.ProjectId
	}
	if o.ProjectName != nil {
		toSerialize["projectName"] = o.ProjectName
	}
	if o.Running != nil {
		toSerialize["running"] = o.Running
	}
	if o.ServerTime != nil {
		toSerialize["serverTime"] = o.ServerTime
	}
	if o.TaskId != nil {
		toSerialize["taskId"] = o.TaskId
	}
	if o.TaskName != nil {
		toSerialize["taskName"] = o.TaskName
	}
	if o.UserId != nil {
		toSerialize["userId"] = o.UserId
	}
	return json.Marshal(toSerialize)
}

type NullableInlineResponse20030Timers struct {
	value *InlineResponse20030Timers
	isSet bool
}

func (v NullableInlineResponse20030Timers) Get() *InlineResponse20030Timers {
	return v.value
}

func (v *NullableInlineResponse20030Timers) Set(val *InlineResponse20030Timers) {
	v.value = val
	v.isSet = true
}

func (v NullableInlineResponse20030Timers) IsSet() bool {
	return v.isSet
}

func (v *NullableInlineResponse20030Timers) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableInlineResponse20030Timers(val *InlineResponse20030Timers) *NullableInlineResponse20030Timers {
	return &NullableInlineResponse20030Timers{value: val, isSet: true}
}

func (v NullableInlineResponse20030Timers) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableInlineResponse20030Timers) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


