/*
 * Teamwork Projects API
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * API version: 
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package pmv1

import (
	"encoding/json"
)

// InlineResponse20061People struct for InlineResponse20061People
type InlineResponse20061People struct {
	Var123 *InlineResponse2002People12345 `json:"123,omitempty"`
}

// NewInlineResponse20061People instantiates a new InlineResponse20061People object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewInlineResponse20061People() *InlineResponse20061People {
	this := InlineResponse20061People{}
	return &this
}

// NewInlineResponse20061PeopleWithDefaults instantiates a new InlineResponse20061People object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewInlineResponse20061PeopleWithDefaults() *InlineResponse20061People {
	this := InlineResponse20061People{}
	return &this
}

// GetVar123 returns the Var123 field value if set, zero value otherwise.
func (o *InlineResponse20061People) GetVar123() InlineResponse2002People12345 {
	if o == nil || o.Var123 == nil {
		var ret InlineResponse2002People12345
		return ret
	}
	return *o.Var123
}

// GetVar123Ok returns a tuple with the Var123 field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InlineResponse20061People) GetVar123Ok() (*InlineResponse2002People12345, bool) {
	if o == nil || o.Var123 == nil {
		return nil, false
	}
	return o.Var123, true
}

// HasVar123 returns a boolean if a field has been set.
func (o *InlineResponse20061People) HasVar123() bool {
	if o != nil && o.Var123 != nil {
		return true
	}

	return false
}

// SetVar123 gets a reference to the given InlineResponse2002People12345 and assigns it to the Var123 field.
func (o *InlineResponse20061People) SetVar123(v InlineResponse2002People12345) {
	o.Var123 = &v
}

func (o InlineResponse20061People) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.Var123 != nil {
		toSerialize["123"] = o.Var123
	}
	return json.Marshal(toSerialize)
}

type NullableInlineResponse20061People struct {
	value *InlineResponse20061People
	isSet bool
}

func (v NullableInlineResponse20061People) Get() *InlineResponse20061People {
	return v.value
}

func (v *NullableInlineResponse20061People) Set(val *InlineResponse20061People) {
	v.value = val
	v.isSet = true
}

func (v NullableInlineResponse20061People) IsSet() bool {
	return v.isSet
}

func (v *NullableInlineResponse20061People) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableInlineResponse20061People(val *InlineResponse20061People) *NullableInlineResponse20061People {
	return &NullableInlineResponse20061People{value: val, isSet: true}
}

func (v NullableInlineResponse20061People) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableInlineResponse20061People) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


