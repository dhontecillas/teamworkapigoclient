/*
 * Teamwork.com Projects API
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * API version: 3.0
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package projv3

import (
	"encoding/json"
)

// TaskRepeatOptions RepeatOptions stores recurring information for the task.
type TaskRepeatOptions struct {
	Duration *int32 `json:"duration,omitempty"`
	// Date unmarshals represents a Unified API Spec date format.
	EndsAt *map[string]interface{} `json:"endsAt,omitempty"`
	Frequency *string `json:"frequency,omitempty"`
	MonthlyRepeatType *string `json:"monthlyRepeatType,omitempty"`
	SelectedDays *string `json:"selectedDays,omitempty"`
}

// NewTaskRepeatOptions instantiates a new TaskRepeatOptions object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewTaskRepeatOptions() *TaskRepeatOptions {
	this := TaskRepeatOptions{}
	return &this
}

// NewTaskRepeatOptionsWithDefaults instantiates a new TaskRepeatOptions object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewTaskRepeatOptionsWithDefaults() *TaskRepeatOptions {
	this := TaskRepeatOptions{}
	return &this
}

// GetDuration returns the Duration field value if set, zero value otherwise.
func (o *TaskRepeatOptions) GetDuration() int32 {
	if o == nil || o.Duration == nil {
		var ret int32
		return ret
	}
	return *o.Duration
}

// GetDurationOk returns a tuple with the Duration field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TaskRepeatOptions) GetDurationOk() (*int32, bool) {
	if o == nil || o.Duration == nil {
		return nil, false
	}
	return o.Duration, true
}

// HasDuration returns a boolean if a field has been set.
func (o *TaskRepeatOptions) HasDuration() bool {
	if o != nil && o.Duration != nil {
		return true
	}

	return false
}

// SetDuration gets a reference to the given int32 and assigns it to the Duration field.
func (o *TaskRepeatOptions) SetDuration(v int32) {
	o.Duration = &v
}

// GetEndsAt returns the EndsAt field value if set, zero value otherwise.
func (o *TaskRepeatOptions) GetEndsAt() map[string]interface{} {
	if o == nil || o.EndsAt == nil {
		var ret map[string]interface{}
		return ret
	}
	return *o.EndsAt
}

// GetEndsAtOk returns a tuple with the EndsAt field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TaskRepeatOptions) GetEndsAtOk() (*map[string]interface{}, bool) {
	if o == nil || o.EndsAt == nil {
		return nil, false
	}
	return o.EndsAt, true
}

// HasEndsAt returns a boolean if a field has been set.
func (o *TaskRepeatOptions) HasEndsAt() bool {
	if o != nil && o.EndsAt != nil {
		return true
	}

	return false
}

// SetEndsAt gets a reference to the given map[string]interface{} and assigns it to the EndsAt field.
func (o *TaskRepeatOptions) SetEndsAt(v map[string]interface{}) {
	o.EndsAt = &v
}

// GetFrequency returns the Frequency field value if set, zero value otherwise.
func (o *TaskRepeatOptions) GetFrequency() string {
	if o == nil || o.Frequency == nil {
		var ret string
		return ret
	}
	return *o.Frequency
}

// GetFrequencyOk returns a tuple with the Frequency field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TaskRepeatOptions) GetFrequencyOk() (*string, bool) {
	if o == nil || o.Frequency == nil {
		return nil, false
	}
	return o.Frequency, true
}

// HasFrequency returns a boolean if a field has been set.
func (o *TaskRepeatOptions) HasFrequency() bool {
	if o != nil && o.Frequency != nil {
		return true
	}

	return false
}

// SetFrequency gets a reference to the given string and assigns it to the Frequency field.
func (o *TaskRepeatOptions) SetFrequency(v string) {
	o.Frequency = &v
}

// GetMonthlyRepeatType returns the MonthlyRepeatType field value if set, zero value otherwise.
func (o *TaskRepeatOptions) GetMonthlyRepeatType() string {
	if o == nil || o.MonthlyRepeatType == nil {
		var ret string
		return ret
	}
	return *o.MonthlyRepeatType
}

// GetMonthlyRepeatTypeOk returns a tuple with the MonthlyRepeatType field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TaskRepeatOptions) GetMonthlyRepeatTypeOk() (*string, bool) {
	if o == nil || o.MonthlyRepeatType == nil {
		return nil, false
	}
	return o.MonthlyRepeatType, true
}

// HasMonthlyRepeatType returns a boolean if a field has been set.
func (o *TaskRepeatOptions) HasMonthlyRepeatType() bool {
	if o != nil && o.MonthlyRepeatType != nil {
		return true
	}

	return false
}

// SetMonthlyRepeatType gets a reference to the given string and assigns it to the MonthlyRepeatType field.
func (o *TaskRepeatOptions) SetMonthlyRepeatType(v string) {
	o.MonthlyRepeatType = &v
}

// GetSelectedDays returns the SelectedDays field value if set, zero value otherwise.
func (o *TaskRepeatOptions) GetSelectedDays() string {
	if o == nil || o.SelectedDays == nil {
		var ret string
		return ret
	}
	return *o.SelectedDays
}

// GetSelectedDaysOk returns a tuple with the SelectedDays field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TaskRepeatOptions) GetSelectedDaysOk() (*string, bool) {
	if o == nil || o.SelectedDays == nil {
		return nil, false
	}
	return o.SelectedDays, true
}

// HasSelectedDays returns a boolean if a field has been set.
func (o *TaskRepeatOptions) HasSelectedDays() bool {
	if o != nil && o.SelectedDays != nil {
		return true
	}

	return false
}

// SetSelectedDays gets a reference to the given string and assigns it to the SelectedDays field.
func (o *TaskRepeatOptions) SetSelectedDays(v string) {
	o.SelectedDays = &v
}

func (o TaskRepeatOptions) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.Duration != nil {
		toSerialize["duration"] = o.Duration
	}
	if o.EndsAt != nil {
		toSerialize["endsAt"] = o.EndsAt
	}
	if o.Frequency != nil {
		toSerialize["frequency"] = o.Frequency
	}
	if o.MonthlyRepeatType != nil {
		toSerialize["monthlyRepeatType"] = o.MonthlyRepeatType
	}
	if o.SelectedDays != nil {
		toSerialize["selectedDays"] = o.SelectedDays
	}
	return json.Marshal(toSerialize)
}

type NullableTaskRepeatOptions struct {
	value *TaskRepeatOptions
	isSet bool
}

func (v NullableTaskRepeatOptions) Get() *TaskRepeatOptions {
	return v.value
}

func (v *NullableTaskRepeatOptions) Set(val *TaskRepeatOptions) {
	v.value = val
	v.isSet = true
}

func (v NullableTaskRepeatOptions) IsSet() bool {
	return v.isSet
}

func (v *NullableTaskRepeatOptions) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableTaskRepeatOptions(val *TaskRepeatOptions) *NullableTaskRepeatOptions {
	return &NullableTaskRepeatOptions{value: val, isSet: true}
}

func (v NullableTaskRepeatOptions) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableTaskRepeatOptions) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


