/*
 * Teamwork.com Projects API
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * API version: 3.0
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package projv3

import (
	"encoding/json"
)

// ViewCustomFieldProject CustomFieldProject contains all the information returned from a project customfield value.
type ViewCustomFieldProject struct {
	CreatedAt *string `json:"createdAt,omitempty"`
	CreatedBy *int32 `json:"createdBy,omitempty"`
	Customfield *ViewRelationship `json:"customfield,omitempty"`
	CustomfieldId *int32 `json:"customfieldId,omitempty"`
	Id *int32 `json:"id,omitempty"`
	Project *ViewRelationship `json:"project,omitempty"`
	ProjectId *int32 `json:"projectId,omitempty"`
	Value *map[string]interface{} `json:"value,omitempty"`
}

// NewViewCustomFieldProject instantiates a new ViewCustomFieldProject object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewViewCustomFieldProject() *ViewCustomFieldProject {
	this := ViewCustomFieldProject{}
	return &this
}

// NewViewCustomFieldProjectWithDefaults instantiates a new ViewCustomFieldProject object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewViewCustomFieldProjectWithDefaults() *ViewCustomFieldProject {
	this := ViewCustomFieldProject{}
	return &this
}

// GetCreatedAt returns the CreatedAt field value if set, zero value otherwise.
func (o *ViewCustomFieldProject) GetCreatedAt() string {
	if o == nil || o.CreatedAt == nil {
		var ret string
		return ret
	}
	return *o.CreatedAt
}

// GetCreatedAtOk returns a tuple with the CreatedAt field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ViewCustomFieldProject) GetCreatedAtOk() (*string, bool) {
	if o == nil || o.CreatedAt == nil {
		return nil, false
	}
	return o.CreatedAt, true
}

// HasCreatedAt returns a boolean if a field has been set.
func (o *ViewCustomFieldProject) HasCreatedAt() bool {
	if o != nil && o.CreatedAt != nil {
		return true
	}

	return false
}

// SetCreatedAt gets a reference to the given string and assigns it to the CreatedAt field.
func (o *ViewCustomFieldProject) SetCreatedAt(v string) {
	o.CreatedAt = &v
}

// GetCreatedBy returns the CreatedBy field value if set, zero value otherwise.
func (o *ViewCustomFieldProject) GetCreatedBy() int32 {
	if o == nil || o.CreatedBy == nil {
		var ret int32
		return ret
	}
	return *o.CreatedBy
}

// GetCreatedByOk returns a tuple with the CreatedBy field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ViewCustomFieldProject) GetCreatedByOk() (*int32, bool) {
	if o == nil || o.CreatedBy == nil {
		return nil, false
	}
	return o.CreatedBy, true
}

// HasCreatedBy returns a boolean if a field has been set.
func (o *ViewCustomFieldProject) HasCreatedBy() bool {
	if o != nil && o.CreatedBy != nil {
		return true
	}

	return false
}

// SetCreatedBy gets a reference to the given int32 and assigns it to the CreatedBy field.
func (o *ViewCustomFieldProject) SetCreatedBy(v int32) {
	o.CreatedBy = &v
}

// GetCustomfield returns the Customfield field value if set, zero value otherwise.
func (o *ViewCustomFieldProject) GetCustomfield() ViewRelationship {
	if o == nil || o.Customfield == nil {
		var ret ViewRelationship
		return ret
	}
	return *o.Customfield
}

// GetCustomfieldOk returns a tuple with the Customfield field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ViewCustomFieldProject) GetCustomfieldOk() (*ViewRelationship, bool) {
	if o == nil || o.Customfield == nil {
		return nil, false
	}
	return o.Customfield, true
}

// HasCustomfield returns a boolean if a field has been set.
func (o *ViewCustomFieldProject) HasCustomfield() bool {
	if o != nil && o.Customfield != nil {
		return true
	}

	return false
}

// SetCustomfield gets a reference to the given ViewRelationship and assigns it to the Customfield field.
func (o *ViewCustomFieldProject) SetCustomfield(v ViewRelationship) {
	o.Customfield = &v
}

// GetCustomfieldId returns the CustomfieldId field value if set, zero value otherwise.
func (o *ViewCustomFieldProject) GetCustomfieldId() int32 {
	if o == nil || o.CustomfieldId == nil {
		var ret int32
		return ret
	}
	return *o.CustomfieldId
}

// GetCustomfieldIdOk returns a tuple with the CustomfieldId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ViewCustomFieldProject) GetCustomfieldIdOk() (*int32, bool) {
	if o == nil || o.CustomfieldId == nil {
		return nil, false
	}
	return o.CustomfieldId, true
}

// HasCustomfieldId returns a boolean if a field has been set.
func (o *ViewCustomFieldProject) HasCustomfieldId() bool {
	if o != nil && o.CustomfieldId != nil {
		return true
	}

	return false
}

// SetCustomfieldId gets a reference to the given int32 and assigns it to the CustomfieldId field.
func (o *ViewCustomFieldProject) SetCustomfieldId(v int32) {
	o.CustomfieldId = &v
}

// GetId returns the Id field value if set, zero value otherwise.
func (o *ViewCustomFieldProject) GetId() int32 {
	if o == nil || o.Id == nil {
		var ret int32
		return ret
	}
	return *o.Id
}

// GetIdOk returns a tuple with the Id field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ViewCustomFieldProject) GetIdOk() (*int32, bool) {
	if o == nil || o.Id == nil {
		return nil, false
	}
	return o.Id, true
}

// HasId returns a boolean if a field has been set.
func (o *ViewCustomFieldProject) HasId() bool {
	if o != nil && o.Id != nil {
		return true
	}

	return false
}

// SetId gets a reference to the given int32 and assigns it to the Id field.
func (o *ViewCustomFieldProject) SetId(v int32) {
	o.Id = &v
}

// GetProject returns the Project field value if set, zero value otherwise.
func (o *ViewCustomFieldProject) GetProject() ViewRelationship {
	if o == nil || o.Project == nil {
		var ret ViewRelationship
		return ret
	}
	return *o.Project
}

// GetProjectOk returns a tuple with the Project field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ViewCustomFieldProject) GetProjectOk() (*ViewRelationship, bool) {
	if o == nil || o.Project == nil {
		return nil, false
	}
	return o.Project, true
}

// HasProject returns a boolean if a field has been set.
func (o *ViewCustomFieldProject) HasProject() bool {
	if o != nil && o.Project != nil {
		return true
	}

	return false
}

// SetProject gets a reference to the given ViewRelationship and assigns it to the Project field.
func (o *ViewCustomFieldProject) SetProject(v ViewRelationship) {
	o.Project = &v
}

// GetProjectId returns the ProjectId field value if set, zero value otherwise.
func (o *ViewCustomFieldProject) GetProjectId() int32 {
	if o == nil || o.ProjectId == nil {
		var ret int32
		return ret
	}
	return *o.ProjectId
}

// GetProjectIdOk returns a tuple with the ProjectId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ViewCustomFieldProject) GetProjectIdOk() (*int32, bool) {
	if o == nil || o.ProjectId == nil {
		return nil, false
	}
	return o.ProjectId, true
}

// HasProjectId returns a boolean if a field has been set.
func (o *ViewCustomFieldProject) HasProjectId() bool {
	if o != nil && o.ProjectId != nil {
		return true
	}

	return false
}

// SetProjectId gets a reference to the given int32 and assigns it to the ProjectId field.
func (o *ViewCustomFieldProject) SetProjectId(v int32) {
	o.ProjectId = &v
}

// GetValue returns the Value field value if set, zero value otherwise.
func (o *ViewCustomFieldProject) GetValue() map[string]interface{} {
	if o == nil || o.Value == nil {
		var ret map[string]interface{}
		return ret
	}
	return *o.Value
}

// GetValueOk returns a tuple with the Value field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ViewCustomFieldProject) GetValueOk() (*map[string]interface{}, bool) {
	if o == nil || o.Value == nil {
		return nil, false
	}
	return o.Value, true
}

// HasValue returns a boolean if a field has been set.
func (o *ViewCustomFieldProject) HasValue() bool {
	if o != nil && o.Value != nil {
		return true
	}

	return false
}

// SetValue gets a reference to the given map[string]interface{} and assigns it to the Value field.
func (o *ViewCustomFieldProject) SetValue(v map[string]interface{}) {
	o.Value = &v
}

func (o ViewCustomFieldProject) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.CreatedAt != nil {
		toSerialize["createdAt"] = o.CreatedAt
	}
	if o.CreatedBy != nil {
		toSerialize["createdBy"] = o.CreatedBy
	}
	if o.Customfield != nil {
		toSerialize["customfield"] = o.Customfield
	}
	if o.CustomfieldId != nil {
		toSerialize["customfieldId"] = o.CustomfieldId
	}
	if o.Id != nil {
		toSerialize["id"] = o.Id
	}
	if o.Project != nil {
		toSerialize["project"] = o.Project
	}
	if o.ProjectId != nil {
		toSerialize["projectId"] = o.ProjectId
	}
	if o.Value != nil {
		toSerialize["value"] = o.Value
	}
	return json.Marshal(toSerialize)
}

type NullableViewCustomFieldProject struct {
	value *ViewCustomFieldProject
	isSet bool
}

func (v NullableViewCustomFieldProject) Get() *ViewCustomFieldProject {
	return v.value
}

func (v *NullableViewCustomFieldProject) Set(val *ViewCustomFieldProject) {
	v.value = val
	v.isSet = true
}

func (v NullableViewCustomFieldProject) IsSet() bool {
	return v.isSet
}

func (v *NullableViewCustomFieldProject) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableViewCustomFieldProject(val *ViewCustomFieldProject) *NullableViewCustomFieldProject {
	return &NullableViewCustomFieldProject{value: val, isSet: true}
}

func (v NullableViewCustomFieldProject) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableViewCustomFieldProject) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


