/*
 * Teamwork Projects API
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * API version: 
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package pmv1

import (
	"encoding/json"
)

// ProjectsIdTasklistsJsonTodoList struct for ProjectsIdTasklistsJsonTodoList
type ProjectsIdTasklistsJsonTodoList struct {
	Description *string `json:"description,omitempty"`
	MilestoneId *string `json:"milestone-id,omitempty"`
	Name *string `json:"name,omitempty"`
	Pinned *bool `json:"pinned,omitempty"`
	Private *bool `json:"private,omitempty"`
	TodoListTemplateAssignments *ProjectsIdTasklistsJsonTodoListTodoListTemplateAssignments `json:"todo-list-template-assignments,omitempty"`
	TodoListTemplateId *string `json:"todo-list-template-id,omitempty"`
}

// NewProjectsIdTasklistsJsonTodoList instantiates a new ProjectsIdTasklistsJsonTodoList object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewProjectsIdTasklistsJsonTodoList() *ProjectsIdTasklistsJsonTodoList {
	this := ProjectsIdTasklistsJsonTodoList{}
	return &this
}

// NewProjectsIdTasklistsJsonTodoListWithDefaults instantiates a new ProjectsIdTasklistsJsonTodoList object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewProjectsIdTasklistsJsonTodoListWithDefaults() *ProjectsIdTasklistsJsonTodoList {
	this := ProjectsIdTasklistsJsonTodoList{}
	return &this
}

// GetDescription returns the Description field value if set, zero value otherwise.
func (o *ProjectsIdTasklistsJsonTodoList) GetDescription() string {
	if o == nil || o.Description == nil {
		var ret string
		return ret
	}
	return *o.Description
}

// GetDescriptionOk returns a tuple with the Description field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ProjectsIdTasklistsJsonTodoList) GetDescriptionOk() (*string, bool) {
	if o == nil || o.Description == nil {
		return nil, false
	}
	return o.Description, true
}

// HasDescription returns a boolean if a field has been set.
func (o *ProjectsIdTasklistsJsonTodoList) HasDescription() bool {
	if o != nil && o.Description != nil {
		return true
	}

	return false
}

// SetDescription gets a reference to the given string and assigns it to the Description field.
func (o *ProjectsIdTasklistsJsonTodoList) SetDescription(v string) {
	o.Description = &v
}

// GetMilestoneId returns the MilestoneId field value if set, zero value otherwise.
func (o *ProjectsIdTasklistsJsonTodoList) GetMilestoneId() string {
	if o == nil || o.MilestoneId == nil {
		var ret string
		return ret
	}
	return *o.MilestoneId
}

// GetMilestoneIdOk returns a tuple with the MilestoneId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ProjectsIdTasklistsJsonTodoList) GetMilestoneIdOk() (*string, bool) {
	if o == nil || o.MilestoneId == nil {
		return nil, false
	}
	return o.MilestoneId, true
}

// HasMilestoneId returns a boolean if a field has been set.
func (o *ProjectsIdTasklistsJsonTodoList) HasMilestoneId() bool {
	if o != nil && o.MilestoneId != nil {
		return true
	}

	return false
}

// SetMilestoneId gets a reference to the given string and assigns it to the MilestoneId field.
func (o *ProjectsIdTasklistsJsonTodoList) SetMilestoneId(v string) {
	o.MilestoneId = &v
}

// GetName returns the Name field value if set, zero value otherwise.
func (o *ProjectsIdTasklistsJsonTodoList) GetName() string {
	if o == nil || o.Name == nil {
		var ret string
		return ret
	}
	return *o.Name
}

// GetNameOk returns a tuple with the Name field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ProjectsIdTasklistsJsonTodoList) GetNameOk() (*string, bool) {
	if o == nil || o.Name == nil {
		return nil, false
	}
	return o.Name, true
}

// HasName returns a boolean if a field has been set.
func (o *ProjectsIdTasklistsJsonTodoList) HasName() bool {
	if o != nil && o.Name != nil {
		return true
	}

	return false
}

// SetName gets a reference to the given string and assigns it to the Name field.
func (o *ProjectsIdTasklistsJsonTodoList) SetName(v string) {
	o.Name = &v
}

// GetPinned returns the Pinned field value if set, zero value otherwise.
func (o *ProjectsIdTasklistsJsonTodoList) GetPinned() bool {
	if o == nil || o.Pinned == nil {
		var ret bool
		return ret
	}
	return *o.Pinned
}

// GetPinnedOk returns a tuple with the Pinned field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ProjectsIdTasklistsJsonTodoList) GetPinnedOk() (*bool, bool) {
	if o == nil || o.Pinned == nil {
		return nil, false
	}
	return o.Pinned, true
}

// HasPinned returns a boolean if a field has been set.
func (o *ProjectsIdTasklistsJsonTodoList) HasPinned() bool {
	if o != nil && o.Pinned != nil {
		return true
	}

	return false
}

// SetPinned gets a reference to the given bool and assigns it to the Pinned field.
func (o *ProjectsIdTasklistsJsonTodoList) SetPinned(v bool) {
	o.Pinned = &v
}

// GetPrivate returns the Private field value if set, zero value otherwise.
func (o *ProjectsIdTasklistsJsonTodoList) GetPrivate() bool {
	if o == nil || o.Private == nil {
		var ret bool
		return ret
	}
	return *o.Private
}

// GetPrivateOk returns a tuple with the Private field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ProjectsIdTasklistsJsonTodoList) GetPrivateOk() (*bool, bool) {
	if o == nil || o.Private == nil {
		return nil, false
	}
	return o.Private, true
}

// HasPrivate returns a boolean if a field has been set.
func (o *ProjectsIdTasklistsJsonTodoList) HasPrivate() bool {
	if o != nil && o.Private != nil {
		return true
	}

	return false
}

// SetPrivate gets a reference to the given bool and assigns it to the Private field.
func (o *ProjectsIdTasklistsJsonTodoList) SetPrivate(v bool) {
	o.Private = &v
}

// GetTodoListTemplateAssignments returns the TodoListTemplateAssignments field value if set, zero value otherwise.
func (o *ProjectsIdTasklistsJsonTodoList) GetTodoListTemplateAssignments() ProjectsIdTasklistsJsonTodoListTodoListTemplateAssignments {
	if o == nil || o.TodoListTemplateAssignments == nil {
		var ret ProjectsIdTasklistsJsonTodoListTodoListTemplateAssignments
		return ret
	}
	return *o.TodoListTemplateAssignments
}

// GetTodoListTemplateAssignmentsOk returns a tuple with the TodoListTemplateAssignments field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ProjectsIdTasklistsJsonTodoList) GetTodoListTemplateAssignmentsOk() (*ProjectsIdTasklistsJsonTodoListTodoListTemplateAssignments, bool) {
	if o == nil || o.TodoListTemplateAssignments == nil {
		return nil, false
	}
	return o.TodoListTemplateAssignments, true
}

// HasTodoListTemplateAssignments returns a boolean if a field has been set.
func (o *ProjectsIdTasklistsJsonTodoList) HasTodoListTemplateAssignments() bool {
	if o != nil && o.TodoListTemplateAssignments != nil {
		return true
	}

	return false
}

// SetTodoListTemplateAssignments gets a reference to the given ProjectsIdTasklistsJsonTodoListTodoListTemplateAssignments and assigns it to the TodoListTemplateAssignments field.
func (o *ProjectsIdTasklistsJsonTodoList) SetTodoListTemplateAssignments(v ProjectsIdTasklistsJsonTodoListTodoListTemplateAssignments) {
	o.TodoListTemplateAssignments = &v
}

// GetTodoListTemplateId returns the TodoListTemplateId field value if set, zero value otherwise.
func (o *ProjectsIdTasklistsJsonTodoList) GetTodoListTemplateId() string {
	if o == nil || o.TodoListTemplateId == nil {
		var ret string
		return ret
	}
	return *o.TodoListTemplateId
}

// GetTodoListTemplateIdOk returns a tuple with the TodoListTemplateId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ProjectsIdTasklistsJsonTodoList) GetTodoListTemplateIdOk() (*string, bool) {
	if o == nil || o.TodoListTemplateId == nil {
		return nil, false
	}
	return o.TodoListTemplateId, true
}

// HasTodoListTemplateId returns a boolean if a field has been set.
func (o *ProjectsIdTasklistsJsonTodoList) HasTodoListTemplateId() bool {
	if o != nil && o.TodoListTemplateId != nil {
		return true
	}

	return false
}

// SetTodoListTemplateId gets a reference to the given string and assigns it to the TodoListTemplateId field.
func (o *ProjectsIdTasklistsJsonTodoList) SetTodoListTemplateId(v string) {
	o.TodoListTemplateId = &v
}

func (o ProjectsIdTasklistsJsonTodoList) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.Description != nil {
		toSerialize["description"] = o.Description
	}
	if o.MilestoneId != nil {
		toSerialize["milestone-id"] = o.MilestoneId
	}
	if o.Name != nil {
		toSerialize["name"] = o.Name
	}
	if o.Pinned != nil {
		toSerialize["pinned"] = o.Pinned
	}
	if o.Private != nil {
		toSerialize["private"] = o.Private
	}
	if o.TodoListTemplateAssignments != nil {
		toSerialize["todo-list-template-assignments"] = o.TodoListTemplateAssignments
	}
	if o.TodoListTemplateId != nil {
		toSerialize["todo-list-template-id"] = o.TodoListTemplateId
	}
	return json.Marshal(toSerialize)
}

type NullableProjectsIdTasklistsJsonTodoList struct {
	value *ProjectsIdTasklistsJsonTodoList
	isSet bool
}

func (v NullableProjectsIdTasklistsJsonTodoList) Get() *ProjectsIdTasklistsJsonTodoList {
	return v.value
}

func (v *NullableProjectsIdTasklistsJsonTodoList) Set(val *ProjectsIdTasklistsJsonTodoList) {
	v.value = val
	v.isSet = true
}

func (v NullableProjectsIdTasklistsJsonTodoList) IsSet() bool {
	return v.isSet
}

func (v *NullableProjectsIdTasklistsJsonTodoList) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableProjectsIdTasklistsJsonTodoList(val *ProjectsIdTasklistsJsonTodoList) *NullableProjectsIdTasklistsJsonTodoList {
	return &NullableProjectsIdTasklistsJsonTodoList{value: val, isSet: true}
}

func (v NullableProjectsIdTasklistsJsonTodoList) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableProjectsIdTasklistsJsonTodoList) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


