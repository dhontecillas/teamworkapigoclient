/*
 * Teamwork Projects API
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * API version: 
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package pmv1

import (
	"encoding/json"
)

// InlineObject84 struct for InlineObject84
type InlineObject84 struct {
	Risk ProjectsIdRisksJsonRisk `json:"risk"`
}

// NewInlineObject84 instantiates a new InlineObject84 object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewInlineObject84(risk ProjectsIdRisksJsonRisk) *InlineObject84 {
	this := InlineObject84{}
	this.Risk = risk
	return &this
}

// NewInlineObject84WithDefaults instantiates a new InlineObject84 object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewInlineObject84WithDefaults() *InlineObject84 {
	this := InlineObject84{}
	return &this
}

// GetRisk returns the Risk field value
func (o *InlineObject84) GetRisk() ProjectsIdRisksJsonRisk {
	if o == nil {
		var ret ProjectsIdRisksJsonRisk
		return ret
	}

	return o.Risk
}

// GetRiskOk returns a tuple with the Risk field value
// and a boolean to check if the value has been set.
func (o *InlineObject84) GetRiskOk() (*ProjectsIdRisksJsonRisk, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.Risk, true
}

// SetRisk sets field value
func (o *InlineObject84) SetRisk(v ProjectsIdRisksJsonRisk) {
	o.Risk = v
}

func (o InlineObject84) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if true {
		toSerialize["risk"] = o.Risk
	}
	return json.Marshal(toSerialize)
}

type NullableInlineObject84 struct {
	value *InlineObject84
	isSet bool
}

func (v NullableInlineObject84) Get() *InlineObject84 {
	return v.value
}

func (v *NullableInlineObject84) Set(val *InlineObject84) {
	v.value = val
	v.isSet = true
}

func (v NullableInlineObject84) IsSet() bool {
	return v.isSet
}

func (v *NullableInlineObject84) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableInlineObject84(val *InlineObject84) *NullableInlineObject84 {
	return &NullableInlineObject84{value: val, isSet: true}
}

func (v NullableInlineObject84) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableInlineObject84) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


