/*
 * Teamwork Projects API
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * API version: 
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package pmv1

import (
	"encoding/json"
)

// InlineObject69 struct for InlineObject69
type InlineObject69 struct {
	Post ProjectsIdPostsJsonPost `json:"post"`
}

// NewInlineObject69 instantiates a new InlineObject69 object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewInlineObject69(post ProjectsIdPostsJsonPost, ) *InlineObject69 {
	this := InlineObject69{}
	this.Post = post
	return &this
}

// NewInlineObject69WithDefaults instantiates a new InlineObject69 object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewInlineObject69WithDefaults() *InlineObject69 {
	this := InlineObject69{}
	return &this
}

// GetPost returns the Post field value
func (o *InlineObject69) GetPost() ProjectsIdPostsJsonPost {
	if o == nil  {
		var ret ProjectsIdPostsJsonPost
		return ret
	}

	return o.Post
}

// GetPostOk returns a tuple with the Post field value
// and a boolean to check if the value has been set.
func (o *InlineObject69) GetPostOk() (*ProjectsIdPostsJsonPost, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.Post, true
}

// SetPost sets field value
func (o *InlineObject69) SetPost(v ProjectsIdPostsJsonPost) {
	o.Post = v
}

func (o InlineObject69) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if true {
		toSerialize["post"] = o.Post
	}
	return json.Marshal(toSerialize)
}

type NullableInlineObject69 struct {
	value *InlineObject69
	isSet bool
}

func (v NullableInlineObject69) Get() *InlineObject69 {
	return v.value
}

func (v *NullableInlineObject69) Set(val *InlineObject69) {
	v.value = val
	v.isSet = true
}

func (v NullableInlineObject69) IsSet() bool {
	return v.isSet
}

func (v *NullableInlineObject69) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableInlineObject69(val *InlineObject69) *NullableInlineObject69 {
	return &NullableInlineObject69{value: val, isSet: true}
}

func (v NullableInlineObject69) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableInlineObject69) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


