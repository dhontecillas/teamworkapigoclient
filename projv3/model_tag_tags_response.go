/*
 * Teamwork.com Projects API
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * API version: 3.0
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package projv3

import (
	"encoding/json"
)

// TagTagsResponse TagsResponse contains information about a group of tags.
type TagTagsResponse struct {
	Meta *ViewMeta `json:"meta,omitempty"`
	Tags *[]ViewTag `json:"tags,omitempty"`
}

// NewTagTagsResponse instantiates a new TagTagsResponse object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewTagTagsResponse() *TagTagsResponse {
	this := TagTagsResponse{}
	return &this
}

// NewTagTagsResponseWithDefaults instantiates a new TagTagsResponse object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewTagTagsResponseWithDefaults() *TagTagsResponse {
	this := TagTagsResponse{}
	return &this
}

// GetMeta returns the Meta field value if set, zero value otherwise.
func (o *TagTagsResponse) GetMeta() ViewMeta {
	if o == nil || o.Meta == nil {
		var ret ViewMeta
		return ret
	}
	return *o.Meta
}

// GetMetaOk returns a tuple with the Meta field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TagTagsResponse) GetMetaOk() (*ViewMeta, bool) {
	if o == nil || o.Meta == nil {
		return nil, false
	}
	return o.Meta, true
}

// HasMeta returns a boolean if a field has been set.
func (o *TagTagsResponse) HasMeta() bool {
	if o != nil && o.Meta != nil {
		return true
	}

	return false
}

// SetMeta gets a reference to the given ViewMeta and assigns it to the Meta field.
func (o *TagTagsResponse) SetMeta(v ViewMeta) {
	o.Meta = &v
}

// GetTags returns the Tags field value if set, zero value otherwise.
func (o *TagTagsResponse) GetTags() []ViewTag {
	if o == nil || o.Tags == nil {
		var ret []ViewTag
		return ret
	}
	return *o.Tags
}

// GetTagsOk returns a tuple with the Tags field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TagTagsResponse) GetTagsOk() (*[]ViewTag, bool) {
	if o == nil || o.Tags == nil {
		return nil, false
	}
	return o.Tags, true
}

// HasTags returns a boolean if a field has been set.
func (o *TagTagsResponse) HasTags() bool {
	if o != nil && o.Tags != nil {
		return true
	}

	return false
}

// SetTags gets a reference to the given []ViewTag and assigns it to the Tags field.
func (o *TagTagsResponse) SetTags(v []ViewTag) {
	o.Tags = &v
}

func (o TagTagsResponse) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.Meta != nil {
		toSerialize["meta"] = o.Meta
	}
	if o.Tags != nil {
		toSerialize["tags"] = o.Tags
	}
	return json.Marshal(toSerialize)
}

type NullableTagTagsResponse struct {
	value *TagTagsResponse
	isSet bool
}

func (v NullableTagTagsResponse) Get() *TagTagsResponse {
	return v.value
}

func (v *NullableTagTagsResponse) Set(val *TagTagsResponse) {
	v.value = val
	v.isSet = true
}

func (v NullableTagTagsResponse) IsSet() bool {
	return v.isSet
}

func (v *NullableTagTagsResponse) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableTagTagsResponse(val *TagTagsResponse) *NullableTagTagsResponse {
	return &NullableTagTagsResponse{value: val, isSet: true}
}

func (v NullableTagTagsResponse) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableTagTagsResponse) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


