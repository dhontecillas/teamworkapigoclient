/*
 * Teamwork Projects API
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * API version: 
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package pmv1

import (
	"encoding/json"
)

// InlineObject73 struct for InlineObject73
type InlineObject73 struct {
	TodoList *ProjectsIdTasklistsJsonTodoList `json:"todo-list,omitempty"`
}

// NewInlineObject73 instantiates a new InlineObject73 object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewInlineObject73() *InlineObject73 {
	this := InlineObject73{}
	return &this
}

// NewInlineObject73WithDefaults instantiates a new InlineObject73 object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewInlineObject73WithDefaults() *InlineObject73 {
	this := InlineObject73{}
	return &this
}

// GetTodoList returns the TodoList field value if set, zero value otherwise.
func (o *InlineObject73) GetTodoList() ProjectsIdTasklistsJsonTodoList {
	if o == nil || o.TodoList == nil {
		var ret ProjectsIdTasklistsJsonTodoList
		return ret
	}
	return *o.TodoList
}

// GetTodoListOk returns a tuple with the TodoList field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InlineObject73) GetTodoListOk() (*ProjectsIdTasklistsJsonTodoList, bool) {
	if o == nil || o.TodoList == nil {
		return nil, false
	}
	return o.TodoList, true
}

// HasTodoList returns a boolean if a field has been set.
func (o *InlineObject73) HasTodoList() bool {
	if o != nil && o.TodoList != nil {
		return true
	}

	return false
}

// SetTodoList gets a reference to the given ProjectsIdTasklistsJsonTodoList and assigns it to the TodoList field.
func (o *InlineObject73) SetTodoList(v ProjectsIdTasklistsJsonTodoList) {
	o.TodoList = &v
}

func (o InlineObject73) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.TodoList != nil {
		toSerialize["todo-list"] = o.TodoList
	}
	return json.Marshal(toSerialize)
}

type NullableInlineObject73 struct {
	value *InlineObject73
	isSet bool
}

func (v NullableInlineObject73) Get() *InlineObject73 {
	return v.value
}

func (v *NullableInlineObject73) Set(val *InlineObject73) {
	v.value = val
	v.isSet = true
}

func (v NullableInlineObject73) IsSet() bool {
	return v.isSet
}

func (v *NullableInlineObject73) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableInlineObject73(val *InlineObject73) *NullableInlineObject73 {
	return &NullableInlineObject73{value: val, isSet: true}
}

func (v NullableInlineObject73) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableInlineObject73) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


