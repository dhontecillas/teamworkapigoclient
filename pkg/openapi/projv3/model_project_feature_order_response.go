/*
 * Teamwork.com Projects API
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * API version: 3.0
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package projv3

import (
	"encoding/json"
)

// ProjectFeatureOrderResponse FeatureOrderResponse is the api response containing information about the order to display the featues in the UI.
type ProjectFeatureOrderResponse struct {
	FeatureOrder *ProjectFeatureOrder `json:"featureOrder,omitempty"`
}

// NewProjectFeatureOrderResponse instantiates a new ProjectFeatureOrderResponse object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewProjectFeatureOrderResponse() *ProjectFeatureOrderResponse {
	this := ProjectFeatureOrderResponse{}
	return &this
}

// NewProjectFeatureOrderResponseWithDefaults instantiates a new ProjectFeatureOrderResponse object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewProjectFeatureOrderResponseWithDefaults() *ProjectFeatureOrderResponse {
	this := ProjectFeatureOrderResponse{}
	return &this
}

// GetFeatureOrder returns the FeatureOrder field value if set, zero value otherwise.
func (o *ProjectFeatureOrderResponse) GetFeatureOrder() ProjectFeatureOrder {
	if o == nil || o.FeatureOrder == nil {
		var ret ProjectFeatureOrder
		return ret
	}
	return *o.FeatureOrder
}

// GetFeatureOrderOk returns a tuple with the FeatureOrder field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ProjectFeatureOrderResponse) GetFeatureOrderOk() (*ProjectFeatureOrder, bool) {
	if o == nil || o.FeatureOrder == nil {
		return nil, false
	}
	return o.FeatureOrder, true
}

// HasFeatureOrder returns a boolean if a field has been set.
func (o *ProjectFeatureOrderResponse) HasFeatureOrder() bool {
	if o != nil && o.FeatureOrder != nil {
		return true
	}

	return false
}

// SetFeatureOrder gets a reference to the given ProjectFeatureOrder and assigns it to the FeatureOrder field.
func (o *ProjectFeatureOrderResponse) SetFeatureOrder(v ProjectFeatureOrder) {
	o.FeatureOrder = &v
}

func (o ProjectFeatureOrderResponse) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.FeatureOrder != nil {
		toSerialize["featureOrder"] = o.FeatureOrder
	}
	return json.Marshal(toSerialize)
}

type NullableProjectFeatureOrderResponse struct {
	value *ProjectFeatureOrderResponse
	isSet bool
}

func (v NullableProjectFeatureOrderResponse) Get() *ProjectFeatureOrderResponse {
	return v.value
}

func (v *NullableProjectFeatureOrderResponse) Set(val *ProjectFeatureOrderResponse) {
	v.value = val
	v.isSet = true
}

func (v NullableProjectFeatureOrderResponse) IsSet() bool {
	return v.isSet
}

func (v *NullableProjectFeatureOrderResponse) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableProjectFeatureOrderResponse(val *ProjectFeatureOrderResponse) *NullableProjectFeatureOrderResponse {
	return &NullableProjectFeatureOrderResponse{value: val, isSet: true}
}

func (v NullableProjectFeatureOrderResponse) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableProjectFeatureOrderResponse) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


