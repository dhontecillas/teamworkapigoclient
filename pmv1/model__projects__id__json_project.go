/*
 * Teamwork Projects API
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * API version: 
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package pmv1

import (
	"encoding/json"
)

// ProjectsIdJsonProject struct for ProjectsIdJsonProject
type ProjectsIdJsonProject struct {
	CategoryId *string `json:"category-id,omitempty"`
	CompanyId *string `json:"companyId,omitempty"`
	DefaultPrivacy *string `json:"defaultPrivacy,omitempty"`
	Description *string `json:"description,omitempty"`
	EndDate *string `json:"endDate,omitempty"`
	HarvestTimersEnabled *string `json:"harvest-timers-enabled,omitempty"`
	// To update your project logo, send in your pending file attachment. 
	LogoPendingFileRef *string `json:"logoPendingFileRef,omitempty"`
	Name *string `json:"name,omitempty"`
	NewCompany *string `json:"newCompany,omitempty"`
	PrivacyEnabled *string `json:"privacyEnabled,omitempty"`
	ReplyByEmailEnabled *string `json:"replyByEmailEnabled,omitempty"`
	StartDate *string `json:"startDate,omitempty"`
	Status *string `json:"status,omitempty"`
	Tags *string `json:"tags,omitempty"`
	UseBilling *string `json:"use-billing,omitempty"`
	UseFiles *string `json:"use-files,omitempty"`
	UseLinks *string `json:"use-links,omitempty"`
	UseMessages *string `json:"use-messages,omitempty"`
	UseMilestones *string `json:"use-milestones,omitempty"`
	UseNotebook *string `json:"use-notebook,omitempty"`
	UseRiskregister *string `json:"use-riskregister,omitempty"`
	UseTasks *string `json:"use-tasks,omitempty"`
	UseTime *string `json:"use-time,omitempty"`
}

// NewProjectsIdJsonProject instantiates a new ProjectsIdJsonProject object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewProjectsIdJsonProject() *ProjectsIdJsonProject {
	this := ProjectsIdJsonProject{}
	return &this
}

// NewProjectsIdJsonProjectWithDefaults instantiates a new ProjectsIdJsonProject object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewProjectsIdJsonProjectWithDefaults() *ProjectsIdJsonProject {
	this := ProjectsIdJsonProject{}
	return &this
}

// GetCategoryId returns the CategoryId field value if set, zero value otherwise.
func (o *ProjectsIdJsonProject) GetCategoryId() string {
	if o == nil || o.CategoryId == nil {
		var ret string
		return ret
	}
	return *o.CategoryId
}

// GetCategoryIdOk returns a tuple with the CategoryId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ProjectsIdJsonProject) GetCategoryIdOk() (*string, bool) {
	if o == nil || o.CategoryId == nil {
		return nil, false
	}
	return o.CategoryId, true
}

// HasCategoryId returns a boolean if a field has been set.
func (o *ProjectsIdJsonProject) HasCategoryId() bool {
	if o != nil && o.CategoryId != nil {
		return true
	}

	return false
}

// SetCategoryId gets a reference to the given string and assigns it to the CategoryId field.
func (o *ProjectsIdJsonProject) SetCategoryId(v string) {
	o.CategoryId = &v
}

// GetCompanyId returns the CompanyId field value if set, zero value otherwise.
func (o *ProjectsIdJsonProject) GetCompanyId() string {
	if o == nil || o.CompanyId == nil {
		var ret string
		return ret
	}
	return *o.CompanyId
}

// GetCompanyIdOk returns a tuple with the CompanyId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ProjectsIdJsonProject) GetCompanyIdOk() (*string, bool) {
	if o == nil || o.CompanyId == nil {
		return nil, false
	}
	return o.CompanyId, true
}

// HasCompanyId returns a boolean if a field has been set.
func (o *ProjectsIdJsonProject) HasCompanyId() bool {
	if o != nil && o.CompanyId != nil {
		return true
	}

	return false
}

// SetCompanyId gets a reference to the given string and assigns it to the CompanyId field.
func (o *ProjectsIdJsonProject) SetCompanyId(v string) {
	o.CompanyId = &v
}

// GetDefaultPrivacy returns the DefaultPrivacy field value if set, zero value otherwise.
func (o *ProjectsIdJsonProject) GetDefaultPrivacy() string {
	if o == nil || o.DefaultPrivacy == nil {
		var ret string
		return ret
	}
	return *o.DefaultPrivacy
}

// GetDefaultPrivacyOk returns a tuple with the DefaultPrivacy field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ProjectsIdJsonProject) GetDefaultPrivacyOk() (*string, bool) {
	if o == nil || o.DefaultPrivacy == nil {
		return nil, false
	}
	return o.DefaultPrivacy, true
}

// HasDefaultPrivacy returns a boolean if a field has been set.
func (o *ProjectsIdJsonProject) HasDefaultPrivacy() bool {
	if o != nil && o.DefaultPrivacy != nil {
		return true
	}

	return false
}

// SetDefaultPrivacy gets a reference to the given string and assigns it to the DefaultPrivacy field.
func (o *ProjectsIdJsonProject) SetDefaultPrivacy(v string) {
	o.DefaultPrivacy = &v
}

// GetDescription returns the Description field value if set, zero value otherwise.
func (o *ProjectsIdJsonProject) GetDescription() string {
	if o == nil || o.Description == nil {
		var ret string
		return ret
	}
	return *o.Description
}

// GetDescriptionOk returns a tuple with the Description field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ProjectsIdJsonProject) GetDescriptionOk() (*string, bool) {
	if o == nil || o.Description == nil {
		return nil, false
	}
	return o.Description, true
}

// HasDescription returns a boolean if a field has been set.
func (o *ProjectsIdJsonProject) HasDescription() bool {
	if o != nil && o.Description != nil {
		return true
	}

	return false
}

// SetDescription gets a reference to the given string and assigns it to the Description field.
func (o *ProjectsIdJsonProject) SetDescription(v string) {
	o.Description = &v
}

// GetEndDate returns the EndDate field value if set, zero value otherwise.
func (o *ProjectsIdJsonProject) GetEndDate() string {
	if o == nil || o.EndDate == nil {
		var ret string
		return ret
	}
	return *o.EndDate
}

// GetEndDateOk returns a tuple with the EndDate field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ProjectsIdJsonProject) GetEndDateOk() (*string, bool) {
	if o == nil || o.EndDate == nil {
		return nil, false
	}
	return o.EndDate, true
}

// HasEndDate returns a boolean if a field has been set.
func (o *ProjectsIdJsonProject) HasEndDate() bool {
	if o != nil && o.EndDate != nil {
		return true
	}

	return false
}

// SetEndDate gets a reference to the given string and assigns it to the EndDate field.
func (o *ProjectsIdJsonProject) SetEndDate(v string) {
	o.EndDate = &v
}

// GetHarvestTimersEnabled returns the HarvestTimersEnabled field value if set, zero value otherwise.
func (o *ProjectsIdJsonProject) GetHarvestTimersEnabled() string {
	if o == nil || o.HarvestTimersEnabled == nil {
		var ret string
		return ret
	}
	return *o.HarvestTimersEnabled
}

// GetHarvestTimersEnabledOk returns a tuple with the HarvestTimersEnabled field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ProjectsIdJsonProject) GetHarvestTimersEnabledOk() (*string, bool) {
	if o == nil || o.HarvestTimersEnabled == nil {
		return nil, false
	}
	return o.HarvestTimersEnabled, true
}

// HasHarvestTimersEnabled returns a boolean if a field has been set.
func (o *ProjectsIdJsonProject) HasHarvestTimersEnabled() bool {
	if o != nil && o.HarvestTimersEnabled != nil {
		return true
	}

	return false
}

// SetHarvestTimersEnabled gets a reference to the given string and assigns it to the HarvestTimersEnabled field.
func (o *ProjectsIdJsonProject) SetHarvestTimersEnabled(v string) {
	o.HarvestTimersEnabled = &v
}

// GetLogoPendingFileRef returns the LogoPendingFileRef field value if set, zero value otherwise.
func (o *ProjectsIdJsonProject) GetLogoPendingFileRef() string {
	if o == nil || o.LogoPendingFileRef == nil {
		var ret string
		return ret
	}
	return *o.LogoPendingFileRef
}

// GetLogoPendingFileRefOk returns a tuple with the LogoPendingFileRef field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ProjectsIdJsonProject) GetLogoPendingFileRefOk() (*string, bool) {
	if o == nil || o.LogoPendingFileRef == nil {
		return nil, false
	}
	return o.LogoPendingFileRef, true
}

// HasLogoPendingFileRef returns a boolean if a field has been set.
func (o *ProjectsIdJsonProject) HasLogoPendingFileRef() bool {
	if o != nil && o.LogoPendingFileRef != nil {
		return true
	}

	return false
}

// SetLogoPendingFileRef gets a reference to the given string and assigns it to the LogoPendingFileRef field.
func (o *ProjectsIdJsonProject) SetLogoPendingFileRef(v string) {
	o.LogoPendingFileRef = &v
}

// GetName returns the Name field value if set, zero value otherwise.
func (o *ProjectsIdJsonProject) GetName() string {
	if o == nil || o.Name == nil {
		var ret string
		return ret
	}
	return *o.Name
}

// GetNameOk returns a tuple with the Name field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ProjectsIdJsonProject) GetNameOk() (*string, bool) {
	if o == nil || o.Name == nil {
		return nil, false
	}
	return o.Name, true
}

// HasName returns a boolean if a field has been set.
func (o *ProjectsIdJsonProject) HasName() bool {
	if o != nil && o.Name != nil {
		return true
	}

	return false
}

// SetName gets a reference to the given string and assigns it to the Name field.
func (o *ProjectsIdJsonProject) SetName(v string) {
	o.Name = &v
}

// GetNewCompany returns the NewCompany field value if set, zero value otherwise.
func (o *ProjectsIdJsonProject) GetNewCompany() string {
	if o == nil || o.NewCompany == nil {
		var ret string
		return ret
	}
	return *o.NewCompany
}

// GetNewCompanyOk returns a tuple with the NewCompany field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ProjectsIdJsonProject) GetNewCompanyOk() (*string, bool) {
	if o == nil || o.NewCompany == nil {
		return nil, false
	}
	return o.NewCompany, true
}

// HasNewCompany returns a boolean if a field has been set.
func (o *ProjectsIdJsonProject) HasNewCompany() bool {
	if o != nil && o.NewCompany != nil {
		return true
	}

	return false
}

// SetNewCompany gets a reference to the given string and assigns it to the NewCompany field.
func (o *ProjectsIdJsonProject) SetNewCompany(v string) {
	o.NewCompany = &v
}

// GetPrivacyEnabled returns the PrivacyEnabled field value if set, zero value otherwise.
func (o *ProjectsIdJsonProject) GetPrivacyEnabled() string {
	if o == nil || o.PrivacyEnabled == nil {
		var ret string
		return ret
	}
	return *o.PrivacyEnabled
}

// GetPrivacyEnabledOk returns a tuple with the PrivacyEnabled field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ProjectsIdJsonProject) GetPrivacyEnabledOk() (*string, bool) {
	if o == nil || o.PrivacyEnabled == nil {
		return nil, false
	}
	return o.PrivacyEnabled, true
}

// HasPrivacyEnabled returns a boolean if a field has been set.
func (o *ProjectsIdJsonProject) HasPrivacyEnabled() bool {
	if o != nil && o.PrivacyEnabled != nil {
		return true
	}

	return false
}

// SetPrivacyEnabled gets a reference to the given string and assigns it to the PrivacyEnabled field.
func (o *ProjectsIdJsonProject) SetPrivacyEnabled(v string) {
	o.PrivacyEnabled = &v
}

// GetReplyByEmailEnabled returns the ReplyByEmailEnabled field value if set, zero value otherwise.
func (o *ProjectsIdJsonProject) GetReplyByEmailEnabled() string {
	if o == nil || o.ReplyByEmailEnabled == nil {
		var ret string
		return ret
	}
	return *o.ReplyByEmailEnabled
}

// GetReplyByEmailEnabledOk returns a tuple with the ReplyByEmailEnabled field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ProjectsIdJsonProject) GetReplyByEmailEnabledOk() (*string, bool) {
	if o == nil || o.ReplyByEmailEnabled == nil {
		return nil, false
	}
	return o.ReplyByEmailEnabled, true
}

// HasReplyByEmailEnabled returns a boolean if a field has been set.
func (o *ProjectsIdJsonProject) HasReplyByEmailEnabled() bool {
	if o != nil && o.ReplyByEmailEnabled != nil {
		return true
	}

	return false
}

// SetReplyByEmailEnabled gets a reference to the given string and assigns it to the ReplyByEmailEnabled field.
func (o *ProjectsIdJsonProject) SetReplyByEmailEnabled(v string) {
	o.ReplyByEmailEnabled = &v
}

// GetStartDate returns the StartDate field value if set, zero value otherwise.
func (o *ProjectsIdJsonProject) GetStartDate() string {
	if o == nil || o.StartDate == nil {
		var ret string
		return ret
	}
	return *o.StartDate
}

// GetStartDateOk returns a tuple with the StartDate field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ProjectsIdJsonProject) GetStartDateOk() (*string, bool) {
	if o == nil || o.StartDate == nil {
		return nil, false
	}
	return o.StartDate, true
}

// HasStartDate returns a boolean if a field has been set.
func (o *ProjectsIdJsonProject) HasStartDate() bool {
	if o != nil && o.StartDate != nil {
		return true
	}

	return false
}

// SetStartDate gets a reference to the given string and assigns it to the StartDate field.
func (o *ProjectsIdJsonProject) SetStartDate(v string) {
	o.StartDate = &v
}

// GetStatus returns the Status field value if set, zero value otherwise.
func (o *ProjectsIdJsonProject) GetStatus() string {
	if o == nil || o.Status == nil {
		var ret string
		return ret
	}
	return *o.Status
}

// GetStatusOk returns a tuple with the Status field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ProjectsIdJsonProject) GetStatusOk() (*string, bool) {
	if o == nil || o.Status == nil {
		return nil, false
	}
	return o.Status, true
}

// HasStatus returns a boolean if a field has been set.
func (o *ProjectsIdJsonProject) HasStatus() bool {
	if o != nil && o.Status != nil {
		return true
	}

	return false
}

// SetStatus gets a reference to the given string and assigns it to the Status field.
func (o *ProjectsIdJsonProject) SetStatus(v string) {
	o.Status = &v
}

// GetTags returns the Tags field value if set, zero value otherwise.
func (o *ProjectsIdJsonProject) GetTags() string {
	if o == nil || o.Tags == nil {
		var ret string
		return ret
	}
	return *o.Tags
}

// GetTagsOk returns a tuple with the Tags field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ProjectsIdJsonProject) GetTagsOk() (*string, bool) {
	if o == nil || o.Tags == nil {
		return nil, false
	}
	return o.Tags, true
}

// HasTags returns a boolean if a field has been set.
func (o *ProjectsIdJsonProject) HasTags() bool {
	if o != nil && o.Tags != nil {
		return true
	}

	return false
}

// SetTags gets a reference to the given string and assigns it to the Tags field.
func (o *ProjectsIdJsonProject) SetTags(v string) {
	o.Tags = &v
}

// GetUseBilling returns the UseBilling field value if set, zero value otherwise.
func (o *ProjectsIdJsonProject) GetUseBilling() string {
	if o == nil || o.UseBilling == nil {
		var ret string
		return ret
	}
	return *o.UseBilling
}

// GetUseBillingOk returns a tuple with the UseBilling field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ProjectsIdJsonProject) GetUseBillingOk() (*string, bool) {
	if o == nil || o.UseBilling == nil {
		return nil, false
	}
	return o.UseBilling, true
}

// HasUseBilling returns a boolean if a field has been set.
func (o *ProjectsIdJsonProject) HasUseBilling() bool {
	if o != nil && o.UseBilling != nil {
		return true
	}

	return false
}

// SetUseBilling gets a reference to the given string and assigns it to the UseBilling field.
func (o *ProjectsIdJsonProject) SetUseBilling(v string) {
	o.UseBilling = &v
}

// GetUseFiles returns the UseFiles field value if set, zero value otherwise.
func (o *ProjectsIdJsonProject) GetUseFiles() string {
	if o == nil || o.UseFiles == nil {
		var ret string
		return ret
	}
	return *o.UseFiles
}

// GetUseFilesOk returns a tuple with the UseFiles field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ProjectsIdJsonProject) GetUseFilesOk() (*string, bool) {
	if o == nil || o.UseFiles == nil {
		return nil, false
	}
	return o.UseFiles, true
}

// HasUseFiles returns a boolean if a field has been set.
func (o *ProjectsIdJsonProject) HasUseFiles() bool {
	if o != nil && o.UseFiles != nil {
		return true
	}

	return false
}

// SetUseFiles gets a reference to the given string and assigns it to the UseFiles field.
func (o *ProjectsIdJsonProject) SetUseFiles(v string) {
	o.UseFiles = &v
}

// GetUseLinks returns the UseLinks field value if set, zero value otherwise.
func (o *ProjectsIdJsonProject) GetUseLinks() string {
	if o == nil || o.UseLinks == nil {
		var ret string
		return ret
	}
	return *o.UseLinks
}

// GetUseLinksOk returns a tuple with the UseLinks field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ProjectsIdJsonProject) GetUseLinksOk() (*string, bool) {
	if o == nil || o.UseLinks == nil {
		return nil, false
	}
	return o.UseLinks, true
}

// HasUseLinks returns a boolean if a field has been set.
func (o *ProjectsIdJsonProject) HasUseLinks() bool {
	if o != nil && o.UseLinks != nil {
		return true
	}

	return false
}

// SetUseLinks gets a reference to the given string and assigns it to the UseLinks field.
func (o *ProjectsIdJsonProject) SetUseLinks(v string) {
	o.UseLinks = &v
}

// GetUseMessages returns the UseMessages field value if set, zero value otherwise.
func (o *ProjectsIdJsonProject) GetUseMessages() string {
	if o == nil || o.UseMessages == nil {
		var ret string
		return ret
	}
	return *o.UseMessages
}

// GetUseMessagesOk returns a tuple with the UseMessages field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ProjectsIdJsonProject) GetUseMessagesOk() (*string, bool) {
	if o == nil || o.UseMessages == nil {
		return nil, false
	}
	return o.UseMessages, true
}

// HasUseMessages returns a boolean if a field has been set.
func (o *ProjectsIdJsonProject) HasUseMessages() bool {
	if o != nil && o.UseMessages != nil {
		return true
	}

	return false
}

// SetUseMessages gets a reference to the given string and assigns it to the UseMessages field.
func (o *ProjectsIdJsonProject) SetUseMessages(v string) {
	o.UseMessages = &v
}

// GetUseMilestones returns the UseMilestones field value if set, zero value otherwise.
func (o *ProjectsIdJsonProject) GetUseMilestones() string {
	if o == nil || o.UseMilestones == nil {
		var ret string
		return ret
	}
	return *o.UseMilestones
}

// GetUseMilestonesOk returns a tuple with the UseMilestones field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ProjectsIdJsonProject) GetUseMilestonesOk() (*string, bool) {
	if o == nil || o.UseMilestones == nil {
		return nil, false
	}
	return o.UseMilestones, true
}

// HasUseMilestones returns a boolean if a field has been set.
func (o *ProjectsIdJsonProject) HasUseMilestones() bool {
	if o != nil && o.UseMilestones != nil {
		return true
	}

	return false
}

// SetUseMilestones gets a reference to the given string and assigns it to the UseMilestones field.
func (o *ProjectsIdJsonProject) SetUseMilestones(v string) {
	o.UseMilestones = &v
}

// GetUseNotebook returns the UseNotebook field value if set, zero value otherwise.
func (o *ProjectsIdJsonProject) GetUseNotebook() string {
	if o == nil || o.UseNotebook == nil {
		var ret string
		return ret
	}
	return *o.UseNotebook
}

// GetUseNotebookOk returns a tuple with the UseNotebook field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ProjectsIdJsonProject) GetUseNotebookOk() (*string, bool) {
	if o == nil || o.UseNotebook == nil {
		return nil, false
	}
	return o.UseNotebook, true
}

// HasUseNotebook returns a boolean if a field has been set.
func (o *ProjectsIdJsonProject) HasUseNotebook() bool {
	if o != nil && o.UseNotebook != nil {
		return true
	}

	return false
}

// SetUseNotebook gets a reference to the given string and assigns it to the UseNotebook field.
func (o *ProjectsIdJsonProject) SetUseNotebook(v string) {
	o.UseNotebook = &v
}

// GetUseRiskregister returns the UseRiskregister field value if set, zero value otherwise.
func (o *ProjectsIdJsonProject) GetUseRiskregister() string {
	if o == nil || o.UseRiskregister == nil {
		var ret string
		return ret
	}
	return *o.UseRiskregister
}

// GetUseRiskregisterOk returns a tuple with the UseRiskregister field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ProjectsIdJsonProject) GetUseRiskregisterOk() (*string, bool) {
	if o == nil || o.UseRiskregister == nil {
		return nil, false
	}
	return o.UseRiskregister, true
}

// HasUseRiskregister returns a boolean if a field has been set.
func (o *ProjectsIdJsonProject) HasUseRiskregister() bool {
	if o != nil && o.UseRiskregister != nil {
		return true
	}

	return false
}

// SetUseRiskregister gets a reference to the given string and assigns it to the UseRiskregister field.
func (o *ProjectsIdJsonProject) SetUseRiskregister(v string) {
	o.UseRiskregister = &v
}

// GetUseTasks returns the UseTasks field value if set, zero value otherwise.
func (o *ProjectsIdJsonProject) GetUseTasks() string {
	if o == nil || o.UseTasks == nil {
		var ret string
		return ret
	}
	return *o.UseTasks
}

// GetUseTasksOk returns a tuple with the UseTasks field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ProjectsIdJsonProject) GetUseTasksOk() (*string, bool) {
	if o == nil || o.UseTasks == nil {
		return nil, false
	}
	return o.UseTasks, true
}

// HasUseTasks returns a boolean if a field has been set.
func (o *ProjectsIdJsonProject) HasUseTasks() bool {
	if o != nil && o.UseTasks != nil {
		return true
	}

	return false
}

// SetUseTasks gets a reference to the given string and assigns it to the UseTasks field.
func (o *ProjectsIdJsonProject) SetUseTasks(v string) {
	o.UseTasks = &v
}

// GetUseTime returns the UseTime field value if set, zero value otherwise.
func (o *ProjectsIdJsonProject) GetUseTime() string {
	if o == nil || o.UseTime == nil {
		var ret string
		return ret
	}
	return *o.UseTime
}

// GetUseTimeOk returns a tuple with the UseTime field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ProjectsIdJsonProject) GetUseTimeOk() (*string, bool) {
	if o == nil || o.UseTime == nil {
		return nil, false
	}
	return o.UseTime, true
}

// HasUseTime returns a boolean if a field has been set.
func (o *ProjectsIdJsonProject) HasUseTime() bool {
	if o != nil && o.UseTime != nil {
		return true
	}

	return false
}

// SetUseTime gets a reference to the given string and assigns it to the UseTime field.
func (o *ProjectsIdJsonProject) SetUseTime(v string) {
	o.UseTime = &v
}

func (o ProjectsIdJsonProject) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.CategoryId != nil {
		toSerialize["category-id"] = o.CategoryId
	}
	if o.CompanyId != nil {
		toSerialize["companyId"] = o.CompanyId
	}
	if o.DefaultPrivacy != nil {
		toSerialize["defaultPrivacy"] = o.DefaultPrivacy
	}
	if o.Description != nil {
		toSerialize["description"] = o.Description
	}
	if o.EndDate != nil {
		toSerialize["endDate"] = o.EndDate
	}
	if o.HarvestTimersEnabled != nil {
		toSerialize["harvest-timers-enabled"] = o.HarvestTimersEnabled
	}
	if o.LogoPendingFileRef != nil {
		toSerialize["logoPendingFileRef"] = o.LogoPendingFileRef
	}
	if o.Name != nil {
		toSerialize["name"] = o.Name
	}
	if o.NewCompany != nil {
		toSerialize["newCompany"] = o.NewCompany
	}
	if o.PrivacyEnabled != nil {
		toSerialize["privacyEnabled"] = o.PrivacyEnabled
	}
	if o.ReplyByEmailEnabled != nil {
		toSerialize["replyByEmailEnabled"] = o.ReplyByEmailEnabled
	}
	if o.StartDate != nil {
		toSerialize["startDate"] = o.StartDate
	}
	if o.Status != nil {
		toSerialize["status"] = o.Status
	}
	if o.Tags != nil {
		toSerialize["tags"] = o.Tags
	}
	if o.UseBilling != nil {
		toSerialize["use-billing"] = o.UseBilling
	}
	if o.UseFiles != nil {
		toSerialize["use-files"] = o.UseFiles
	}
	if o.UseLinks != nil {
		toSerialize["use-links"] = o.UseLinks
	}
	if o.UseMessages != nil {
		toSerialize["use-messages"] = o.UseMessages
	}
	if o.UseMilestones != nil {
		toSerialize["use-milestones"] = o.UseMilestones
	}
	if o.UseNotebook != nil {
		toSerialize["use-notebook"] = o.UseNotebook
	}
	if o.UseRiskregister != nil {
		toSerialize["use-riskregister"] = o.UseRiskregister
	}
	if o.UseTasks != nil {
		toSerialize["use-tasks"] = o.UseTasks
	}
	if o.UseTime != nil {
		toSerialize["use-time"] = o.UseTime
	}
	return json.Marshal(toSerialize)
}

type NullableProjectsIdJsonProject struct {
	value *ProjectsIdJsonProject
	isSet bool
}

func (v NullableProjectsIdJsonProject) Get() *ProjectsIdJsonProject {
	return v.value
}

func (v *NullableProjectsIdJsonProject) Set(val *ProjectsIdJsonProject) {
	v.value = val
	v.isSet = true
}

func (v NullableProjectsIdJsonProject) IsSet() bool {
	return v.isSet
}

func (v *NullableProjectsIdJsonProject) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableProjectsIdJsonProject(val *ProjectsIdJsonProject) *NullableProjectsIdJsonProject {
	return &NullableProjectsIdJsonProject{value: val, isSet: true}
}

func (v NullableProjectsIdJsonProject) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableProjectsIdJsonProject) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


