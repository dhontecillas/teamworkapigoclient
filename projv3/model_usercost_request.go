/*
 * Teamwork.com Projects API
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * API version: 3.0
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package projv3

import (
	"encoding/json"
)

// UsercostRequest Request contains information of a usercost to be created or updated.
type UsercostRequest struct {
	Cost *int32 `json:"cost,omitempty"`
}

// NewUsercostRequest instantiates a new UsercostRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewUsercostRequest() *UsercostRequest {
	this := UsercostRequest{}
	return &this
}

// NewUsercostRequestWithDefaults instantiates a new UsercostRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewUsercostRequestWithDefaults() *UsercostRequest {
	this := UsercostRequest{}
	return &this
}

// GetCost returns the Cost field value if set, zero value otherwise.
func (o *UsercostRequest) GetCost() int32 {
	if o == nil || o.Cost == nil {
		var ret int32
		return ret
	}
	return *o.Cost
}

// GetCostOk returns a tuple with the Cost field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UsercostRequest) GetCostOk() (*int32, bool) {
	if o == nil || o.Cost == nil {
		return nil, false
	}
	return o.Cost, true
}

// HasCost returns a boolean if a field has been set.
func (o *UsercostRequest) HasCost() bool {
	if o != nil && o.Cost != nil {
		return true
	}

	return false
}

// SetCost gets a reference to the given int32 and assigns it to the Cost field.
func (o *UsercostRequest) SetCost(v int32) {
	o.Cost = &v
}

func (o UsercostRequest) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.Cost != nil {
		toSerialize["cost"] = o.Cost
	}
	return json.Marshal(toSerialize)
}

type NullableUsercostRequest struct {
	value *UsercostRequest
	isSet bool
}

func (v NullableUsercostRequest) Get() *UsercostRequest {
	return v.value
}

func (v *NullableUsercostRequest) Set(val *UsercostRequest) {
	v.value = val
	v.isSet = true
}

func (v NullableUsercostRequest) IsSet() bool {
	return v.isSet
}

func (v *NullableUsercostRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableUsercostRequest(val *UsercostRequest) *NullableUsercostRequest {
	return &NullableUsercostRequest{value: val, isSet: true}
}

func (v NullableUsercostRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableUsercostRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


