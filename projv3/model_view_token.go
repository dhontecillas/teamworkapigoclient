/*
 * Teamwork.com Projects API
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * API version: 3.0
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package projv3

import (
	"encoding/json"
)

// ViewToken Token contains all the information returned from a form token.
type ViewToken struct {
	CanonicalURL *string `json:"canonicalURL,omitempty"`
	Value *string `json:"value,omitempty"`
}

// NewViewToken instantiates a new ViewToken object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewViewToken() *ViewToken {
	this := ViewToken{}
	return &this
}

// NewViewTokenWithDefaults instantiates a new ViewToken object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewViewTokenWithDefaults() *ViewToken {
	this := ViewToken{}
	return &this
}

// GetCanonicalURL returns the CanonicalURL field value if set, zero value otherwise.
func (o *ViewToken) GetCanonicalURL() string {
	if o == nil || o.CanonicalURL == nil {
		var ret string
		return ret
	}
	return *o.CanonicalURL
}

// GetCanonicalURLOk returns a tuple with the CanonicalURL field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ViewToken) GetCanonicalURLOk() (*string, bool) {
	if o == nil || o.CanonicalURL == nil {
		return nil, false
	}
	return o.CanonicalURL, true
}

// HasCanonicalURL returns a boolean if a field has been set.
func (o *ViewToken) HasCanonicalURL() bool {
	if o != nil && o.CanonicalURL != nil {
		return true
	}

	return false
}

// SetCanonicalURL gets a reference to the given string and assigns it to the CanonicalURL field.
func (o *ViewToken) SetCanonicalURL(v string) {
	o.CanonicalURL = &v
}

// GetValue returns the Value field value if set, zero value otherwise.
func (o *ViewToken) GetValue() string {
	if o == nil || o.Value == nil {
		var ret string
		return ret
	}
	return *o.Value
}

// GetValueOk returns a tuple with the Value field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ViewToken) GetValueOk() (*string, bool) {
	if o == nil || o.Value == nil {
		return nil, false
	}
	return o.Value, true
}

// HasValue returns a boolean if a field has been set.
func (o *ViewToken) HasValue() bool {
	if o != nil && o.Value != nil {
		return true
	}

	return false
}

// SetValue gets a reference to the given string and assigns it to the Value field.
func (o *ViewToken) SetValue(v string) {
	o.Value = &v
}

func (o ViewToken) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.CanonicalURL != nil {
		toSerialize["canonicalURL"] = o.CanonicalURL
	}
	if o.Value != nil {
		toSerialize["value"] = o.Value
	}
	return json.Marshal(toSerialize)
}

type NullableViewToken struct {
	value *ViewToken
	isSet bool
}

func (v NullableViewToken) Get() *ViewToken {
	return v.value
}

func (v *NullableViewToken) Set(val *ViewToken) {
	v.value = val
	v.isSet = true
}

func (v NullableViewToken) IsSet() bool {
	return v.isSet
}

func (v *NullableViewToken) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableViewToken(val *ViewToken) *NullableViewToken {
	return &NullableViewToken{value: val, isSet: true}
}

func (v NullableViewToken) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableViewToken) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


