/*
 * Teamwork Projects API
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * API version: 
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package pmv1

import (
	"encoding/json"
)

// ProjectsProjidTasksQuickaddJsonTodoItem struct for ProjectsProjidTasksQuickaddJsonTodoItem
type ProjectsProjidTasksQuickaddJsonTodoItem struct {
	Description *string `json:"description,omitempty"`
	DueDate *string `json:"due-date,omitempty"`
	Priority *string `json:"priority,omitempty"`
	ResponsiblePartyId *string `json:"responsible-party-id,omitempty"`
	StartDate *string `json:"start-date,omitempty"`
}

// NewProjectsProjidTasksQuickaddJsonTodoItem instantiates a new ProjectsProjidTasksQuickaddJsonTodoItem object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewProjectsProjidTasksQuickaddJsonTodoItem() *ProjectsProjidTasksQuickaddJsonTodoItem {
	this := ProjectsProjidTasksQuickaddJsonTodoItem{}
	return &this
}

// NewProjectsProjidTasksQuickaddJsonTodoItemWithDefaults instantiates a new ProjectsProjidTasksQuickaddJsonTodoItem object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewProjectsProjidTasksQuickaddJsonTodoItemWithDefaults() *ProjectsProjidTasksQuickaddJsonTodoItem {
	this := ProjectsProjidTasksQuickaddJsonTodoItem{}
	return &this
}

// GetDescription returns the Description field value if set, zero value otherwise.
func (o *ProjectsProjidTasksQuickaddJsonTodoItem) GetDescription() string {
	if o == nil || o.Description == nil {
		var ret string
		return ret
	}
	return *o.Description
}

// GetDescriptionOk returns a tuple with the Description field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ProjectsProjidTasksQuickaddJsonTodoItem) GetDescriptionOk() (*string, bool) {
	if o == nil || o.Description == nil {
		return nil, false
	}
	return o.Description, true
}

// HasDescription returns a boolean if a field has been set.
func (o *ProjectsProjidTasksQuickaddJsonTodoItem) HasDescription() bool {
	if o != nil && o.Description != nil {
		return true
	}

	return false
}

// SetDescription gets a reference to the given string and assigns it to the Description field.
func (o *ProjectsProjidTasksQuickaddJsonTodoItem) SetDescription(v string) {
	o.Description = &v
}

// GetDueDate returns the DueDate field value if set, zero value otherwise.
func (o *ProjectsProjidTasksQuickaddJsonTodoItem) GetDueDate() string {
	if o == nil || o.DueDate == nil {
		var ret string
		return ret
	}
	return *o.DueDate
}

// GetDueDateOk returns a tuple with the DueDate field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ProjectsProjidTasksQuickaddJsonTodoItem) GetDueDateOk() (*string, bool) {
	if o == nil || o.DueDate == nil {
		return nil, false
	}
	return o.DueDate, true
}

// HasDueDate returns a boolean if a field has been set.
func (o *ProjectsProjidTasksQuickaddJsonTodoItem) HasDueDate() bool {
	if o != nil && o.DueDate != nil {
		return true
	}

	return false
}

// SetDueDate gets a reference to the given string and assigns it to the DueDate field.
func (o *ProjectsProjidTasksQuickaddJsonTodoItem) SetDueDate(v string) {
	o.DueDate = &v
}

// GetPriority returns the Priority field value if set, zero value otherwise.
func (o *ProjectsProjidTasksQuickaddJsonTodoItem) GetPriority() string {
	if o == nil || o.Priority == nil {
		var ret string
		return ret
	}
	return *o.Priority
}

// GetPriorityOk returns a tuple with the Priority field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ProjectsProjidTasksQuickaddJsonTodoItem) GetPriorityOk() (*string, bool) {
	if o == nil || o.Priority == nil {
		return nil, false
	}
	return o.Priority, true
}

// HasPriority returns a boolean if a field has been set.
func (o *ProjectsProjidTasksQuickaddJsonTodoItem) HasPriority() bool {
	if o != nil && o.Priority != nil {
		return true
	}

	return false
}

// SetPriority gets a reference to the given string and assigns it to the Priority field.
func (o *ProjectsProjidTasksQuickaddJsonTodoItem) SetPriority(v string) {
	o.Priority = &v
}

// GetResponsiblePartyId returns the ResponsiblePartyId field value if set, zero value otherwise.
func (o *ProjectsProjidTasksQuickaddJsonTodoItem) GetResponsiblePartyId() string {
	if o == nil || o.ResponsiblePartyId == nil {
		var ret string
		return ret
	}
	return *o.ResponsiblePartyId
}

// GetResponsiblePartyIdOk returns a tuple with the ResponsiblePartyId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ProjectsProjidTasksQuickaddJsonTodoItem) GetResponsiblePartyIdOk() (*string, bool) {
	if o == nil || o.ResponsiblePartyId == nil {
		return nil, false
	}
	return o.ResponsiblePartyId, true
}

// HasResponsiblePartyId returns a boolean if a field has been set.
func (o *ProjectsProjidTasksQuickaddJsonTodoItem) HasResponsiblePartyId() bool {
	if o != nil && o.ResponsiblePartyId != nil {
		return true
	}

	return false
}

// SetResponsiblePartyId gets a reference to the given string and assigns it to the ResponsiblePartyId field.
func (o *ProjectsProjidTasksQuickaddJsonTodoItem) SetResponsiblePartyId(v string) {
	o.ResponsiblePartyId = &v
}

// GetStartDate returns the StartDate field value if set, zero value otherwise.
func (o *ProjectsProjidTasksQuickaddJsonTodoItem) GetStartDate() string {
	if o == nil || o.StartDate == nil {
		var ret string
		return ret
	}
	return *o.StartDate
}

// GetStartDateOk returns a tuple with the StartDate field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ProjectsProjidTasksQuickaddJsonTodoItem) GetStartDateOk() (*string, bool) {
	if o == nil || o.StartDate == nil {
		return nil, false
	}
	return o.StartDate, true
}

// HasStartDate returns a boolean if a field has been set.
func (o *ProjectsProjidTasksQuickaddJsonTodoItem) HasStartDate() bool {
	if o != nil && o.StartDate != nil {
		return true
	}

	return false
}

// SetStartDate gets a reference to the given string and assigns it to the StartDate field.
func (o *ProjectsProjidTasksQuickaddJsonTodoItem) SetStartDate(v string) {
	o.StartDate = &v
}

func (o ProjectsProjidTasksQuickaddJsonTodoItem) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.Description != nil {
		toSerialize["description"] = o.Description
	}
	if o.DueDate != nil {
		toSerialize["due-date"] = o.DueDate
	}
	if o.Priority != nil {
		toSerialize["priority"] = o.Priority
	}
	if o.ResponsiblePartyId != nil {
		toSerialize["responsible-party-id"] = o.ResponsiblePartyId
	}
	if o.StartDate != nil {
		toSerialize["start-date"] = o.StartDate
	}
	return json.Marshal(toSerialize)
}

type NullableProjectsProjidTasksQuickaddJsonTodoItem struct {
	value *ProjectsProjidTasksQuickaddJsonTodoItem
	isSet bool
}

func (v NullableProjectsProjidTasksQuickaddJsonTodoItem) Get() *ProjectsProjidTasksQuickaddJsonTodoItem {
	return v.value
}

func (v *NullableProjectsProjidTasksQuickaddJsonTodoItem) Set(val *ProjectsProjidTasksQuickaddJsonTodoItem) {
	v.value = val
	v.isSet = true
}

func (v NullableProjectsProjidTasksQuickaddJsonTodoItem) IsSet() bool {
	return v.isSet
}

func (v *NullableProjectsProjidTasksQuickaddJsonTodoItem) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableProjectsProjidTasksQuickaddJsonTodoItem(val *ProjectsProjidTasksQuickaddJsonTodoItem) *NullableProjectsProjidTasksQuickaddJsonTodoItem {
	return &NullableProjectsProjidTasksQuickaddJsonTodoItem{value: val, isSet: true}
}

func (v NullableProjectsProjidTasksQuickaddJsonTodoItem) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableProjectsProjidTasksQuickaddJsonTodoItem) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


