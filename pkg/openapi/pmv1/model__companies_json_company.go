/*
 * Teamwork Projects API
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * API version: 
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package pmv1

import (
	"encoding/json"
)

// CompaniesJsonCompany struct for CompaniesJsonCompany
type CompaniesJsonCompany struct {
	AddressOne *string `json:"address_one,omitempty"`
	AddressTwo *string `json:"address_two,omitempty"`
	City *string `json:"city,omitempty"`
	Countrycode *string `json:"countrycode,omitempty"`
	EmailOne *string `json:"email_one,omitempty"`
	EmailThree *string `json:"email_three,omitempty"`
	EmailTwo *string `json:"email_two,omitempty"`
	Fax *string `json:"fax,omitempty"`
	Name string `json:"name"`
	Phone *string `json:"phone,omitempty"`
	State *string `json:"state,omitempty"`
	Website *string `json:"website,omitempty"`
	Zip *string `json:"zip,omitempty"`
}

// NewCompaniesJsonCompany instantiates a new CompaniesJsonCompany object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewCompaniesJsonCompany(name string) *CompaniesJsonCompany {
	this := CompaniesJsonCompany{}
	this.Name = name
	return &this
}

// NewCompaniesJsonCompanyWithDefaults instantiates a new CompaniesJsonCompany object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewCompaniesJsonCompanyWithDefaults() *CompaniesJsonCompany {
	this := CompaniesJsonCompany{}
	return &this
}

// GetAddressOne returns the AddressOne field value if set, zero value otherwise.
func (o *CompaniesJsonCompany) GetAddressOne() string {
	if o == nil || o.AddressOne == nil {
		var ret string
		return ret
	}
	return *o.AddressOne
}

// GetAddressOneOk returns a tuple with the AddressOne field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CompaniesJsonCompany) GetAddressOneOk() (*string, bool) {
	if o == nil || o.AddressOne == nil {
		return nil, false
	}
	return o.AddressOne, true
}

// HasAddressOne returns a boolean if a field has been set.
func (o *CompaniesJsonCompany) HasAddressOne() bool {
	if o != nil && o.AddressOne != nil {
		return true
	}

	return false
}

// SetAddressOne gets a reference to the given string and assigns it to the AddressOne field.
func (o *CompaniesJsonCompany) SetAddressOne(v string) {
	o.AddressOne = &v
}

// GetAddressTwo returns the AddressTwo field value if set, zero value otherwise.
func (o *CompaniesJsonCompany) GetAddressTwo() string {
	if o == nil || o.AddressTwo == nil {
		var ret string
		return ret
	}
	return *o.AddressTwo
}

// GetAddressTwoOk returns a tuple with the AddressTwo field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CompaniesJsonCompany) GetAddressTwoOk() (*string, bool) {
	if o == nil || o.AddressTwo == nil {
		return nil, false
	}
	return o.AddressTwo, true
}

// HasAddressTwo returns a boolean if a field has been set.
func (o *CompaniesJsonCompany) HasAddressTwo() bool {
	if o != nil && o.AddressTwo != nil {
		return true
	}

	return false
}

// SetAddressTwo gets a reference to the given string and assigns it to the AddressTwo field.
func (o *CompaniesJsonCompany) SetAddressTwo(v string) {
	o.AddressTwo = &v
}

// GetCity returns the City field value if set, zero value otherwise.
func (o *CompaniesJsonCompany) GetCity() string {
	if o == nil || o.City == nil {
		var ret string
		return ret
	}
	return *o.City
}

// GetCityOk returns a tuple with the City field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CompaniesJsonCompany) GetCityOk() (*string, bool) {
	if o == nil || o.City == nil {
		return nil, false
	}
	return o.City, true
}

// HasCity returns a boolean if a field has been set.
func (o *CompaniesJsonCompany) HasCity() bool {
	if o != nil && o.City != nil {
		return true
	}

	return false
}

// SetCity gets a reference to the given string and assigns it to the City field.
func (o *CompaniesJsonCompany) SetCity(v string) {
	o.City = &v
}

// GetCountrycode returns the Countrycode field value if set, zero value otherwise.
func (o *CompaniesJsonCompany) GetCountrycode() string {
	if o == nil || o.Countrycode == nil {
		var ret string
		return ret
	}
	return *o.Countrycode
}

// GetCountrycodeOk returns a tuple with the Countrycode field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CompaniesJsonCompany) GetCountrycodeOk() (*string, bool) {
	if o == nil || o.Countrycode == nil {
		return nil, false
	}
	return o.Countrycode, true
}

// HasCountrycode returns a boolean if a field has been set.
func (o *CompaniesJsonCompany) HasCountrycode() bool {
	if o != nil && o.Countrycode != nil {
		return true
	}

	return false
}

// SetCountrycode gets a reference to the given string and assigns it to the Countrycode field.
func (o *CompaniesJsonCompany) SetCountrycode(v string) {
	o.Countrycode = &v
}

// GetEmailOne returns the EmailOne field value if set, zero value otherwise.
func (o *CompaniesJsonCompany) GetEmailOne() string {
	if o == nil || o.EmailOne == nil {
		var ret string
		return ret
	}
	return *o.EmailOne
}

// GetEmailOneOk returns a tuple with the EmailOne field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CompaniesJsonCompany) GetEmailOneOk() (*string, bool) {
	if o == nil || o.EmailOne == nil {
		return nil, false
	}
	return o.EmailOne, true
}

// HasEmailOne returns a boolean if a field has been set.
func (o *CompaniesJsonCompany) HasEmailOne() bool {
	if o != nil && o.EmailOne != nil {
		return true
	}

	return false
}

// SetEmailOne gets a reference to the given string and assigns it to the EmailOne field.
func (o *CompaniesJsonCompany) SetEmailOne(v string) {
	o.EmailOne = &v
}

// GetEmailThree returns the EmailThree field value if set, zero value otherwise.
func (o *CompaniesJsonCompany) GetEmailThree() string {
	if o == nil || o.EmailThree == nil {
		var ret string
		return ret
	}
	return *o.EmailThree
}

// GetEmailThreeOk returns a tuple with the EmailThree field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CompaniesJsonCompany) GetEmailThreeOk() (*string, bool) {
	if o == nil || o.EmailThree == nil {
		return nil, false
	}
	return o.EmailThree, true
}

// HasEmailThree returns a boolean if a field has been set.
func (o *CompaniesJsonCompany) HasEmailThree() bool {
	if o != nil && o.EmailThree != nil {
		return true
	}

	return false
}

// SetEmailThree gets a reference to the given string and assigns it to the EmailThree field.
func (o *CompaniesJsonCompany) SetEmailThree(v string) {
	o.EmailThree = &v
}

// GetEmailTwo returns the EmailTwo field value if set, zero value otherwise.
func (o *CompaniesJsonCompany) GetEmailTwo() string {
	if o == nil || o.EmailTwo == nil {
		var ret string
		return ret
	}
	return *o.EmailTwo
}

// GetEmailTwoOk returns a tuple with the EmailTwo field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CompaniesJsonCompany) GetEmailTwoOk() (*string, bool) {
	if o == nil || o.EmailTwo == nil {
		return nil, false
	}
	return o.EmailTwo, true
}

// HasEmailTwo returns a boolean if a field has been set.
func (o *CompaniesJsonCompany) HasEmailTwo() bool {
	if o != nil && o.EmailTwo != nil {
		return true
	}

	return false
}

// SetEmailTwo gets a reference to the given string and assigns it to the EmailTwo field.
func (o *CompaniesJsonCompany) SetEmailTwo(v string) {
	o.EmailTwo = &v
}

// GetFax returns the Fax field value if set, zero value otherwise.
func (o *CompaniesJsonCompany) GetFax() string {
	if o == nil || o.Fax == nil {
		var ret string
		return ret
	}
	return *o.Fax
}

// GetFaxOk returns a tuple with the Fax field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CompaniesJsonCompany) GetFaxOk() (*string, bool) {
	if o == nil || o.Fax == nil {
		return nil, false
	}
	return o.Fax, true
}

// HasFax returns a boolean if a field has been set.
func (o *CompaniesJsonCompany) HasFax() bool {
	if o != nil && o.Fax != nil {
		return true
	}

	return false
}

// SetFax gets a reference to the given string and assigns it to the Fax field.
func (o *CompaniesJsonCompany) SetFax(v string) {
	o.Fax = &v
}

// GetName returns the Name field value
func (o *CompaniesJsonCompany) GetName() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Name
}

// GetNameOk returns a tuple with the Name field value
// and a boolean to check if the value has been set.
func (o *CompaniesJsonCompany) GetNameOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.Name, true
}

// SetName sets field value
func (o *CompaniesJsonCompany) SetName(v string) {
	o.Name = v
}

// GetPhone returns the Phone field value if set, zero value otherwise.
func (o *CompaniesJsonCompany) GetPhone() string {
	if o == nil || o.Phone == nil {
		var ret string
		return ret
	}
	return *o.Phone
}

// GetPhoneOk returns a tuple with the Phone field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CompaniesJsonCompany) GetPhoneOk() (*string, bool) {
	if o == nil || o.Phone == nil {
		return nil, false
	}
	return o.Phone, true
}

// HasPhone returns a boolean if a field has been set.
func (o *CompaniesJsonCompany) HasPhone() bool {
	if o != nil && o.Phone != nil {
		return true
	}

	return false
}

// SetPhone gets a reference to the given string and assigns it to the Phone field.
func (o *CompaniesJsonCompany) SetPhone(v string) {
	o.Phone = &v
}

// GetState returns the State field value if set, zero value otherwise.
func (o *CompaniesJsonCompany) GetState() string {
	if o == nil || o.State == nil {
		var ret string
		return ret
	}
	return *o.State
}

// GetStateOk returns a tuple with the State field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CompaniesJsonCompany) GetStateOk() (*string, bool) {
	if o == nil || o.State == nil {
		return nil, false
	}
	return o.State, true
}

// HasState returns a boolean if a field has been set.
func (o *CompaniesJsonCompany) HasState() bool {
	if o != nil && o.State != nil {
		return true
	}

	return false
}

// SetState gets a reference to the given string and assigns it to the State field.
func (o *CompaniesJsonCompany) SetState(v string) {
	o.State = &v
}

// GetWebsite returns the Website field value if set, zero value otherwise.
func (o *CompaniesJsonCompany) GetWebsite() string {
	if o == nil || o.Website == nil {
		var ret string
		return ret
	}
	return *o.Website
}

// GetWebsiteOk returns a tuple with the Website field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CompaniesJsonCompany) GetWebsiteOk() (*string, bool) {
	if o == nil || o.Website == nil {
		return nil, false
	}
	return o.Website, true
}

// HasWebsite returns a boolean if a field has been set.
func (o *CompaniesJsonCompany) HasWebsite() bool {
	if o != nil && o.Website != nil {
		return true
	}

	return false
}

// SetWebsite gets a reference to the given string and assigns it to the Website field.
func (o *CompaniesJsonCompany) SetWebsite(v string) {
	o.Website = &v
}

// GetZip returns the Zip field value if set, zero value otherwise.
func (o *CompaniesJsonCompany) GetZip() string {
	if o == nil || o.Zip == nil {
		var ret string
		return ret
	}
	return *o.Zip
}

// GetZipOk returns a tuple with the Zip field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CompaniesJsonCompany) GetZipOk() (*string, bool) {
	if o == nil || o.Zip == nil {
		return nil, false
	}
	return o.Zip, true
}

// HasZip returns a boolean if a field has been set.
func (o *CompaniesJsonCompany) HasZip() bool {
	if o != nil && o.Zip != nil {
		return true
	}

	return false
}

// SetZip gets a reference to the given string and assigns it to the Zip field.
func (o *CompaniesJsonCompany) SetZip(v string) {
	o.Zip = &v
}

func (o CompaniesJsonCompany) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.AddressOne != nil {
		toSerialize["address_one"] = o.AddressOne
	}
	if o.AddressTwo != nil {
		toSerialize["address_two"] = o.AddressTwo
	}
	if o.City != nil {
		toSerialize["city"] = o.City
	}
	if o.Countrycode != nil {
		toSerialize["countrycode"] = o.Countrycode
	}
	if o.EmailOne != nil {
		toSerialize["email_one"] = o.EmailOne
	}
	if o.EmailThree != nil {
		toSerialize["email_three"] = o.EmailThree
	}
	if o.EmailTwo != nil {
		toSerialize["email_two"] = o.EmailTwo
	}
	if o.Fax != nil {
		toSerialize["fax"] = o.Fax
	}
	if true {
		toSerialize["name"] = o.Name
	}
	if o.Phone != nil {
		toSerialize["phone"] = o.Phone
	}
	if o.State != nil {
		toSerialize["state"] = o.State
	}
	if o.Website != nil {
		toSerialize["website"] = o.Website
	}
	if o.Zip != nil {
		toSerialize["zip"] = o.Zip
	}
	return json.Marshal(toSerialize)
}

type NullableCompaniesJsonCompany struct {
	value *CompaniesJsonCompany
	isSet bool
}

func (v NullableCompaniesJsonCompany) Get() *CompaniesJsonCompany {
	return v.value
}

func (v *NullableCompaniesJsonCompany) Set(val *CompaniesJsonCompany) {
	v.value = val
	v.isSet = true
}

func (v NullableCompaniesJsonCompany) IsSet() bool {
	return v.isSet
}

func (v *NullableCompaniesJsonCompany) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableCompaniesJsonCompany(val *CompaniesJsonCompany) *NullableCompaniesJsonCompany {
	return &NullableCompaniesJsonCompany{value: val, isSet: true}
}

func (v NullableCompaniesJsonCompany) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableCompaniesJsonCompany) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


