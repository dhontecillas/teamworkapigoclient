/*
 * Teamwork Projects API
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * API version: 
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package pmv1

import (
	"encoding/json"
)

// InlineResponse200112TimeEntry struct for InlineResponse200112TimeEntry
type InlineResponse200112TimeEntry struct {
	CanEdit *bool `json:"canEdit,omitempty"`
	CompanyId *string `json:"company-id,omitempty"`
	CompanyName *string `json:"company-name,omitempty"`
	CreatedAt *string `json:"createdAt,omitempty"`
	Date *string `json:"date,omitempty"`
	DateUserPerspective *string `json:"dateUserPerspective,omitempty"`
	Description *string `json:"description,omitempty"`
	HasStartTime *string `json:"has-start-time,omitempty"`
	Hours *string `json:"hours,omitempty"`
	Id *string `json:"id,omitempty"`
	InvoiceNo *string `json:"invoiceNo,omitempty"`
	Isbillable *string `json:"isbillable,omitempty"`
	Isbilled *string `json:"isbilled,omitempty"`
	Minutes *string `json:"minutes,omitempty"`
	ParentTaskId *string `json:"parentTaskId,omitempty"`
	ParentTaskName *string `json:"parentTaskName,omitempty"`
	PersonFirstName *string `json:"person-first-name,omitempty"`
	PersonId *string `json:"person-id,omitempty"`
	PersonLastName *string `json:"person-last-name,omitempty"`
	ProjectId *string `json:"project-id,omitempty"`
	ProjectName *string `json:"project-name,omitempty"`
	ProjectStatus *string `json:"project-status,omitempty"`
	Tags *[]InlineResponse2002Column `json:"tags,omitempty"`
	TaskTags *[]map[string]interface{} `json:"task-tags,omitempty"`
	TaskEstimatedTime *string `json:"taskEstimatedTime,omitempty"`
	TaskIsPrivate *string `json:"taskIsPrivate,omitempty"`
	TaskIsSubTask *string `json:"taskIsSubTask,omitempty"`
	TasklistId *string `json:"tasklistId,omitempty"`
	TicketId *string `json:"ticket-id,omitempty"`
	TodoItemId *string `json:"todo-item-id,omitempty"`
	TodoItemName *string `json:"todo-item-name,omitempty"`
	TodoListId *string `json:"todo-list-id,omitempty"`
	TodoListName *string `json:"todo-list-name,omitempty"`
	UpdatedDate *string `json:"updated-date,omitempty"`
}

// NewInlineResponse200112TimeEntry instantiates a new InlineResponse200112TimeEntry object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewInlineResponse200112TimeEntry() *InlineResponse200112TimeEntry {
	this := InlineResponse200112TimeEntry{}
	return &this
}

// NewInlineResponse200112TimeEntryWithDefaults instantiates a new InlineResponse200112TimeEntry object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewInlineResponse200112TimeEntryWithDefaults() *InlineResponse200112TimeEntry {
	this := InlineResponse200112TimeEntry{}
	return &this
}

// GetCanEdit returns the CanEdit field value if set, zero value otherwise.
func (o *InlineResponse200112TimeEntry) GetCanEdit() bool {
	if o == nil || o.CanEdit == nil {
		var ret bool
		return ret
	}
	return *o.CanEdit
}

// GetCanEditOk returns a tuple with the CanEdit field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InlineResponse200112TimeEntry) GetCanEditOk() (*bool, bool) {
	if o == nil || o.CanEdit == nil {
		return nil, false
	}
	return o.CanEdit, true
}

// HasCanEdit returns a boolean if a field has been set.
func (o *InlineResponse200112TimeEntry) HasCanEdit() bool {
	if o != nil && o.CanEdit != nil {
		return true
	}

	return false
}

// SetCanEdit gets a reference to the given bool and assigns it to the CanEdit field.
func (o *InlineResponse200112TimeEntry) SetCanEdit(v bool) {
	o.CanEdit = &v
}

// GetCompanyId returns the CompanyId field value if set, zero value otherwise.
func (o *InlineResponse200112TimeEntry) GetCompanyId() string {
	if o == nil || o.CompanyId == nil {
		var ret string
		return ret
	}
	return *o.CompanyId
}

// GetCompanyIdOk returns a tuple with the CompanyId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InlineResponse200112TimeEntry) GetCompanyIdOk() (*string, bool) {
	if o == nil || o.CompanyId == nil {
		return nil, false
	}
	return o.CompanyId, true
}

// HasCompanyId returns a boolean if a field has been set.
func (o *InlineResponse200112TimeEntry) HasCompanyId() bool {
	if o != nil && o.CompanyId != nil {
		return true
	}

	return false
}

// SetCompanyId gets a reference to the given string and assigns it to the CompanyId field.
func (o *InlineResponse200112TimeEntry) SetCompanyId(v string) {
	o.CompanyId = &v
}

// GetCompanyName returns the CompanyName field value if set, zero value otherwise.
func (o *InlineResponse200112TimeEntry) GetCompanyName() string {
	if o == nil || o.CompanyName == nil {
		var ret string
		return ret
	}
	return *o.CompanyName
}

// GetCompanyNameOk returns a tuple with the CompanyName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InlineResponse200112TimeEntry) GetCompanyNameOk() (*string, bool) {
	if o == nil || o.CompanyName == nil {
		return nil, false
	}
	return o.CompanyName, true
}

// HasCompanyName returns a boolean if a field has been set.
func (o *InlineResponse200112TimeEntry) HasCompanyName() bool {
	if o != nil && o.CompanyName != nil {
		return true
	}

	return false
}

// SetCompanyName gets a reference to the given string and assigns it to the CompanyName field.
func (o *InlineResponse200112TimeEntry) SetCompanyName(v string) {
	o.CompanyName = &v
}

// GetCreatedAt returns the CreatedAt field value if set, zero value otherwise.
func (o *InlineResponse200112TimeEntry) GetCreatedAt() string {
	if o == nil || o.CreatedAt == nil {
		var ret string
		return ret
	}
	return *o.CreatedAt
}

// GetCreatedAtOk returns a tuple with the CreatedAt field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InlineResponse200112TimeEntry) GetCreatedAtOk() (*string, bool) {
	if o == nil || o.CreatedAt == nil {
		return nil, false
	}
	return o.CreatedAt, true
}

// HasCreatedAt returns a boolean if a field has been set.
func (o *InlineResponse200112TimeEntry) HasCreatedAt() bool {
	if o != nil && o.CreatedAt != nil {
		return true
	}

	return false
}

// SetCreatedAt gets a reference to the given string and assigns it to the CreatedAt field.
func (o *InlineResponse200112TimeEntry) SetCreatedAt(v string) {
	o.CreatedAt = &v
}

// GetDate returns the Date field value if set, zero value otherwise.
func (o *InlineResponse200112TimeEntry) GetDate() string {
	if o == nil || o.Date == nil {
		var ret string
		return ret
	}
	return *o.Date
}

// GetDateOk returns a tuple with the Date field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InlineResponse200112TimeEntry) GetDateOk() (*string, bool) {
	if o == nil || o.Date == nil {
		return nil, false
	}
	return o.Date, true
}

// HasDate returns a boolean if a field has been set.
func (o *InlineResponse200112TimeEntry) HasDate() bool {
	if o != nil && o.Date != nil {
		return true
	}

	return false
}

// SetDate gets a reference to the given string and assigns it to the Date field.
func (o *InlineResponse200112TimeEntry) SetDate(v string) {
	o.Date = &v
}

// GetDateUserPerspective returns the DateUserPerspective field value if set, zero value otherwise.
func (o *InlineResponse200112TimeEntry) GetDateUserPerspective() string {
	if o == nil || o.DateUserPerspective == nil {
		var ret string
		return ret
	}
	return *o.DateUserPerspective
}

// GetDateUserPerspectiveOk returns a tuple with the DateUserPerspective field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InlineResponse200112TimeEntry) GetDateUserPerspectiveOk() (*string, bool) {
	if o == nil || o.DateUserPerspective == nil {
		return nil, false
	}
	return o.DateUserPerspective, true
}

// HasDateUserPerspective returns a boolean if a field has been set.
func (o *InlineResponse200112TimeEntry) HasDateUserPerspective() bool {
	if o != nil && o.DateUserPerspective != nil {
		return true
	}

	return false
}

// SetDateUserPerspective gets a reference to the given string and assigns it to the DateUserPerspective field.
func (o *InlineResponse200112TimeEntry) SetDateUserPerspective(v string) {
	o.DateUserPerspective = &v
}

// GetDescription returns the Description field value if set, zero value otherwise.
func (o *InlineResponse200112TimeEntry) GetDescription() string {
	if o == nil || o.Description == nil {
		var ret string
		return ret
	}
	return *o.Description
}

// GetDescriptionOk returns a tuple with the Description field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InlineResponse200112TimeEntry) GetDescriptionOk() (*string, bool) {
	if o == nil || o.Description == nil {
		return nil, false
	}
	return o.Description, true
}

// HasDescription returns a boolean if a field has been set.
func (o *InlineResponse200112TimeEntry) HasDescription() bool {
	if o != nil && o.Description != nil {
		return true
	}

	return false
}

// SetDescription gets a reference to the given string and assigns it to the Description field.
func (o *InlineResponse200112TimeEntry) SetDescription(v string) {
	o.Description = &v
}

// GetHasStartTime returns the HasStartTime field value if set, zero value otherwise.
func (o *InlineResponse200112TimeEntry) GetHasStartTime() string {
	if o == nil || o.HasStartTime == nil {
		var ret string
		return ret
	}
	return *o.HasStartTime
}

// GetHasStartTimeOk returns a tuple with the HasStartTime field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InlineResponse200112TimeEntry) GetHasStartTimeOk() (*string, bool) {
	if o == nil || o.HasStartTime == nil {
		return nil, false
	}
	return o.HasStartTime, true
}

// HasHasStartTime returns a boolean if a field has been set.
func (o *InlineResponse200112TimeEntry) HasHasStartTime() bool {
	if o != nil && o.HasStartTime != nil {
		return true
	}

	return false
}

// SetHasStartTime gets a reference to the given string and assigns it to the HasStartTime field.
func (o *InlineResponse200112TimeEntry) SetHasStartTime(v string) {
	o.HasStartTime = &v
}

// GetHours returns the Hours field value if set, zero value otherwise.
func (o *InlineResponse200112TimeEntry) GetHours() string {
	if o == nil || o.Hours == nil {
		var ret string
		return ret
	}
	return *o.Hours
}

// GetHoursOk returns a tuple with the Hours field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InlineResponse200112TimeEntry) GetHoursOk() (*string, bool) {
	if o == nil || o.Hours == nil {
		return nil, false
	}
	return o.Hours, true
}

// HasHours returns a boolean if a field has been set.
func (o *InlineResponse200112TimeEntry) HasHours() bool {
	if o != nil && o.Hours != nil {
		return true
	}

	return false
}

// SetHours gets a reference to the given string and assigns it to the Hours field.
func (o *InlineResponse200112TimeEntry) SetHours(v string) {
	o.Hours = &v
}

// GetId returns the Id field value if set, zero value otherwise.
func (o *InlineResponse200112TimeEntry) GetId() string {
	if o == nil || o.Id == nil {
		var ret string
		return ret
	}
	return *o.Id
}

// GetIdOk returns a tuple with the Id field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InlineResponse200112TimeEntry) GetIdOk() (*string, bool) {
	if o == nil || o.Id == nil {
		return nil, false
	}
	return o.Id, true
}

// HasId returns a boolean if a field has been set.
func (o *InlineResponse200112TimeEntry) HasId() bool {
	if o != nil && o.Id != nil {
		return true
	}

	return false
}

// SetId gets a reference to the given string and assigns it to the Id field.
func (o *InlineResponse200112TimeEntry) SetId(v string) {
	o.Id = &v
}

// GetInvoiceNo returns the InvoiceNo field value if set, zero value otherwise.
func (o *InlineResponse200112TimeEntry) GetInvoiceNo() string {
	if o == nil || o.InvoiceNo == nil {
		var ret string
		return ret
	}
	return *o.InvoiceNo
}

// GetInvoiceNoOk returns a tuple with the InvoiceNo field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InlineResponse200112TimeEntry) GetInvoiceNoOk() (*string, bool) {
	if o == nil || o.InvoiceNo == nil {
		return nil, false
	}
	return o.InvoiceNo, true
}

// HasInvoiceNo returns a boolean if a field has been set.
func (o *InlineResponse200112TimeEntry) HasInvoiceNo() bool {
	if o != nil && o.InvoiceNo != nil {
		return true
	}

	return false
}

// SetInvoiceNo gets a reference to the given string and assigns it to the InvoiceNo field.
func (o *InlineResponse200112TimeEntry) SetInvoiceNo(v string) {
	o.InvoiceNo = &v
}

// GetIsbillable returns the Isbillable field value if set, zero value otherwise.
func (o *InlineResponse200112TimeEntry) GetIsbillable() string {
	if o == nil || o.Isbillable == nil {
		var ret string
		return ret
	}
	return *o.Isbillable
}

// GetIsbillableOk returns a tuple with the Isbillable field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InlineResponse200112TimeEntry) GetIsbillableOk() (*string, bool) {
	if o == nil || o.Isbillable == nil {
		return nil, false
	}
	return o.Isbillable, true
}

// HasIsbillable returns a boolean if a field has been set.
func (o *InlineResponse200112TimeEntry) HasIsbillable() bool {
	if o != nil && o.Isbillable != nil {
		return true
	}

	return false
}

// SetIsbillable gets a reference to the given string and assigns it to the Isbillable field.
func (o *InlineResponse200112TimeEntry) SetIsbillable(v string) {
	o.Isbillable = &v
}

// GetIsbilled returns the Isbilled field value if set, zero value otherwise.
func (o *InlineResponse200112TimeEntry) GetIsbilled() string {
	if o == nil || o.Isbilled == nil {
		var ret string
		return ret
	}
	return *o.Isbilled
}

// GetIsbilledOk returns a tuple with the Isbilled field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InlineResponse200112TimeEntry) GetIsbilledOk() (*string, bool) {
	if o == nil || o.Isbilled == nil {
		return nil, false
	}
	return o.Isbilled, true
}

// HasIsbilled returns a boolean if a field has been set.
func (o *InlineResponse200112TimeEntry) HasIsbilled() bool {
	if o != nil && o.Isbilled != nil {
		return true
	}

	return false
}

// SetIsbilled gets a reference to the given string and assigns it to the Isbilled field.
func (o *InlineResponse200112TimeEntry) SetIsbilled(v string) {
	o.Isbilled = &v
}

// GetMinutes returns the Minutes field value if set, zero value otherwise.
func (o *InlineResponse200112TimeEntry) GetMinutes() string {
	if o == nil || o.Minutes == nil {
		var ret string
		return ret
	}
	return *o.Minutes
}

// GetMinutesOk returns a tuple with the Minutes field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InlineResponse200112TimeEntry) GetMinutesOk() (*string, bool) {
	if o == nil || o.Minutes == nil {
		return nil, false
	}
	return o.Minutes, true
}

// HasMinutes returns a boolean if a field has been set.
func (o *InlineResponse200112TimeEntry) HasMinutes() bool {
	if o != nil && o.Minutes != nil {
		return true
	}

	return false
}

// SetMinutes gets a reference to the given string and assigns it to the Minutes field.
func (o *InlineResponse200112TimeEntry) SetMinutes(v string) {
	o.Minutes = &v
}

// GetParentTaskId returns the ParentTaskId field value if set, zero value otherwise.
func (o *InlineResponse200112TimeEntry) GetParentTaskId() string {
	if o == nil || o.ParentTaskId == nil {
		var ret string
		return ret
	}
	return *o.ParentTaskId
}

// GetParentTaskIdOk returns a tuple with the ParentTaskId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InlineResponse200112TimeEntry) GetParentTaskIdOk() (*string, bool) {
	if o == nil || o.ParentTaskId == nil {
		return nil, false
	}
	return o.ParentTaskId, true
}

// HasParentTaskId returns a boolean if a field has been set.
func (o *InlineResponse200112TimeEntry) HasParentTaskId() bool {
	if o != nil && o.ParentTaskId != nil {
		return true
	}

	return false
}

// SetParentTaskId gets a reference to the given string and assigns it to the ParentTaskId field.
func (o *InlineResponse200112TimeEntry) SetParentTaskId(v string) {
	o.ParentTaskId = &v
}

// GetParentTaskName returns the ParentTaskName field value if set, zero value otherwise.
func (o *InlineResponse200112TimeEntry) GetParentTaskName() string {
	if o == nil || o.ParentTaskName == nil {
		var ret string
		return ret
	}
	return *o.ParentTaskName
}

// GetParentTaskNameOk returns a tuple with the ParentTaskName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InlineResponse200112TimeEntry) GetParentTaskNameOk() (*string, bool) {
	if o == nil || o.ParentTaskName == nil {
		return nil, false
	}
	return o.ParentTaskName, true
}

// HasParentTaskName returns a boolean if a field has been set.
func (o *InlineResponse200112TimeEntry) HasParentTaskName() bool {
	if o != nil && o.ParentTaskName != nil {
		return true
	}

	return false
}

// SetParentTaskName gets a reference to the given string and assigns it to the ParentTaskName field.
func (o *InlineResponse200112TimeEntry) SetParentTaskName(v string) {
	o.ParentTaskName = &v
}

// GetPersonFirstName returns the PersonFirstName field value if set, zero value otherwise.
func (o *InlineResponse200112TimeEntry) GetPersonFirstName() string {
	if o == nil || o.PersonFirstName == nil {
		var ret string
		return ret
	}
	return *o.PersonFirstName
}

// GetPersonFirstNameOk returns a tuple with the PersonFirstName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InlineResponse200112TimeEntry) GetPersonFirstNameOk() (*string, bool) {
	if o == nil || o.PersonFirstName == nil {
		return nil, false
	}
	return o.PersonFirstName, true
}

// HasPersonFirstName returns a boolean if a field has been set.
func (o *InlineResponse200112TimeEntry) HasPersonFirstName() bool {
	if o != nil && o.PersonFirstName != nil {
		return true
	}

	return false
}

// SetPersonFirstName gets a reference to the given string and assigns it to the PersonFirstName field.
func (o *InlineResponse200112TimeEntry) SetPersonFirstName(v string) {
	o.PersonFirstName = &v
}

// GetPersonId returns the PersonId field value if set, zero value otherwise.
func (o *InlineResponse200112TimeEntry) GetPersonId() string {
	if o == nil || o.PersonId == nil {
		var ret string
		return ret
	}
	return *o.PersonId
}

// GetPersonIdOk returns a tuple with the PersonId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InlineResponse200112TimeEntry) GetPersonIdOk() (*string, bool) {
	if o == nil || o.PersonId == nil {
		return nil, false
	}
	return o.PersonId, true
}

// HasPersonId returns a boolean if a field has been set.
func (o *InlineResponse200112TimeEntry) HasPersonId() bool {
	if o != nil && o.PersonId != nil {
		return true
	}

	return false
}

// SetPersonId gets a reference to the given string and assigns it to the PersonId field.
func (o *InlineResponse200112TimeEntry) SetPersonId(v string) {
	o.PersonId = &v
}

// GetPersonLastName returns the PersonLastName field value if set, zero value otherwise.
func (o *InlineResponse200112TimeEntry) GetPersonLastName() string {
	if o == nil || o.PersonLastName == nil {
		var ret string
		return ret
	}
	return *o.PersonLastName
}

// GetPersonLastNameOk returns a tuple with the PersonLastName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InlineResponse200112TimeEntry) GetPersonLastNameOk() (*string, bool) {
	if o == nil || o.PersonLastName == nil {
		return nil, false
	}
	return o.PersonLastName, true
}

// HasPersonLastName returns a boolean if a field has been set.
func (o *InlineResponse200112TimeEntry) HasPersonLastName() bool {
	if o != nil && o.PersonLastName != nil {
		return true
	}

	return false
}

// SetPersonLastName gets a reference to the given string and assigns it to the PersonLastName field.
func (o *InlineResponse200112TimeEntry) SetPersonLastName(v string) {
	o.PersonLastName = &v
}

// GetProjectId returns the ProjectId field value if set, zero value otherwise.
func (o *InlineResponse200112TimeEntry) GetProjectId() string {
	if o == nil || o.ProjectId == nil {
		var ret string
		return ret
	}
	return *o.ProjectId
}

// GetProjectIdOk returns a tuple with the ProjectId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InlineResponse200112TimeEntry) GetProjectIdOk() (*string, bool) {
	if o == nil || o.ProjectId == nil {
		return nil, false
	}
	return o.ProjectId, true
}

// HasProjectId returns a boolean if a field has been set.
func (o *InlineResponse200112TimeEntry) HasProjectId() bool {
	if o != nil && o.ProjectId != nil {
		return true
	}

	return false
}

// SetProjectId gets a reference to the given string and assigns it to the ProjectId field.
func (o *InlineResponse200112TimeEntry) SetProjectId(v string) {
	o.ProjectId = &v
}

// GetProjectName returns the ProjectName field value if set, zero value otherwise.
func (o *InlineResponse200112TimeEntry) GetProjectName() string {
	if o == nil || o.ProjectName == nil {
		var ret string
		return ret
	}
	return *o.ProjectName
}

// GetProjectNameOk returns a tuple with the ProjectName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InlineResponse200112TimeEntry) GetProjectNameOk() (*string, bool) {
	if o == nil || o.ProjectName == nil {
		return nil, false
	}
	return o.ProjectName, true
}

// HasProjectName returns a boolean if a field has been set.
func (o *InlineResponse200112TimeEntry) HasProjectName() bool {
	if o != nil && o.ProjectName != nil {
		return true
	}

	return false
}

// SetProjectName gets a reference to the given string and assigns it to the ProjectName field.
func (o *InlineResponse200112TimeEntry) SetProjectName(v string) {
	o.ProjectName = &v
}

// GetProjectStatus returns the ProjectStatus field value if set, zero value otherwise.
func (o *InlineResponse200112TimeEntry) GetProjectStatus() string {
	if o == nil || o.ProjectStatus == nil {
		var ret string
		return ret
	}
	return *o.ProjectStatus
}

// GetProjectStatusOk returns a tuple with the ProjectStatus field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InlineResponse200112TimeEntry) GetProjectStatusOk() (*string, bool) {
	if o == nil || o.ProjectStatus == nil {
		return nil, false
	}
	return o.ProjectStatus, true
}

// HasProjectStatus returns a boolean if a field has been set.
func (o *InlineResponse200112TimeEntry) HasProjectStatus() bool {
	if o != nil && o.ProjectStatus != nil {
		return true
	}

	return false
}

// SetProjectStatus gets a reference to the given string and assigns it to the ProjectStatus field.
func (o *InlineResponse200112TimeEntry) SetProjectStatus(v string) {
	o.ProjectStatus = &v
}

// GetTags returns the Tags field value if set, zero value otherwise.
func (o *InlineResponse200112TimeEntry) GetTags() []InlineResponse2002Column {
	if o == nil || o.Tags == nil {
		var ret []InlineResponse2002Column
		return ret
	}
	return *o.Tags
}

// GetTagsOk returns a tuple with the Tags field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InlineResponse200112TimeEntry) GetTagsOk() (*[]InlineResponse2002Column, bool) {
	if o == nil || o.Tags == nil {
		return nil, false
	}
	return o.Tags, true
}

// HasTags returns a boolean if a field has been set.
func (o *InlineResponse200112TimeEntry) HasTags() bool {
	if o != nil && o.Tags != nil {
		return true
	}

	return false
}

// SetTags gets a reference to the given []InlineResponse2002Column and assigns it to the Tags field.
func (o *InlineResponse200112TimeEntry) SetTags(v []InlineResponse2002Column) {
	o.Tags = &v
}

// GetTaskTags returns the TaskTags field value if set, zero value otherwise.
func (o *InlineResponse200112TimeEntry) GetTaskTags() []map[string]interface{} {
	if o == nil || o.TaskTags == nil {
		var ret []map[string]interface{}
		return ret
	}
	return *o.TaskTags
}

// GetTaskTagsOk returns a tuple with the TaskTags field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InlineResponse200112TimeEntry) GetTaskTagsOk() (*[]map[string]interface{}, bool) {
	if o == nil || o.TaskTags == nil {
		return nil, false
	}
	return o.TaskTags, true
}

// HasTaskTags returns a boolean if a field has been set.
func (o *InlineResponse200112TimeEntry) HasTaskTags() bool {
	if o != nil && o.TaskTags != nil {
		return true
	}

	return false
}

// SetTaskTags gets a reference to the given []map[string]interface{} and assigns it to the TaskTags field.
func (o *InlineResponse200112TimeEntry) SetTaskTags(v []map[string]interface{}) {
	o.TaskTags = &v
}

// GetTaskEstimatedTime returns the TaskEstimatedTime field value if set, zero value otherwise.
func (o *InlineResponse200112TimeEntry) GetTaskEstimatedTime() string {
	if o == nil || o.TaskEstimatedTime == nil {
		var ret string
		return ret
	}
	return *o.TaskEstimatedTime
}

// GetTaskEstimatedTimeOk returns a tuple with the TaskEstimatedTime field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InlineResponse200112TimeEntry) GetTaskEstimatedTimeOk() (*string, bool) {
	if o == nil || o.TaskEstimatedTime == nil {
		return nil, false
	}
	return o.TaskEstimatedTime, true
}

// HasTaskEstimatedTime returns a boolean if a field has been set.
func (o *InlineResponse200112TimeEntry) HasTaskEstimatedTime() bool {
	if o != nil && o.TaskEstimatedTime != nil {
		return true
	}

	return false
}

// SetTaskEstimatedTime gets a reference to the given string and assigns it to the TaskEstimatedTime field.
func (o *InlineResponse200112TimeEntry) SetTaskEstimatedTime(v string) {
	o.TaskEstimatedTime = &v
}

// GetTaskIsPrivate returns the TaskIsPrivate field value if set, zero value otherwise.
func (o *InlineResponse200112TimeEntry) GetTaskIsPrivate() string {
	if o == nil || o.TaskIsPrivate == nil {
		var ret string
		return ret
	}
	return *o.TaskIsPrivate
}

// GetTaskIsPrivateOk returns a tuple with the TaskIsPrivate field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InlineResponse200112TimeEntry) GetTaskIsPrivateOk() (*string, bool) {
	if o == nil || o.TaskIsPrivate == nil {
		return nil, false
	}
	return o.TaskIsPrivate, true
}

// HasTaskIsPrivate returns a boolean if a field has been set.
func (o *InlineResponse200112TimeEntry) HasTaskIsPrivate() bool {
	if o != nil && o.TaskIsPrivate != nil {
		return true
	}

	return false
}

// SetTaskIsPrivate gets a reference to the given string and assigns it to the TaskIsPrivate field.
func (o *InlineResponse200112TimeEntry) SetTaskIsPrivate(v string) {
	o.TaskIsPrivate = &v
}

// GetTaskIsSubTask returns the TaskIsSubTask field value if set, zero value otherwise.
func (o *InlineResponse200112TimeEntry) GetTaskIsSubTask() string {
	if o == nil || o.TaskIsSubTask == nil {
		var ret string
		return ret
	}
	return *o.TaskIsSubTask
}

// GetTaskIsSubTaskOk returns a tuple with the TaskIsSubTask field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InlineResponse200112TimeEntry) GetTaskIsSubTaskOk() (*string, bool) {
	if o == nil || o.TaskIsSubTask == nil {
		return nil, false
	}
	return o.TaskIsSubTask, true
}

// HasTaskIsSubTask returns a boolean if a field has been set.
func (o *InlineResponse200112TimeEntry) HasTaskIsSubTask() bool {
	if o != nil && o.TaskIsSubTask != nil {
		return true
	}

	return false
}

// SetTaskIsSubTask gets a reference to the given string and assigns it to the TaskIsSubTask field.
func (o *InlineResponse200112TimeEntry) SetTaskIsSubTask(v string) {
	o.TaskIsSubTask = &v
}

// GetTasklistId returns the TasklistId field value if set, zero value otherwise.
func (o *InlineResponse200112TimeEntry) GetTasklistId() string {
	if o == nil || o.TasklistId == nil {
		var ret string
		return ret
	}
	return *o.TasklistId
}

// GetTasklistIdOk returns a tuple with the TasklistId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InlineResponse200112TimeEntry) GetTasklistIdOk() (*string, bool) {
	if o == nil || o.TasklistId == nil {
		return nil, false
	}
	return o.TasklistId, true
}

// HasTasklistId returns a boolean if a field has been set.
func (o *InlineResponse200112TimeEntry) HasTasklistId() bool {
	if o != nil && o.TasklistId != nil {
		return true
	}

	return false
}

// SetTasklistId gets a reference to the given string and assigns it to the TasklistId field.
func (o *InlineResponse200112TimeEntry) SetTasklistId(v string) {
	o.TasklistId = &v
}

// GetTicketId returns the TicketId field value if set, zero value otherwise.
func (o *InlineResponse200112TimeEntry) GetTicketId() string {
	if o == nil || o.TicketId == nil {
		var ret string
		return ret
	}
	return *o.TicketId
}

// GetTicketIdOk returns a tuple with the TicketId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InlineResponse200112TimeEntry) GetTicketIdOk() (*string, bool) {
	if o == nil || o.TicketId == nil {
		return nil, false
	}
	return o.TicketId, true
}

// HasTicketId returns a boolean if a field has been set.
func (o *InlineResponse200112TimeEntry) HasTicketId() bool {
	if o != nil && o.TicketId != nil {
		return true
	}

	return false
}

// SetTicketId gets a reference to the given string and assigns it to the TicketId field.
func (o *InlineResponse200112TimeEntry) SetTicketId(v string) {
	o.TicketId = &v
}

// GetTodoItemId returns the TodoItemId field value if set, zero value otherwise.
func (o *InlineResponse200112TimeEntry) GetTodoItemId() string {
	if o == nil || o.TodoItemId == nil {
		var ret string
		return ret
	}
	return *o.TodoItemId
}

// GetTodoItemIdOk returns a tuple with the TodoItemId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InlineResponse200112TimeEntry) GetTodoItemIdOk() (*string, bool) {
	if o == nil || o.TodoItemId == nil {
		return nil, false
	}
	return o.TodoItemId, true
}

// HasTodoItemId returns a boolean if a field has been set.
func (o *InlineResponse200112TimeEntry) HasTodoItemId() bool {
	if o != nil && o.TodoItemId != nil {
		return true
	}

	return false
}

// SetTodoItemId gets a reference to the given string and assigns it to the TodoItemId field.
func (o *InlineResponse200112TimeEntry) SetTodoItemId(v string) {
	o.TodoItemId = &v
}

// GetTodoItemName returns the TodoItemName field value if set, zero value otherwise.
func (o *InlineResponse200112TimeEntry) GetTodoItemName() string {
	if o == nil || o.TodoItemName == nil {
		var ret string
		return ret
	}
	return *o.TodoItemName
}

// GetTodoItemNameOk returns a tuple with the TodoItemName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InlineResponse200112TimeEntry) GetTodoItemNameOk() (*string, bool) {
	if o == nil || o.TodoItemName == nil {
		return nil, false
	}
	return o.TodoItemName, true
}

// HasTodoItemName returns a boolean if a field has been set.
func (o *InlineResponse200112TimeEntry) HasTodoItemName() bool {
	if o != nil && o.TodoItemName != nil {
		return true
	}

	return false
}

// SetTodoItemName gets a reference to the given string and assigns it to the TodoItemName field.
func (o *InlineResponse200112TimeEntry) SetTodoItemName(v string) {
	o.TodoItemName = &v
}

// GetTodoListId returns the TodoListId field value if set, zero value otherwise.
func (o *InlineResponse200112TimeEntry) GetTodoListId() string {
	if o == nil || o.TodoListId == nil {
		var ret string
		return ret
	}
	return *o.TodoListId
}

// GetTodoListIdOk returns a tuple with the TodoListId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InlineResponse200112TimeEntry) GetTodoListIdOk() (*string, bool) {
	if o == nil || o.TodoListId == nil {
		return nil, false
	}
	return o.TodoListId, true
}

// HasTodoListId returns a boolean if a field has been set.
func (o *InlineResponse200112TimeEntry) HasTodoListId() bool {
	if o != nil && o.TodoListId != nil {
		return true
	}

	return false
}

// SetTodoListId gets a reference to the given string and assigns it to the TodoListId field.
func (o *InlineResponse200112TimeEntry) SetTodoListId(v string) {
	o.TodoListId = &v
}

// GetTodoListName returns the TodoListName field value if set, zero value otherwise.
func (o *InlineResponse200112TimeEntry) GetTodoListName() string {
	if o == nil || o.TodoListName == nil {
		var ret string
		return ret
	}
	return *o.TodoListName
}

// GetTodoListNameOk returns a tuple with the TodoListName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InlineResponse200112TimeEntry) GetTodoListNameOk() (*string, bool) {
	if o == nil || o.TodoListName == nil {
		return nil, false
	}
	return o.TodoListName, true
}

// HasTodoListName returns a boolean if a field has been set.
func (o *InlineResponse200112TimeEntry) HasTodoListName() bool {
	if o != nil && o.TodoListName != nil {
		return true
	}

	return false
}

// SetTodoListName gets a reference to the given string and assigns it to the TodoListName field.
func (o *InlineResponse200112TimeEntry) SetTodoListName(v string) {
	o.TodoListName = &v
}

// GetUpdatedDate returns the UpdatedDate field value if set, zero value otherwise.
func (o *InlineResponse200112TimeEntry) GetUpdatedDate() string {
	if o == nil || o.UpdatedDate == nil {
		var ret string
		return ret
	}
	return *o.UpdatedDate
}

// GetUpdatedDateOk returns a tuple with the UpdatedDate field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InlineResponse200112TimeEntry) GetUpdatedDateOk() (*string, bool) {
	if o == nil || o.UpdatedDate == nil {
		return nil, false
	}
	return o.UpdatedDate, true
}

// HasUpdatedDate returns a boolean if a field has been set.
func (o *InlineResponse200112TimeEntry) HasUpdatedDate() bool {
	if o != nil && o.UpdatedDate != nil {
		return true
	}

	return false
}

// SetUpdatedDate gets a reference to the given string and assigns it to the UpdatedDate field.
func (o *InlineResponse200112TimeEntry) SetUpdatedDate(v string) {
	o.UpdatedDate = &v
}

func (o InlineResponse200112TimeEntry) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.CanEdit != nil {
		toSerialize["canEdit"] = o.CanEdit
	}
	if o.CompanyId != nil {
		toSerialize["company-id"] = o.CompanyId
	}
	if o.CompanyName != nil {
		toSerialize["company-name"] = o.CompanyName
	}
	if o.CreatedAt != nil {
		toSerialize["createdAt"] = o.CreatedAt
	}
	if o.Date != nil {
		toSerialize["date"] = o.Date
	}
	if o.DateUserPerspective != nil {
		toSerialize["dateUserPerspective"] = o.DateUserPerspective
	}
	if o.Description != nil {
		toSerialize["description"] = o.Description
	}
	if o.HasStartTime != nil {
		toSerialize["has-start-time"] = o.HasStartTime
	}
	if o.Hours != nil {
		toSerialize["hours"] = o.Hours
	}
	if o.Id != nil {
		toSerialize["id"] = o.Id
	}
	if o.InvoiceNo != nil {
		toSerialize["invoiceNo"] = o.InvoiceNo
	}
	if o.Isbillable != nil {
		toSerialize["isbillable"] = o.Isbillable
	}
	if o.Isbilled != nil {
		toSerialize["isbilled"] = o.Isbilled
	}
	if o.Minutes != nil {
		toSerialize["minutes"] = o.Minutes
	}
	if o.ParentTaskId != nil {
		toSerialize["parentTaskId"] = o.ParentTaskId
	}
	if o.ParentTaskName != nil {
		toSerialize["parentTaskName"] = o.ParentTaskName
	}
	if o.PersonFirstName != nil {
		toSerialize["person-first-name"] = o.PersonFirstName
	}
	if o.PersonId != nil {
		toSerialize["person-id"] = o.PersonId
	}
	if o.PersonLastName != nil {
		toSerialize["person-last-name"] = o.PersonLastName
	}
	if o.ProjectId != nil {
		toSerialize["project-id"] = o.ProjectId
	}
	if o.ProjectName != nil {
		toSerialize["project-name"] = o.ProjectName
	}
	if o.ProjectStatus != nil {
		toSerialize["project-status"] = o.ProjectStatus
	}
	if o.Tags != nil {
		toSerialize["tags"] = o.Tags
	}
	if o.TaskTags != nil {
		toSerialize["task-tags"] = o.TaskTags
	}
	if o.TaskEstimatedTime != nil {
		toSerialize["taskEstimatedTime"] = o.TaskEstimatedTime
	}
	if o.TaskIsPrivate != nil {
		toSerialize["taskIsPrivate"] = o.TaskIsPrivate
	}
	if o.TaskIsSubTask != nil {
		toSerialize["taskIsSubTask"] = o.TaskIsSubTask
	}
	if o.TasklistId != nil {
		toSerialize["tasklistId"] = o.TasklistId
	}
	if o.TicketId != nil {
		toSerialize["ticket-id"] = o.TicketId
	}
	if o.TodoItemId != nil {
		toSerialize["todo-item-id"] = o.TodoItemId
	}
	if o.TodoItemName != nil {
		toSerialize["todo-item-name"] = o.TodoItemName
	}
	if o.TodoListId != nil {
		toSerialize["todo-list-id"] = o.TodoListId
	}
	if o.TodoListName != nil {
		toSerialize["todo-list-name"] = o.TodoListName
	}
	if o.UpdatedDate != nil {
		toSerialize["updated-date"] = o.UpdatedDate
	}
	return json.Marshal(toSerialize)
}

type NullableInlineResponse200112TimeEntry struct {
	value *InlineResponse200112TimeEntry
	isSet bool
}

func (v NullableInlineResponse200112TimeEntry) Get() *InlineResponse200112TimeEntry {
	return v.value
}

func (v *NullableInlineResponse200112TimeEntry) Set(val *InlineResponse200112TimeEntry) {
	v.value = val
	v.isSet = true
}

func (v NullableInlineResponse200112TimeEntry) IsSet() bool {
	return v.isSet
}

func (v *NullableInlineResponse200112TimeEntry) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableInlineResponse200112TimeEntry(val *InlineResponse200112TimeEntry) *NullableInlineResponse200112TimeEntry {
	return &NullableInlineResponse200112TimeEntry{value: val, isSet: true}
}

func (v NullableInlineResponse200112TimeEntry) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableInlineResponse200112TimeEntry) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


