/*
 * Teamwork Projects API
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * API version: 
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package pmv1

import (
	"encoding/json"
)

// InlineResponse20014Projects struct for InlineResponse20014Projects
type InlineResponse20014Projects struct {
	Announcement *string `json:"announcement,omitempty"`
	Category *InlineResponse2002People12345Company `json:"category,omitempty"`
	Company *InlineResponse20014Company `json:"company,omitempty"`
	CreatedOn *string `json:"created-on,omitempty"`
	Description *string `json:"description,omitempty"`
	EndDate *string `json:"endDate,omitempty"`
	HarvestTimersEnabled *string `json:"harvest-timers-enabled,omitempty"`
	Id *string `json:"id,omitempty"`
	IsProjectAdmin *bool `json:"isProjectAdmin,omitempty"`
	LastChangedOn *string `json:"last-changed-on,omitempty"`
	Logo *string `json:"logo,omitempty"`
	Name *string `json:"name,omitempty"`
	Notifyeveryone *bool `json:"notifyeveryone,omitempty"`
	ShowAnnouncement *bool `json:"show-announcement,omitempty"`
	Starred *bool `json:"starred,omitempty"`
	StartPage *string `json:"start-page,omitempty"`
	StartDate *string `json:"startDate,omitempty"`
	Status *string `json:"status,omitempty"`
}

// NewInlineResponse20014Projects instantiates a new InlineResponse20014Projects object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewInlineResponse20014Projects() *InlineResponse20014Projects {
	this := InlineResponse20014Projects{}
	return &this
}

// NewInlineResponse20014ProjectsWithDefaults instantiates a new InlineResponse20014Projects object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewInlineResponse20014ProjectsWithDefaults() *InlineResponse20014Projects {
	this := InlineResponse20014Projects{}
	return &this
}

// GetAnnouncement returns the Announcement field value if set, zero value otherwise.
func (o *InlineResponse20014Projects) GetAnnouncement() string {
	if o == nil || o.Announcement == nil {
		var ret string
		return ret
	}
	return *o.Announcement
}

// GetAnnouncementOk returns a tuple with the Announcement field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InlineResponse20014Projects) GetAnnouncementOk() (*string, bool) {
	if o == nil || o.Announcement == nil {
		return nil, false
	}
	return o.Announcement, true
}

// HasAnnouncement returns a boolean if a field has been set.
func (o *InlineResponse20014Projects) HasAnnouncement() bool {
	if o != nil && o.Announcement != nil {
		return true
	}

	return false
}

// SetAnnouncement gets a reference to the given string and assigns it to the Announcement field.
func (o *InlineResponse20014Projects) SetAnnouncement(v string) {
	o.Announcement = &v
}

// GetCategory returns the Category field value if set, zero value otherwise.
func (o *InlineResponse20014Projects) GetCategory() InlineResponse2002People12345Company {
	if o == nil || o.Category == nil {
		var ret InlineResponse2002People12345Company
		return ret
	}
	return *o.Category
}

// GetCategoryOk returns a tuple with the Category field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InlineResponse20014Projects) GetCategoryOk() (*InlineResponse2002People12345Company, bool) {
	if o == nil || o.Category == nil {
		return nil, false
	}
	return o.Category, true
}

// HasCategory returns a boolean if a field has been set.
func (o *InlineResponse20014Projects) HasCategory() bool {
	if o != nil && o.Category != nil {
		return true
	}

	return false
}

// SetCategory gets a reference to the given InlineResponse2002People12345Company and assigns it to the Category field.
func (o *InlineResponse20014Projects) SetCategory(v InlineResponse2002People12345Company) {
	o.Category = &v
}

// GetCompany returns the Company field value if set, zero value otherwise.
func (o *InlineResponse20014Projects) GetCompany() InlineResponse20014Company {
	if o == nil || o.Company == nil {
		var ret InlineResponse20014Company
		return ret
	}
	return *o.Company
}

// GetCompanyOk returns a tuple with the Company field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InlineResponse20014Projects) GetCompanyOk() (*InlineResponse20014Company, bool) {
	if o == nil || o.Company == nil {
		return nil, false
	}
	return o.Company, true
}

// HasCompany returns a boolean if a field has been set.
func (o *InlineResponse20014Projects) HasCompany() bool {
	if o != nil && o.Company != nil {
		return true
	}

	return false
}

// SetCompany gets a reference to the given InlineResponse20014Company and assigns it to the Company field.
func (o *InlineResponse20014Projects) SetCompany(v InlineResponse20014Company) {
	o.Company = &v
}

// GetCreatedOn returns the CreatedOn field value if set, zero value otherwise.
func (o *InlineResponse20014Projects) GetCreatedOn() string {
	if o == nil || o.CreatedOn == nil {
		var ret string
		return ret
	}
	return *o.CreatedOn
}

// GetCreatedOnOk returns a tuple with the CreatedOn field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InlineResponse20014Projects) GetCreatedOnOk() (*string, bool) {
	if o == nil || o.CreatedOn == nil {
		return nil, false
	}
	return o.CreatedOn, true
}

// HasCreatedOn returns a boolean if a field has been set.
func (o *InlineResponse20014Projects) HasCreatedOn() bool {
	if o != nil && o.CreatedOn != nil {
		return true
	}

	return false
}

// SetCreatedOn gets a reference to the given string and assigns it to the CreatedOn field.
func (o *InlineResponse20014Projects) SetCreatedOn(v string) {
	o.CreatedOn = &v
}

// GetDescription returns the Description field value if set, zero value otherwise.
func (o *InlineResponse20014Projects) GetDescription() string {
	if o == nil || o.Description == nil {
		var ret string
		return ret
	}
	return *o.Description
}

// GetDescriptionOk returns a tuple with the Description field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InlineResponse20014Projects) GetDescriptionOk() (*string, bool) {
	if o == nil || o.Description == nil {
		return nil, false
	}
	return o.Description, true
}

// HasDescription returns a boolean if a field has been set.
func (o *InlineResponse20014Projects) HasDescription() bool {
	if o != nil && o.Description != nil {
		return true
	}

	return false
}

// SetDescription gets a reference to the given string and assigns it to the Description field.
func (o *InlineResponse20014Projects) SetDescription(v string) {
	o.Description = &v
}

// GetEndDate returns the EndDate field value if set, zero value otherwise.
func (o *InlineResponse20014Projects) GetEndDate() string {
	if o == nil || o.EndDate == nil {
		var ret string
		return ret
	}
	return *o.EndDate
}

// GetEndDateOk returns a tuple with the EndDate field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InlineResponse20014Projects) GetEndDateOk() (*string, bool) {
	if o == nil || o.EndDate == nil {
		return nil, false
	}
	return o.EndDate, true
}

// HasEndDate returns a boolean if a field has been set.
func (o *InlineResponse20014Projects) HasEndDate() bool {
	if o != nil && o.EndDate != nil {
		return true
	}

	return false
}

// SetEndDate gets a reference to the given string and assigns it to the EndDate field.
func (o *InlineResponse20014Projects) SetEndDate(v string) {
	o.EndDate = &v
}

// GetHarvestTimersEnabled returns the HarvestTimersEnabled field value if set, zero value otherwise.
func (o *InlineResponse20014Projects) GetHarvestTimersEnabled() string {
	if o == nil || o.HarvestTimersEnabled == nil {
		var ret string
		return ret
	}
	return *o.HarvestTimersEnabled
}

// GetHarvestTimersEnabledOk returns a tuple with the HarvestTimersEnabled field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InlineResponse20014Projects) GetHarvestTimersEnabledOk() (*string, bool) {
	if o == nil || o.HarvestTimersEnabled == nil {
		return nil, false
	}
	return o.HarvestTimersEnabled, true
}

// HasHarvestTimersEnabled returns a boolean if a field has been set.
func (o *InlineResponse20014Projects) HasHarvestTimersEnabled() bool {
	if o != nil && o.HarvestTimersEnabled != nil {
		return true
	}

	return false
}

// SetHarvestTimersEnabled gets a reference to the given string and assigns it to the HarvestTimersEnabled field.
func (o *InlineResponse20014Projects) SetHarvestTimersEnabled(v string) {
	o.HarvestTimersEnabled = &v
}

// GetId returns the Id field value if set, zero value otherwise.
func (o *InlineResponse20014Projects) GetId() string {
	if o == nil || o.Id == nil {
		var ret string
		return ret
	}
	return *o.Id
}

// GetIdOk returns a tuple with the Id field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InlineResponse20014Projects) GetIdOk() (*string, bool) {
	if o == nil || o.Id == nil {
		return nil, false
	}
	return o.Id, true
}

// HasId returns a boolean if a field has been set.
func (o *InlineResponse20014Projects) HasId() bool {
	if o != nil && o.Id != nil {
		return true
	}

	return false
}

// SetId gets a reference to the given string and assigns it to the Id field.
func (o *InlineResponse20014Projects) SetId(v string) {
	o.Id = &v
}

// GetIsProjectAdmin returns the IsProjectAdmin field value if set, zero value otherwise.
func (o *InlineResponse20014Projects) GetIsProjectAdmin() bool {
	if o == nil || o.IsProjectAdmin == nil {
		var ret bool
		return ret
	}
	return *o.IsProjectAdmin
}

// GetIsProjectAdminOk returns a tuple with the IsProjectAdmin field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InlineResponse20014Projects) GetIsProjectAdminOk() (*bool, bool) {
	if o == nil || o.IsProjectAdmin == nil {
		return nil, false
	}
	return o.IsProjectAdmin, true
}

// HasIsProjectAdmin returns a boolean if a field has been set.
func (o *InlineResponse20014Projects) HasIsProjectAdmin() bool {
	if o != nil && o.IsProjectAdmin != nil {
		return true
	}

	return false
}

// SetIsProjectAdmin gets a reference to the given bool and assigns it to the IsProjectAdmin field.
func (o *InlineResponse20014Projects) SetIsProjectAdmin(v bool) {
	o.IsProjectAdmin = &v
}

// GetLastChangedOn returns the LastChangedOn field value if set, zero value otherwise.
func (o *InlineResponse20014Projects) GetLastChangedOn() string {
	if o == nil || o.LastChangedOn == nil {
		var ret string
		return ret
	}
	return *o.LastChangedOn
}

// GetLastChangedOnOk returns a tuple with the LastChangedOn field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InlineResponse20014Projects) GetLastChangedOnOk() (*string, bool) {
	if o == nil || o.LastChangedOn == nil {
		return nil, false
	}
	return o.LastChangedOn, true
}

// HasLastChangedOn returns a boolean if a field has been set.
func (o *InlineResponse20014Projects) HasLastChangedOn() bool {
	if o != nil && o.LastChangedOn != nil {
		return true
	}

	return false
}

// SetLastChangedOn gets a reference to the given string and assigns it to the LastChangedOn field.
func (o *InlineResponse20014Projects) SetLastChangedOn(v string) {
	o.LastChangedOn = &v
}

// GetLogo returns the Logo field value if set, zero value otherwise.
func (o *InlineResponse20014Projects) GetLogo() string {
	if o == nil || o.Logo == nil {
		var ret string
		return ret
	}
	return *o.Logo
}

// GetLogoOk returns a tuple with the Logo field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InlineResponse20014Projects) GetLogoOk() (*string, bool) {
	if o == nil || o.Logo == nil {
		return nil, false
	}
	return o.Logo, true
}

// HasLogo returns a boolean if a field has been set.
func (o *InlineResponse20014Projects) HasLogo() bool {
	if o != nil && o.Logo != nil {
		return true
	}

	return false
}

// SetLogo gets a reference to the given string and assigns it to the Logo field.
func (o *InlineResponse20014Projects) SetLogo(v string) {
	o.Logo = &v
}

// GetName returns the Name field value if set, zero value otherwise.
func (o *InlineResponse20014Projects) GetName() string {
	if o == nil || o.Name == nil {
		var ret string
		return ret
	}
	return *o.Name
}

// GetNameOk returns a tuple with the Name field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InlineResponse20014Projects) GetNameOk() (*string, bool) {
	if o == nil || o.Name == nil {
		return nil, false
	}
	return o.Name, true
}

// HasName returns a boolean if a field has been set.
func (o *InlineResponse20014Projects) HasName() bool {
	if o != nil && o.Name != nil {
		return true
	}

	return false
}

// SetName gets a reference to the given string and assigns it to the Name field.
func (o *InlineResponse20014Projects) SetName(v string) {
	o.Name = &v
}

// GetNotifyeveryone returns the Notifyeveryone field value if set, zero value otherwise.
func (o *InlineResponse20014Projects) GetNotifyeveryone() bool {
	if o == nil || o.Notifyeveryone == nil {
		var ret bool
		return ret
	}
	return *o.Notifyeveryone
}

// GetNotifyeveryoneOk returns a tuple with the Notifyeveryone field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InlineResponse20014Projects) GetNotifyeveryoneOk() (*bool, bool) {
	if o == nil || o.Notifyeveryone == nil {
		return nil, false
	}
	return o.Notifyeveryone, true
}

// HasNotifyeveryone returns a boolean if a field has been set.
func (o *InlineResponse20014Projects) HasNotifyeveryone() bool {
	if o != nil && o.Notifyeveryone != nil {
		return true
	}

	return false
}

// SetNotifyeveryone gets a reference to the given bool and assigns it to the Notifyeveryone field.
func (o *InlineResponse20014Projects) SetNotifyeveryone(v bool) {
	o.Notifyeveryone = &v
}

// GetShowAnnouncement returns the ShowAnnouncement field value if set, zero value otherwise.
func (o *InlineResponse20014Projects) GetShowAnnouncement() bool {
	if o == nil || o.ShowAnnouncement == nil {
		var ret bool
		return ret
	}
	return *o.ShowAnnouncement
}

// GetShowAnnouncementOk returns a tuple with the ShowAnnouncement field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InlineResponse20014Projects) GetShowAnnouncementOk() (*bool, bool) {
	if o == nil || o.ShowAnnouncement == nil {
		return nil, false
	}
	return o.ShowAnnouncement, true
}

// HasShowAnnouncement returns a boolean if a field has been set.
func (o *InlineResponse20014Projects) HasShowAnnouncement() bool {
	if o != nil && o.ShowAnnouncement != nil {
		return true
	}

	return false
}

// SetShowAnnouncement gets a reference to the given bool and assigns it to the ShowAnnouncement field.
func (o *InlineResponse20014Projects) SetShowAnnouncement(v bool) {
	o.ShowAnnouncement = &v
}

// GetStarred returns the Starred field value if set, zero value otherwise.
func (o *InlineResponse20014Projects) GetStarred() bool {
	if o == nil || o.Starred == nil {
		var ret bool
		return ret
	}
	return *o.Starred
}

// GetStarredOk returns a tuple with the Starred field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InlineResponse20014Projects) GetStarredOk() (*bool, bool) {
	if o == nil || o.Starred == nil {
		return nil, false
	}
	return o.Starred, true
}

// HasStarred returns a boolean if a field has been set.
func (o *InlineResponse20014Projects) HasStarred() bool {
	if o != nil && o.Starred != nil {
		return true
	}

	return false
}

// SetStarred gets a reference to the given bool and assigns it to the Starred field.
func (o *InlineResponse20014Projects) SetStarred(v bool) {
	o.Starred = &v
}

// GetStartPage returns the StartPage field value if set, zero value otherwise.
func (o *InlineResponse20014Projects) GetStartPage() string {
	if o == nil || o.StartPage == nil {
		var ret string
		return ret
	}
	return *o.StartPage
}

// GetStartPageOk returns a tuple with the StartPage field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InlineResponse20014Projects) GetStartPageOk() (*string, bool) {
	if o == nil || o.StartPage == nil {
		return nil, false
	}
	return o.StartPage, true
}

// HasStartPage returns a boolean if a field has been set.
func (o *InlineResponse20014Projects) HasStartPage() bool {
	if o != nil && o.StartPage != nil {
		return true
	}

	return false
}

// SetStartPage gets a reference to the given string and assigns it to the StartPage field.
func (o *InlineResponse20014Projects) SetStartPage(v string) {
	o.StartPage = &v
}

// GetStartDate returns the StartDate field value if set, zero value otherwise.
func (o *InlineResponse20014Projects) GetStartDate() string {
	if o == nil || o.StartDate == nil {
		var ret string
		return ret
	}
	return *o.StartDate
}

// GetStartDateOk returns a tuple with the StartDate field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InlineResponse20014Projects) GetStartDateOk() (*string, bool) {
	if o == nil || o.StartDate == nil {
		return nil, false
	}
	return o.StartDate, true
}

// HasStartDate returns a boolean if a field has been set.
func (o *InlineResponse20014Projects) HasStartDate() bool {
	if o != nil && o.StartDate != nil {
		return true
	}

	return false
}

// SetStartDate gets a reference to the given string and assigns it to the StartDate field.
func (o *InlineResponse20014Projects) SetStartDate(v string) {
	o.StartDate = &v
}

// GetStatus returns the Status field value if set, zero value otherwise.
func (o *InlineResponse20014Projects) GetStatus() string {
	if o == nil || o.Status == nil {
		var ret string
		return ret
	}
	return *o.Status
}

// GetStatusOk returns a tuple with the Status field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InlineResponse20014Projects) GetStatusOk() (*string, bool) {
	if o == nil || o.Status == nil {
		return nil, false
	}
	return o.Status, true
}

// HasStatus returns a boolean if a field has been set.
func (o *InlineResponse20014Projects) HasStatus() bool {
	if o != nil && o.Status != nil {
		return true
	}

	return false
}

// SetStatus gets a reference to the given string and assigns it to the Status field.
func (o *InlineResponse20014Projects) SetStatus(v string) {
	o.Status = &v
}

func (o InlineResponse20014Projects) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.Announcement != nil {
		toSerialize["announcement"] = o.Announcement
	}
	if o.Category != nil {
		toSerialize["category"] = o.Category
	}
	if o.Company != nil {
		toSerialize["company"] = o.Company
	}
	if o.CreatedOn != nil {
		toSerialize["created-on"] = o.CreatedOn
	}
	if o.Description != nil {
		toSerialize["description"] = o.Description
	}
	if o.EndDate != nil {
		toSerialize["endDate"] = o.EndDate
	}
	if o.HarvestTimersEnabled != nil {
		toSerialize["harvest-timers-enabled"] = o.HarvestTimersEnabled
	}
	if o.Id != nil {
		toSerialize["id"] = o.Id
	}
	if o.IsProjectAdmin != nil {
		toSerialize["isProjectAdmin"] = o.IsProjectAdmin
	}
	if o.LastChangedOn != nil {
		toSerialize["last-changed-on"] = o.LastChangedOn
	}
	if o.Logo != nil {
		toSerialize["logo"] = o.Logo
	}
	if o.Name != nil {
		toSerialize["name"] = o.Name
	}
	if o.Notifyeveryone != nil {
		toSerialize["notifyeveryone"] = o.Notifyeveryone
	}
	if o.ShowAnnouncement != nil {
		toSerialize["show-announcement"] = o.ShowAnnouncement
	}
	if o.Starred != nil {
		toSerialize["starred"] = o.Starred
	}
	if o.StartPage != nil {
		toSerialize["start-page"] = o.StartPage
	}
	if o.StartDate != nil {
		toSerialize["startDate"] = o.StartDate
	}
	if o.Status != nil {
		toSerialize["status"] = o.Status
	}
	return json.Marshal(toSerialize)
}

type NullableInlineResponse20014Projects struct {
	value *InlineResponse20014Projects
	isSet bool
}

func (v NullableInlineResponse20014Projects) Get() *InlineResponse20014Projects {
	return v.value
}

func (v *NullableInlineResponse20014Projects) Set(val *InlineResponse20014Projects) {
	v.value = val
	v.isSet = true
}

func (v NullableInlineResponse20014Projects) IsSet() bool {
	return v.isSet
}

func (v *NullableInlineResponse20014Projects) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableInlineResponse20014Projects(val *InlineResponse20014Projects) *NullableInlineResponse20014Projects {
	return &NullableInlineResponse20014Projects{value: val, isSet: true}
}

func (v NullableInlineResponse20014Projects) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableInlineResponse20014Projects) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


