/*
 * Teamwork Projects API
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * API version: 
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package pmv1

import (
	"encoding/json"
)

// InlineResponse20090StatsTasks struct for InlineResponse20090StatsTasks
type InlineResponse20090StatsTasks struct {
	Late *string `json:"late,omitempty"`
	Today *string `json:"today,omitempty"`
	Upcoming *string `json:"upcoming,omitempty"`
}

// NewInlineResponse20090StatsTasks instantiates a new InlineResponse20090StatsTasks object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewInlineResponse20090StatsTasks() *InlineResponse20090StatsTasks {
	this := InlineResponse20090StatsTasks{}
	return &this
}

// NewInlineResponse20090StatsTasksWithDefaults instantiates a new InlineResponse20090StatsTasks object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewInlineResponse20090StatsTasksWithDefaults() *InlineResponse20090StatsTasks {
	this := InlineResponse20090StatsTasks{}
	return &this
}

// GetLate returns the Late field value if set, zero value otherwise.
func (o *InlineResponse20090StatsTasks) GetLate() string {
	if o == nil || o.Late == nil {
		var ret string
		return ret
	}
	return *o.Late
}

// GetLateOk returns a tuple with the Late field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InlineResponse20090StatsTasks) GetLateOk() (*string, bool) {
	if o == nil || o.Late == nil {
		return nil, false
	}
	return o.Late, true
}

// HasLate returns a boolean if a field has been set.
func (o *InlineResponse20090StatsTasks) HasLate() bool {
	if o != nil && o.Late != nil {
		return true
	}

	return false
}

// SetLate gets a reference to the given string and assigns it to the Late field.
func (o *InlineResponse20090StatsTasks) SetLate(v string) {
	o.Late = &v
}

// GetToday returns the Today field value if set, zero value otherwise.
func (o *InlineResponse20090StatsTasks) GetToday() string {
	if o == nil || o.Today == nil {
		var ret string
		return ret
	}
	return *o.Today
}

// GetTodayOk returns a tuple with the Today field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InlineResponse20090StatsTasks) GetTodayOk() (*string, bool) {
	if o == nil || o.Today == nil {
		return nil, false
	}
	return o.Today, true
}

// HasToday returns a boolean if a field has been set.
func (o *InlineResponse20090StatsTasks) HasToday() bool {
	if o != nil && o.Today != nil {
		return true
	}

	return false
}

// SetToday gets a reference to the given string and assigns it to the Today field.
func (o *InlineResponse20090StatsTasks) SetToday(v string) {
	o.Today = &v
}

// GetUpcoming returns the Upcoming field value if set, zero value otherwise.
func (o *InlineResponse20090StatsTasks) GetUpcoming() string {
	if o == nil || o.Upcoming == nil {
		var ret string
		return ret
	}
	return *o.Upcoming
}

// GetUpcomingOk returns a tuple with the Upcoming field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InlineResponse20090StatsTasks) GetUpcomingOk() (*string, bool) {
	if o == nil || o.Upcoming == nil {
		return nil, false
	}
	return o.Upcoming, true
}

// HasUpcoming returns a boolean if a field has been set.
func (o *InlineResponse20090StatsTasks) HasUpcoming() bool {
	if o != nil && o.Upcoming != nil {
		return true
	}

	return false
}

// SetUpcoming gets a reference to the given string and assigns it to the Upcoming field.
func (o *InlineResponse20090StatsTasks) SetUpcoming(v string) {
	o.Upcoming = &v
}

func (o InlineResponse20090StatsTasks) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.Late != nil {
		toSerialize["late"] = o.Late
	}
	if o.Today != nil {
		toSerialize["today"] = o.Today
	}
	if o.Upcoming != nil {
		toSerialize["upcoming"] = o.Upcoming
	}
	return json.Marshal(toSerialize)
}

type NullableInlineResponse20090StatsTasks struct {
	value *InlineResponse20090StatsTasks
	isSet bool
}

func (v NullableInlineResponse20090StatsTasks) Get() *InlineResponse20090StatsTasks {
	return v.value
}

func (v *NullableInlineResponse20090StatsTasks) Set(val *InlineResponse20090StatsTasks) {
	v.value = val
	v.isSet = true
}

func (v NullableInlineResponse20090StatsTasks) IsSet() bool {
	return v.isSet
}

func (v *NullableInlineResponse20090StatsTasks) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableInlineResponse20090StatsTasks(val *InlineResponse20090StatsTasks) *NullableInlineResponse20090StatsTasks {
	return &NullableInlineResponse20090StatsTasks{value: val, isSet: true}
}

func (v NullableInlineResponse20090StatsTasks) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableInlineResponse20090StatsTasks) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


