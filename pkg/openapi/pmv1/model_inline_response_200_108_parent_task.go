/*
 * Teamwork Projects API
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * API version: 
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package pmv1

import (
	"encoding/json"
)

// InlineResponse200108ParentTask struct for InlineResponse200108ParentTask
type InlineResponse200108ParentTask struct {
	Content *string `json:"content,omitempty"`
	Id *string `json:"id,omitempty"`
}

// NewInlineResponse200108ParentTask instantiates a new InlineResponse200108ParentTask object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewInlineResponse200108ParentTask() *InlineResponse200108ParentTask {
	this := InlineResponse200108ParentTask{}
	return &this
}

// NewInlineResponse200108ParentTaskWithDefaults instantiates a new InlineResponse200108ParentTask object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewInlineResponse200108ParentTaskWithDefaults() *InlineResponse200108ParentTask {
	this := InlineResponse200108ParentTask{}
	return &this
}

// GetContent returns the Content field value if set, zero value otherwise.
func (o *InlineResponse200108ParentTask) GetContent() string {
	if o == nil || o.Content == nil {
		var ret string
		return ret
	}
	return *o.Content
}

// GetContentOk returns a tuple with the Content field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InlineResponse200108ParentTask) GetContentOk() (*string, bool) {
	if o == nil || o.Content == nil {
		return nil, false
	}
	return o.Content, true
}

// HasContent returns a boolean if a field has been set.
func (o *InlineResponse200108ParentTask) HasContent() bool {
	if o != nil && o.Content != nil {
		return true
	}

	return false
}

// SetContent gets a reference to the given string and assigns it to the Content field.
func (o *InlineResponse200108ParentTask) SetContent(v string) {
	o.Content = &v
}

// GetId returns the Id field value if set, zero value otherwise.
func (o *InlineResponse200108ParentTask) GetId() string {
	if o == nil || o.Id == nil {
		var ret string
		return ret
	}
	return *o.Id
}

// GetIdOk returns a tuple with the Id field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InlineResponse200108ParentTask) GetIdOk() (*string, bool) {
	if o == nil || o.Id == nil {
		return nil, false
	}
	return o.Id, true
}

// HasId returns a boolean if a field has been set.
func (o *InlineResponse200108ParentTask) HasId() bool {
	if o != nil && o.Id != nil {
		return true
	}

	return false
}

// SetId gets a reference to the given string and assigns it to the Id field.
func (o *InlineResponse200108ParentTask) SetId(v string) {
	o.Id = &v
}

func (o InlineResponse200108ParentTask) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.Content != nil {
		toSerialize["content"] = o.Content
	}
	if o.Id != nil {
		toSerialize["id"] = o.Id
	}
	return json.Marshal(toSerialize)
}

type NullableInlineResponse200108ParentTask struct {
	value *InlineResponse200108ParentTask
	isSet bool
}

func (v NullableInlineResponse200108ParentTask) Get() *InlineResponse200108ParentTask {
	return v.value
}

func (v *NullableInlineResponse200108ParentTask) Set(val *InlineResponse200108ParentTask) {
	v.value = val
	v.isSet = true
}

func (v NullableInlineResponse200108ParentTask) IsSet() bool {
	return v.isSet
}

func (v *NullableInlineResponse200108ParentTask) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableInlineResponse200108ParentTask(val *InlineResponse200108ParentTask) *NullableInlineResponse200108ParentTask {
	return &NullableInlineResponse200108ParentTask{value: val, isSet: true}
}

func (v NullableInlineResponse200108ParentTask) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableInlineResponse200108ParentTask) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


