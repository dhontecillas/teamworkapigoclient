/*
 * Teamwork.com Projects API
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * API version: 3.0
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package projv3

import (
	"encoding/json"
)

// ViewUserDashboardPanel UserDashboardPanel contains all the information returned from a dashboard panel.
type ViewUserDashboardPanel struct {
	DashboardId *int32 `json:"dashboardId,omitempty"`
	DashboardPanelSettingIds *[]int32 `json:"dashboardPanelSettingIds,omitempty"`
	DisplayOrder *int32 `json:"displayOrder,omitempty"`
	Id *int32 `json:"id,omitempty"`
	Name *string `json:"name,omitempty"`
	Type *string `json:"type,omitempty"`
}

// NewViewUserDashboardPanel instantiates a new ViewUserDashboardPanel object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewViewUserDashboardPanel() *ViewUserDashboardPanel {
	this := ViewUserDashboardPanel{}
	return &this
}

// NewViewUserDashboardPanelWithDefaults instantiates a new ViewUserDashboardPanel object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewViewUserDashboardPanelWithDefaults() *ViewUserDashboardPanel {
	this := ViewUserDashboardPanel{}
	return &this
}

// GetDashboardId returns the DashboardId field value if set, zero value otherwise.
func (o *ViewUserDashboardPanel) GetDashboardId() int32 {
	if o == nil || o.DashboardId == nil {
		var ret int32
		return ret
	}
	return *o.DashboardId
}

// GetDashboardIdOk returns a tuple with the DashboardId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ViewUserDashboardPanel) GetDashboardIdOk() (*int32, bool) {
	if o == nil || o.DashboardId == nil {
		return nil, false
	}
	return o.DashboardId, true
}

// HasDashboardId returns a boolean if a field has been set.
func (o *ViewUserDashboardPanel) HasDashboardId() bool {
	if o != nil && o.DashboardId != nil {
		return true
	}

	return false
}

// SetDashboardId gets a reference to the given int32 and assigns it to the DashboardId field.
func (o *ViewUserDashboardPanel) SetDashboardId(v int32) {
	o.DashboardId = &v
}

// GetDashboardPanelSettingIds returns the DashboardPanelSettingIds field value if set, zero value otherwise.
func (o *ViewUserDashboardPanel) GetDashboardPanelSettingIds() []int32 {
	if o == nil || o.DashboardPanelSettingIds == nil {
		var ret []int32
		return ret
	}
	return *o.DashboardPanelSettingIds
}

// GetDashboardPanelSettingIdsOk returns a tuple with the DashboardPanelSettingIds field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ViewUserDashboardPanel) GetDashboardPanelSettingIdsOk() (*[]int32, bool) {
	if o == nil || o.DashboardPanelSettingIds == nil {
		return nil, false
	}
	return o.DashboardPanelSettingIds, true
}

// HasDashboardPanelSettingIds returns a boolean if a field has been set.
func (o *ViewUserDashboardPanel) HasDashboardPanelSettingIds() bool {
	if o != nil && o.DashboardPanelSettingIds != nil {
		return true
	}

	return false
}

// SetDashboardPanelSettingIds gets a reference to the given []int32 and assigns it to the DashboardPanelSettingIds field.
func (o *ViewUserDashboardPanel) SetDashboardPanelSettingIds(v []int32) {
	o.DashboardPanelSettingIds = &v
}

// GetDisplayOrder returns the DisplayOrder field value if set, zero value otherwise.
func (o *ViewUserDashboardPanel) GetDisplayOrder() int32 {
	if o == nil || o.DisplayOrder == nil {
		var ret int32
		return ret
	}
	return *o.DisplayOrder
}

// GetDisplayOrderOk returns a tuple with the DisplayOrder field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ViewUserDashboardPanel) GetDisplayOrderOk() (*int32, bool) {
	if o == nil || o.DisplayOrder == nil {
		return nil, false
	}
	return o.DisplayOrder, true
}

// HasDisplayOrder returns a boolean if a field has been set.
func (o *ViewUserDashboardPanel) HasDisplayOrder() bool {
	if o != nil && o.DisplayOrder != nil {
		return true
	}

	return false
}

// SetDisplayOrder gets a reference to the given int32 and assigns it to the DisplayOrder field.
func (o *ViewUserDashboardPanel) SetDisplayOrder(v int32) {
	o.DisplayOrder = &v
}

// GetId returns the Id field value if set, zero value otherwise.
func (o *ViewUserDashboardPanel) GetId() int32 {
	if o == nil || o.Id == nil {
		var ret int32
		return ret
	}
	return *o.Id
}

// GetIdOk returns a tuple with the Id field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ViewUserDashboardPanel) GetIdOk() (*int32, bool) {
	if o == nil || o.Id == nil {
		return nil, false
	}
	return o.Id, true
}

// HasId returns a boolean if a field has been set.
func (o *ViewUserDashboardPanel) HasId() bool {
	if o != nil && o.Id != nil {
		return true
	}

	return false
}

// SetId gets a reference to the given int32 and assigns it to the Id field.
func (o *ViewUserDashboardPanel) SetId(v int32) {
	o.Id = &v
}

// GetName returns the Name field value if set, zero value otherwise.
func (o *ViewUserDashboardPanel) GetName() string {
	if o == nil || o.Name == nil {
		var ret string
		return ret
	}
	return *o.Name
}

// GetNameOk returns a tuple with the Name field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ViewUserDashboardPanel) GetNameOk() (*string, bool) {
	if o == nil || o.Name == nil {
		return nil, false
	}
	return o.Name, true
}

// HasName returns a boolean if a field has been set.
func (o *ViewUserDashboardPanel) HasName() bool {
	if o != nil && o.Name != nil {
		return true
	}

	return false
}

// SetName gets a reference to the given string and assigns it to the Name field.
func (o *ViewUserDashboardPanel) SetName(v string) {
	o.Name = &v
}

// GetType returns the Type field value if set, zero value otherwise.
func (o *ViewUserDashboardPanel) GetType() string {
	if o == nil || o.Type == nil {
		var ret string
		return ret
	}
	return *o.Type
}

// GetTypeOk returns a tuple with the Type field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ViewUserDashboardPanel) GetTypeOk() (*string, bool) {
	if o == nil || o.Type == nil {
		return nil, false
	}
	return o.Type, true
}

// HasType returns a boolean if a field has been set.
func (o *ViewUserDashboardPanel) HasType() bool {
	if o != nil && o.Type != nil {
		return true
	}

	return false
}

// SetType gets a reference to the given string and assigns it to the Type field.
func (o *ViewUserDashboardPanel) SetType(v string) {
	o.Type = &v
}

func (o ViewUserDashboardPanel) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.DashboardId != nil {
		toSerialize["dashboardId"] = o.DashboardId
	}
	if o.DashboardPanelSettingIds != nil {
		toSerialize["dashboardPanelSettingIds"] = o.DashboardPanelSettingIds
	}
	if o.DisplayOrder != nil {
		toSerialize["displayOrder"] = o.DisplayOrder
	}
	if o.Id != nil {
		toSerialize["id"] = o.Id
	}
	if o.Name != nil {
		toSerialize["name"] = o.Name
	}
	if o.Type != nil {
		toSerialize["type"] = o.Type
	}
	return json.Marshal(toSerialize)
}

type NullableViewUserDashboardPanel struct {
	value *ViewUserDashboardPanel
	isSet bool
}

func (v NullableViewUserDashboardPanel) Get() *ViewUserDashboardPanel {
	return v.value
}

func (v *NullableViewUserDashboardPanel) Set(val *ViewUserDashboardPanel) {
	v.value = val
	v.isSet = true
}

func (v NullableViewUserDashboardPanel) IsSet() bool {
	return v.isSet
}

func (v *NullableViewUserDashboardPanel) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableViewUserDashboardPanel(val *ViewUserDashboardPanel) *NullableViewUserDashboardPanel {
	return &NullableViewUserDashboardPanel{value: val, isSet: true}
}

func (v NullableViewUserDashboardPanel) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableViewUserDashboardPanel) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


