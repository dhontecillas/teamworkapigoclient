/*
 * Teamwork.com Projects API
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * API version: 3.0
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package projv2

import (
	"encoding/json"
)

// PeopleSocial struct for PeopleSocial
type PeopleSocial struct {
	Facebook *string `json:"facebook,omitempty"`
	Linkedin *string `json:"linkedin,omitempty"`
	Twitter *string `json:"twitter,omitempty"`
	Website *string `json:"website,omitempty"`
}

// NewPeopleSocial instantiates a new PeopleSocial object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewPeopleSocial() *PeopleSocial {
	this := PeopleSocial{}
	return &this
}

// NewPeopleSocialWithDefaults instantiates a new PeopleSocial object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewPeopleSocialWithDefaults() *PeopleSocial {
	this := PeopleSocial{}
	return &this
}

// GetFacebook returns the Facebook field value if set, zero value otherwise.
func (o *PeopleSocial) GetFacebook() string {
	if o == nil || o.Facebook == nil {
		var ret string
		return ret
	}
	return *o.Facebook
}

// GetFacebookOk returns a tuple with the Facebook field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PeopleSocial) GetFacebookOk() (*string, bool) {
	if o == nil || o.Facebook == nil {
		return nil, false
	}
	return o.Facebook, true
}

// HasFacebook returns a boolean if a field has been set.
func (o *PeopleSocial) HasFacebook() bool {
	if o != nil && o.Facebook != nil {
		return true
	}

	return false
}

// SetFacebook gets a reference to the given string and assigns it to the Facebook field.
func (o *PeopleSocial) SetFacebook(v string) {
	o.Facebook = &v
}

// GetLinkedin returns the Linkedin field value if set, zero value otherwise.
func (o *PeopleSocial) GetLinkedin() string {
	if o == nil || o.Linkedin == nil {
		var ret string
		return ret
	}
	return *o.Linkedin
}

// GetLinkedinOk returns a tuple with the Linkedin field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PeopleSocial) GetLinkedinOk() (*string, bool) {
	if o == nil || o.Linkedin == nil {
		return nil, false
	}
	return o.Linkedin, true
}

// HasLinkedin returns a boolean if a field has been set.
func (o *PeopleSocial) HasLinkedin() bool {
	if o != nil && o.Linkedin != nil {
		return true
	}

	return false
}

// SetLinkedin gets a reference to the given string and assigns it to the Linkedin field.
func (o *PeopleSocial) SetLinkedin(v string) {
	o.Linkedin = &v
}

// GetTwitter returns the Twitter field value if set, zero value otherwise.
func (o *PeopleSocial) GetTwitter() string {
	if o == nil || o.Twitter == nil {
		var ret string
		return ret
	}
	return *o.Twitter
}

// GetTwitterOk returns a tuple with the Twitter field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PeopleSocial) GetTwitterOk() (*string, bool) {
	if o == nil || o.Twitter == nil {
		return nil, false
	}
	return o.Twitter, true
}

// HasTwitter returns a boolean if a field has been set.
func (o *PeopleSocial) HasTwitter() bool {
	if o != nil && o.Twitter != nil {
		return true
	}

	return false
}

// SetTwitter gets a reference to the given string and assigns it to the Twitter field.
func (o *PeopleSocial) SetTwitter(v string) {
	o.Twitter = &v
}

// GetWebsite returns the Website field value if set, zero value otherwise.
func (o *PeopleSocial) GetWebsite() string {
	if o == nil || o.Website == nil {
		var ret string
		return ret
	}
	return *o.Website
}

// GetWebsiteOk returns a tuple with the Website field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PeopleSocial) GetWebsiteOk() (*string, bool) {
	if o == nil || o.Website == nil {
		return nil, false
	}
	return o.Website, true
}

// HasWebsite returns a boolean if a field has been set.
func (o *PeopleSocial) HasWebsite() bool {
	if o != nil && o.Website != nil {
		return true
	}

	return false
}

// SetWebsite gets a reference to the given string and assigns it to the Website field.
func (o *PeopleSocial) SetWebsite(v string) {
	o.Website = &v
}

func (o PeopleSocial) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.Facebook != nil {
		toSerialize["facebook"] = o.Facebook
	}
	if o.Linkedin != nil {
		toSerialize["linkedin"] = o.Linkedin
	}
	if o.Twitter != nil {
		toSerialize["twitter"] = o.Twitter
	}
	if o.Website != nil {
		toSerialize["website"] = o.Website
	}
	return json.Marshal(toSerialize)
}

type NullablePeopleSocial struct {
	value *PeopleSocial
	isSet bool
}

func (v NullablePeopleSocial) Get() *PeopleSocial {
	return v.value
}

func (v *NullablePeopleSocial) Set(val *PeopleSocial) {
	v.value = val
	v.isSet = true
}

func (v NullablePeopleSocial) IsSet() bool {
	return v.isSet
}

func (v *NullablePeopleSocial) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullablePeopleSocial(val *PeopleSocial) *NullablePeopleSocial {
	return &NullablePeopleSocial{value: val, isSet: true}
}

func (v NullablePeopleSocial) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullablePeopleSocial) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


