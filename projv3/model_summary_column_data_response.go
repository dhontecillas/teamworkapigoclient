/*
 * Teamwork.com Projects API
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * API version: 3.0
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package projv3

import (
	"encoding/json"
)

// SummaryColumnDataResponse ColumnDataResponse contains information of a specific column.
type SummaryColumnDataResponse struct {
	Cards *SummaryColumnCardResponse `json:"cards,omitempty"`
	Color *string `json:"color,omitempty"`
	EstimatedTime *SummaryColumnEstimatedResponse `json:"estimatedTime,omitempty"`
	Id *int32 `json:"id,omitempty"`
	Name *string `json:"name,omitempty"`
}

// NewSummaryColumnDataResponse instantiates a new SummaryColumnDataResponse object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewSummaryColumnDataResponse() *SummaryColumnDataResponse {
	this := SummaryColumnDataResponse{}
	return &this
}

// NewSummaryColumnDataResponseWithDefaults instantiates a new SummaryColumnDataResponse object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewSummaryColumnDataResponseWithDefaults() *SummaryColumnDataResponse {
	this := SummaryColumnDataResponse{}
	return &this
}

// GetCards returns the Cards field value if set, zero value otherwise.
func (o *SummaryColumnDataResponse) GetCards() SummaryColumnCardResponse {
	if o == nil || o.Cards == nil {
		var ret SummaryColumnCardResponse
		return ret
	}
	return *o.Cards
}

// GetCardsOk returns a tuple with the Cards field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SummaryColumnDataResponse) GetCardsOk() (*SummaryColumnCardResponse, bool) {
	if o == nil || o.Cards == nil {
		return nil, false
	}
	return o.Cards, true
}

// HasCards returns a boolean if a field has been set.
func (o *SummaryColumnDataResponse) HasCards() bool {
	if o != nil && o.Cards != nil {
		return true
	}

	return false
}

// SetCards gets a reference to the given SummaryColumnCardResponse and assigns it to the Cards field.
func (o *SummaryColumnDataResponse) SetCards(v SummaryColumnCardResponse) {
	o.Cards = &v
}

// GetColor returns the Color field value if set, zero value otherwise.
func (o *SummaryColumnDataResponse) GetColor() string {
	if o == nil || o.Color == nil {
		var ret string
		return ret
	}
	return *o.Color
}

// GetColorOk returns a tuple with the Color field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SummaryColumnDataResponse) GetColorOk() (*string, bool) {
	if o == nil || o.Color == nil {
		return nil, false
	}
	return o.Color, true
}

// HasColor returns a boolean if a field has been set.
func (o *SummaryColumnDataResponse) HasColor() bool {
	if o != nil && o.Color != nil {
		return true
	}

	return false
}

// SetColor gets a reference to the given string and assigns it to the Color field.
func (o *SummaryColumnDataResponse) SetColor(v string) {
	o.Color = &v
}

// GetEstimatedTime returns the EstimatedTime field value if set, zero value otherwise.
func (o *SummaryColumnDataResponse) GetEstimatedTime() SummaryColumnEstimatedResponse {
	if o == nil || o.EstimatedTime == nil {
		var ret SummaryColumnEstimatedResponse
		return ret
	}
	return *o.EstimatedTime
}

// GetEstimatedTimeOk returns a tuple with the EstimatedTime field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SummaryColumnDataResponse) GetEstimatedTimeOk() (*SummaryColumnEstimatedResponse, bool) {
	if o == nil || o.EstimatedTime == nil {
		return nil, false
	}
	return o.EstimatedTime, true
}

// HasEstimatedTime returns a boolean if a field has been set.
func (o *SummaryColumnDataResponse) HasEstimatedTime() bool {
	if o != nil && o.EstimatedTime != nil {
		return true
	}

	return false
}

// SetEstimatedTime gets a reference to the given SummaryColumnEstimatedResponse and assigns it to the EstimatedTime field.
func (o *SummaryColumnDataResponse) SetEstimatedTime(v SummaryColumnEstimatedResponse) {
	o.EstimatedTime = &v
}

// GetId returns the Id field value if set, zero value otherwise.
func (o *SummaryColumnDataResponse) GetId() int32 {
	if o == nil || o.Id == nil {
		var ret int32
		return ret
	}
	return *o.Id
}

// GetIdOk returns a tuple with the Id field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SummaryColumnDataResponse) GetIdOk() (*int32, bool) {
	if o == nil || o.Id == nil {
		return nil, false
	}
	return o.Id, true
}

// HasId returns a boolean if a field has been set.
func (o *SummaryColumnDataResponse) HasId() bool {
	if o != nil && o.Id != nil {
		return true
	}

	return false
}

// SetId gets a reference to the given int32 and assigns it to the Id field.
func (o *SummaryColumnDataResponse) SetId(v int32) {
	o.Id = &v
}

// GetName returns the Name field value if set, zero value otherwise.
func (o *SummaryColumnDataResponse) GetName() string {
	if o == nil || o.Name == nil {
		var ret string
		return ret
	}
	return *o.Name
}

// GetNameOk returns a tuple with the Name field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SummaryColumnDataResponse) GetNameOk() (*string, bool) {
	if o == nil || o.Name == nil {
		return nil, false
	}
	return o.Name, true
}

// HasName returns a boolean if a field has been set.
func (o *SummaryColumnDataResponse) HasName() bool {
	if o != nil && o.Name != nil {
		return true
	}

	return false
}

// SetName gets a reference to the given string and assigns it to the Name field.
func (o *SummaryColumnDataResponse) SetName(v string) {
	o.Name = &v
}

func (o SummaryColumnDataResponse) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.Cards != nil {
		toSerialize["cards"] = o.Cards
	}
	if o.Color != nil {
		toSerialize["color"] = o.Color
	}
	if o.EstimatedTime != nil {
		toSerialize["estimatedTime"] = o.EstimatedTime
	}
	if o.Id != nil {
		toSerialize["id"] = o.Id
	}
	if o.Name != nil {
		toSerialize["name"] = o.Name
	}
	return json.Marshal(toSerialize)
}

type NullableSummaryColumnDataResponse struct {
	value *SummaryColumnDataResponse
	isSet bool
}

func (v NullableSummaryColumnDataResponse) Get() *SummaryColumnDataResponse {
	return v.value
}

func (v *NullableSummaryColumnDataResponse) Set(val *SummaryColumnDataResponse) {
	v.value = val
	v.isSet = true
}

func (v NullableSummaryColumnDataResponse) IsSet() bool {
	return v.isSet
}

func (v *NullableSummaryColumnDataResponse) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableSummaryColumnDataResponse(val *SummaryColumnDataResponse) *NullableSummaryColumnDataResponse {
	return &NullableSummaryColumnDataResponse{value: val, isSet: true}
}

func (v NullableSummaryColumnDataResponse) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableSummaryColumnDataResponse) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


