/*
 * Teamwork Projects API
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * API version: 
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package pmv1

import (
	"encoding/json"
)

// InlineResponse20051 struct for InlineResponse20051
type InlineResponse20051 struct {
	STATUS *string `json:"STATUS,omitempty"`
	TodoItems *[]InlineResponse20051TodoItems `json:"todo-items,omitempty"`
}

// NewInlineResponse20051 instantiates a new InlineResponse20051 object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewInlineResponse20051() *InlineResponse20051 {
	this := InlineResponse20051{}
	return &this
}

// NewInlineResponse20051WithDefaults instantiates a new InlineResponse20051 object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewInlineResponse20051WithDefaults() *InlineResponse20051 {
	this := InlineResponse20051{}
	return &this
}

// GetSTATUS returns the STATUS field value if set, zero value otherwise.
func (o *InlineResponse20051) GetSTATUS() string {
	if o == nil || o.STATUS == nil {
		var ret string
		return ret
	}
	return *o.STATUS
}

// GetSTATUSOk returns a tuple with the STATUS field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InlineResponse20051) GetSTATUSOk() (*string, bool) {
	if o == nil || o.STATUS == nil {
		return nil, false
	}
	return o.STATUS, true
}

// HasSTATUS returns a boolean if a field has been set.
func (o *InlineResponse20051) HasSTATUS() bool {
	if o != nil && o.STATUS != nil {
		return true
	}

	return false
}

// SetSTATUS gets a reference to the given string and assigns it to the STATUS field.
func (o *InlineResponse20051) SetSTATUS(v string) {
	o.STATUS = &v
}

// GetTodoItems returns the TodoItems field value if set, zero value otherwise.
func (o *InlineResponse20051) GetTodoItems() []InlineResponse20051TodoItems {
	if o == nil || o.TodoItems == nil {
		var ret []InlineResponse20051TodoItems
		return ret
	}
	return *o.TodoItems
}

// GetTodoItemsOk returns a tuple with the TodoItems field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InlineResponse20051) GetTodoItemsOk() (*[]InlineResponse20051TodoItems, bool) {
	if o == nil || o.TodoItems == nil {
		return nil, false
	}
	return o.TodoItems, true
}

// HasTodoItems returns a boolean if a field has been set.
func (o *InlineResponse20051) HasTodoItems() bool {
	if o != nil && o.TodoItems != nil {
		return true
	}

	return false
}

// SetTodoItems gets a reference to the given []InlineResponse20051TodoItems and assigns it to the TodoItems field.
func (o *InlineResponse20051) SetTodoItems(v []InlineResponse20051TodoItems) {
	o.TodoItems = &v
}

func (o InlineResponse20051) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.STATUS != nil {
		toSerialize["STATUS"] = o.STATUS
	}
	if o.TodoItems != nil {
		toSerialize["todo-items"] = o.TodoItems
	}
	return json.Marshal(toSerialize)
}

type NullableInlineResponse20051 struct {
	value *InlineResponse20051
	isSet bool
}

func (v NullableInlineResponse20051) Get() *InlineResponse20051 {
	return v.value
}

func (v *NullableInlineResponse20051) Set(val *InlineResponse20051) {
	v.value = val
	v.isSet = true
}

func (v NullableInlineResponse20051) IsSet() bool {
	return v.isSet
}

func (v *NullableInlineResponse20051) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableInlineResponse20051(val *InlineResponse20051) *NullableInlineResponse20051 {
	return &NullableInlineResponse20051{value: val, isSet: true}
}

func (v NullableInlineResponse20051) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableInlineResponse20051) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


