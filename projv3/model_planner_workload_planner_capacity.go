/*
 * Teamwork.com Projects API
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * API version: 3.0
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package projv3

import (
	"encoding/json"
)

// PlannerWorkloadPlannerCapacity WorkloadPlannerCapacity contains the information regarding an user on a specific date.
type PlannerWorkloadPlannerCapacity struct {
	// percentage
	Capacity *float32 `json:"capacity,omitempty"`
	EstimateMinutesTotal *float32 `json:"estimateMinutesTotal,omitempty"`
	LengthOfDayMinutes *float32 `json:"lengthOfDayMinutes,omitempty"`
	Tasks *[]PlannerWorkloadPlannerCapacityTask `json:"tasks,omitempty"`
}

// NewPlannerWorkloadPlannerCapacity instantiates a new PlannerWorkloadPlannerCapacity object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewPlannerWorkloadPlannerCapacity() *PlannerWorkloadPlannerCapacity {
	this := PlannerWorkloadPlannerCapacity{}
	return &this
}

// NewPlannerWorkloadPlannerCapacityWithDefaults instantiates a new PlannerWorkloadPlannerCapacity object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewPlannerWorkloadPlannerCapacityWithDefaults() *PlannerWorkloadPlannerCapacity {
	this := PlannerWorkloadPlannerCapacity{}
	return &this
}

// GetCapacity returns the Capacity field value if set, zero value otherwise.
func (o *PlannerWorkloadPlannerCapacity) GetCapacity() float32 {
	if o == nil || o.Capacity == nil {
		var ret float32
		return ret
	}
	return *o.Capacity
}

// GetCapacityOk returns a tuple with the Capacity field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PlannerWorkloadPlannerCapacity) GetCapacityOk() (*float32, bool) {
	if o == nil || o.Capacity == nil {
		return nil, false
	}
	return o.Capacity, true
}

// HasCapacity returns a boolean if a field has been set.
func (o *PlannerWorkloadPlannerCapacity) HasCapacity() bool {
	if o != nil && o.Capacity != nil {
		return true
	}

	return false
}

// SetCapacity gets a reference to the given float32 and assigns it to the Capacity field.
func (o *PlannerWorkloadPlannerCapacity) SetCapacity(v float32) {
	o.Capacity = &v
}

// GetEstimateMinutesTotal returns the EstimateMinutesTotal field value if set, zero value otherwise.
func (o *PlannerWorkloadPlannerCapacity) GetEstimateMinutesTotal() float32 {
	if o == nil || o.EstimateMinutesTotal == nil {
		var ret float32
		return ret
	}
	return *o.EstimateMinutesTotal
}

// GetEstimateMinutesTotalOk returns a tuple with the EstimateMinutesTotal field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PlannerWorkloadPlannerCapacity) GetEstimateMinutesTotalOk() (*float32, bool) {
	if o == nil || o.EstimateMinutesTotal == nil {
		return nil, false
	}
	return o.EstimateMinutesTotal, true
}

// HasEstimateMinutesTotal returns a boolean if a field has been set.
func (o *PlannerWorkloadPlannerCapacity) HasEstimateMinutesTotal() bool {
	if o != nil && o.EstimateMinutesTotal != nil {
		return true
	}

	return false
}

// SetEstimateMinutesTotal gets a reference to the given float32 and assigns it to the EstimateMinutesTotal field.
func (o *PlannerWorkloadPlannerCapacity) SetEstimateMinutesTotal(v float32) {
	o.EstimateMinutesTotal = &v
}

// GetLengthOfDayMinutes returns the LengthOfDayMinutes field value if set, zero value otherwise.
func (o *PlannerWorkloadPlannerCapacity) GetLengthOfDayMinutes() float32 {
	if o == nil || o.LengthOfDayMinutes == nil {
		var ret float32
		return ret
	}
	return *o.LengthOfDayMinutes
}

// GetLengthOfDayMinutesOk returns a tuple with the LengthOfDayMinutes field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PlannerWorkloadPlannerCapacity) GetLengthOfDayMinutesOk() (*float32, bool) {
	if o == nil || o.LengthOfDayMinutes == nil {
		return nil, false
	}
	return o.LengthOfDayMinutes, true
}

// HasLengthOfDayMinutes returns a boolean if a field has been set.
func (o *PlannerWorkloadPlannerCapacity) HasLengthOfDayMinutes() bool {
	if o != nil && o.LengthOfDayMinutes != nil {
		return true
	}

	return false
}

// SetLengthOfDayMinutes gets a reference to the given float32 and assigns it to the LengthOfDayMinutes field.
func (o *PlannerWorkloadPlannerCapacity) SetLengthOfDayMinutes(v float32) {
	o.LengthOfDayMinutes = &v
}

// GetTasks returns the Tasks field value if set, zero value otherwise.
func (o *PlannerWorkloadPlannerCapacity) GetTasks() []PlannerWorkloadPlannerCapacityTask {
	if o == nil || o.Tasks == nil {
		var ret []PlannerWorkloadPlannerCapacityTask
		return ret
	}
	return *o.Tasks
}

// GetTasksOk returns a tuple with the Tasks field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PlannerWorkloadPlannerCapacity) GetTasksOk() (*[]PlannerWorkloadPlannerCapacityTask, bool) {
	if o == nil || o.Tasks == nil {
		return nil, false
	}
	return o.Tasks, true
}

// HasTasks returns a boolean if a field has been set.
func (o *PlannerWorkloadPlannerCapacity) HasTasks() bool {
	if o != nil && o.Tasks != nil {
		return true
	}

	return false
}

// SetTasks gets a reference to the given []PlannerWorkloadPlannerCapacityTask and assigns it to the Tasks field.
func (o *PlannerWorkloadPlannerCapacity) SetTasks(v []PlannerWorkloadPlannerCapacityTask) {
	o.Tasks = &v
}

func (o PlannerWorkloadPlannerCapacity) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.Capacity != nil {
		toSerialize["capacity"] = o.Capacity
	}
	if o.EstimateMinutesTotal != nil {
		toSerialize["estimateMinutesTotal"] = o.EstimateMinutesTotal
	}
	if o.LengthOfDayMinutes != nil {
		toSerialize["lengthOfDayMinutes"] = o.LengthOfDayMinutes
	}
	if o.Tasks != nil {
		toSerialize["tasks"] = o.Tasks
	}
	return json.Marshal(toSerialize)
}

type NullablePlannerWorkloadPlannerCapacity struct {
	value *PlannerWorkloadPlannerCapacity
	isSet bool
}

func (v NullablePlannerWorkloadPlannerCapacity) Get() *PlannerWorkloadPlannerCapacity {
	return v.value
}

func (v *NullablePlannerWorkloadPlannerCapacity) Set(val *PlannerWorkloadPlannerCapacity) {
	v.value = val
	v.isSet = true
}

func (v NullablePlannerWorkloadPlannerCapacity) IsSet() bool {
	return v.isSet
}

func (v *NullablePlannerWorkloadPlannerCapacity) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullablePlannerWorkloadPlannerCapacity(val *PlannerWorkloadPlannerCapacity) *NullablePlannerWorkloadPlannerCapacity {
	return &NullablePlannerWorkloadPlannerCapacity{value: val, isSet: true}
}

func (v NullablePlannerWorkloadPlannerCapacity) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullablePlannerWorkloadPlannerCapacity) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


