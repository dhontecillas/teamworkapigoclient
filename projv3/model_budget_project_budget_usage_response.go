/*
 * Teamwork.com Projects API
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * API version: 3.0
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package projv3

import (
	"encoding/json"
)

// BudgetProjectBudgetUsageResponse ProjectBudgetUsageResponse contains a list of ProjectBudgetUsage
type BudgetProjectBudgetUsageResponse struct {
	BudgetUsages *[]BudgetProjectBudgetUsage `json:"budgetUsages,omitempty"`
}

// NewBudgetProjectBudgetUsageResponse instantiates a new BudgetProjectBudgetUsageResponse object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewBudgetProjectBudgetUsageResponse() *BudgetProjectBudgetUsageResponse {
	this := BudgetProjectBudgetUsageResponse{}
	return &this
}

// NewBudgetProjectBudgetUsageResponseWithDefaults instantiates a new BudgetProjectBudgetUsageResponse object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewBudgetProjectBudgetUsageResponseWithDefaults() *BudgetProjectBudgetUsageResponse {
	this := BudgetProjectBudgetUsageResponse{}
	return &this
}

// GetBudgetUsages returns the BudgetUsages field value if set, zero value otherwise.
func (o *BudgetProjectBudgetUsageResponse) GetBudgetUsages() []BudgetProjectBudgetUsage {
	if o == nil || o.BudgetUsages == nil {
		var ret []BudgetProjectBudgetUsage
		return ret
	}
	return *o.BudgetUsages
}

// GetBudgetUsagesOk returns a tuple with the BudgetUsages field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BudgetProjectBudgetUsageResponse) GetBudgetUsagesOk() (*[]BudgetProjectBudgetUsage, bool) {
	if o == nil || o.BudgetUsages == nil {
		return nil, false
	}
	return o.BudgetUsages, true
}

// HasBudgetUsages returns a boolean if a field has been set.
func (o *BudgetProjectBudgetUsageResponse) HasBudgetUsages() bool {
	if o != nil && o.BudgetUsages != nil {
		return true
	}

	return false
}

// SetBudgetUsages gets a reference to the given []BudgetProjectBudgetUsage and assigns it to the BudgetUsages field.
func (o *BudgetProjectBudgetUsageResponse) SetBudgetUsages(v []BudgetProjectBudgetUsage) {
	o.BudgetUsages = &v
}

func (o BudgetProjectBudgetUsageResponse) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.BudgetUsages != nil {
		toSerialize["budgetUsages"] = o.BudgetUsages
	}
	return json.Marshal(toSerialize)
}

type NullableBudgetProjectBudgetUsageResponse struct {
	value *BudgetProjectBudgetUsageResponse
	isSet bool
}

func (v NullableBudgetProjectBudgetUsageResponse) Get() *BudgetProjectBudgetUsageResponse {
	return v.value
}

func (v *NullableBudgetProjectBudgetUsageResponse) Set(val *BudgetProjectBudgetUsageResponse) {
	v.value = val
	v.isSet = true
}

func (v NullableBudgetProjectBudgetUsageResponse) IsSet() bool {
	return v.isSet
}

func (v *NullableBudgetProjectBudgetUsageResponse) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableBudgetProjectBudgetUsageResponse(val *BudgetProjectBudgetUsageResponse) *NullableBudgetProjectBudgetUsageResponse {
	return &NullableBudgetProjectBudgetUsageResponse{value: val, isSet: true}
}

func (v NullableBudgetProjectBudgetUsageResponse) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableBudgetProjectBudgetUsageResponse) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


