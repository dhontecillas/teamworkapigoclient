/*
 * Teamwork.com Projects API
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * API version: 3.0
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package projv3

import (
	"encoding/json"
)

// AllocationBulkDeleteRequest BulkDeleteRequest contains the ids of the allocations that should be removed.
type AllocationBulkDeleteRequest struct {
	AllocationIds *[]int32 `json:"allocationIds,omitempty"`
	HardDelete *bool `json:"hardDelete,omitempty"`
}

// NewAllocationBulkDeleteRequest instantiates a new AllocationBulkDeleteRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewAllocationBulkDeleteRequest() *AllocationBulkDeleteRequest {
	this := AllocationBulkDeleteRequest{}
	return &this
}

// NewAllocationBulkDeleteRequestWithDefaults instantiates a new AllocationBulkDeleteRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewAllocationBulkDeleteRequestWithDefaults() *AllocationBulkDeleteRequest {
	this := AllocationBulkDeleteRequest{}
	return &this
}

// GetAllocationIds returns the AllocationIds field value if set, zero value otherwise.
func (o *AllocationBulkDeleteRequest) GetAllocationIds() []int32 {
	if o == nil || o.AllocationIds == nil {
		var ret []int32
		return ret
	}
	return *o.AllocationIds
}

// GetAllocationIdsOk returns a tuple with the AllocationIds field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AllocationBulkDeleteRequest) GetAllocationIdsOk() (*[]int32, bool) {
	if o == nil || o.AllocationIds == nil {
		return nil, false
	}
	return o.AllocationIds, true
}

// HasAllocationIds returns a boolean if a field has been set.
func (o *AllocationBulkDeleteRequest) HasAllocationIds() bool {
	if o != nil && o.AllocationIds != nil {
		return true
	}

	return false
}

// SetAllocationIds gets a reference to the given []int32 and assigns it to the AllocationIds field.
func (o *AllocationBulkDeleteRequest) SetAllocationIds(v []int32) {
	o.AllocationIds = &v
}

// GetHardDelete returns the HardDelete field value if set, zero value otherwise.
func (o *AllocationBulkDeleteRequest) GetHardDelete() bool {
	if o == nil || o.HardDelete == nil {
		var ret bool
		return ret
	}
	return *o.HardDelete
}

// GetHardDeleteOk returns a tuple with the HardDelete field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AllocationBulkDeleteRequest) GetHardDeleteOk() (*bool, bool) {
	if o == nil || o.HardDelete == nil {
		return nil, false
	}
	return o.HardDelete, true
}

// HasHardDelete returns a boolean if a field has been set.
func (o *AllocationBulkDeleteRequest) HasHardDelete() bool {
	if o != nil && o.HardDelete != nil {
		return true
	}

	return false
}

// SetHardDelete gets a reference to the given bool and assigns it to the HardDelete field.
func (o *AllocationBulkDeleteRequest) SetHardDelete(v bool) {
	o.HardDelete = &v
}

func (o AllocationBulkDeleteRequest) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.AllocationIds != nil {
		toSerialize["allocationIds"] = o.AllocationIds
	}
	if o.HardDelete != nil {
		toSerialize["hardDelete"] = o.HardDelete
	}
	return json.Marshal(toSerialize)
}

type NullableAllocationBulkDeleteRequest struct {
	value *AllocationBulkDeleteRequest
	isSet bool
}

func (v NullableAllocationBulkDeleteRequest) Get() *AllocationBulkDeleteRequest {
	return v.value
}

func (v *NullableAllocationBulkDeleteRequest) Set(val *AllocationBulkDeleteRequest) {
	v.value = val
	v.isSet = true
}

func (v NullableAllocationBulkDeleteRequest) IsSet() bool {
	return v.isSet
}

func (v *NullableAllocationBulkDeleteRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableAllocationBulkDeleteRequest(val *AllocationBulkDeleteRequest) *NullableAllocationBulkDeleteRequest {
	return &NullableAllocationBulkDeleteRequest{value: val, isSet: true}
}

func (v NullableAllocationBulkDeleteRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableAllocationBulkDeleteRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


