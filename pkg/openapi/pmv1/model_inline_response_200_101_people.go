/*
 * Teamwork Projects API
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * API version: 
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package pmv1

import (
	"encoding/json"
)

// InlineResponse200101People struct for InlineResponse200101People
type InlineResponse200101People struct {
	Var1 *InlineResponse200101People1 `json:"1,omitempty"`
}

// NewInlineResponse200101People instantiates a new InlineResponse200101People object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewInlineResponse200101People() *InlineResponse200101People {
	this := InlineResponse200101People{}
	return &this
}

// NewInlineResponse200101PeopleWithDefaults instantiates a new InlineResponse200101People object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewInlineResponse200101PeopleWithDefaults() *InlineResponse200101People {
	this := InlineResponse200101People{}
	return &this
}

// GetVar1 returns the Var1 field value if set, zero value otherwise.
func (o *InlineResponse200101People) GetVar1() InlineResponse200101People1 {
	if o == nil || o.Var1 == nil {
		var ret InlineResponse200101People1
		return ret
	}
	return *o.Var1
}

// GetVar1Ok returns a tuple with the Var1 field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InlineResponse200101People) GetVar1Ok() (*InlineResponse200101People1, bool) {
	if o == nil || o.Var1 == nil {
		return nil, false
	}
	return o.Var1, true
}

// HasVar1 returns a boolean if a field has been set.
func (o *InlineResponse200101People) HasVar1() bool {
	if o != nil && o.Var1 != nil {
		return true
	}

	return false
}

// SetVar1 gets a reference to the given InlineResponse200101People1 and assigns it to the Var1 field.
func (o *InlineResponse200101People) SetVar1(v InlineResponse200101People1) {
	o.Var1 = &v
}

func (o InlineResponse200101People) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.Var1 != nil {
		toSerialize["1"] = o.Var1
	}
	return json.Marshal(toSerialize)
}

type NullableInlineResponse200101People struct {
	value *InlineResponse200101People
	isSet bool
}

func (v NullableInlineResponse200101People) Get() *InlineResponse200101People {
	return v.value
}

func (v *NullableInlineResponse200101People) Set(val *InlineResponse200101People) {
	v.value = val
	v.isSet = true
}

func (v NullableInlineResponse200101People) IsSet() bool {
	return v.isSet
}

func (v *NullableInlineResponse200101People) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableInlineResponse200101People(val *InlineResponse200101People) *NullableInlineResponse200101People {
	return &NullableInlineResponse200101People{value: val, isSet: true}
}

func (v NullableInlineResponse200101People) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableInlineResponse200101People) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


