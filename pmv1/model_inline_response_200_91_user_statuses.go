/*
 * Teamwork Projects API
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * API version: 
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package pmv1

import (
	"encoding/json"
)

// InlineResponse20091UserStatuses struct for InlineResponse20091UserStatuses
type InlineResponse20091UserStatuses struct {
	AvatarUrl *string `json:"avatar-url,omitempty"`
	FirstName *string `json:"first-name,omitempty"`
	GeoipLocation *string `json:"geoipLocation,omitempty"`
	Id *string `json:"id,omitempty"`
	IsClockedIn *string `json:"isClockedIn,omitempty"`
	LastChangedOn *string `json:"last-changed-on,omitempty"`
	LastName *string `json:"last-name,omitempty"`
	PostedOn *string `json:"posted-on,omitempty"`
	Status *string `json:"status,omitempty"`
	UserId *string `json:"userId,omitempty"`
}

// NewInlineResponse20091UserStatuses instantiates a new InlineResponse20091UserStatuses object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewInlineResponse20091UserStatuses() *InlineResponse20091UserStatuses {
	this := InlineResponse20091UserStatuses{}
	return &this
}

// NewInlineResponse20091UserStatusesWithDefaults instantiates a new InlineResponse20091UserStatuses object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewInlineResponse20091UserStatusesWithDefaults() *InlineResponse20091UserStatuses {
	this := InlineResponse20091UserStatuses{}
	return &this
}

// GetAvatarUrl returns the AvatarUrl field value if set, zero value otherwise.
func (o *InlineResponse20091UserStatuses) GetAvatarUrl() string {
	if o == nil || o.AvatarUrl == nil {
		var ret string
		return ret
	}
	return *o.AvatarUrl
}

// GetAvatarUrlOk returns a tuple with the AvatarUrl field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InlineResponse20091UserStatuses) GetAvatarUrlOk() (*string, bool) {
	if o == nil || o.AvatarUrl == nil {
		return nil, false
	}
	return o.AvatarUrl, true
}

// HasAvatarUrl returns a boolean if a field has been set.
func (o *InlineResponse20091UserStatuses) HasAvatarUrl() bool {
	if o != nil && o.AvatarUrl != nil {
		return true
	}

	return false
}

// SetAvatarUrl gets a reference to the given string and assigns it to the AvatarUrl field.
func (o *InlineResponse20091UserStatuses) SetAvatarUrl(v string) {
	o.AvatarUrl = &v
}

// GetFirstName returns the FirstName field value if set, zero value otherwise.
func (o *InlineResponse20091UserStatuses) GetFirstName() string {
	if o == nil || o.FirstName == nil {
		var ret string
		return ret
	}
	return *o.FirstName
}

// GetFirstNameOk returns a tuple with the FirstName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InlineResponse20091UserStatuses) GetFirstNameOk() (*string, bool) {
	if o == nil || o.FirstName == nil {
		return nil, false
	}
	return o.FirstName, true
}

// HasFirstName returns a boolean if a field has been set.
func (o *InlineResponse20091UserStatuses) HasFirstName() bool {
	if o != nil && o.FirstName != nil {
		return true
	}

	return false
}

// SetFirstName gets a reference to the given string and assigns it to the FirstName field.
func (o *InlineResponse20091UserStatuses) SetFirstName(v string) {
	o.FirstName = &v
}

// GetGeoipLocation returns the GeoipLocation field value if set, zero value otherwise.
func (o *InlineResponse20091UserStatuses) GetGeoipLocation() string {
	if o == nil || o.GeoipLocation == nil {
		var ret string
		return ret
	}
	return *o.GeoipLocation
}

// GetGeoipLocationOk returns a tuple with the GeoipLocation field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InlineResponse20091UserStatuses) GetGeoipLocationOk() (*string, bool) {
	if o == nil || o.GeoipLocation == nil {
		return nil, false
	}
	return o.GeoipLocation, true
}

// HasGeoipLocation returns a boolean if a field has been set.
func (o *InlineResponse20091UserStatuses) HasGeoipLocation() bool {
	if o != nil && o.GeoipLocation != nil {
		return true
	}

	return false
}

// SetGeoipLocation gets a reference to the given string and assigns it to the GeoipLocation field.
func (o *InlineResponse20091UserStatuses) SetGeoipLocation(v string) {
	o.GeoipLocation = &v
}

// GetId returns the Id field value if set, zero value otherwise.
func (o *InlineResponse20091UserStatuses) GetId() string {
	if o == nil || o.Id == nil {
		var ret string
		return ret
	}
	return *o.Id
}

// GetIdOk returns a tuple with the Id field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InlineResponse20091UserStatuses) GetIdOk() (*string, bool) {
	if o == nil || o.Id == nil {
		return nil, false
	}
	return o.Id, true
}

// HasId returns a boolean if a field has been set.
func (o *InlineResponse20091UserStatuses) HasId() bool {
	if o != nil && o.Id != nil {
		return true
	}

	return false
}

// SetId gets a reference to the given string and assigns it to the Id field.
func (o *InlineResponse20091UserStatuses) SetId(v string) {
	o.Id = &v
}

// GetIsClockedIn returns the IsClockedIn field value if set, zero value otherwise.
func (o *InlineResponse20091UserStatuses) GetIsClockedIn() string {
	if o == nil || o.IsClockedIn == nil {
		var ret string
		return ret
	}
	return *o.IsClockedIn
}

// GetIsClockedInOk returns a tuple with the IsClockedIn field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InlineResponse20091UserStatuses) GetIsClockedInOk() (*string, bool) {
	if o == nil || o.IsClockedIn == nil {
		return nil, false
	}
	return o.IsClockedIn, true
}

// HasIsClockedIn returns a boolean if a field has been set.
func (o *InlineResponse20091UserStatuses) HasIsClockedIn() bool {
	if o != nil && o.IsClockedIn != nil {
		return true
	}

	return false
}

// SetIsClockedIn gets a reference to the given string and assigns it to the IsClockedIn field.
func (o *InlineResponse20091UserStatuses) SetIsClockedIn(v string) {
	o.IsClockedIn = &v
}

// GetLastChangedOn returns the LastChangedOn field value if set, zero value otherwise.
func (o *InlineResponse20091UserStatuses) GetLastChangedOn() string {
	if o == nil || o.LastChangedOn == nil {
		var ret string
		return ret
	}
	return *o.LastChangedOn
}

// GetLastChangedOnOk returns a tuple with the LastChangedOn field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InlineResponse20091UserStatuses) GetLastChangedOnOk() (*string, bool) {
	if o == nil || o.LastChangedOn == nil {
		return nil, false
	}
	return o.LastChangedOn, true
}

// HasLastChangedOn returns a boolean if a field has been set.
func (o *InlineResponse20091UserStatuses) HasLastChangedOn() bool {
	if o != nil && o.LastChangedOn != nil {
		return true
	}

	return false
}

// SetLastChangedOn gets a reference to the given string and assigns it to the LastChangedOn field.
func (o *InlineResponse20091UserStatuses) SetLastChangedOn(v string) {
	o.LastChangedOn = &v
}

// GetLastName returns the LastName field value if set, zero value otherwise.
func (o *InlineResponse20091UserStatuses) GetLastName() string {
	if o == nil || o.LastName == nil {
		var ret string
		return ret
	}
	return *o.LastName
}

// GetLastNameOk returns a tuple with the LastName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InlineResponse20091UserStatuses) GetLastNameOk() (*string, bool) {
	if o == nil || o.LastName == nil {
		return nil, false
	}
	return o.LastName, true
}

// HasLastName returns a boolean if a field has been set.
func (o *InlineResponse20091UserStatuses) HasLastName() bool {
	if o != nil && o.LastName != nil {
		return true
	}

	return false
}

// SetLastName gets a reference to the given string and assigns it to the LastName field.
func (o *InlineResponse20091UserStatuses) SetLastName(v string) {
	o.LastName = &v
}

// GetPostedOn returns the PostedOn field value if set, zero value otherwise.
func (o *InlineResponse20091UserStatuses) GetPostedOn() string {
	if o == nil || o.PostedOn == nil {
		var ret string
		return ret
	}
	return *o.PostedOn
}

// GetPostedOnOk returns a tuple with the PostedOn field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InlineResponse20091UserStatuses) GetPostedOnOk() (*string, bool) {
	if o == nil || o.PostedOn == nil {
		return nil, false
	}
	return o.PostedOn, true
}

// HasPostedOn returns a boolean if a field has been set.
func (o *InlineResponse20091UserStatuses) HasPostedOn() bool {
	if o != nil && o.PostedOn != nil {
		return true
	}

	return false
}

// SetPostedOn gets a reference to the given string and assigns it to the PostedOn field.
func (o *InlineResponse20091UserStatuses) SetPostedOn(v string) {
	o.PostedOn = &v
}

// GetStatus returns the Status field value if set, zero value otherwise.
func (o *InlineResponse20091UserStatuses) GetStatus() string {
	if o == nil || o.Status == nil {
		var ret string
		return ret
	}
	return *o.Status
}

// GetStatusOk returns a tuple with the Status field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InlineResponse20091UserStatuses) GetStatusOk() (*string, bool) {
	if o == nil || o.Status == nil {
		return nil, false
	}
	return o.Status, true
}

// HasStatus returns a boolean if a field has been set.
func (o *InlineResponse20091UserStatuses) HasStatus() bool {
	if o != nil && o.Status != nil {
		return true
	}

	return false
}

// SetStatus gets a reference to the given string and assigns it to the Status field.
func (o *InlineResponse20091UserStatuses) SetStatus(v string) {
	o.Status = &v
}

// GetUserId returns the UserId field value if set, zero value otherwise.
func (o *InlineResponse20091UserStatuses) GetUserId() string {
	if o == nil || o.UserId == nil {
		var ret string
		return ret
	}
	return *o.UserId
}

// GetUserIdOk returns a tuple with the UserId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InlineResponse20091UserStatuses) GetUserIdOk() (*string, bool) {
	if o == nil || o.UserId == nil {
		return nil, false
	}
	return o.UserId, true
}

// HasUserId returns a boolean if a field has been set.
func (o *InlineResponse20091UserStatuses) HasUserId() bool {
	if o != nil && o.UserId != nil {
		return true
	}

	return false
}

// SetUserId gets a reference to the given string and assigns it to the UserId field.
func (o *InlineResponse20091UserStatuses) SetUserId(v string) {
	o.UserId = &v
}

func (o InlineResponse20091UserStatuses) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.AvatarUrl != nil {
		toSerialize["avatar-url"] = o.AvatarUrl
	}
	if o.FirstName != nil {
		toSerialize["first-name"] = o.FirstName
	}
	if o.GeoipLocation != nil {
		toSerialize["geoipLocation"] = o.GeoipLocation
	}
	if o.Id != nil {
		toSerialize["id"] = o.Id
	}
	if o.IsClockedIn != nil {
		toSerialize["isClockedIn"] = o.IsClockedIn
	}
	if o.LastChangedOn != nil {
		toSerialize["last-changed-on"] = o.LastChangedOn
	}
	if o.LastName != nil {
		toSerialize["last-name"] = o.LastName
	}
	if o.PostedOn != nil {
		toSerialize["posted-on"] = o.PostedOn
	}
	if o.Status != nil {
		toSerialize["status"] = o.Status
	}
	if o.UserId != nil {
		toSerialize["userId"] = o.UserId
	}
	return json.Marshal(toSerialize)
}

type NullableInlineResponse20091UserStatuses struct {
	value *InlineResponse20091UserStatuses
	isSet bool
}

func (v NullableInlineResponse20091UserStatuses) Get() *InlineResponse20091UserStatuses {
	return v.value
}

func (v *NullableInlineResponse20091UserStatuses) Set(val *InlineResponse20091UserStatuses) {
	v.value = val
	v.isSet = true
}

func (v NullableInlineResponse20091UserStatuses) IsSet() bool {
	return v.isSet
}

func (v *NullableInlineResponse20091UserStatuses) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableInlineResponse20091UserStatuses(val *InlineResponse20091UserStatuses) *NullableInlineResponse20091UserStatuses {
	return &NullableInlineResponse20091UserStatuses{value: val, isSet: true}
}

func (v NullableInlineResponse20091UserStatuses) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableInlineResponse20091UserStatuses) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


