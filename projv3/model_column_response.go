/*
 * Teamwork.com Projects API
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * API version: 3.0
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package projv3

import (
	"encoding/json"
)

// ColumnResponse Response contains information about a specific column.
type ColumnResponse struct {
	Column *ViewBoardColumn `json:"column,omitempty"`
	Included *ColumnResponseIncluded `json:"included,omitempty"`
	Meta *ColumnBoardColumnMeta `json:"meta,omitempty"`
}

// NewColumnResponse instantiates a new ColumnResponse object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewColumnResponse() *ColumnResponse {
	this := ColumnResponse{}
	return &this
}

// NewColumnResponseWithDefaults instantiates a new ColumnResponse object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewColumnResponseWithDefaults() *ColumnResponse {
	this := ColumnResponse{}
	return &this
}

// GetColumn returns the Column field value if set, zero value otherwise.
func (o *ColumnResponse) GetColumn() ViewBoardColumn {
	if o == nil || o.Column == nil {
		var ret ViewBoardColumn
		return ret
	}
	return *o.Column
}

// GetColumnOk returns a tuple with the Column field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ColumnResponse) GetColumnOk() (*ViewBoardColumn, bool) {
	if o == nil || o.Column == nil {
		return nil, false
	}
	return o.Column, true
}

// HasColumn returns a boolean if a field has been set.
func (o *ColumnResponse) HasColumn() bool {
	if o != nil && o.Column != nil {
		return true
	}

	return false
}

// SetColumn gets a reference to the given ViewBoardColumn and assigns it to the Column field.
func (o *ColumnResponse) SetColumn(v ViewBoardColumn) {
	o.Column = &v
}

// GetIncluded returns the Included field value if set, zero value otherwise.
func (o *ColumnResponse) GetIncluded() ColumnResponseIncluded {
	if o == nil || o.Included == nil {
		var ret ColumnResponseIncluded
		return ret
	}
	return *o.Included
}

// GetIncludedOk returns a tuple with the Included field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ColumnResponse) GetIncludedOk() (*ColumnResponseIncluded, bool) {
	if o == nil || o.Included == nil {
		return nil, false
	}
	return o.Included, true
}

// HasIncluded returns a boolean if a field has been set.
func (o *ColumnResponse) HasIncluded() bool {
	if o != nil && o.Included != nil {
		return true
	}

	return false
}

// SetIncluded gets a reference to the given ColumnResponseIncluded and assigns it to the Included field.
func (o *ColumnResponse) SetIncluded(v ColumnResponseIncluded) {
	o.Included = &v
}

// GetMeta returns the Meta field value if set, zero value otherwise.
func (o *ColumnResponse) GetMeta() ColumnBoardColumnMeta {
	if o == nil || o.Meta == nil {
		var ret ColumnBoardColumnMeta
		return ret
	}
	return *o.Meta
}

// GetMetaOk returns a tuple with the Meta field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ColumnResponse) GetMetaOk() (*ColumnBoardColumnMeta, bool) {
	if o == nil || o.Meta == nil {
		return nil, false
	}
	return o.Meta, true
}

// HasMeta returns a boolean if a field has been set.
func (o *ColumnResponse) HasMeta() bool {
	if o != nil && o.Meta != nil {
		return true
	}

	return false
}

// SetMeta gets a reference to the given ColumnBoardColumnMeta and assigns it to the Meta field.
func (o *ColumnResponse) SetMeta(v ColumnBoardColumnMeta) {
	o.Meta = &v
}

func (o ColumnResponse) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.Column != nil {
		toSerialize["column"] = o.Column
	}
	if o.Included != nil {
		toSerialize["included"] = o.Included
	}
	if o.Meta != nil {
		toSerialize["meta"] = o.Meta
	}
	return json.Marshal(toSerialize)
}

type NullableColumnResponse struct {
	value *ColumnResponse
	isSet bool
}

func (v NullableColumnResponse) Get() *ColumnResponse {
	return v.value
}

func (v *NullableColumnResponse) Set(val *ColumnResponse) {
	v.value = val
	v.isSet = true
}

func (v NullableColumnResponse) IsSet() bool {
	return v.isSet
}

func (v *NullableColumnResponse) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableColumnResponse(val *ColumnResponse) *NullableColumnResponse {
	return &NullableColumnResponse{value: val, isSet: true}
}

func (v NullableColumnResponse) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableColumnResponse) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


