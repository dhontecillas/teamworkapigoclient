/*
 * Teamwork Projects API
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * API version: 
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package pmv1

import (
	"encoding/json"
)

// InlineResponse20061DefaultTasklist struct for InlineResponse20061DefaultTasklist
type InlineResponse20061DefaultTasklist struct {
	Id *string `json:"id,omitempty"`
	Name *string `json:"name,omitempty"`
	NewTaskDefaults *map[string]interface{} `json:"newTaskDefaults,omitempty"`
}

// NewInlineResponse20061DefaultTasklist instantiates a new InlineResponse20061DefaultTasklist object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewInlineResponse20061DefaultTasklist() *InlineResponse20061DefaultTasklist {
	this := InlineResponse20061DefaultTasklist{}
	return &this
}

// NewInlineResponse20061DefaultTasklistWithDefaults instantiates a new InlineResponse20061DefaultTasklist object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewInlineResponse20061DefaultTasklistWithDefaults() *InlineResponse20061DefaultTasklist {
	this := InlineResponse20061DefaultTasklist{}
	return &this
}

// GetId returns the Id field value if set, zero value otherwise.
func (o *InlineResponse20061DefaultTasklist) GetId() string {
	if o == nil || o.Id == nil {
		var ret string
		return ret
	}
	return *o.Id
}

// GetIdOk returns a tuple with the Id field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InlineResponse20061DefaultTasklist) GetIdOk() (*string, bool) {
	if o == nil || o.Id == nil {
		return nil, false
	}
	return o.Id, true
}

// HasId returns a boolean if a field has been set.
func (o *InlineResponse20061DefaultTasklist) HasId() bool {
	if o != nil && o.Id != nil {
		return true
	}

	return false
}

// SetId gets a reference to the given string and assigns it to the Id field.
func (o *InlineResponse20061DefaultTasklist) SetId(v string) {
	o.Id = &v
}

// GetName returns the Name field value if set, zero value otherwise.
func (o *InlineResponse20061DefaultTasklist) GetName() string {
	if o == nil || o.Name == nil {
		var ret string
		return ret
	}
	return *o.Name
}

// GetNameOk returns a tuple with the Name field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InlineResponse20061DefaultTasklist) GetNameOk() (*string, bool) {
	if o == nil || o.Name == nil {
		return nil, false
	}
	return o.Name, true
}

// HasName returns a boolean if a field has been set.
func (o *InlineResponse20061DefaultTasklist) HasName() bool {
	if o != nil && o.Name != nil {
		return true
	}

	return false
}

// SetName gets a reference to the given string and assigns it to the Name field.
func (o *InlineResponse20061DefaultTasklist) SetName(v string) {
	o.Name = &v
}

// GetNewTaskDefaults returns the NewTaskDefaults field value if set, zero value otherwise.
func (o *InlineResponse20061DefaultTasklist) GetNewTaskDefaults() map[string]interface{} {
	if o == nil || o.NewTaskDefaults == nil {
		var ret map[string]interface{}
		return ret
	}
	return *o.NewTaskDefaults
}

// GetNewTaskDefaultsOk returns a tuple with the NewTaskDefaults field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InlineResponse20061DefaultTasklist) GetNewTaskDefaultsOk() (*map[string]interface{}, bool) {
	if o == nil || o.NewTaskDefaults == nil {
		return nil, false
	}
	return o.NewTaskDefaults, true
}

// HasNewTaskDefaults returns a boolean if a field has been set.
func (o *InlineResponse20061DefaultTasklist) HasNewTaskDefaults() bool {
	if o != nil && o.NewTaskDefaults != nil {
		return true
	}

	return false
}

// SetNewTaskDefaults gets a reference to the given map[string]interface{} and assigns it to the NewTaskDefaults field.
func (o *InlineResponse20061DefaultTasklist) SetNewTaskDefaults(v map[string]interface{}) {
	o.NewTaskDefaults = &v
}

func (o InlineResponse20061DefaultTasklist) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.Id != nil {
		toSerialize["id"] = o.Id
	}
	if o.Name != nil {
		toSerialize["name"] = o.Name
	}
	if o.NewTaskDefaults != nil {
		toSerialize["newTaskDefaults"] = o.NewTaskDefaults
	}
	return json.Marshal(toSerialize)
}

type NullableInlineResponse20061DefaultTasklist struct {
	value *InlineResponse20061DefaultTasklist
	isSet bool
}

func (v NullableInlineResponse20061DefaultTasklist) Get() *InlineResponse20061DefaultTasklist {
	return v.value
}

func (v *NullableInlineResponse20061DefaultTasklist) Set(val *InlineResponse20061DefaultTasklist) {
	v.value = val
	v.isSet = true
}

func (v NullableInlineResponse20061DefaultTasklist) IsSet() bool {
	return v.isSet
}

func (v *NullableInlineResponse20061DefaultTasklist) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableInlineResponse20061DefaultTasklist(val *InlineResponse20061DefaultTasklist) *NullableInlineResponse20061DefaultTasklist {
	return &NullableInlineResponse20061DefaultTasklist{value: val, isSet: true}
}

func (v NullableInlineResponse20061DefaultTasklist) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableInlineResponse20061DefaultTasklist) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


