/*
 * Teamwork Projects API
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * API version: 
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package pmv1

import (
	"encoding/json"
)

// InlineResponse200Account struct for InlineResponse200Account
type InlineResponse200Account struct {
	URL *string `json:"URL,omitempty"`
	AccountHolderId *string `json:"account-holder-id,omitempty"`
	CacheUUID *string `json:"cacheUUID,omitempty"`
	Code *string `json:"code,omitempty"`
	Companyid *string `json:"companyid,omitempty"`
	Companyname *string `json:"companyname,omitempty"`
	CreatedAt *string `json:"created-at,omitempty"`
	Datesignedup *string `json:"datesignedup,omitempty"`
	EmailNotificationEnabled *bool `json:"email-notification-enabled,omitempty"`
	Id *string `json:"id,omitempty"`
	Lang *string `json:"lang,omitempty"`
	Logo *string `json:"logo,omitempty"`
	Name *string `json:"name,omitempty"`
	Requirehttps *bool `json:"requirehttps,omitempty"`
	SslEnabled *bool `json:"ssl-enabled,omitempty"`
	TimeTrackingEnabled *bool `json:"time-tracking-enabled,omitempty"`
}

// NewInlineResponse200Account instantiates a new InlineResponse200Account object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewInlineResponse200Account() *InlineResponse200Account {
	this := InlineResponse200Account{}
	return &this
}

// NewInlineResponse200AccountWithDefaults instantiates a new InlineResponse200Account object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewInlineResponse200AccountWithDefaults() *InlineResponse200Account {
	this := InlineResponse200Account{}
	return &this
}

// GetURL returns the URL field value if set, zero value otherwise.
func (o *InlineResponse200Account) GetURL() string {
	if o == nil || o.URL == nil {
		var ret string
		return ret
	}
	return *o.URL
}

// GetURLOk returns a tuple with the URL field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InlineResponse200Account) GetURLOk() (*string, bool) {
	if o == nil || o.URL == nil {
		return nil, false
	}
	return o.URL, true
}

// HasURL returns a boolean if a field has been set.
func (o *InlineResponse200Account) HasURL() bool {
	if o != nil && o.URL != nil {
		return true
	}

	return false
}

// SetURL gets a reference to the given string and assigns it to the URL field.
func (o *InlineResponse200Account) SetURL(v string) {
	o.URL = &v
}

// GetAccountHolderId returns the AccountHolderId field value if set, zero value otherwise.
func (o *InlineResponse200Account) GetAccountHolderId() string {
	if o == nil || o.AccountHolderId == nil {
		var ret string
		return ret
	}
	return *o.AccountHolderId
}

// GetAccountHolderIdOk returns a tuple with the AccountHolderId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InlineResponse200Account) GetAccountHolderIdOk() (*string, bool) {
	if o == nil || o.AccountHolderId == nil {
		return nil, false
	}
	return o.AccountHolderId, true
}

// HasAccountHolderId returns a boolean if a field has been set.
func (o *InlineResponse200Account) HasAccountHolderId() bool {
	if o != nil && o.AccountHolderId != nil {
		return true
	}

	return false
}

// SetAccountHolderId gets a reference to the given string and assigns it to the AccountHolderId field.
func (o *InlineResponse200Account) SetAccountHolderId(v string) {
	o.AccountHolderId = &v
}

// GetCacheUUID returns the CacheUUID field value if set, zero value otherwise.
func (o *InlineResponse200Account) GetCacheUUID() string {
	if o == nil || o.CacheUUID == nil {
		var ret string
		return ret
	}
	return *o.CacheUUID
}

// GetCacheUUIDOk returns a tuple with the CacheUUID field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InlineResponse200Account) GetCacheUUIDOk() (*string, bool) {
	if o == nil || o.CacheUUID == nil {
		return nil, false
	}
	return o.CacheUUID, true
}

// HasCacheUUID returns a boolean if a field has been set.
func (o *InlineResponse200Account) HasCacheUUID() bool {
	if o != nil && o.CacheUUID != nil {
		return true
	}

	return false
}

// SetCacheUUID gets a reference to the given string and assigns it to the CacheUUID field.
func (o *InlineResponse200Account) SetCacheUUID(v string) {
	o.CacheUUID = &v
}

// GetCode returns the Code field value if set, zero value otherwise.
func (o *InlineResponse200Account) GetCode() string {
	if o == nil || o.Code == nil {
		var ret string
		return ret
	}
	return *o.Code
}

// GetCodeOk returns a tuple with the Code field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InlineResponse200Account) GetCodeOk() (*string, bool) {
	if o == nil || o.Code == nil {
		return nil, false
	}
	return o.Code, true
}

// HasCode returns a boolean if a field has been set.
func (o *InlineResponse200Account) HasCode() bool {
	if o != nil && o.Code != nil {
		return true
	}

	return false
}

// SetCode gets a reference to the given string and assigns it to the Code field.
func (o *InlineResponse200Account) SetCode(v string) {
	o.Code = &v
}

// GetCompanyid returns the Companyid field value if set, zero value otherwise.
func (o *InlineResponse200Account) GetCompanyid() string {
	if o == nil || o.Companyid == nil {
		var ret string
		return ret
	}
	return *o.Companyid
}

// GetCompanyidOk returns a tuple with the Companyid field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InlineResponse200Account) GetCompanyidOk() (*string, bool) {
	if o == nil || o.Companyid == nil {
		return nil, false
	}
	return o.Companyid, true
}

// HasCompanyid returns a boolean if a field has been set.
func (o *InlineResponse200Account) HasCompanyid() bool {
	if o != nil && o.Companyid != nil {
		return true
	}

	return false
}

// SetCompanyid gets a reference to the given string and assigns it to the Companyid field.
func (o *InlineResponse200Account) SetCompanyid(v string) {
	o.Companyid = &v
}

// GetCompanyname returns the Companyname field value if set, zero value otherwise.
func (o *InlineResponse200Account) GetCompanyname() string {
	if o == nil || o.Companyname == nil {
		var ret string
		return ret
	}
	return *o.Companyname
}

// GetCompanynameOk returns a tuple with the Companyname field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InlineResponse200Account) GetCompanynameOk() (*string, bool) {
	if o == nil || o.Companyname == nil {
		return nil, false
	}
	return o.Companyname, true
}

// HasCompanyname returns a boolean if a field has been set.
func (o *InlineResponse200Account) HasCompanyname() bool {
	if o != nil && o.Companyname != nil {
		return true
	}

	return false
}

// SetCompanyname gets a reference to the given string and assigns it to the Companyname field.
func (o *InlineResponse200Account) SetCompanyname(v string) {
	o.Companyname = &v
}

// GetCreatedAt returns the CreatedAt field value if set, zero value otherwise.
func (o *InlineResponse200Account) GetCreatedAt() string {
	if o == nil || o.CreatedAt == nil {
		var ret string
		return ret
	}
	return *o.CreatedAt
}

// GetCreatedAtOk returns a tuple with the CreatedAt field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InlineResponse200Account) GetCreatedAtOk() (*string, bool) {
	if o == nil || o.CreatedAt == nil {
		return nil, false
	}
	return o.CreatedAt, true
}

// HasCreatedAt returns a boolean if a field has been set.
func (o *InlineResponse200Account) HasCreatedAt() bool {
	if o != nil && o.CreatedAt != nil {
		return true
	}

	return false
}

// SetCreatedAt gets a reference to the given string and assigns it to the CreatedAt field.
func (o *InlineResponse200Account) SetCreatedAt(v string) {
	o.CreatedAt = &v
}

// GetDatesignedup returns the Datesignedup field value if set, zero value otherwise.
func (o *InlineResponse200Account) GetDatesignedup() string {
	if o == nil || o.Datesignedup == nil {
		var ret string
		return ret
	}
	return *o.Datesignedup
}

// GetDatesignedupOk returns a tuple with the Datesignedup field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InlineResponse200Account) GetDatesignedupOk() (*string, bool) {
	if o == nil || o.Datesignedup == nil {
		return nil, false
	}
	return o.Datesignedup, true
}

// HasDatesignedup returns a boolean if a field has been set.
func (o *InlineResponse200Account) HasDatesignedup() bool {
	if o != nil && o.Datesignedup != nil {
		return true
	}

	return false
}

// SetDatesignedup gets a reference to the given string and assigns it to the Datesignedup field.
func (o *InlineResponse200Account) SetDatesignedup(v string) {
	o.Datesignedup = &v
}

// GetEmailNotificationEnabled returns the EmailNotificationEnabled field value if set, zero value otherwise.
func (o *InlineResponse200Account) GetEmailNotificationEnabled() bool {
	if o == nil || o.EmailNotificationEnabled == nil {
		var ret bool
		return ret
	}
	return *o.EmailNotificationEnabled
}

// GetEmailNotificationEnabledOk returns a tuple with the EmailNotificationEnabled field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InlineResponse200Account) GetEmailNotificationEnabledOk() (*bool, bool) {
	if o == nil || o.EmailNotificationEnabled == nil {
		return nil, false
	}
	return o.EmailNotificationEnabled, true
}

// HasEmailNotificationEnabled returns a boolean if a field has been set.
func (o *InlineResponse200Account) HasEmailNotificationEnabled() bool {
	if o != nil && o.EmailNotificationEnabled != nil {
		return true
	}

	return false
}

// SetEmailNotificationEnabled gets a reference to the given bool and assigns it to the EmailNotificationEnabled field.
func (o *InlineResponse200Account) SetEmailNotificationEnabled(v bool) {
	o.EmailNotificationEnabled = &v
}

// GetId returns the Id field value if set, zero value otherwise.
func (o *InlineResponse200Account) GetId() string {
	if o == nil || o.Id == nil {
		var ret string
		return ret
	}
	return *o.Id
}

// GetIdOk returns a tuple with the Id field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InlineResponse200Account) GetIdOk() (*string, bool) {
	if o == nil || o.Id == nil {
		return nil, false
	}
	return o.Id, true
}

// HasId returns a boolean if a field has been set.
func (o *InlineResponse200Account) HasId() bool {
	if o != nil && o.Id != nil {
		return true
	}

	return false
}

// SetId gets a reference to the given string and assigns it to the Id field.
func (o *InlineResponse200Account) SetId(v string) {
	o.Id = &v
}

// GetLang returns the Lang field value if set, zero value otherwise.
func (o *InlineResponse200Account) GetLang() string {
	if o == nil || o.Lang == nil {
		var ret string
		return ret
	}
	return *o.Lang
}

// GetLangOk returns a tuple with the Lang field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InlineResponse200Account) GetLangOk() (*string, bool) {
	if o == nil || o.Lang == nil {
		return nil, false
	}
	return o.Lang, true
}

// HasLang returns a boolean if a field has been set.
func (o *InlineResponse200Account) HasLang() bool {
	if o != nil && o.Lang != nil {
		return true
	}

	return false
}

// SetLang gets a reference to the given string and assigns it to the Lang field.
func (o *InlineResponse200Account) SetLang(v string) {
	o.Lang = &v
}

// GetLogo returns the Logo field value if set, zero value otherwise.
func (o *InlineResponse200Account) GetLogo() string {
	if o == nil || o.Logo == nil {
		var ret string
		return ret
	}
	return *o.Logo
}

// GetLogoOk returns a tuple with the Logo field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InlineResponse200Account) GetLogoOk() (*string, bool) {
	if o == nil || o.Logo == nil {
		return nil, false
	}
	return o.Logo, true
}

// HasLogo returns a boolean if a field has been set.
func (o *InlineResponse200Account) HasLogo() bool {
	if o != nil && o.Logo != nil {
		return true
	}

	return false
}

// SetLogo gets a reference to the given string and assigns it to the Logo field.
func (o *InlineResponse200Account) SetLogo(v string) {
	o.Logo = &v
}

// GetName returns the Name field value if set, zero value otherwise.
func (o *InlineResponse200Account) GetName() string {
	if o == nil || o.Name == nil {
		var ret string
		return ret
	}
	return *o.Name
}

// GetNameOk returns a tuple with the Name field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InlineResponse200Account) GetNameOk() (*string, bool) {
	if o == nil || o.Name == nil {
		return nil, false
	}
	return o.Name, true
}

// HasName returns a boolean if a field has been set.
func (o *InlineResponse200Account) HasName() bool {
	if o != nil && o.Name != nil {
		return true
	}

	return false
}

// SetName gets a reference to the given string and assigns it to the Name field.
func (o *InlineResponse200Account) SetName(v string) {
	o.Name = &v
}

// GetRequirehttps returns the Requirehttps field value if set, zero value otherwise.
func (o *InlineResponse200Account) GetRequirehttps() bool {
	if o == nil || o.Requirehttps == nil {
		var ret bool
		return ret
	}
	return *o.Requirehttps
}

// GetRequirehttpsOk returns a tuple with the Requirehttps field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InlineResponse200Account) GetRequirehttpsOk() (*bool, bool) {
	if o == nil || o.Requirehttps == nil {
		return nil, false
	}
	return o.Requirehttps, true
}

// HasRequirehttps returns a boolean if a field has been set.
func (o *InlineResponse200Account) HasRequirehttps() bool {
	if o != nil && o.Requirehttps != nil {
		return true
	}

	return false
}

// SetRequirehttps gets a reference to the given bool and assigns it to the Requirehttps field.
func (o *InlineResponse200Account) SetRequirehttps(v bool) {
	o.Requirehttps = &v
}

// GetSslEnabled returns the SslEnabled field value if set, zero value otherwise.
func (o *InlineResponse200Account) GetSslEnabled() bool {
	if o == nil || o.SslEnabled == nil {
		var ret bool
		return ret
	}
	return *o.SslEnabled
}

// GetSslEnabledOk returns a tuple with the SslEnabled field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InlineResponse200Account) GetSslEnabledOk() (*bool, bool) {
	if o == nil || o.SslEnabled == nil {
		return nil, false
	}
	return o.SslEnabled, true
}

// HasSslEnabled returns a boolean if a field has been set.
func (o *InlineResponse200Account) HasSslEnabled() bool {
	if o != nil && o.SslEnabled != nil {
		return true
	}

	return false
}

// SetSslEnabled gets a reference to the given bool and assigns it to the SslEnabled field.
func (o *InlineResponse200Account) SetSslEnabled(v bool) {
	o.SslEnabled = &v
}

// GetTimeTrackingEnabled returns the TimeTrackingEnabled field value if set, zero value otherwise.
func (o *InlineResponse200Account) GetTimeTrackingEnabled() bool {
	if o == nil || o.TimeTrackingEnabled == nil {
		var ret bool
		return ret
	}
	return *o.TimeTrackingEnabled
}

// GetTimeTrackingEnabledOk returns a tuple with the TimeTrackingEnabled field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InlineResponse200Account) GetTimeTrackingEnabledOk() (*bool, bool) {
	if o == nil || o.TimeTrackingEnabled == nil {
		return nil, false
	}
	return o.TimeTrackingEnabled, true
}

// HasTimeTrackingEnabled returns a boolean if a field has been set.
func (o *InlineResponse200Account) HasTimeTrackingEnabled() bool {
	if o != nil && o.TimeTrackingEnabled != nil {
		return true
	}

	return false
}

// SetTimeTrackingEnabled gets a reference to the given bool and assigns it to the TimeTrackingEnabled field.
func (o *InlineResponse200Account) SetTimeTrackingEnabled(v bool) {
	o.TimeTrackingEnabled = &v
}

func (o InlineResponse200Account) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.URL != nil {
		toSerialize["URL"] = o.URL
	}
	if o.AccountHolderId != nil {
		toSerialize["account-holder-id"] = o.AccountHolderId
	}
	if o.CacheUUID != nil {
		toSerialize["cacheUUID"] = o.CacheUUID
	}
	if o.Code != nil {
		toSerialize["code"] = o.Code
	}
	if o.Companyid != nil {
		toSerialize["companyid"] = o.Companyid
	}
	if o.Companyname != nil {
		toSerialize["companyname"] = o.Companyname
	}
	if o.CreatedAt != nil {
		toSerialize["created-at"] = o.CreatedAt
	}
	if o.Datesignedup != nil {
		toSerialize["datesignedup"] = o.Datesignedup
	}
	if o.EmailNotificationEnabled != nil {
		toSerialize["email-notification-enabled"] = o.EmailNotificationEnabled
	}
	if o.Id != nil {
		toSerialize["id"] = o.Id
	}
	if o.Lang != nil {
		toSerialize["lang"] = o.Lang
	}
	if o.Logo != nil {
		toSerialize["logo"] = o.Logo
	}
	if o.Name != nil {
		toSerialize["name"] = o.Name
	}
	if o.Requirehttps != nil {
		toSerialize["requirehttps"] = o.Requirehttps
	}
	if o.SslEnabled != nil {
		toSerialize["ssl-enabled"] = o.SslEnabled
	}
	if o.TimeTrackingEnabled != nil {
		toSerialize["time-tracking-enabled"] = o.TimeTrackingEnabled
	}
	return json.Marshal(toSerialize)
}

type NullableInlineResponse200Account struct {
	value *InlineResponse200Account
	isSet bool
}

func (v NullableInlineResponse200Account) Get() *InlineResponse200Account {
	return v.value
}

func (v *NullableInlineResponse200Account) Set(val *InlineResponse200Account) {
	v.value = val
	v.isSet = true
}

func (v NullableInlineResponse200Account) IsSet() bool {
	return v.isSet
}

func (v *NullableInlineResponse200Account) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableInlineResponse200Account(val *InlineResponse200Account) *NullableInlineResponse200Account {
	return &NullableInlineResponse200Account{value: val, isSet: true}
}

func (v NullableInlineResponse200Account) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableInlineResponse200Account) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


