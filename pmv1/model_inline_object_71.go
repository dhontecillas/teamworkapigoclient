/*
 * Teamwork Projects API
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * API version: 
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package pmv1

import (
	"encoding/json"
)

// InlineObject71 struct for InlineObject71
type InlineObject71 struct {
	Risk *ProjectsIdRisksJsonRisk `json:"risk,omitempty"`
}

// NewInlineObject71 instantiates a new InlineObject71 object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewInlineObject71() *InlineObject71 {
	this := InlineObject71{}
	return &this
}

// NewInlineObject71WithDefaults instantiates a new InlineObject71 object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewInlineObject71WithDefaults() *InlineObject71 {
	this := InlineObject71{}
	return &this
}

// GetRisk returns the Risk field value if set, zero value otherwise.
func (o *InlineObject71) GetRisk() ProjectsIdRisksJsonRisk {
	if o == nil || o.Risk == nil {
		var ret ProjectsIdRisksJsonRisk
		return ret
	}
	return *o.Risk
}

// GetRiskOk returns a tuple with the Risk field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InlineObject71) GetRiskOk() (*ProjectsIdRisksJsonRisk, bool) {
	if o == nil || o.Risk == nil {
		return nil, false
	}
	return o.Risk, true
}

// HasRisk returns a boolean if a field has been set.
func (o *InlineObject71) HasRisk() bool {
	if o != nil && o.Risk != nil {
		return true
	}

	return false
}

// SetRisk gets a reference to the given ProjectsIdRisksJsonRisk and assigns it to the Risk field.
func (o *InlineObject71) SetRisk(v ProjectsIdRisksJsonRisk) {
	o.Risk = &v
}

func (o InlineObject71) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.Risk != nil {
		toSerialize["risk"] = o.Risk
	}
	return json.Marshal(toSerialize)
}

type NullableInlineObject71 struct {
	value *InlineObject71
	isSet bool
}

func (v NullableInlineObject71) Get() *InlineObject71 {
	return v.value
}

func (v *NullableInlineObject71) Set(val *InlineObject71) {
	v.value = val
	v.isSet = true
}

func (v NullableInlineObject71) IsSet() bool {
	return v.isSet
}

func (v *NullableInlineObject71) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableInlineObject71(val *InlineObject71) *NullableInlineObject71 {
	return &NullableInlineObject71{value: val, isSet: true}
}

func (v NullableInlineObject71) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableInlineObject71) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


