/*
 * Teamwork Projects API
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * API version: 
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package pmv1

import (
	"encoding/json"
)

// InlineResponse2002Cards struct for InlineResponse2002Cards
type InlineResponse2002Cards struct {
	Archived *bool `json:"archived,omitempty"`
	ArchivedDate *string `json:"archivedDate,omitempty"`
	AssignedPeople *[]string `json:"assignedPeople,omitempty"`
	CanComplete *bool `json:"canComplete,omitempty"`
	CanEdit *bool `json:"canEdit,omitempty"`
	ColumnId *string `json:"columnId,omitempty"`
	Completed *bool `json:"completed,omitempty"`
	DateCompleted *string `json:"dateCompleted,omitempty"`
	DateCreated *string `json:"dateCreated,omitempty"`
	DateUpdated *string `json:"dateUpdated,omitempty"`
	Deleted *bool `json:"deleted,omitempty"`
	DeletedDate *string `json:"deletedDate,omitempty"`
	Description *string `json:"description,omitempty"`
	DisplayOrder *string `json:"displayOrder,omitempty"`
	DueDate *string `json:"dueDate,omitempty"`
	EstimatedMinutes *string `json:"estimatedMinutes,omitempty"`
	HasLoggedTime *bool `json:"hasLoggedTime,omitempty"`
	HasTickets *bool `json:"hasTickets,omitempty"`
	HasUnreadComments *bool `json:"hasUnreadComments,omitempty"`
	Id *string `json:"id,omitempty"`
	IsRecurring *bool `json:"isRecurring,omitempty"`
	Name *string `json:"name,omitempty"`
	NumActiveSubTasks *string `json:"numActiveSubTasks,omitempty"`
	NumAttachments *string `json:"numAttachments,omitempty"`
	NumComments *string `json:"numComments,omitempty"`
	NumDependencies *string `json:"numDependencies,omitempty"`
	NumPredecessors *string `json:"numPredecessors,omitempty"`
	ParentTaskId *string `json:"parentTaskId,omitempty"`
	Priority *string `json:"priority,omitempty"`
	Private *string `json:"private,omitempty"`
	Progress *string `json:"progress,omitempty"`
	ProjectId *string `json:"projectId,omitempty"`
	StartDate *string `json:"startDate,omitempty"`
	Status *string `json:"status,omitempty"`
	Tags *[]map[string]interface{} `json:"tags,omitempty"`
	TaskId *string `json:"taskId,omitempty"`
	TaskListId *string `json:"taskListId,omitempty"`
	TaskListName *string `json:"taskListName,omitempty"`
	TaskStatus *string `json:"taskStatus,omitempty"`
}

// NewInlineResponse2002Cards instantiates a new InlineResponse2002Cards object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewInlineResponse2002Cards() *InlineResponse2002Cards {
	this := InlineResponse2002Cards{}
	return &this
}

// NewInlineResponse2002CardsWithDefaults instantiates a new InlineResponse2002Cards object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewInlineResponse2002CardsWithDefaults() *InlineResponse2002Cards {
	this := InlineResponse2002Cards{}
	return &this
}

// GetArchived returns the Archived field value if set, zero value otherwise.
func (o *InlineResponse2002Cards) GetArchived() bool {
	if o == nil || o.Archived == nil {
		var ret bool
		return ret
	}
	return *o.Archived
}

// GetArchivedOk returns a tuple with the Archived field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InlineResponse2002Cards) GetArchivedOk() (*bool, bool) {
	if o == nil || o.Archived == nil {
		return nil, false
	}
	return o.Archived, true
}

// HasArchived returns a boolean if a field has been set.
func (o *InlineResponse2002Cards) HasArchived() bool {
	if o != nil && o.Archived != nil {
		return true
	}

	return false
}

// SetArchived gets a reference to the given bool and assigns it to the Archived field.
func (o *InlineResponse2002Cards) SetArchived(v bool) {
	o.Archived = &v
}

// GetArchivedDate returns the ArchivedDate field value if set, zero value otherwise.
func (o *InlineResponse2002Cards) GetArchivedDate() string {
	if o == nil || o.ArchivedDate == nil {
		var ret string
		return ret
	}
	return *o.ArchivedDate
}

// GetArchivedDateOk returns a tuple with the ArchivedDate field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InlineResponse2002Cards) GetArchivedDateOk() (*string, bool) {
	if o == nil || o.ArchivedDate == nil {
		return nil, false
	}
	return o.ArchivedDate, true
}

// HasArchivedDate returns a boolean if a field has been set.
func (o *InlineResponse2002Cards) HasArchivedDate() bool {
	if o != nil && o.ArchivedDate != nil {
		return true
	}

	return false
}

// SetArchivedDate gets a reference to the given string and assigns it to the ArchivedDate field.
func (o *InlineResponse2002Cards) SetArchivedDate(v string) {
	o.ArchivedDate = &v
}

// GetAssignedPeople returns the AssignedPeople field value if set, zero value otherwise.
func (o *InlineResponse2002Cards) GetAssignedPeople() []string {
	if o == nil || o.AssignedPeople == nil {
		var ret []string
		return ret
	}
	return *o.AssignedPeople
}

// GetAssignedPeopleOk returns a tuple with the AssignedPeople field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InlineResponse2002Cards) GetAssignedPeopleOk() (*[]string, bool) {
	if o == nil || o.AssignedPeople == nil {
		return nil, false
	}
	return o.AssignedPeople, true
}

// HasAssignedPeople returns a boolean if a field has been set.
func (o *InlineResponse2002Cards) HasAssignedPeople() bool {
	if o != nil && o.AssignedPeople != nil {
		return true
	}

	return false
}

// SetAssignedPeople gets a reference to the given []string and assigns it to the AssignedPeople field.
func (o *InlineResponse2002Cards) SetAssignedPeople(v []string) {
	o.AssignedPeople = &v
}

// GetCanComplete returns the CanComplete field value if set, zero value otherwise.
func (o *InlineResponse2002Cards) GetCanComplete() bool {
	if o == nil || o.CanComplete == nil {
		var ret bool
		return ret
	}
	return *o.CanComplete
}

// GetCanCompleteOk returns a tuple with the CanComplete field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InlineResponse2002Cards) GetCanCompleteOk() (*bool, bool) {
	if o == nil || o.CanComplete == nil {
		return nil, false
	}
	return o.CanComplete, true
}

// HasCanComplete returns a boolean if a field has been set.
func (o *InlineResponse2002Cards) HasCanComplete() bool {
	if o != nil && o.CanComplete != nil {
		return true
	}

	return false
}

// SetCanComplete gets a reference to the given bool and assigns it to the CanComplete field.
func (o *InlineResponse2002Cards) SetCanComplete(v bool) {
	o.CanComplete = &v
}

// GetCanEdit returns the CanEdit field value if set, zero value otherwise.
func (o *InlineResponse2002Cards) GetCanEdit() bool {
	if o == nil || o.CanEdit == nil {
		var ret bool
		return ret
	}
	return *o.CanEdit
}

// GetCanEditOk returns a tuple with the CanEdit field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InlineResponse2002Cards) GetCanEditOk() (*bool, bool) {
	if o == nil || o.CanEdit == nil {
		return nil, false
	}
	return o.CanEdit, true
}

// HasCanEdit returns a boolean if a field has been set.
func (o *InlineResponse2002Cards) HasCanEdit() bool {
	if o != nil && o.CanEdit != nil {
		return true
	}

	return false
}

// SetCanEdit gets a reference to the given bool and assigns it to the CanEdit field.
func (o *InlineResponse2002Cards) SetCanEdit(v bool) {
	o.CanEdit = &v
}

// GetColumnId returns the ColumnId field value if set, zero value otherwise.
func (o *InlineResponse2002Cards) GetColumnId() string {
	if o == nil || o.ColumnId == nil {
		var ret string
		return ret
	}
	return *o.ColumnId
}

// GetColumnIdOk returns a tuple with the ColumnId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InlineResponse2002Cards) GetColumnIdOk() (*string, bool) {
	if o == nil || o.ColumnId == nil {
		return nil, false
	}
	return o.ColumnId, true
}

// HasColumnId returns a boolean if a field has been set.
func (o *InlineResponse2002Cards) HasColumnId() bool {
	if o != nil && o.ColumnId != nil {
		return true
	}

	return false
}

// SetColumnId gets a reference to the given string and assigns it to the ColumnId field.
func (o *InlineResponse2002Cards) SetColumnId(v string) {
	o.ColumnId = &v
}

// GetCompleted returns the Completed field value if set, zero value otherwise.
func (o *InlineResponse2002Cards) GetCompleted() bool {
	if o == nil || o.Completed == nil {
		var ret bool
		return ret
	}
	return *o.Completed
}

// GetCompletedOk returns a tuple with the Completed field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InlineResponse2002Cards) GetCompletedOk() (*bool, bool) {
	if o == nil || o.Completed == nil {
		return nil, false
	}
	return o.Completed, true
}

// HasCompleted returns a boolean if a field has been set.
func (o *InlineResponse2002Cards) HasCompleted() bool {
	if o != nil && o.Completed != nil {
		return true
	}

	return false
}

// SetCompleted gets a reference to the given bool and assigns it to the Completed field.
func (o *InlineResponse2002Cards) SetCompleted(v bool) {
	o.Completed = &v
}

// GetDateCompleted returns the DateCompleted field value if set, zero value otherwise.
func (o *InlineResponse2002Cards) GetDateCompleted() string {
	if o == nil || o.DateCompleted == nil {
		var ret string
		return ret
	}
	return *o.DateCompleted
}

// GetDateCompletedOk returns a tuple with the DateCompleted field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InlineResponse2002Cards) GetDateCompletedOk() (*string, bool) {
	if o == nil || o.DateCompleted == nil {
		return nil, false
	}
	return o.DateCompleted, true
}

// HasDateCompleted returns a boolean if a field has been set.
func (o *InlineResponse2002Cards) HasDateCompleted() bool {
	if o != nil && o.DateCompleted != nil {
		return true
	}

	return false
}

// SetDateCompleted gets a reference to the given string and assigns it to the DateCompleted field.
func (o *InlineResponse2002Cards) SetDateCompleted(v string) {
	o.DateCompleted = &v
}

// GetDateCreated returns the DateCreated field value if set, zero value otherwise.
func (o *InlineResponse2002Cards) GetDateCreated() string {
	if o == nil || o.DateCreated == nil {
		var ret string
		return ret
	}
	return *o.DateCreated
}

// GetDateCreatedOk returns a tuple with the DateCreated field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InlineResponse2002Cards) GetDateCreatedOk() (*string, bool) {
	if o == nil || o.DateCreated == nil {
		return nil, false
	}
	return o.DateCreated, true
}

// HasDateCreated returns a boolean if a field has been set.
func (o *InlineResponse2002Cards) HasDateCreated() bool {
	if o != nil && o.DateCreated != nil {
		return true
	}

	return false
}

// SetDateCreated gets a reference to the given string and assigns it to the DateCreated field.
func (o *InlineResponse2002Cards) SetDateCreated(v string) {
	o.DateCreated = &v
}

// GetDateUpdated returns the DateUpdated field value if set, zero value otherwise.
func (o *InlineResponse2002Cards) GetDateUpdated() string {
	if o == nil || o.DateUpdated == nil {
		var ret string
		return ret
	}
	return *o.DateUpdated
}

// GetDateUpdatedOk returns a tuple with the DateUpdated field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InlineResponse2002Cards) GetDateUpdatedOk() (*string, bool) {
	if o == nil || o.DateUpdated == nil {
		return nil, false
	}
	return o.DateUpdated, true
}

// HasDateUpdated returns a boolean if a field has been set.
func (o *InlineResponse2002Cards) HasDateUpdated() bool {
	if o != nil && o.DateUpdated != nil {
		return true
	}

	return false
}

// SetDateUpdated gets a reference to the given string and assigns it to the DateUpdated field.
func (o *InlineResponse2002Cards) SetDateUpdated(v string) {
	o.DateUpdated = &v
}

// GetDeleted returns the Deleted field value if set, zero value otherwise.
func (o *InlineResponse2002Cards) GetDeleted() bool {
	if o == nil || o.Deleted == nil {
		var ret bool
		return ret
	}
	return *o.Deleted
}

// GetDeletedOk returns a tuple with the Deleted field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InlineResponse2002Cards) GetDeletedOk() (*bool, bool) {
	if o == nil || o.Deleted == nil {
		return nil, false
	}
	return o.Deleted, true
}

// HasDeleted returns a boolean if a field has been set.
func (o *InlineResponse2002Cards) HasDeleted() bool {
	if o != nil && o.Deleted != nil {
		return true
	}

	return false
}

// SetDeleted gets a reference to the given bool and assigns it to the Deleted field.
func (o *InlineResponse2002Cards) SetDeleted(v bool) {
	o.Deleted = &v
}

// GetDeletedDate returns the DeletedDate field value if set, zero value otherwise.
func (o *InlineResponse2002Cards) GetDeletedDate() string {
	if o == nil || o.DeletedDate == nil {
		var ret string
		return ret
	}
	return *o.DeletedDate
}

// GetDeletedDateOk returns a tuple with the DeletedDate field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InlineResponse2002Cards) GetDeletedDateOk() (*string, bool) {
	if o == nil || o.DeletedDate == nil {
		return nil, false
	}
	return o.DeletedDate, true
}

// HasDeletedDate returns a boolean if a field has been set.
func (o *InlineResponse2002Cards) HasDeletedDate() bool {
	if o != nil && o.DeletedDate != nil {
		return true
	}

	return false
}

// SetDeletedDate gets a reference to the given string and assigns it to the DeletedDate field.
func (o *InlineResponse2002Cards) SetDeletedDate(v string) {
	o.DeletedDate = &v
}

// GetDescription returns the Description field value if set, zero value otherwise.
func (o *InlineResponse2002Cards) GetDescription() string {
	if o == nil || o.Description == nil {
		var ret string
		return ret
	}
	return *o.Description
}

// GetDescriptionOk returns a tuple with the Description field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InlineResponse2002Cards) GetDescriptionOk() (*string, bool) {
	if o == nil || o.Description == nil {
		return nil, false
	}
	return o.Description, true
}

// HasDescription returns a boolean if a field has been set.
func (o *InlineResponse2002Cards) HasDescription() bool {
	if o != nil && o.Description != nil {
		return true
	}

	return false
}

// SetDescription gets a reference to the given string and assigns it to the Description field.
func (o *InlineResponse2002Cards) SetDescription(v string) {
	o.Description = &v
}

// GetDisplayOrder returns the DisplayOrder field value if set, zero value otherwise.
func (o *InlineResponse2002Cards) GetDisplayOrder() string {
	if o == nil || o.DisplayOrder == nil {
		var ret string
		return ret
	}
	return *o.DisplayOrder
}

// GetDisplayOrderOk returns a tuple with the DisplayOrder field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InlineResponse2002Cards) GetDisplayOrderOk() (*string, bool) {
	if o == nil || o.DisplayOrder == nil {
		return nil, false
	}
	return o.DisplayOrder, true
}

// HasDisplayOrder returns a boolean if a field has been set.
func (o *InlineResponse2002Cards) HasDisplayOrder() bool {
	if o != nil && o.DisplayOrder != nil {
		return true
	}

	return false
}

// SetDisplayOrder gets a reference to the given string and assigns it to the DisplayOrder field.
func (o *InlineResponse2002Cards) SetDisplayOrder(v string) {
	o.DisplayOrder = &v
}

// GetDueDate returns the DueDate field value if set, zero value otherwise.
func (o *InlineResponse2002Cards) GetDueDate() string {
	if o == nil || o.DueDate == nil {
		var ret string
		return ret
	}
	return *o.DueDate
}

// GetDueDateOk returns a tuple with the DueDate field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InlineResponse2002Cards) GetDueDateOk() (*string, bool) {
	if o == nil || o.DueDate == nil {
		return nil, false
	}
	return o.DueDate, true
}

// HasDueDate returns a boolean if a field has been set.
func (o *InlineResponse2002Cards) HasDueDate() bool {
	if o != nil && o.DueDate != nil {
		return true
	}

	return false
}

// SetDueDate gets a reference to the given string and assigns it to the DueDate field.
func (o *InlineResponse2002Cards) SetDueDate(v string) {
	o.DueDate = &v
}

// GetEstimatedMinutes returns the EstimatedMinutes field value if set, zero value otherwise.
func (o *InlineResponse2002Cards) GetEstimatedMinutes() string {
	if o == nil || o.EstimatedMinutes == nil {
		var ret string
		return ret
	}
	return *o.EstimatedMinutes
}

// GetEstimatedMinutesOk returns a tuple with the EstimatedMinutes field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InlineResponse2002Cards) GetEstimatedMinutesOk() (*string, bool) {
	if o == nil || o.EstimatedMinutes == nil {
		return nil, false
	}
	return o.EstimatedMinutes, true
}

// HasEstimatedMinutes returns a boolean if a field has been set.
func (o *InlineResponse2002Cards) HasEstimatedMinutes() bool {
	if o != nil && o.EstimatedMinutes != nil {
		return true
	}

	return false
}

// SetEstimatedMinutes gets a reference to the given string and assigns it to the EstimatedMinutes field.
func (o *InlineResponse2002Cards) SetEstimatedMinutes(v string) {
	o.EstimatedMinutes = &v
}

// GetHasLoggedTime returns the HasLoggedTime field value if set, zero value otherwise.
func (o *InlineResponse2002Cards) GetHasLoggedTime() bool {
	if o == nil || o.HasLoggedTime == nil {
		var ret bool
		return ret
	}
	return *o.HasLoggedTime
}

// GetHasLoggedTimeOk returns a tuple with the HasLoggedTime field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InlineResponse2002Cards) GetHasLoggedTimeOk() (*bool, bool) {
	if o == nil || o.HasLoggedTime == nil {
		return nil, false
	}
	return o.HasLoggedTime, true
}

// HasHasLoggedTime returns a boolean if a field has been set.
func (o *InlineResponse2002Cards) HasHasLoggedTime() bool {
	if o != nil && o.HasLoggedTime != nil {
		return true
	}

	return false
}

// SetHasLoggedTime gets a reference to the given bool and assigns it to the HasLoggedTime field.
func (o *InlineResponse2002Cards) SetHasLoggedTime(v bool) {
	o.HasLoggedTime = &v
}

// GetHasTickets returns the HasTickets field value if set, zero value otherwise.
func (o *InlineResponse2002Cards) GetHasTickets() bool {
	if o == nil || o.HasTickets == nil {
		var ret bool
		return ret
	}
	return *o.HasTickets
}

// GetHasTicketsOk returns a tuple with the HasTickets field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InlineResponse2002Cards) GetHasTicketsOk() (*bool, bool) {
	if o == nil || o.HasTickets == nil {
		return nil, false
	}
	return o.HasTickets, true
}

// HasHasTickets returns a boolean if a field has been set.
func (o *InlineResponse2002Cards) HasHasTickets() bool {
	if o != nil && o.HasTickets != nil {
		return true
	}

	return false
}

// SetHasTickets gets a reference to the given bool and assigns it to the HasTickets field.
func (o *InlineResponse2002Cards) SetHasTickets(v bool) {
	o.HasTickets = &v
}

// GetHasUnreadComments returns the HasUnreadComments field value if set, zero value otherwise.
func (o *InlineResponse2002Cards) GetHasUnreadComments() bool {
	if o == nil || o.HasUnreadComments == nil {
		var ret bool
		return ret
	}
	return *o.HasUnreadComments
}

// GetHasUnreadCommentsOk returns a tuple with the HasUnreadComments field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InlineResponse2002Cards) GetHasUnreadCommentsOk() (*bool, bool) {
	if o == nil || o.HasUnreadComments == nil {
		return nil, false
	}
	return o.HasUnreadComments, true
}

// HasHasUnreadComments returns a boolean if a field has been set.
func (o *InlineResponse2002Cards) HasHasUnreadComments() bool {
	if o != nil && o.HasUnreadComments != nil {
		return true
	}

	return false
}

// SetHasUnreadComments gets a reference to the given bool and assigns it to the HasUnreadComments field.
func (o *InlineResponse2002Cards) SetHasUnreadComments(v bool) {
	o.HasUnreadComments = &v
}

// GetId returns the Id field value if set, zero value otherwise.
func (o *InlineResponse2002Cards) GetId() string {
	if o == nil || o.Id == nil {
		var ret string
		return ret
	}
	return *o.Id
}

// GetIdOk returns a tuple with the Id field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InlineResponse2002Cards) GetIdOk() (*string, bool) {
	if o == nil || o.Id == nil {
		return nil, false
	}
	return o.Id, true
}

// HasId returns a boolean if a field has been set.
func (o *InlineResponse2002Cards) HasId() bool {
	if o != nil && o.Id != nil {
		return true
	}

	return false
}

// SetId gets a reference to the given string and assigns it to the Id field.
func (o *InlineResponse2002Cards) SetId(v string) {
	o.Id = &v
}

// GetIsRecurring returns the IsRecurring field value if set, zero value otherwise.
func (o *InlineResponse2002Cards) GetIsRecurring() bool {
	if o == nil || o.IsRecurring == nil {
		var ret bool
		return ret
	}
	return *o.IsRecurring
}

// GetIsRecurringOk returns a tuple with the IsRecurring field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InlineResponse2002Cards) GetIsRecurringOk() (*bool, bool) {
	if o == nil || o.IsRecurring == nil {
		return nil, false
	}
	return o.IsRecurring, true
}

// HasIsRecurring returns a boolean if a field has been set.
func (o *InlineResponse2002Cards) HasIsRecurring() bool {
	if o != nil && o.IsRecurring != nil {
		return true
	}

	return false
}

// SetIsRecurring gets a reference to the given bool and assigns it to the IsRecurring field.
func (o *InlineResponse2002Cards) SetIsRecurring(v bool) {
	o.IsRecurring = &v
}

// GetName returns the Name field value if set, zero value otherwise.
func (o *InlineResponse2002Cards) GetName() string {
	if o == nil || o.Name == nil {
		var ret string
		return ret
	}
	return *o.Name
}

// GetNameOk returns a tuple with the Name field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InlineResponse2002Cards) GetNameOk() (*string, bool) {
	if o == nil || o.Name == nil {
		return nil, false
	}
	return o.Name, true
}

// HasName returns a boolean if a field has been set.
func (o *InlineResponse2002Cards) HasName() bool {
	if o != nil && o.Name != nil {
		return true
	}

	return false
}

// SetName gets a reference to the given string and assigns it to the Name field.
func (o *InlineResponse2002Cards) SetName(v string) {
	o.Name = &v
}

// GetNumActiveSubTasks returns the NumActiveSubTasks field value if set, zero value otherwise.
func (o *InlineResponse2002Cards) GetNumActiveSubTasks() string {
	if o == nil || o.NumActiveSubTasks == nil {
		var ret string
		return ret
	}
	return *o.NumActiveSubTasks
}

// GetNumActiveSubTasksOk returns a tuple with the NumActiveSubTasks field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InlineResponse2002Cards) GetNumActiveSubTasksOk() (*string, bool) {
	if o == nil || o.NumActiveSubTasks == nil {
		return nil, false
	}
	return o.NumActiveSubTasks, true
}

// HasNumActiveSubTasks returns a boolean if a field has been set.
func (o *InlineResponse2002Cards) HasNumActiveSubTasks() bool {
	if o != nil && o.NumActiveSubTasks != nil {
		return true
	}

	return false
}

// SetNumActiveSubTasks gets a reference to the given string and assigns it to the NumActiveSubTasks field.
func (o *InlineResponse2002Cards) SetNumActiveSubTasks(v string) {
	o.NumActiveSubTasks = &v
}

// GetNumAttachments returns the NumAttachments field value if set, zero value otherwise.
func (o *InlineResponse2002Cards) GetNumAttachments() string {
	if o == nil || o.NumAttachments == nil {
		var ret string
		return ret
	}
	return *o.NumAttachments
}

// GetNumAttachmentsOk returns a tuple with the NumAttachments field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InlineResponse2002Cards) GetNumAttachmentsOk() (*string, bool) {
	if o == nil || o.NumAttachments == nil {
		return nil, false
	}
	return o.NumAttachments, true
}

// HasNumAttachments returns a boolean if a field has been set.
func (o *InlineResponse2002Cards) HasNumAttachments() bool {
	if o != nil && o.NumAttachments != nil {
		return true
	}

	return false
}

// SetNumAttachments gets a reference to the given string and assigns it to the NumAttachments field.
func (o *InlineResponse2002Cards) SetNumAttachments(v string) {
	o.NumAttachments = &v
}

// GetNumComments returns the NumComments field value if set, zero value otherwise.
func (o *InlineResponse2002Cards) GetNumComments() string {
	if o == nil || o.NumComments == nil {
		var ret string
		return ret
	}
	return *o.NumComments
}

// GetNumCommentsOk returns a tuple with the NumComments field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InlineResponse2002Cards) GetNumCommentsOk() (*string, bool) {
	if o == nil || o.NumComments == nil {
		return nil, false
	}
	return o.NumComments, true
}

// HasNumComments returns a boolean if a field has been set.
func (o *InlineResponse2002Cards) HasNumComments() bool {
	if o != nil && o.NumComments != nil {
		return true
	}

	return false
}

// SetNumComments gets a reference to the given string and assigns it to the NumComments field.
func (o *InlineResponse2002Cards) SetNumComments(v string) {
	o.NumComments = &v
}

// GetNumDependencies returns the NumDependencies field value if set, zero value otherwise.
func (o *InlineResponse2002Cards) GetNumDependencies() string {
	if o == nil || o.NumDependencies == nil {
		var ret string
		return ret
	}
	return *o.NumDependencies
}

// GetNumDependenciesOk returns a tuple with the NumDependencies field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InlineResponse2002Cards) GetNumDependenciesOk() (*string, bool) {
	if o == nil || o.NumDependencies == nil {
		return nil, false
	}
	return o.NumDependencies, true
}

// HasNumDependencies returns a boolean if a field has been set.
func (o *InlineResponse2002Cards) HasNumDependencies() bool {
	if o != nil && o.NumDependencies != nil {
		return true
	}

	return false
}

// SetNumDependencies gets a reference to the given string and assigns it to the NumDependencies field.
func (o *InlineResponse2002Cards) SetNumDependencies(v string) {
	o.NumDependencies = &v
}

// GetNumPredecessors returns the NumPredecessors field value if set, zero value otherwise.
func (o *InlineResponse2002Cards) GetNumPredecessors() string {
	if o == nil || o.NumPredecessors == nil {
		var ret string
		return ret
	}
	return *o.NumPredecessors
}

// GetNumPredecessorsOk returns a tuple with the NumPredecessors field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InlineResponse2002Cards) GetNumPredecessorsOk() (*string, bool) {
	if o == nil || o.NumPredecessors == nil {
		return nil, false
	}
	return o.NumPredecessors, true
}

// HasNumPredecessors returns a boolean if a field has been set.
func (o *InlineResponse2002Cards) HasNumPredecessors() bool {
	if o != nil && o.NumPredecessors != nil {
		return true
	}

	return false
}

// SetNumPredecessors gets a reference to the given string and assigns it to the NumPredecessors field.
func (o *InlineResponse2002Cards) SetNumPredecessors(v string) {
	o.NumPredecessors = &v
}

// GetParentTaskId returns the ParentTaskId field value if set, zero value otherwise.
func (o *InlineResponse2002Cards) GetParentTaskId() string {
	if o == nil || o.ParentTaskId == nil {
		var ret string
		return ret
	}
	return *o.ParentTaskId
}

// GetParentTaskIdOk returns a tuple with the ParentTaskId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InlineResponse2002Cards) GetParentTaskIdOk() (*string, bool) {
	if o == nil || o.ParentTaskId == nil {
		return nil, false
	}
	return o.ParentTaskId, true
}

// HasParentTaskId returns a boolean if a field has been set.
func (o *InlineResponse2002Cards) HasParentTaskId() bool {
	if o != nil && o.ParentTaskId != nil {
		return true
	}

	return false
}

// SetParentTaskId gets a reference to the given string and assigns it to the ParentTaskId field.
func (o *InlineResponse2002Cards) SetParentTaskId(v string) {
	o.ParentTaskId = &v
}

// GetPriority returns the Priority field value if set, zero value otherwise.
func (o *InlineResponse2002Cards) GetPriority() string {
	if o == nil || o.Priority == nil {
		var ret string
		return ret
	}
	return *o.Priority
}

// GetPriorityOk returns a tuple with the Priority field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InlineResponse2002Cards) GetPriorityOk() (*string, bool) {
	if o == nil || o.Priority == nil {
		return nil, false
	}
	return o.Priority, true
}

// HasPriority returns a boolean if a field has been set.
func (o *InlineResponse2002Cards) HasPriority() bool {
	if o != nil && o.Priority != nil {
		return true
	}

	return false
}

// SetPriority gets a reference to the given string and assigns it to the Priority field.
func (o *InlineResponse2002Cards) SetPriority(v string) {
	o.Priority = &v
}

// GetPrivate returns the Private field value if set, zero value otherwise.
func (o *InlineResponse2002Cards) GetPrivate() string {
	if o == nil || o.Private == nil {
		var ret string
		return ret
	}
	return *o.Private
}

// GetPrivateOk returns a tuple with the Private field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InlineResponse2002Cards) GetPrivateOk() (*string, bool) {
	if o == nil || o.Private == nil {
		return nil, false
	}
	return o.Private, true
}

// HasPrivate returns a boolean if a field has been set.
func (o *InlineResponse2002Cards) HasPrivate() bool {
	if o != nil && o.Private != nil {
		return true
	}

	return false
}

// SetPrivate gets a reference to the given string and assigns it to the Private field.
func (o *InlineResponse2002Cards) SetPrivate(v string) {
	o.Private = &v
}

// GetProgress returns the Progress field value if set, zero value otherwise.
func (o *InlineResponse2002Cards) GetProgress() string {
	if o == nil || o.Progress == nil {
		var ret string
		return ret
	}
	return *o.Progress
}

// GetProgressOk returns a tuple with the Progress field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InlineResponse2002Cards) GetProgressOk() (*string, bool) {
	if o == nil || o.Progress == nil {
		return nil, false
	}
	return o.Progress, true
}

// HasProgress returns a boolean if a field has been set.
func (o *InlineResponse2002Cards) HasProgress() bool {
	if o != nil && o.Progress != nil {
		return true
	}

	return false
}

// SetProgress gets a reference to the given string and assigns it to the Progress field.
func (o *InlineResponse2002Cards) SetProgress(v string) {
	o.Progress = &v
}

// GetProjectId returns the ProjectId field value if set, zero value otherwise.
func (o *InlineResponse2002Cards) GetProjectId() string {
	if o == nil || o.ProjectId == nil {
		var ret string
		return ret
	}
	return *o.ProjectId
}

// GetProjectIdOk returns a tuple with the ProjectId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InlineResponse2002Cards) GetProjectIdOk() (*string, bool) {
	if o == nil || o.ProjectId == nil {
		return nil, false
	}
	return o.ProjectId, true
}

// HasProjectId returns a boolean if a field has been set.
func (o *InlineResponse2002Cards) HasProjectId() bool {
	if o != nil && o.ProjectId != nil {
		return true
	}

	return false
}

// SetProjectId gets a reference to the given string and assigns it to the ProjectId field.
func (o *InlineResponse2002Cards) SetProjectId(v string) {
	o.ProjectId = &v
}

// GetStartDate returns the StartDate field value if set, zero value otherwise.
func (o *InlineResponse2002Cards) GetStartDate() string {
	if o == nil || o.StartDate == nil {
		var ret string
		return ret
	}
	return *o.StartDate
}

// GetStartDateOk returns a tuple with the StartDate field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InlineResponse2002Cards) GetStartDateOk() (*string, bool) {
	if o == nil || o.StartDate == nil {
		return nil, false
	}
	return o.StartDate, true
}

// HasStartDate returns a boolean if a field has been set.
func (o *InlineResponse2002Cards) HasStartDate() bool {
	if o != nil && o.StartDate != nil {
		return true
	}

	return false
}

// SetStartDate gets a reference to the given string and assigns it to the StartDate field.
func (o *InlineResponse2002Cards) SetStartDate(v string) {
	o.StartDate = &v
}

// GetStatus returns the Status field value if set, zero value otherwise.
func (o *InlineResponse2002Cards) GetStatus() string {
	if o == nil || o.Status == nil {
		var ret string
		return ret
	}
	return *o.Status
}

// GetStatusOk returns a tuple with the Status field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InlineResponse2002Cards) GetStatusOk() (*string, bool) {
	if o == nil || o.Status == nil {
		return nil, false
	}
	return o.Status, true
}

// HasStatus returns a boolean if a field has been set.
func (o *InlineResponse2002Cards) HasStatus() bool {
	if o != nil && o.Status != nil {
		return true
	}

	return false
}

// SetStatus gets a reference to the given string and assigns it to the Status field.
func (o *InlineResponse2002Cards) SetStatus(v string) {
	o.Status = &v
}

// GetTags returns the Tags field value if set, zero value otherwise.
func (o *InlineResponse2002Cards) GetTags() []map[string]interface{} {
	if o == nil || o.Tags == nil {
		var ret []map[string]interface{}
		return ret
	}
	return *o.Tags
}

// GetTagsOk returns a tuple with the Tags field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InlineResponse2002Cards) GetTagsOk() (*[]map[string]interface{}, bool) {
	if o == nil || o.Tags == nil {
		return nil, false
	}
	return o.Tags, true
}

// HasTags returns a boolean if a field has been set.
func (o *InlineResponse2002Cards) HasTags() bool {
	if o != nil && o.Tags != nil {
		return true
	}

	return false
}

// SetTags gets a reference to the given []map[string]interface{} and assigns it to the Tags field.
func (o *InlineResponse2002Cards) SetTags(v []map[string]interface{}) {
	o.Tags = &v
}

// GetTaskId returns the TaskId field value if set, zero value otherwise.
func (o *InlineResponse2002Cards) GetTaskId() string {
	if o == nil || o.TaskId == nil {
		var ret string
		return ret
	}
	return *o.TaskId
}

// GetTaskIdOk returns a tuple with the TaskId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InlineResponse2002Cards) GetTaskIdOk() (*string, bool) {
	if o == nil || o.TaskId == nil {
		return nil, false
	}
	return o.TaskId, true
}

// HasTaskId returns a boolean if a field has been set.
func (o *InlineResponse2002Cards) HasTaskId() bool {
	if o != nil && o.TaskId != nil {
		return true
	}

	return false
}

// SetTaskId gets a reference to the given string and assigns it to the TaskId field.
func (o *InlineResponse2002Cards) SetTaskId(v string) {
	o.TaskId = &v
}

// GetTaskListId returns the TaskListId field value if set, zero value otherwise.
func (o *InlineResponse2002Cards) GetTaskListId() string {
	if o == nil || o.TaskListId == nil {
		var ret string
		return ret
	}
	return *o.TaskListId
}

// GetTaskListIdOk returns a tuple with the TaskListId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InlineResponse2002Cards) GetTaskListIdOk() (*string, bool) {
	if o == nil || o.TaskListId == nil {
		return nil, false
	}
	return o.TaskListId, true
}

// HasTaskListId returns a boolean if a field has been set.
func (o *InlineResponse2002Cards) HasTaskListId() bool {
	if o != nil && o.TaskListId != nil {
		return true
	}

	return false
}

// SetTaskListId gets a reference to the given string and assigns it to the TaskListId field.
func (o *InlineResponse2002Cards) SetTaskListId(v string) {
	o.TaskListId = &v
}

// GetTaskListName returns the TaskListName field value if set, zero value otherwise.
func (o *InlineResponse2002Cards) GetTaskListName() string {
	if o == nil || o.TaskListName == nil {
		var ret string
		return ret
	}
	return *o.TaskListName
}

// GetTaskListNameOk returns a tuple with the TaskListName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InlineResponse2002Cards) GetTaskListNameOk() (*string, bool) {
	if o == nil || o.TaskListName == nil {
		return nil, false
	}
	return o.TaskListName, true
}

// HasTaskListName returns a boolean if a field has been set.
func (o *InlineResponse2002Cards) HasTaskListName() bool {
	if o != nil && o.TaskListName != nil {
		return true
	}

	return false
}

// SetTaskListName gets a reference to the given string and assigns it to the TaskListName field.
func (o *InlineResponse2002Cards) SetTaskListName(v string) {
	o.TaskListName = &v
}

// GetTaskStatus returns the TaskStatus field value if set, zero value otherwise.
func (o *InlineResponse2002Cards) GetTaskStatus() string {
	if o == nil || o.TaskStatus == nil {
		var ret string
		return ret
	}
	return *o.TaskStatus
}

// GetTaskStatusOk returns a tuple with the TaskStatus field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InlineResponse2002Cards) GetTaskStatusOk() (*string, bool) {
	if o == nil || o.TaskStatus == nil {
		return nil, false
	}
	return o.TaskStatus, true
}

// HasTaskStatus returns a boolean if a field has been set.
func (o *InlineResponse2002Cards) HasTaskStatus() bool {
	if o != nil && o.TaskStatus != nil {
		return true
	}

	return false
}

// SetTaskStatus gets a reference to the given string and assigns it to the TaskStatus field.
func (o *InlineResponse2002Cards) SetTaskStatus(v string) {
	o.TaskStatus = &v
}

func (o InlineResponse2002Cards) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.Archived != nil {
		toSerialize["archived"] = o.Archived
	}
	if o.ArchivedDate != nil {
		toSerialize["archivedDate"] = o.ArchivedDate
	}
	if o.AssignedPeople != nil {
		toSerialize["assignedPeople"] = o.AssignedPeople
	}
	if o.CanComplete != nil {
		toSerialize["canComplete"] = o.CanComplete
	}
	if o.CanEdit != nil {
		toSerialize["canEdit"] = o.CanEdit
	}
	if o.ColumnId != nil {
		toSerialize["columnId"] = o.ColumnId
	}
	if o.Completed != nil {
		toSerialize["completed"] = o.Completed
	}
	if o.DateCompleted != nil {
		toSerialize["dateCompleted"] = o.DateCompleted
	}
	if o.DateCreated != nil {
		toSerialize["dateCreated"] = o.DateCreated
	}
	if o.DateUpdated != nil {
		toSerialize["dateUpdated"] = o.DateUpdated
	}
	if o.Deleted != nil {
		toSerialize["deleted"] = o.Deleted
	}
	if o.DeletedDate != nil {
		toSerialize["deletedDate"] = o.DeletedDate
	}
	if o.Description != nil {
		toSerialize["description"] = o.Description
	}
	if o.DisplayOrder != nil {
		toSerialize["displayOrder"] = o.DisplayOrder
	}
	if o.DueDate != nil {
		toSerialize["dueDate"] = o.DueDate
	}
	if o.EstimatedMinutes != nil {
		toSerialize["estimatedMinutes"] = o.EstimatedMinutes
	}
	if o.HasLoggedTime != nil {
		toSerialize["hasLoggedTime"] = o.HasLoggedTime
	}
	if o.HasTickets != nil {
		toSerialize["hasTickets"] = o.HasTickets
	}
	if o.HasUnreadComments != nil {
		toSerialize["hasUnreadComments"] = o.HasUnreadComments
	}
	if o.Id != nil {
		toSerialize["id"] = o.Id
	}
	if o.IsRecurring != nil {
		toSerialize["isRecurring"] = o.IsRecurring
	}
	if o.Name != nil {
		toSerialize["name"] = o.Name
	}
	if o.NumActiveSubTasks != nil {
		toSerialize["numActiveSubTasks"] = o.NumActiveSubTasks
	}
	if o.NumAttachments != nil {
		toSerialize["numAttachments"] = o.NumAttachments
	}
	if o.NumComments != nil {
		toSerialize["numComments"] = o.NumComments
	}
	if o.NumDependencies != nil {
		toSerialize["numDependencies"] = o.NumDependencies
	}
	if o.NumPredecessors != nil {
		toSerialize["numPredecessors"] = o.NumPredecessors
	}
	if o.ParentTaskId != nil {
		toSerialize["parentTaskId"] = o.ParentTaskId
	}
	if o.Priority != nil {
		toSerialize["priority"] = o.Priority
	}
	if o.Private != nil {
		toSerialize["private"] = o.Private
	}
	if o.Progress != nil {
		toSerialize["progress"] = o.Progress
	}
	if o.ProjectId != nil {
		toSerialize["projectId"] = o.ProjectId
	}
	if o.StartDate != nil {
		toSerialize["startDate"] = o.StartDate
	}
	if o.Status != nil {
		toSerialize["status"] = o.Status
	}
	if o.Tags != nil {
		toSerialize["tags"] = o.Tags
	}
	if o.TaskId != nil {
		toSerialize["taskId"] = o.TaskId
	}
	if o.TaskListId != nil {
		toSerialize["taskListId"] = o.TaskListId
	}
	if o.TaskListName != nil {
		toSerialize["taskListName"] = o.TaskListName
	}
	if o.TaskStatus != nil {
		toSerialize["taskStatus"] = o.TaskStatus
	}
	return json.Marshal(toSerialize)
}

type NullableInlineResponse2002Cards struct {
	value *InlineResponse2002Cards
	isSet bool
}

func (v NullableInlineResponse2002Cards) Get() *InlineResponse2002Cards {
	return v.value
}

func (v *NullableInlineResponse2002Cards) Set(val *InlineResponse2002Cards) {
	v.value = val
	v.isSet = true
}

func (v NullableInlineResponse2002Cards) IsSet() bool {
	return v.isSet
}

func (v *NullableInlineResponse2002Cards) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableInlineResponse2002Cards(val *InlineResponse2002Cards) *NullableInlineResponse2002Cards {
	return &NullableInlineResponse2002Cards{value: val, isSet: true}
}

func (v NullableInlineResponse2002Cards) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableInlineResponse2002Cards) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


