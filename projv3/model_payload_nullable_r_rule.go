/*
 * Teamwork.com Projects API
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * API version: 3.0
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package projv3

import (
	"encoding/json"
)

// PayloadNullableRRule NullableRRule implements json.Unmarshaler to allow testing between a value that explicitly set to null or omitted.
type PayloadNullableRRule struct {
	// A Location maps time instants to the zone in use at that time. Typically, the Location represents the collection of time offsets in use in a geographical area. For many Locations the time offset varies depending on whether daylight savings time is in use at the time instant.
	Location *map[string]interface{} `json:"Location,omitempty"`
	Null *bool `json:"Null,omitempty"`
	Set *bool `json:"Set,omitempty"`
}

// NewPayloadNullableRRule instantiates a new PayloadNullableRRule object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewPayloadNullableRRule() *PayloadNullableRRule {
	this := PayloadNullableRRule{}
	return &this
}

// NewPayloadNullableRRuleWithDefaults instantiates a new PayloadNullableRRule object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewPayloadNullableRRuleWithDefaults() *PayloadNullableRRule {
	this := PayloadNullableRRule{}
	return &this
}

// GetLocation returns the Location field value if set, zero value otherwise.
func (o *PayloadNullableRRule) GetLocation() map[string]interface{} {
	if o == nil || o.Location == nil {
		var ret map[string]interface{}
		return ret
	}
	return *o.Location
}

// GetLocationOk returns a tuple with the Location field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PayloadNullableRRule) GetLocationOk() (*map[string]interface{}, bool) {
	if o == nil || o.Location == nil {
		return nil, false
	}
	return o.Location, true
}

// HasLocation returns a boolean if a field has been set.
func (o *PayloadNullableRRule) HasLocation() bool {
	if o != nil && o.Location != nil {
		return true
	}

	return false
}

// SetLocation gets a reference to the given map[string]interface{} and assigns it to the Location field.
func (o *PayloadNullableRRule) SetLocation(v map[string]interface{}) {
	o.Location = &v
}

// GetNull returns the Null field value if set, zero value otherwise.
func (o *PayloadNullableRRule) GetNull() bool {
	if o == nil || o.Null == nil {
		var ret bool
		return ret
	}
	return *o.Null
}

// GetNullOk returns a tuple with the Null field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PayloadNullableRRule) GetNullOk() (*bool, bool) {
	if o == nil || o.Null == nil {
		return nil, false
	}
	return o.Null, true
}

// HasNull returns a boolean if a field has been set.
func (o *PayloadNullableRRule) HasNull() bool {
	if o != nil && o.Null != nil {
		return true
	}

	return false
}

// SetNull gets a reference to the given bool and assigns it to the Null field.
func (o *PayloadNullableRRule) SetNull(v bool) {
	o.Null = &v
}

// GetSet returns the Set field value if set, zero value otherwise.
func (o *PayloadNullableRRule) GetSet() bool {
	if o == nil || o.Set == nil {
		var ret bool
		return ret
	}
	return *o.Set
}

// GetSetOk returns a tuple with the Set field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PayloadNullableRRule) GetSetOk() (*bool, bool) {
	if o == nil || o.Set == nil {
		return nil, false
	}
	return o.Set, true
}

// HasSet returns a boolean if a field has been set.
func (o *PayloadNullableRRule) HasSet() bool {
	if o != nil && o.Set != nil {
		return true
	}

	return false
}

// SetSet gets a reference to the given bool and assigns it to the Set field.
func (o *PayloadNullableRRule) SetSet(v bool) {
	o.Set = &v
}

func (o PayloadNullableRRule) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.Location != nil {
		toSerialize["Location"] = o.Location
	}
	if o.Null != nil {
		toSerialize["Null"] = o.Null
	}
	if o.Set != nil {
		toSerialize["Set"] = o.Set
	}
	return json.Marshal(toSerialize)
}

type NullablePayloadNullableRRule struct {
	value *PayloadNullableRRule
	isSet bool
}

func (v NullablePayloadNullableRRule) Get() *PayloadNullableRRule {
	return v.value
}

func (v *NullablePayloadNullableRRule) Set(val *PayloadNullableRRule) {
	v.value = val
	v.isSet = true
}

func (v NullablePayloadNullableRRule) IsSet() bool {
	return v.isSet
}

func (v *NullablePayloadNullableRRule) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullablePayloadNullableRRule(val *PayloadNullableRRule) *NullablePayloadNullableRRule {
	return &NullablePayloadNullableRRule{value: val, isSet: true}
}

func (v NullablePayloadNullableRRule) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullablePayloadNullableRRule) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


