/*
 * Teamwork.com Projects API
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * API version: 3.0
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package projv3

import (
	"encoding/json"
)

// StatusTimelineResponseIncluded struct for StatusTimelineResponseIncluded
type StatusTimelineResponseIncluded struct {
	UserEvents *map[string]ViewUserEvents `json:"userEvents,omitempty"`
	Users *map[string]ViewUser `json:"users,omitempty"`
}

// NewStatusTimelineResponseIncluded instantiates a new StatusTimelineResponseIncluded object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewStatusTimelineResponseIncluded() *StatusTimelineResponseIncluded {
	this := StatusTimelineResponseIncluded{}
	return &this
}

// NewStatusTimelineResponseIncludedWithDefaults instantiates a new StatusTimelineResponseIncluded object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewStatusTimelineResponseIncludedWithDefaults() *StatusTimelineResponseIncluded {
	this := StatusTimelineResponseIncluded{}
	return &this
}

// GetUserEvents returns the UserEvents field value if set, zero value otherwise.
func (o *StatusTimelineResponseIncluded) GetUserEvents() map[string]ViewUserEvents {
	if o == nil || o.UserEvents == nil {
		var ret map[string]ViewUserEvents
		return ret
	}
	return *o.UserEvents
}

// GetUserEventsOk returns a tuple with the UserEvents field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *StatusTimelineResponseIncluded) GetUserEventsOk() (*map[string]ViewUserEvents, bool) {
	if o == nil || o.UserEvents == nil {
		return nil, false
	}
	return o.UserEvents, true
}

// HasUserEvents returns a boolean if a field has been set.
func (o *StatusTimelineResponseIncluded) HasUserEvents() bool {
	if o != nil && o.UserEvents != nil {
		return true
	}

	return false
}

// SetUserEvents gets a reference to the given map[string]ViewUserEvents and assigns it to the UserEvents field.
func (o *StatusTimelineResponseIncluded) SetUserEvents(v map[string]ViewUserEvents) {
	o.UserEvents = &v
}

// GetUsers returns the Users field value if set, zero value otherwise.
func (o *StatusTimelineResponseIncluded) GetUsers() map[string]ViewUser {
	if o == nil || o.Users == nil {
		var ret map[string]ViewUser
		return ret
	}
	return *o.Users
}

// GetUsersOk returns a tuple with the Users field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *StatusTimelineResponseIncluded) GetUsersOk() (*map[string]ViewUser, bool) {
	if o == nil || o.Users == nil {
		return nil, false
	}
	return o.Users, true
}

// HasUsers returns a boolean if a field has been set.
func (o *StatusTimelineResponseIncluded) HasUsers() bool {
	if o != nil && o.Users != nil {
		return true
	}

	return false
}

// SetUsers gets a reference to the given map[string]ViewUser and assigns it to the Users field.
func (o *StatusTimelineResponseIncluded) SetUsers(v map[string]ViewUser) {
	o.Users = &v
}

func (o StatusTimelineResponseIncluded) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.UserEvents != nil {
		toSerialize["userEvents"] = o.UserEvents
	}
	if o.Users != nil {
		toSerialize["users"] = o.Users
	}
	return json.Marshal(toSerialize)
}

type NullableStatusTimelineResponseIncluded struct {
	value *StatusTimelineResponseIncluded
	isSet bool
}

func (v NullableStatusTimelineResponseIncluded) Get() *StatusTimelineResponseIncluded {
	return v.value
}

func (v *NullableStatusTimelineResponseIncluded) Set(val *StatusTimelineResponseIncluded) {
	v.value = val
	v.isSet = true
}

func (v NullableStatusTimelineResponseIncluded) IsSet() bool {
	return v.isSet
}

func (v *NullableStatusTimelineResponseIncluded) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableStatusTimelineResponseIncluded(val *StatusTimelineResponseIncluded) *NullableStatusTimelineResponseIncluded {
	return &NullableStatusTimelineResponseIncluded{value: val, isSet: true}
}

func (v NullableStatusTimelineResponseIncluded) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableStatusTimelineResponseIncluded) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


