/*
 * Teamwork.com Projects API
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * API version: 3.0
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package projv2

import (
	"encoding/json"
)

// PeopleLocalization struct for PeopleLocalization
type PeopleLocalization struct {
	DateFormat *string `json:"dateFormat,omitempty"`
	DateFormatId *int32 `json:"dateFormatId,omitempty"`
	Language *string `json:"language,omitempty"`
	LanguageCode *string `json:"languageCode,omitempty"`
	StartOnSunday *bool `json:"startOnSunday,omitempty"`
	TimeFormat *string `json:"timeFormat,omitempty"`
	TimeFormatId *int32 `json:"timeFormatId,omitempty"`
	Timezone *string `json:"timezone,omitempty"`
	TimezoneId *int32 `json:"timezoneId,omitempty"`
	TimezoneJavaRefCode *string `json:"timezoneJavaRefCode,omitempty"`
	TimezoneUTCOffsetMins *int32 `json:"timezoneUTCOffsetMins,omitempty"`
}

// NewPeopleLocalization instantiates a new PeopleLocalization object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewPeopleLocalization() *PeopleLocalization {
	this := PeopleLocalization{}
	return &this
}

// NewPeopleLocalizationWithDefaults instantiates a new PeopleLocalization object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewPeopleLocalizationWithDefaults() *PeopleLocalization {
	this := PeopleLocalization{}
	return &this
}

// GetDateFormat returns the DateFormat field value if set, zero value otherwise.
func (o *PeopleLocalization) GetDateFormat() string {
	if o == nil || o.DateFormat == nil {
		var ret string
		return ret
	}
	return *o.DateFormat
}

// GetDateFormatOk returns a tuple with the DateFormat field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PeopleLocalization) GetDateFormatOk() (*string, bool) {
	if o == nil || o.DateFormat == nil {
		return nil, false
	}
	return o.DateFormat, true
}

// HasDateFormat returns a boolean if a field has been set.
func (o *PeopleLocalization) HasDateFormat() bool {
	if o != nil && o.DateFormat != nil {
		return true
	}

	return false
}

// SetDateFormat gets a reference to the given string and assigns it to the DateFormat field.
func (o *PeopleLocalization) SetDateFormat(v string) {
	o.DateFormat = &v
}

// GetDateFormatId returns the DateFormatId field value if set, zero value otherwise.
func (o *PeopleLocalization) GetDateFormatId() int32 {
	if o == nil || o.DateFormatId == nil {
		var ret int32
		return ret
	}
	return *o.DateFormatId
}

// GetDateFormatIdOk returns a tuple with the DateFormatId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PeopleLocalization) GetDateFormatIdOk() (*int32, bool) {
	if o == nil || o.DateFormatId == nil {
		return nil, false
	}
	return o.DateFormatId, true
}

// HasDateFormatId returns a boolean if a field has been set.
func (o *PeopleLocalization) HasDateFormatId() bool {
	if o != nil && o.DateFormatId != nil {
		return true
	}

	return false
}

// SetDateFormatId gets a reference to the given int32 and assigns it to the DateFormatId field.
func (o *PeopleLocalization) SetDateFormatId(v int32) {
	o.DateFormatId = &v
}

// GetLanguage returns the Language field value if set, zero value otherwise.
func (o *PeopleLocalization) GetLanguage() string {
	if o == nil || o.Language == nil {
		var ret string
		return ret
	}
	return *o.Language
}

// GetLanguageOk returns a tuple with the Language field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PeopleLocalization) GetLanguageOk() (*string, bool) {
	if o == nil || o.Language == nil {
		return nil, false
	}
	return o.Language, true
}

// HasLanguage returns a boolean if a field has been set.
func (o *PeopleLocalization) HasLanguage() bool {
	if o != nil && o.Language != nil {
		return true
	}

	return false
}

// SetLanguage gets a reference to the given string and assigns it to the Language field.
func (o *PeopleLocalization) SetLanguage(v string) {
	o.Language = &v
}

// GetLanguageCode returns the LanguageCode field value if set, zero value otherwise.
func (o *PeopleLocalization) GetLanguageCode() string {
	if o == nil || o.LanguageCode == nil {
		var ret string
		return ret
	}
	return *o.LanguageCode
}

// GetLanguageCodeOk returns a tuple with the LanguageCode field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PeopleLocalization) GetLanguageCodeOk() (*string, bool) {
	if o == nil || o.LanguageCode == nil {
		return nil, false
	}
	return o.LanguageCode, true
}

// HasLanguageCode returns a boolean if a field has been set.
func (o *PeopleLocalization) HasLanguageCode() bool {
	if o != nil && o.LanguageCode != nil {
		return true
	}

	return false
}

// SetLanguageCode gets a reference to the given string and assigns it to the LanguageCode field.
func (o *PeopleLocalization) SetLanguageCode(v string) {
	o.LanguageCode = &v
}

// GetStartOnSunday returns the StartOnSunday field value if set, zero value otherwise.
func (o *PeopleLocalization) GetStartOnSunday() bool {
	if o == nil || o.StartOnSunday == nil {
		var ret bool
		return ret
	}
	return *o.StartOnSunday
}

// GetStartOnSundayOk returns a tuple with the StartOnSunday field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PeopleLocalization) GetStartOnSundayOk() (*bool, bool) {
	if o == nil || o.StartOnSunday == nil {
		return nil, false
	}
	return o.StartOnSunday, true
}

// HasStartOnSunday returns a boolean if a field has been set.
func (o *PeopleLocalization) HasStartOnSunday() bool {
	if o != nil && o.StartOnSunday != nil {
		return true
	}

	return false
}

// SetStartOnSunday gets a reference to the given bool and assigns it to the StartOnSunday field.
func (o *PeopleLocalization) SetStartOnSunday(v bool) {
	o.StartOnSunday = &v
}

// GetTimeFormat returns the TimeFormat field value if set, zero value otherwise.
func (o *PeopleLocalization) GetTimeFormat() string {
	if o == nil || o.TimeFormat == nil {
		var ret string
		return ret
	}
	return *o.TimeFormat
}

// GetTimeFormatOk returns a tuple with the TimeFormat field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PeopleLocalization) GetTimeFormatOk() (*string, bool) {
	if o == nil || o.TimeFormat == nil {
		return nil, false
	}
	return o.TimeFormat, true
}

// HasTimeFormat returns a boolean if a field has been set.
func (o *PeopleLocalization) HasTimeFormat() bool {
	if o != nil && o.TimeFormat != nil {
		return true
	}

	return false
}

// SetTimeFormat gets a reference to the given string and assigns it to the TimeFormat field.
func (o *PeopleLocalization) SetTimeFormat(v string) {
	o.TimeFormat = &v
}

// GetTimeFormatId returns the TimeFormatId field value if set, zero value otherwise.
func (o *PeopleLocalization) GetTimeFormatId() int32 {
	if o == nil || o.TimeFormatId == nil {
		var ret int32
		return ret
	}
	return *o.TimeFormatId
}

// GetTimeFormatIdOk returns a tuple with the TimeFormatId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PeopleLocalization) GetTimeFormatIdOk() (*int32, bool) {
	if o == nil || o.TimeFormatId == nil {
		return nil, false
	}
	return o.TimeFormatId, true
}

// HasTimeFormatId returns a boolean if a field has been set.
func (o *PeopleLocalization) HasTimeFormatId() bool {
	if o != nil && o.TimeFormatId != nil {
		return true
	}

	return false
}

// SetTimeFormatId gets a reference to the given int32 and assigns it to the TimeFormatId field.
func (o *PeopleLocalization) SetTimeFormatId(v int32) {
	o.TimeFormatId = &v
}

// GetTimezone returns the Timezone field value if set, zero value otherwise.
func (o *PeopleLocalization) GetTimezone() string {
	if o == nil || o.Timezone == nil {
		var ret string
		return ret
	}
	return *o.Timezone
}

// GetTimezoneOk returns a tuple with the Timezone field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PeopleLocalization) GetTimezoneOk() (*string, bool) {
	if o == nil || o.Timezone == nil {
		return nil, false
	}
	return o.Timezone, true
}

// HasTimezone returns a boolean if a field has been set.
func (o *PeopleLocalization) HasTimezone() bool {
	if o != nil && o.Timezone != nil {
		return true
	}

	return false
}

// SetTimezone gets a reference to the given string and assigns it to the Timezone field.
func (o *PeopleLocalization) SetTimezone(v string) {
	o.Timezone = &v
}

// GetTimezoneId returns the TimezoneId field value if set, zero value otherwise.
func (o *PeopleLocalization) GetTimezoneId() int32 {
	if o == nil || o.TimezoneId == nil {
		var ret int32
		return ret
	}
	return *o.TimezoneId
}

// GetTimezoneIdOk returns a tuple with the TimezoneId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PeopleLocalization) GetTimezoneIdOk() (*int32, bool) {
	if o == nil || o.TimezoneId == nil {
		return nil, false
	}
	return o.TimezoneId, true
}

// HasTimezoneId returns a boolean if a field has been set.
func (o *PeopleLocalization) HasTimezoneId() bool {
	if o != nil && o.TimezoneId != nil {
		return true
	}

	return false
}

// SetTimezoneId gets a reference to the given int32 and assigns it to the TimezoneId field.
func (o *PeopleLocalization) SetTimezoneId(v int32) {
	o.TimezoneId = &v
}

// GetTimezoneJavaRefCode returns the TimezoneJavaRefCode field value if set, zero value otherwise.
func (o *PeopleLocalization) GetTimezoneJavaRefCode() string {
	if o == nil || o.TimezoneJavaRefCode == nil {
		var ret string
		return ret
	}
	return *o.TimezoneJavaRefCode
}

// GetTimezoneJavaRefCodeOk returns a tuple with the TimezoneJavaRefCode field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PeopleLocalization) GetTimezoneJavaRefCodeOk() (*string, bool) {
	if o == nil || o.TimezoneJavaRefCode == nil {
		return nil, false
	}
	return o.TimezoneJavaRefCode, true
}

// HasTimezoneJavaRefCode returns a boolean if a field has been set.
func (o *PeopleLocalization) HasTimezoneJavaRefCode() bool {
	if o != nil && o.TimezoneJavaRefCode != nil {
		return true
	}

	return false
}

// SetTimezoneJavaRefCode gets a reference to the given string and assigns it to the TimezoneJavaRefCode field.
func (o *PeopleLocalization) SetTimezoneJavaRefCode(v string) {
	o.TimezoneJavaRefCode = &v
}

// GetTimezoneUTCOffsetMins returns the TimezoneUTCOffsetMins field value if set, zero value otherwise.
func (o *PeopleLocalization) GetTimezoneUTCOffsetMins() int32 {
	if o == nil || o.TimezoneUTCOffsetMins == nil {
		var ret int32
		return ret
	}
	return *o.TimezoneUTCOffsetMins
}

// GetTimezoneUTCOffsetMinsOk returns a tuple with the TimezoneUTCOffsetMins field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PeopleLocalization) GetTimezoneUTCOffsetMinsOk() (*int32, bool) {
	if o == nil || o.TimezoneUTCOffsetMins == nil {
		return nil, false
	}
	return o.TimezoneUTCOffsetMins, true
}

// HasTimezoneUTCOffsetMins returns a boolean if a field has been set.
func (o *PeopleLocalization) HasTimezoneUTCOffsetMins() bool {
	if o != nil && o.TimezoneUTCOffsetMins != nil {
		return true
	}

	return false
}

// SetTimezoneUTCOffsetMins gets a reference to the given int32 and assigns it to the TimezoneUTCOffsetMins field.
func (o *PeopleLocalization) SetTimezoneUTCOffsetMins(v int32) {
	o.TimezoneUTCOffsetMins = &v
}

func (o PeopleLocalization) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.DateFormat != nil {
		toSerialize["dateFormat"] = o.DateFormat
	}
	if o.DateFormatId != nil {
		toSerialize["dateFormatId"] = o.DateFormatId
	}
	if o.Language != nil {
		toSerialize["language"] = o.Language
	}
	if o.LanguageCode != nil {
		toSerialize["languageCode"] = o.LanguageCode
	}
	if o.StartOnSunday != nil {
		toSerialize["startOnSunday"] = o.StartOnSunday
	}
	if o.TimeFormat != nil {
		toSerialize["timeFormat"] = o.TimeFormat
	}
	if o.TimeFormatId != nil {
		toSerialize["timeFormatId"] = o.TimeFormatId
	}
	if o.Timezone != nil {
		toSerialize["timezone"] = o.Timezone
	}
	if o.TimezoneId != nil {
		toSerialize["timezoneId"] = o.TimezoneId
	}
	if o.TimezoneJavaRefCode != nil {
		toSerialize["timezoneJavaRefCode"] = o.TimezoneJavaRefCode
	}
	if o.TimezoneUTCOffsetMins != nil {
		toSerialize["timezoneUTCOffsetMins"] = o.TimezoneUTCOffsetMins
	}
	return json.Marshal(toSerialize)
}

type NullablePeopleLocalization struct {
	value *PeopleLocalization
	isSet bool
}

func (v NullablePeopleLocalization) Get() *PeopleLocalization {
	return v.value
}

func (v *NullablePeopleLocalization) Set(val *PeopleLocalization) {
	v.value = val
	v.isSet = true
}

func (v NullablePeopleLocalization) IsSet() bool {
	return v.isSet
}

func (v *NullablePeopleLocalization) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullablePeopleLocalization(val *PeopleLocalization) *NullablePeopleLocalization {
	return &NullablePeopleLocalization{value: val, isSet: true}
}

func (v NullablePeopleLocalization) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullablePeopleLocalization) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


