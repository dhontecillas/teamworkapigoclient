/*
 * Teamwork Projects API
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * API version: 
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package pmv1

import (
	"encoding/json"
)

// InlineResponse20053IntegrationsXero struct for InlineResponse20053IntegrationsXero
type InlineResponse20053IntegrationsXero struct {
	Basecurrency *string `json:"basecurrency,omitempty"`
	Connected *string `json:"connected,omitempty"`
	Countrycode *string `json:"countrycode,omitempty"`
	Enabled *bool `json:"enabled,omitempty"`
	Organisation *string `json:"organisation,omitempty"`
}

// NewInlineResponse20053IntegrationsXero instantiates a new InlineResponse20053IntegrationsXero object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewInlineResponse20053IntegrationsXero() *InlineResponse20053IntegrationsXero {
	this := InlineResponse20053IntegrationsXero{}
	return &this
}

// NewInlineResponse20053IntegrationsXeroWithDefaults instantiates a new InlineResponse20053IntegrationsXero object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewInlineResponse20053IntegrationsXeroWithDefaults() *InlineResponse20053IntegrationsXero {
	this := InlineResponse20053IntegrationsXero{}
	return &this
}

// GetBasecurrency returns the Basecurrency field value if set, zero value otherwise.
func (o *InlineResponse20053IntegrationsXero) GetBasecurrency() string {
	if o == nil || o.Basecurrency == nil {
		var ret string
		return ret
	}
	return *o.Basecurrency
}

// GetBasecurrencyOk returns a tuple with the Basecurrency field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InlineResponse20053IntegrationsXero) GetBasecurrencyOk() (*string, bool) {
	if o == nil || o.Basecurrency == nil {
		return nil, false
	}
	return o.Basecurrency, true
}

// HasBasecurrency returns a boolean if a field has been set.
func (o *InlineResponse20053IntegrationsXero) HasBasecurrency() bool {
	if o != nil && o.Basecurrency != nil {
		return true
	}

	return false
}

// SetBasecurrency gets a reference to the given string and assigns it to the Basecurrency field.
func (o *InlineResponse20053IntegrationsXero) SetBasecurrency(v string) {
	o.Basecurrency = &v
}

// GetConnected returns the Connected field value if set, zero value otherwise.
func (o *InlineResponse20053IntegrationsXero) GetConnected() string {
	if o == nil || o.Connected == nil {
		var ret string
		return ret
	}
	return *o.Connected
}

// GetConnectedOk returns a tuple with the Connected field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InlineResponse20053IntegrationsXero) GetConnectedOk() (*string, bool) {
	if o == nil || o.Connected == nil {
		return nil, false
	}
	return o.Connected, true
}

// HasConnected returns a boolean if a field has been set.
func (o *InlineResponse20053IntegrationsXero) HasConnected() bool {
	if o != nil && o.Connected != nil {
		return true
	}

	return false
}

// SetConnected gets a reference to the given string and assigns it to the Connected field.
func (o *InlineResponse20053IntegrationsXero) SetConnected(v string) {
	o.Connected = &v
}

// GetCountrycode returns the Countrycode field value if set, zero value otherwise.
func (o *InlineResponse20053IntegrationsXero) GetCountrycode() string {
	if o == nil || o.Countrycode == nil {
		var ret string
		return ret
	}
	return *o.Countrycode
}

// GetCountrycodeOk returns a tuple with the Countrycode field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InlineResponse20053IntegrationsXero) GetCountrycodeOk() (*string, bool) {
	if o == nil || o.Countrycode == nil {
		return nil, false
	}
	return o.Countrycode, true
}

// HasCountrycode returns a boolean if a field has been set.
func (o *InlineResponse20053IntegrationsXero) HasCountrycode() bool {
	if o != nil && o.Countrycode != nil {
		return true
	}

	return false
}

// SetCountrycode gets a reference to the given string and assigns it to the Countrycode field.
func (o *InlineResponse20053IntegrationsXero) SetCountrycode(v string) {
	o.Countrycode = &v
}

// GetEnabled returns the Enabled field value if set, zero value otherwise.
func (o *InlineResponse20053IntegrationsXero) GetEnabled() bool {
	if o == nil || o.Enabled == nil {
		var ret bool
		return ret
	}
	return *o.Enabled
}

// GetEnabledOk returns a tuple with the Enabled field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InlineResponse20053IntegrationsXero) GetEnabledOk() (*bool, bool) {
	if o == nil || o.Enabled == nil {
		return nil, false
	}
	return o.Enabled, true
}

// HasEnabled returns a boolean if a field has been set.
func (o *InlineResponse20053IntegrationsXero) HasEnabled() bool {
	if o != nil && o.Enabled != nil {
		return true
	}

	return false
}

// SetEnabled gets a reference to the given bool and assigns it to the Enabled field.
func (o *InlineResponse20053IntegrationsXero) SetEnabled(v bool) {
	o.Enabled = &v
}

// GetOrganisation returns the Organisation field value if set, zero value otherwise.
func (o *InlineResponse20053IntegrationsXero) GetOrganisation() string {
	if o == nil || o.Organisation == nil {
		var ret string
		return ret
	}
	return *o.Organisation
}

// GetOrganisationOk returns a tuple with the Organisation field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InlineResponse20053IntegrationsXero) GetOrganisationOk() (*string, bool) {
	if o == nil || o.Organisation == nil {
		return nil, false
	}
	return o.Organisation, true
}

// HasOrganisation returns a boolean if a field has been set.
func (o *InlineResponse20053IntegrationsXero) HasOrganisation() bool {
	if o != nil && o.Organisation != nil {
		return true
	}

	return false
}

// SetOrganisation gets a reference to the given string and assigns it to the Organisation field.
func (o *InlineResponse20053IntegrationsXero) SetOrganisation(v string) {
	o.Organisation = &v
}

func (o InlineResponse20053IntegrationsXero) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.Basecurrency != nil {
		toSerialize["basecurrency"] = o.Basecurrency
	}
	if o.Connected != nil {
		toSerialize["connected"] = o.Connected
	}
	if o.Countrycode != nil {
		toSerialize["countrycode"] = o.Countrycode
	}
	if o.Enabled != nil {
		toSerialize["enabled"] = o.Enabled
	}
	if o.Organisation != nil {
		toSerialize["organisation"] = o.Organisation
	}
	return json.Marshal(toSerialize)
}

type NullableInlineResponse20053IntegrationsXero struct {
	value *InlineResponse20053IntegrationsXero
	isSet bool
}

func (v NullableInlineResponse20053IntegrationsXero) Get() *InlineResponse20053IntegrationsXero {
	return v.value
}

func (v *NullableInlineResponse20053IntegrationsXero) Set(val *InlineResponse20053IntegrationsXero) {
	v.value = val
	v.isSet = true
}

func (v NullableInlineResponse20053IntegrationsXero) IsSet() bool {
	return v.isSet
}

func (v *NullableInlineResponse20053IntegrationsXero) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableInlineResponse20053IntegrationsXero(val *InlineResponse20053IntegrationsXero) *NullableInlineResponse20053IntegrationsXero {
	return &NullableInlineResponse20053IntegrationsXero{value: val, isSet: true}
}

func (v NullableInlineResponse20053IntegrationsXero) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableInlineResponse20053IntegrationsXero) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


