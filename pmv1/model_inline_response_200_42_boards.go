/*
 * Teamwork Projects API
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * API version: 
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package pmv1

import (
	"encoding/json"
)

// InlineResponse20042Boards struct for InlineResponse20042Boards
type InlineResponse20042Boards struct {
	CanEdit *bool `json:"canEdit,omitempty"`
	Color *string `json:"color,omitempty"`
	DateCreated *string `json:"dateCreated,omitempty"`
	Deleted *bool `json:"deleted,omitempty"`
	DeletedDate *string `json:"deletedDate,omitempty"`
	Description *string `json:"description,omitempty"`
	DisplayOrder *string `json:"displayOrder,omitempty"`
	Id *string `json:"id,omitempty"`
	Name *string `json:"name,omitempty"`
	Stats *InlineResponse20042Stats `json:"stats,omitempty"`
}

// NewInlineResponse20042Boards instantiates a new InlineResponse20042Boards object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewInlineResponse20042Boards() *InlineResponse20042Boards {
	this := InlineResponse20042Boards{}
	return &this
}

// NewInlineResponse20042BoardsWithDefaults instantiates a new InlineResponse20042Boards object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewInlineResponse20042BoardsWithDefaults() *InlineResponse20042Boards {
	this := InlineResponse20042Boards{}
	return &this
}

// GetCanEdit returns the CanEdit field value if set, zero value otherwise.
func (o *InlineResponse20042Boards) GetCanEdit() bool {
	if o == nil || o.CanEdit == nil {
		var ret bool
		return ret
	}
	return *o.CanEdit
}

// GetCanEditOk returns a tuple with the CanEdit field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InlineResponse20042Boards) GetCanEditOk() (*bool, bool) {
	if o == nil || o.CanEdit == nil {
		return nil, false
	}
	return o.CanEdit, true
}

// HasCanEdit returns a boolean if a field has been set.
func (o *InlineResponse20042Boards) HasCanEdit() bool {
	if o != nil && o.CanEdit != nil {
		return true
	}

	return false
}

// SetCanEdit gets a reference to the given bool and assigns it to the CanEdit field.
func (o *InlineResponse20042Boards) SetCanEdit(v bool) {
	o.CanEdit = &v
}

// GetColor returns the Color field value if set, zero value otherwise.
func (o *InlineResponse20042Boards) GetColor() string {
	if o == nil || o.Color == nil {
		var ret string
		return ret
	}
	return *o.Color
}

// GetColorOk returns a tuple with the Color field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InlineResponse20042Boards) GetColorOk() (*string, bool) {
	if o == nil || o.Color == nil {
		return nil, false
	}
	return o.Color, true
}

// HasColor returns a boolean if a field has been set.
func (o *InlineResponse20042Boards) HasColor() bool {
	if o != nil && o.Color != nil {
		return true
	}

	return false
}

// SetColor gets a reference to the given string and assigns it to the Color field.
func (o *InlineResponse20042Boards) SetColor(v string) {
	o.Color = &v
}

// GetDateCreated returns the DateCreated field value if set, zero value otherwise.
func (o *InlineResponse20042Boards) GetDateCreated() string {
	if o == nil || o.DateCreated == nil {
		var ret string
		return ret
	}
	return *o.DateCreated
}

// GetDateCreatedOk returns a tuple with the DateCreated field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InlineResponse20042Boards) GetDateCreatedOk() (*string, bool) {
	if o == nil || o.DateCreated == nil {
		return nil, false
	}
	return o.DateCreated, true
}

// HasDateCreated returns a boolean if a field has been set.
func (o *InlineResponse20042Boards) HasDateCreated() bool {
	if o != nil && o.DateCreated != nil {
		return true
	}

	return false
}

// SetDateCreated gets a reference to the given string and assigns it to the DateCreated field.
func (o *InlineResponse20042Boards) SetDateCreated(v string) {
	o.DateCreated = &v
}

// GetDeleted returns the Deleted field value if set, zero value otherwise.
func (o *InlineResponse20042Boards) GetDeleted() bool {
	if o == nil || o.Deleted == nil {
		var ret bool
		return ret
	}
	return *o.Deleted
}

// GetDeletedOk returns a tuple with the Deleted field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InlineResponse20042Boards) GetDeletedOk() (*bool, bool) {
	if o == nil || o.Deleted == nil {
		return nil, false
	}
	return o.Deleted, true
}

// HasDeleted returns a boolean if a field has been set.
func (o *InlineResponse20042Boards) HasDeleted() bool {
	if o != nil && o.Deleted != nil {
		return true
	}

	return false
}

// SetDeleted gets a reference to the given bool and assigns it to the Deleted field.
func (o *InlineResponse20042Boards) SetDeleted(v bool) {
	o.Deleted = &v
}

// GetDeletedDate returns the DeletedDate field value if set, zero value otherwise.
func (o *InlineResponse20042Boards) GetDeletedDate() string {
	if o == nil || o.DeletedDate == nil {
		var ret string
		return ret
	}
	return *o.DeletedDate
}

// GetDeletedDateOk returns a tuple with the DeletedDate field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InlineResponse20042Boards) GetDeletedDateOk() (*string, bool) {
	if o == nil || o.DeletedDate == nil {
		return nil, false
	}
	return o.DeletedDate, true
}

// HasDeletedDate returns a boolean if a field has been set.
func (o *InlineResponse20042Boards) HasDeletedDate() bool {
	if o != nil && o.DeletedDate != nil {
		return true
	}

	return false
}

// SetDeletedDate gets a reference to the given string and assigns it to the DeletedDate field.
func (o *InlineResponse20042Boards) SetDeletedDate(v string) {
	o.DeletedDate = &v
}

// GetDescription returns the Description field value if set, zero value otherwise.
func (o *InlineResponse20042Boards) GetDescription() string {
	if o == nil || o.Description == nil {
		var ret string
		return ret
	}
	return *o.Description
}

// GetDescriptionOk returns a tuple with the Description field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InlineResponse20042Boards) GetDescriptionOk() (*string, bool) {
	if o == nil || o.Description == nil {
		return nil, false
	}
	return o.Description, true
}

// HasDescription returns a boolean if a field has been set.
func (o *InlineResponse20042Boards) HasDescription() bool {
	if o != nil && o.Description != nil {
		return true
	}

	return false
}

// SetDescription gets a reference to the given string and assigns it to the Description field.
func (o *InlineResponse20042Boards) SetDescription(v string) {
	o.Description = &v
}

// GetDisplayOrder returns the DisplayOrder field value if set, zero value otherwise.
func (o *InlineResponse20042Boards) GetDisplayOrder() string {
	if o == nil || o.DisplayOrder == nil {
		var ret string
		return ret
	}
	return *o.DisplayOrder
}

// GetDisplayOrderOk returns a tuple with the DisplayOrder field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InlineResponse20042Boards) GetDisplayOrderOk() (*string, bool) {
	if o == nil || o.DisplayOrder == nil {
		return nil, false
	}
	return o.DisplayOrder, true
}

// HasDisplayOrder returns a boolean if a field has been set.
func (o *InlineResponse20042Boards) HasDisplayOrder() bool {
	if o != nil && o.DisplayOrder != nil {
		return true
	}

	return false
}

// SetDisplayOrder gets a reference to the given string and assigns it to the DisplayOrder field.
func (o *InlineResponse20042Boards) SetDisplayOrder(v string) {
	o.DisplayOrder = &v
}

// GetId returns the Id field value if set, zero value otherwise.
func (o *InlineResponse20042Boards) GetId() string {
	if o == nil || o.Id == nil {
		var ret string
		return ret
	}
	return *o.Id
}

// GetIdOk returns a tuple with the Id field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InlineResponse20042Boards) GetIdOk() (*string, bool) {
	if o == nil || o.Id == nil {
		return nil, false
	}
	return o.Id, true
}

// HasId returns a boolean if a field has been set.
func (o *InlineResponse20042Boards) HasId() bool {
	if o != nil && o.Id != nil {
		return true
	}

	return false
}

// SetId gets a reference to the given string and assigns it to the Id field.
func (o *InlineResponse20042Boards) SetId(v string) {
	o.Id = &v
}

// GetName returns the Name field value if set, zero value otherwise.
func (o *InlineResponse20042Boards) GetName() string {
	if o == nil || o.Name == nil {
		var ret string
		return ret
	}
	return *o.Name
}

// GetNameOk returns a tuple with the Name field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InlineResponse20042Boards) GetNameOk() (*string, bool) {
	if o == nil || o.Name == nil {
		return nil, false
	}
	return o.Name, true
}

// HasName returns a boolean if a field has been set.
func (o *InlineResponse20042Boards) HasName() bool {
	if o != nil && o.Name != nil {
		return true
	}

	return false
}

// SetName gets a reference to the given string and assigns it to the Name field.
func (o *InlineResponse20042Boards) SetName(v string) {
	o.Name = &v
}

// GetStats returns the Stats field value if set, zero value otherwise.
func (o *InlineResponse20042Boards) GetStats() InlineResponse20042Stats {
	if o == nil || o.Stats == nil {
		var ret InlineResponse20042Stats
		return ret
	}
	return *o.Stats
}

// GetStatsOk returns a tuple with the Stats field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InlineResponse20042Boards) GetStatsOk() (*InlineResponse20042Stats, bool) {
	if o == nil || o.Stats == nil {
		return nil, false
	}
	return o.Stats, true
}

// HasStats returns a boolean if a field has been set.
func (o *InlineResponse20042Boards) HasStats() bool {
	if o != nil && o.Stats != nil {
		return true
	}

	return false
}

// SetStats gets a reference to the given InlineResponse20042Stats and assigns it to the Stats field.
func (o *InlineResponse20042Boards) SetStats(v InlineResponse20042Stats) {
	o.Stats = &v
}

func (o InlineResponse20042Boards) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.CanEdit != nil {
		toSerialize["canEdit"] = o.CanEdit
	}
	if o.Color != nil {
		toSerialize["color"] = o.Color
	}
	if o.DateCreated != nil {
		toSerialize["dateCreated"] = o.DateCreated
	}
	if o.Deleted != nil {
		toSerialize["deleted"] = o.Deleted
	}
	if o.DeletedDate != nil {
		toSerialize["deletedDate"] = o.DeletedDate
	}
	if o.Description != nil {
		toSerialize["description"] = o.Description
	}
	if o.DisplayOrder != nil {
		toSerialize["displayOrder"] = o.DisplayOrder
	}
	if o.Id != nil {
		toSerialize["id"] = o.Id
	}
	if o.Name != nil {
		toSerialize["name"] = o.Name
	}
	if o.Stats != nil {
		toSerialize["stats"] = o.Stats
	}
	return json.Marshal(toSerialize)
}

type NullableInlineResponse20042Boards struct {
	value *InlineResponse20042Boards
	isSet bool
}

func (v NullableInlineResponse20042Boards) Get() *InlineResponse20042Boards {
	return v.value
}

func (v *NullableInlineResponse20042Boards) Set(val *InlineResponse20042Boards) {
	v.value = val
	v.isSet = true
}

func (v NullableInlineResponse20042Boards) IsSet() bool {
	return v.isSet
}

func (v *NullableInlineResponse20042Boards) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableInlineResponse20042Boards(val *InlineResponse20042Boards) *NullableInlineResponse20042Boards {
	return &NullableInlineResponse20042Boards{value: val, isSet: true}
}

func (v NullableInlineResponse20042Boards) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableInlineResponse20042Boards) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


