/*
 * Teamwork.com Projects API
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * API version: 3.0
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package projv3

import (
	"encoding/json"
)

// TaskRequestAttachments struct for TaskRequestAttachments
type TaskRequestAttachments struct {
	Files *[]TaskFile `json:"files,omitempty"`
	PendingFiles *[]TaskPendingFile `json:"pendingFiles,omitempty"`
}

// NewTaskRequestAttachments instantiates a new TaskRequestAttachments object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewTaskRequestAttachments() *TaskRequestAttachments {
	this := TaskRequestAttachments{}
	return &this
}

// NewTaskRequestAttachmentsWithDefaults instantiates a new TaskRequestAttachments object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewTaskRequestAttachmentsWithDefaults() *TaskRequestAttachments {
	this := TaskRequestAttachments{}
	return &this
}

// GetFiles returns the Files field value if set, zero value otherwise.
func (o *TaskRequestAttachments) GetFiles() []TaskFile {
	if o == nil || o.Files == nil {
		var ret []TaskFile
		return ret
	}
	return *o.Files
}

// GetFilesOk returns a tuple with the Files field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TaskRequestAttachments) GetFilesOk() (*[]TaskFile, bool) {
	if o == nil || o.Files == nil {
		return nil, false
	}
	return o.Files, true
}

// HasFiles returns a boolean if a field has been set.
func (o *TaskRequestAttachments) HasFiles() bool {
	if o != nil && o.Files != nil {
		return true
	}

	return false
}

// SetFiles gets a reference to the given []TaskFile and assigns it to the Files field.
func (o *TaskRequestAttachments) SetFiles(v []TaskFile) {
	o.Files = &v
}

// GetPendingFiles returns the PendingFiles field value if set, zero value otherwise.
func (o *TaskRequestAttachments) GetPendingFiles() []TaskPendingFile {
	if o == nil || o.PendingFiles == nil {
		var ret []TaskPendingFile
		return ret
	}
	return *o.PendingFiles
}

// GetPendingFilesOk returns a tuple with the PendingFiles field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TaskRequestAttachments) GetPendingFilesOk() (*[]TaskPendingFile, bool) {
	if o == nil || o.PendingFiles == nil {
		return nil, false
	}
	return o.PendingFiles, true
}

// HasPendingFiles returns a boolean if a field has been set.
func (o *TaskRequestAttachments) HasPendingFiles() bool {
	if o != nil && o.PendingFiles != nil {
		return true
	}

	return false
}

// SetPendingFiles gets a reference to the given []TaskPendingFile and assigns it to the PendingFiles field.
func (o *TaskRequestAttachments) SetPendingFiles(v []TaskPendingFile) {
	o.PendingFiles = &v
}

func (o TaskRequestAttachments) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.Files != nil {
		toSerialize["files"] = o.Files
	}
	if o.PendingFiles != nil {
		toSerialize["pendingFiles"] = o.PendingFiles
	}
	return json.Marshal(toSerialize)
}

type NullableTaskRequestAttachments struct {
	value *TaskRequestAttachments
	isSet bool
}

func (v NullableTaskRequestAttachments) Get() *TaskRequestAttachments {
	return v.value
}

func (v *NullableTaskRequestAttachments) Set(val *TaskRequestAttachments) {
	v.value = val
	v.isSet = true
}

func (v NullableTaskRequestAttachments) IsSet() bool {
	return v.isSet
}

func (v *NullableTaskRequestAttachments) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableTaskRequestAttachments(val *TaskRequestAttachments) *NullableTaskRequestAttachments {
	return &NullableTaskRequestAttachments{value: val, isSet: true}
}

func (v NullableTaskRequestAttachments) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableTaskRequestAttachments) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


