/*
 * Teamwork Projects API
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * API version: 
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package pmv1

import (
	"encoding/json"
)

// InlineResponse20054IntegrationsXero struct for InlineResponse20054IntegrationsXero
type InlineResponse20054IntegrationsXero struct {
	BaseCurrency *string `json:"baseCurrency,omitempty"`
	Connected *bool `json:"connected,omitempty"`
	CountryCode *string `json:"countryCode,omitempty"`
	Enabled *bool `json:"enabled,omitempty"`
	Organisation *string `json:"organisation,omitempty"`
}

// NewInlineResponse20054IntegrationsXero instantiates a new InlineResponse20054IntegrationsXero object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewInlineResponse20054IntegrationsXero() *InlineResponse20054IntegrationsXero {
	this := InlineResponse20054IntegrationsXero{}
	return &this
}

// NewInlineResponse20054IntegrationsXeroWithDefaults instantiates a new InlineResponse20054IntegrationsXero object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewInlineResponse20054IntegrationsXeroWithDefaults() *InlineResponse20054IntegrationsXero {
	this := InlineResponse20054IntegrationsXero{}
	return &this
}

// GetBaseCurrency returns the BaseCurrency field value if set, zero value otherwise.
func (o *InlineResponse20054IntegrationsXero) GetBaseCurrency() string {
	if o == nil || o.BaseCurrency == nil {
		var ret string
		return ret
	}
	return *o.BaseCurrency
}

// GetBaseCurrencyOk returns a tuple with the BaseCurrency field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InlineResponse20054IntegrationsXero) GetBaseCurrencyOk() (*string, bool) {
	if o == nil || o.BaseCurrency == nil {
		return nil, false
	}
	return o.BaseCurrency, true
}

// HasBaseCurrency returns a boolean if a field has been set.
func (o *InlineResponse20054IntegrationsXero) HasBaseCurrency() bool {
	if o != nil && o.BaseCurrency != nil {
		return true
	}

	return false
}

// SetBaseCurrency gets a reference to the given string and assigns it to the BaseCurrency field.
func (o *InlineResponse20054IntegrationsXero) SetBaseCurrency(v string) {
	o.BaseCurrency = &v
}

// GetConnected returns the Connected field value if set, zero value otherwise.
func (o *InlineResponse20054IntegrationsXero) GetConnected() bool {
	if o == nil || o.Connected == nil {
		var ret bool
		return ret
	}
	return *o.Connected
}

// GetConnectedOk returns a tuple with the Connected field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InlineResponse20054IntegrationsXero) GetConnectedOk() (*bool, bool) {
	if o == nil || o.Connected == nil {
		return nil, false
	}
	return o.Connected, true
}

// HasConnected returns a boolean if a field has been set.
func (o *InlineResponse20054IntegrationsXero) HasConnected() bool {
	if o != nil && o.Connected != nil {
		return true
	}

	return false
}

// SetConnected gets a reference to the given bool and assigns it to the Connected field.
func (o *InlineResponse20054IntegrationsXero) SetConnected(v bool) {
	o.Connected = &v
}

// GetCountryCode returns the CountryCode field value if set, zero value otherwise.
func (o *InlineResponse20054IntegrationsXero) GetCountryCode() string {
	if o == nil || o.CountryCode == nil {
		var ret string
		return ret
	}
	return *o.CountryCode
}

// GetCountryCodeOk returns a tuple with the CountryCode field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InlineResponse20054IntegrationsXero) GetCountryCodeOk() (*string, bool) {
	if o == nil || o.CountryCode == nil {
		return nil, false
	}
	return o.CountryCode, true
}

// HasCountryCode returns a boolean if a field has been set.
func (o *InlineResponse20054IntegrationsXero) HasCountryCode() bool {
	if o != nil && o.CountryCode != nil {
		return true
	}

	return false
}

// SetCountryCode gets a reference to the given string and assigns it to the CountryCode field.
func (o *InlineResponse20054IntegrationsXero) SetCountryCode(v string) {
	o.CountryCode = &v
}

// GetEnabled returns the Enabled field value if set, zero value otherwise.
func (o *InlineResponse20054IntegrationsXero) GetEnabled() bool {
	if o == nil || o.Enabled == nil {
		var ret bool
		return ret
	}
	return *o.Enabled
}

// GetEnabledOk returns a tuple with the Enabled field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InlineResponse20054IntegrationsXero) GetEnabledOk() (*bool, bool) {
	if o == nil || o.Enabled == nil {
		return nil, false
	}
	return o.Enabled, true
}

// HasEnabled returns a boolean if a field has been set.
func (o *InlineResponse20054IntegrationsXero) HasEnabled() bool {
	if o != nil && o.Enabled != nil {
		return true
	}

	return false
}

// SetEnabled gets a reference to the given bool and assigns it to the Enabled field.
func (o *InlineResponse20054IntegrationsXero) SetEnabled(v bool) {
	o.Enabled = &v
}

// GetOrganisation returns the Organisation field value if set, zero value otherwise.
func (o *InlineResponse20054IntegrationsXero) GetOrganisation() string {
	if o == nil || o.Organisation == nil {
		var ret string
		return ret
	}
	return *o.Organisation
}

// GetOrganisationOk returns a tuple with the Organisation field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InlineResponse20054IntegrationsXero) GetOrganisationOk() (*string, bool) {
	if o == nil || o.Organisation == nil {
		return nil, false
	}
	return o.Organisation, true
}

// HasOrganisation returns a boolean if a field has been set.
func (o *InlineResponse20054IntegrationsXero) HasOrganisation() bool {
	if o != nil && o.Organisation != nil {
		return true
	}

	return false
}

// SetOrganisation gets a reference to the given string and assigns it to the Organisation field.
func (o *InlineResponse20054IntegrationsXero) SetOrganisation(v string) {
	o.Organisation = &v
}

func (o InlineResponse20054IntegrationsXero) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.BaseCurrency != nil {
		toSerialize["baseCurrency"] = o.BaseCurrency
	}
	if o.Connected != nil {
		toSerialize["connected"] = o.Connected
	}
	if o.CountryCode != nil {
		toSerialize["countryCode"] = o.CountryCode
	}
	if o.Enabled != nil {
		toSerialize["enabled"] = o.Enabled
	}
	if o.Organisation != nil {
		toSerialize["organisation"] = o.Organisation
	}
	return json.Marshal(toSerialize)
}

type NullableInlineResponse20054IntegrationsXero struct {
	value *InlineResponse20054IntegrationsXero
	isSet bool
}

func (v NullableInlineResponse20054IntegrationsXero) Get() *InlineResponse20054IntegrationsXero {
	return v.value
}

func (v *NullableInlineResponse20054IntegrationsXero) Set(val *InlineResponse20054IntegrationsXero) {
	v.value = val
	v.isSet = true
}

func (v NullableInlineResponse20054IntegrationsXero) IsSet() bool {
	return v.isSet
}

func (v *NullableInlineResponse20054IntegrationsXero) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableInlineResponse20054IntegrationsXero(val *InlineResponse20054IntegrationsXero) *NullableInlineResponse20054IntegrationsXero {
	return &NullableInlineResponse20054IntegrationsXero{value: val, isSet: true}
}

func (v NullableInlineResponse20054IntegrationsXero) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableInlineResponse20054IntegrationsXero) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


