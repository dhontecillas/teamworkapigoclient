/*
 * Teamwork.com Projects API
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * API version: 3.0
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package projv3

import (
	"encoding/json"
)

// BudgetProjectBudgetsResponse ProjectBudgetsResponse contains information about a group of budgets.
type BudgetProjectBudgetsResponse struct {
	Budgets *[]ViewProjectBudget `json:"budgets,omitempty"`
	Included *BudgetProjectBudgetsResponseIncluded `json:"included,omitempty"`
	Meta *ViewMeta `json:"meta,omitempty"`
}

// NewBudgetProjectBudgetsResponse instantiates a new BudgetProjectBudgetsResponse object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewBudgetProjectBudgetsResponse() *BudgetProjectBudgetsResponse {
	this := BudgetProjectBudgetsResponse{}
	return &this
}

// NewBudgetProjectBudgetsResponseWithDefaults instantiates a new BudgetProjectBudgetsResponse object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewBudgetProjectBudgetsResponseWithDefaults() *BudgetProjectBudgetsResponse {
	this := BudgetProjectBudgetsResponse{}
	return &this
}

// GetBudgets returns the Budgets field value if set, zero value otherwise.
func (o *BudgetProjectBudgetsResponse) GetBudgets() []ViewProjectBudget {
	if o == nil || o.Budgets == nil {
		var ret []ViewProjectBudget
		return ret
	}
	return *o.Budgets
}

// GetBudgetsOk returns a tuple with the Budgets field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BudgetProjectBudgetsResponse) GetBudgetsOk() (*[]ViewProjectBudget, bool) {
	if o == nil || o.Budgets == nil {
		return nil, false
	}
	return o.Budgets, true
}

// HasBudgets returns a boolean if a field has been set.
func (o *BudgetProjectBudgetsResponse) HasBudgets() bool {
	if o != nil && o.Budgets != nil {
		return true
	}

	return false
}

// SetBudgets gets a reference to the given []ViewProjectBudget and assigns it to the Budgets field.
func (o *BudgetProjectBudgetsResponse) SetBudgets(v []ViewProjectBudget) {
	o.Budgets = &v
}

// GetIncluded returns the Included field value if set, zero value otherwise.
func (o *BudgetProjectBudgetsResponse) GetIncluded() BudgetProjectBudgetsResponseIncluded {
	if o == nil || o.Included == nil {
		var ret BudgetProjectBudgetsResponseIncluded
		return ret
	}
	return *o.Included
}

// GetIncludedOk returns a tuple with the Included field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BudgetProjectBudgetsResponse) GetIncludedOk() (*BudgetProjectBudgetsResponseIncluded, bool) {
	if o == nil || o.Included == nil {
		return nil, false
	}
	return o.Included, true
}

// HasIncluded returns a boolean if a field has been set.
func (o *BudgetProjectBudgetsResponse) HasIncluded() bool {
	if o != nil && o.Included != nil {
		return true
	}

	return false
}

// SetIncluded gets a reference to the given BudgetProjectBudgetsResponseIncluded and assigns it to the Included field.
func (o *BudgetProjectBudgetsResponse) SetIncluded(v BudgetProjectBudgetsResponseIncluded) {
	o.Included = &v
}

// GetMeta returns the Meta field value if set, zero value otherwise.
func (o *BudgetProjectBudgetsResponse) GetMeta() ViewMeta {
	if o == nil || o.Meta == nil {
		var ret ViewMeta
		return ret
	}
	return *o.Meta
}

// GetMetaOk returns a tuple with the Meta field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BudgetProjectBudgetsResponse) GetMetaOk() (*ViewMeta, bool) {
	if o == nil || o.Meta == nil {
		return nil, false
	}
	return o.Meta, true
}

// HasMeta returns a boolean if a field has been set.
func (o *BudgetProjectBudgetsResponse) HasMeta() bool {
	if o != nil && o.Meta != nil {
		return true
	}

	return false
}

// SetMeta gets a reference to the given ViewMeta and assigns it to the Meta field.
func (o *BudgetProjectBudgetsResponse) SetMeta(v ViewMeta) {
	o.Meta = &v
}

func (o BudgetProjectBudgetsResponse) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.Budgets != nil {
		toSerialize["budgets"] = o.Budgets
	}
	if o.Included != nil {
		toSerialize["included"] = o.Included
	}
	if o.Meta != nil {
		toSerialize["meta"] = o.Meta
	}
	return json.Marshal(toSerialize)
}

type NullableBudgetProjectBudgetsResponse struct {
	value *BudgetProjectBudgetsResponse
	isSet bool
}

func (v NullableBudgetProjectBudgetsResponse) Get() *BudgetProjectBudgetsResponse {
	return v.value
}

func (v *NullableBudgetProjectBudgetsResponse) Set(val *BudgetProjectBudgetsResponse) {
	v.value = val
	v.isSet = true
}

func (v NullableBudgetProjectBudgetsResponse) IsSet() bool {
	return v.isSet
}

func (v *NullableBudgetProjectBudgetsResponse) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableBudgetProjectBudgetsResponse(val *BudgetProjectBudgetsResponse) *NullableBudgetProjectBudgetsResponse {
	return &NullableBudgetProjectBudgetsResponse{value: val, isSet: true}
}

func (v NullableBudgetProjectBudgetsResponse) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableBudgetProjectBudgetsResponse) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


