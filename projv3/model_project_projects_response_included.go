/*
 * Teamwork.com Projects API
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * API version: 3.0
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package projv3

import (
	"encoding/json"
)

// ProjectProjectsResponseIncluded struct for ProjectProjectsResponseIncluded
type ProjectProjectsResponseIncluded struct {
	Companies *map[string]ViewCompany `json:"companies,omitempty"`
	CustomfieldProjects *map[string]ViewCustomFieldProject `json:"customfieldProjects,omitempty"`
	Customfields *map[string]ViewCustomField `json:"customfields,omitempty"`
	PortfolioBoards *map[string]ViewPortfolioBoard `json:"portfolioBoards,omitempty"`
	PortfolioCards *map[string]ViewPortfolioCard `json:"portfolioCards,omitempty"`
	PortfolioColumns *map[string]ViewPortfolioColumn `json:"portfolioColumns,omitempty"`
	ProjectBudgets *map[string]ViewProjectBudget `json:"projectBudgets,omitempty"`
	ProjectCategories *map[string]ViewProjectCategory `json:"projectCategories,omitempty"`
	ProjectTaskStats *map[string]ViewProjectTaskStats `json:"projectTaskStats,omitempty"`
	ProjectUpdates *map[string]ViewProjectUpdate `json:"projectUpdates,omitempty"`
	Tags *map[string]ViewTag `json:"tags,omitempty"`
	Users *map[string]ViewUser `json:"users,omitempty"`
}

// NewProjectProjectsResponseIncluded instantiates a new ProjectProjectsResponseIncluded object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewProjectProjectsResponseIncluded() *ProjectProjectsResponseIncluded {
	this := ProjectProjectsResponseIncluded{}
	return &this
}

// NewProjectProjectsResponseIncludedWithDefaults instantiates a new ProjectProjectsResponseIncluded object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewProjectProjectsResponseIncludedWithDefaults() *ProjectProjectsResponseIncluded {
	this := ProjectProjectsResponseIncluded{}
	return &this
}

// GetCompanies returns the Companies field value if set, zero value otherwise.
func (o *ProjectProjectsResponseIncluded) GetCompanies() map[string]ViewCompany {
	if o == nil || o.Companies == nil {
		var ret map[string]ViewCompany
		return ret
	}
	return *o.Companies
}

// GetCompaniesOk returns a tuple with the Companies field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ProjectProjectsResponseIncluded) GetCompaniesOk() (*map[string]ViewCompany, bool) {
	if o == nil || o.Companies == nil {
		return nil, false
	}
	return o.Companies, true
}

// HasCompanies returns a boolean if a field has been set.
func (o *ProjectProjectsResponseIncluded) HasCompanies() bool {
	if o != nil && o.Companies != nil {
		return true
	}

	return false
}

// SetCompanies gets a reference to the given map[string]ViewCompany and assigns it to the Companies field.
func (o *ProjectProjectsResponseIncluded) SetCompanies(v map[string]ViewCompany) {
	o.Companies = &v
}

// GetCustomfieldProjects returns the CustomfieldProjects field value if set, zero value otherwise.
func (o *ProjectProjectsResponseIncluded) GetCustomfieldProjects() map[string]ViewCustomFieldProject {
	if o == nil || o.CustomfieldProjects == nil {
		var ret map[string]ViewCustomFieldProject
		return ret
	}
	return *o.CustomfieldProjects
}

// GetCustomfieldProjectsOk returns a tuple with the CustomfieldProjects field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ProjectProjectsResponseIncluded) GetCustomfieldProjectsOk() (*map[string]ViewCustomFieldProject, bool) {
	if o == nil || o.CustomfieldProjects == nil {
		return nil, false
	}
	return o.CustomfieldProjects, true
}

// HasCustomfieldProjects returns a boolean if a field has been set.
func (o *ProjectProjectsResponseIncluded) HasCustomfieldProjects() bool {
	if o != nil && o.CustomfieldProjects != nil {
		return true
	}

	return false
}

// SetCustomfieldProjects gets a reference to the given map[string]ViewCustomFieldProject and assigns it to the CustomfieldProjects field.
func (o *ProjectProjectsResponseIncluded) SetCustomfieldProjects(v map[string]ViewCustomFieldProject) {
	o.CustomfieldProjects = &v
}

// GetCustomfields returns the Customfields field value if set, zero value otherwise.
func (o *ProjectProjectsResponseIncluded) GetCustomfields() map[string]ViewCustomField {
	if o == nil || o.Customfields == nil {
		var ret map[string]ViewCustomField
		return ret
	}
	return *o.Customfields
}

// GetCustomfieldsOk returns a tuple with the Customfields field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ProjectProjectsResponseIncluded) GetCustomfieldsOk() (*map[string]ViewCustomField, bool) {
	if o == nil || o.Customfields == nil {
		return nil, false
	}
	return o.Customfields, true
}

// HasCustomfields returns a boolean if a field has been set.
func (o *ProjectProjectsResponseIncluded) HasCustomfields() bool {
	if o != nil && o.Customfields != nil {
		return true
	}

	return false
}

// SetCustomfields gets a reference to the given map[string]ViewCustomField and assigns it to the Customfields field.
func (o *ProjectProjectsResponseIncluded) SetCustomfields(v map[string]ViewCustomField) {
	o.Customfields = &v
}

// GetPortfolioBoards returns the PortfolioBoards field value if set, zero value otherwise.
func (o *ProjectProjectsResponseIncluded) GetPortfolioBoards() map[string]ViewPortfolioBoard {
	if o == nil || o.PortfolioBoards == nil {
		var ret map[string]ViewPortfolioBoard
		return ret
	}
	return *o.PortfolioBoards
}

// GetPortfolioBoardsOk returns a tuple with the PortfolioBoards field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ProjectProjectsResponseIncluded) GetPortfolioBoardsOk() (*map[string]ViewPortfolioBoard, bool) {
	if o == nil || o.PortfolioBoards == nil {
		return nil, false
	}
	return o.PortfolioBoards, true
}

// HasPortfolioBoards returns a boolean if a field has been set.
func (o *ProjectProjectsResponseIncluded) HasPortfolioBoards() bool {
	if o != nil && o.PortfolioBoards != nil {
		return true
	}

	return false
}

// SetPortfolioBoards gets a reference to the given map[string]ViewPortfolioBoard and assigns it to the PortfolioBoards field.
func (o *ProjectProjectsResponseIncluded) SetPortfolioBoards(v map[string]ViewPortfolioBoard) {
	o.PortfolioBoards = &v
}

// GetPortfolioCards returns the PortfolioCards field value if set, zero value otherwise.
func (o *ProjectProjectsResponseIncluded) GetPortfolioCards() map[string]ViewPortfolioCard {
	if o == nil || o.PortfolioCards == nil {
		var ret map[string]ViewPortfolioCard
		return ret
	}
	return *o.PortfolioCards
}

// GetPortfolioCardsOk returns a tuple with the PortfolioCards field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ProjectProjectsResponseIncluded) GetPortfolioCardsOk() (*map[string]ViewPortfolioCard, bool) {
	if o == nil || o.PortfolioCards == nil {
		return nil, false
	}
	return o.PortfolioCards, true
}

// HasPortfolioCards returns a boolean if a field has been set.
func (o *ProjectProjectsResponseIncluded) HasPortfolioCards() bool {
	if o != nil && o.PortfolioCards != nil {
		return true
	}

	return false
}

// SetPortfolioCards gets a reference to the given map[string]ViewPortfolioCard and assigns it to the PortfolioCards field.
func (o *ProjectProjectsResponseIncluded) SetPortfolioCards(v map[string]ViewPortfolioCard) {
	o.PortfolioCards = &v
}

// GetPortfolioColumns returns the PortfolioColumns field value if set, zero value otherwise.
func (o *ProjectProjectsResponseIncluded) GetPortfolioColumns() map[string]ViewPortfolioColumn {
	if o == nil || o.PortfolioColumns == nil {
		var ret map[string]ViewPortfolioColumn
		return ret
	}
	return *o.PortfolioColumns
}

// GetPortfolioColumnsOk returns a tuple with the PortfolioColumns field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ProjectProjectsResponseIncluded) GetPortfolioColumnsOk() (*map[string]ViewPortfolioColumn, bool) {
	if o == nil || o.PortfolioColumns == nil {
		return nil, false
	}
	return o.PortfolioColumns, true
}

// HasPortfolioColumns returns a boolean if a field has been set.
func (o *ProjectProjectsResponseIncluded) HasPortfolioColumns() bool {
	if o != nil && o.PortfolioColumns != nil {
		return true
	}

	return false
}

// SetPortfolioColumns gets a reference to the given map[string]ViewPortfolioColumn and assigns it to the PortfolioColumns field.
func (o *ProjectProjectsResponseIncluded) SetPortfolioColumns(v map[string]ViewPortfolioColumn) {
	o.PortfolioColumns = &v
}

// GetProjectBudgets returns the ProjectBudgets field value if set, zero value otherwise.
func (o *ProjectProjectsResponseIncluded) GetProjectBudgets() map[string]ViewProjectBudget {
	if o == nil || o.ProjectBudgets == nil {
		var ret map[string]ViewProjectBudget
		return ret
	}
	return *o.ProjectBudgets
}

// GetProjectBudgetsOk returns a tuple with the ProjectBudgets field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ProjectProjectsResponseIncluded) GetProjectBudgetsOk() (*map[string]ViewProjectBudget, bool) {
	if o == nil || o.ProjectBudgets == nil {
		return nil, false
	}
	return o.ProjectBudgets, true
}

// HasProjectBudgets returns a boolean if a field has been set.
func (o *ProjectProjectsResponseIncluded) HasProjectBudgets() bool {
	if o != nil && o.ProjectBudgets != nil {
		return true
	}

	return false
}

// SetProjectBudgets gets a reference to the given map[string]ViewProjectBudget and assigns it to the ProjectBudgets field.
func (o *ProjectProjectsResponseIncluded) SetProjectBudgets(v map[string]ViewProjectBudget) {
	o.ProjectBudgets = &v
}

// GetProjectCategories returns the ProjectCategories field value if set, zero value otherwise.
func (o *ProjectProjectsResponseIncluded) GetProjectCategories() map[string]ViewProjectCategory {
	if o == nil || o.ProjectCategories == nil {
		var ret map[string]ViewProjectCategory
		return ret
	}
	return *o.ProjectCategories
}

// GetProjectCategoriesOk returns a tuple with the ProjectCategories field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ProjectProjectsResponseIncluded) GetProjectCategoriesOk() (*map[string]ViewProjectCategory, bool) {
	if o == nil || o.ProjectCategories == nil {
		return nil, false
	}
	return o.ProjectCategories, true
}

// HasProjectCategories returns a boolean if a field has been set.
func (o *ProjectProjectsResponseIncluded) HasProjectCategories() bool {
	if o != nil && o.ProjectCategories != nil {
		return true
	}

	return false
}

// SetProjectCategories gets a reference to the given map[string]ViewProjectCategory and assigns it to the ProjectCategories field.
func (o *ProjectProjectsResponseIncluded) SetProjectCategories(v map[string]ViewProjectCategory) {
	o.ProjectCategories = &v
}

// GetProjectTaskStats returns the ProjectTaskStats field value if set, zero value otherwise.
func (o *ProjectProjectsResponseIncluded) GetProjectTaskStats() map[string]ViewProjectTaskStats {
	if o == nil || o.ProjectTaskStats == nil {
		var ret map[string]ViewProjectTaskStats
		return ret
	}
	return *o.ProjectTaskStats
}

// GetProjectTaskStatsOk returns a tuple with the ProjectTaskStats field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ProjectProjectsResponseIncluded) GetProjectTaskStatsOk() (*map[string]ViewProjectTaskStats, bool) {
	if o == nil || o.ProjectTaskStats == nil {
		return nil, false
	}
	return o.ProjectTaskStats, true
}

// HasProjectTaskStats returns a boolean if a field has been set.
func (o *ProjectProjectsResponseIncluded) HasProjectTaskStats() bool {
	if o != nil && o.ProjectTaskStats != nil {
		return true
	}

	return false
}

// SetProjectTaskStats gets a reference to the given map[string]ViewProjectTaskStats and assigns it to the ProjectTaskStats field.
func (o *ProjectProjectsResponseIncluded) SetProjectTaskStats(v map[string]ViewProjectTaskStats) {
	o.ProjectTaskStats = &v
}

// GetProjectUpdates returns the ProjectUpdates field value if set, zero value otherwise.
func (o *ProjectProjectsResponseIncluded) GetProjectUpdates() map[string]ViewProjectUpdate {
	if o == nil || o.ProjectUpdates == nil {
		var ret map[string]ViewProjectUpdate
		return ret
	}
	return *o.ProjectUpdates
}

// GetProjectUpdatesOk returns a tuple with the ProjectUpdates field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ProjectProjectsResponseIncluded) GetProjectUpdatesOk() (*map[string]ViewProjectUpdate, bool) {
	if o == nil || o.ProjectUpdates == nil {
		return nil, false
	}
	return o.ProjectUpdates, true
}

// HasProjectUpdates returns a boolean if a field has been set.
func (o *ProjectProjectsResponseIncluded) HasProjectUpdates() bool {
	if o != nil && o.ProjectUpdates != nil {
		return true
	}

	return false
}

// SetProjectUpdates gets a reference to the given map[string]ViewProjectUpdate and assigns it to the ProjectUpdates field.
func (o *ProjectProjectsResponseIncluded) SetProjectUpdates(v map[string]ViewProjectUpdate) {
	o.ProjectUpdates = &v
}

// GetTags returns the Tags field value if set, zero value otherwise.
func (o *ProjectProjectsResponseIncluded) GetTags() map[string]ViewTag {
	if o == nil || o.Tags == nil {
		var ret map[string]ViewTag
		return ret
	}
	return *o.Tags
}

// GetTagsOk returns a tuple with the Tags field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ProjectProjectsResponseIncluded) GetTagsOk() (*map[string]ViewTag, bool) {
	if o == nil || o.Tags == nil {
		return nil, false
	}
	return o.Tags, true
}

// HasTags returns a boolean if a field has been set.
func (o *ProjectProjectsResponseIncluded) HasTags() bool {
	if o != nil && o.Tags != nil {
		return true
	}

	return false
}

// SetTags gets a reference to the given map[string]ViewTag and assigns it to the Tags field.
func (o *ProjectProjectsResponseIncluded) SetTags(v map[string]ViewTag) {
	o.Tags = &v
}

// GetUsers returns the Users field value if set, zero value otherwise.
func (o *ProjectProjectsResponseIncluded) GetUsers() map[string]ViewUser {
	if o == nil || o.Users == nil {
		var ret map[string]ViewUser
		return ret
	}
	return *o.Users
}

// GetUsersOk returns a tuple with the Users field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ProjectProjectsResponseIncluded) GetUsersOk() (*map[string]ViewUser, bool) {
	if o == nil || o.Users == nil {
		return nil, false
	}
	return o.Users, true
}

// HasUsers returns a boolean if a field has been set.
func (o *ProjectProjectsResponseIncluded) HasUsers() bool {
	if o != nil && o.Users != nil {
		return true
	}

	return false
}

// SetUsers gets a reference to the given map[string]ViewUser and assigns it to the Users field.
func (o *ProjectProjectsResponseIncluded) SetUsers(v map[string]ViewUser) {
	o.Users = &v
}

func (o ProjectProjectsResponseIncluded) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.Companies != nil {
		toSerialize["companies"] = o.Companies
	}
	if o.CustomfieldProjects != nil {
		toSerialize["customfieldProjects"] = o.CustomfieldProjects
	}
	if o.Customfields != nil {
		toSerialize["customfields"] = o.Customfields
	}
	if o.PortfolioBoards != nil {
		toSerialize["portfolioBoards"] = o.PortfolioBoards
	}
	if o.PortfolioCards != nil {
		toSerialize["portfolioCards"] = o.PortfolioCards
	}
	if o.PortfolioColumns != nil {
		toSerialize["portfolioColumns"] = o.PortfolioColumns
	}
	if o.ProjectBudgets != nil {
		toSerialize["projectBudgets"] = o.ProjectBudgets
	}
	if o.ProjectCategories != nil {
		toSerialize["projectCategories"] = o.ProjectCategories
	}
	if o.ProjectTaskStats != nil {
		toSerialize["projectTaskStats"] = o.ProjectTaskStats
	}
	if o.ProjectUpdates != nil {
		toSerialize["projectUpdates"] = o.ProjectUpdates
	}
	if o.Tags != nil {
		toSerialize["tags"] = o.Tags
	}
	if o.Users != nil {
		toSerialize["users"] = o.Users
	}
	return json.Marshal(toSerialize)
}

type NullableProjectProjectsResponseIncluded struct {
	value *ProjectProjectsResponseIncluded
	isSet bool
}

func (v NullableProjectProjectsResponseIncluded) Get() *ProjectProjectsResponseIncluded {
	return v.value
}

func (v *NullableProjectProjectsResponseIncluded) Set(val *ProjectProjectsResponseIncluded) {
	v.value = val
	v.isSet = true
}

func (v NullableProjectProjectsResponseIncluded) IsSet() bool {
	return v.isSet
}

func (v *NullableProjectProjectsResponseIncluded) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableProjectProjectsResponseIncluded(val *ProjectProjectsResponseIncluded) *NullableProjectProjectsResponseIncluded {
	return &NullableProjectProjectsResponseIncluded{value: val, isSet: true}
}

func (v NullableProjectProjectsResponseIncluded) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableProjectProjectsResponseIncluded) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


