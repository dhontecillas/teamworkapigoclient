/*
 * Teamwork Projects API
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * API version: 
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package pmv1

import (
	"encoding/json"
)

// InlineResponse200115 struct for InlineResponse200115
type InlineResponse200115 struct {
	Attachments *[]map[string]interface{} `json:"attachments,omitempty"`
	AttachmentsCount *string `json:"attachments-count,omitempty"`
	Author *InlineResponse200115Author `json:"author,omitempty"`
	Body *string `json:"body,omitempty"`
	CanDelete *bool `json:"canDelete,omitempty"`
	CanEditContents *bool `json:"canEditContents,omitempty"`
	Category *InlineResponse2002Column `json:"category,omitempty"`
	CommentsCount *string `json:"commentsCount,omitempty"`
	Company *InlineResponse200115Company `json:"company,omitempty"`
	ContentType *string `json:"contentType,omitempty"`
	ContributingUsers *[]InlineResponse200115ContributingUsers `json:"contributingUsers,omitempty"`
	FollowerIds *string `json:"followerIds,omitempty"`
	HasEditExpired *bool `json:"hasEditExpired,omitempty"`
	Id *string `json:"id,omitempty"`
	IsOriginal *string `json:"isOriginal,omitempty"`
	IsRead *string `json:"isRead,omitempty"`
	LastChangedOn *string `json:"lastChangedOn,omitempty"`
	LastCommentDate *string `json:"lastCommentDate,omitempty"`
	MessageStatus *string `json:"messageStatus,omitempty"`
	NumNotified *string `json:"numNotified,omitempty"`
	PostId *string `json:"postId,omitempty"`
	PostStatus *string `json:"postStatus,omitempty"`
	PostedOn *string `json:"postedOn,omitempty"`
	Private *string `json:"private,omitempty"`
	Project *InlineResponse2002People12345Company `json:"project,omitempty"`
	Reactions *InlineResponse2008Reactions `json:"reactions,omitempty"`
	Tags *[]map[string]interface{} `json:"tags,omitempty"`
	TextBody *string `json:"textBody,omitempty"`
	Title *string `json:"title,omitempty"`
	UserDisplayPostedDate *string `json:"userDisplayPostedDate,omitempty"`
	UserDisplayPostedTime *string `json:"userDisplayPostedTime,omitempty"`
	UserFollowing *bool `json:"userFollowing,omitempty"`
}

// NewInlineResponse200115 instantiates a new InlineResponse200115 object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewInlineResponse200115() *InlineResponse200115 {
	this := InlineResponse200115{}
	return &this
}

// NewInlineResponse200115WithDefaults instantiates a new InlineResponse200115 object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewInlineResponse200115WithDefaults() *InlineResponse200115 {
	this := InlineResponse200115{}
	return &this
}

// GetAttachments returns the Attachments field value if set, zero value otherwise.
func (o *InlineResponse200115) GetAttachments() []map[string]interface{} {
	if o == nil || o.Attachments == nil {
		var ret []map[string]interface{}
		return ret
	}
	return *o.Attachments
}

// GetAttachmentsOk returns a tuple with the Attachments field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InlineResponse200115) GetAttachmentsOk() (*[]map[string]interface{}, bool) {
	if o == nil || o.Attachments == nil {
		return nil, false
	}
	return o.Attachments, true
}

// HasAttachments returns a boolean if a field has been set.
func (o *InlineResponse200115) HasAttachments() bool {
	if o != nil && o.Attachments != nil {
		return true
	}

	return false
}

// SetAttachments gets a reference to the given []map[string]interface{} and assigns it to the Attachments field.
func (o *InlineResponse200115) SetAttachments(v []map[string]interface{}) {
	o.Attachments = &v
}

// GetAttachmentsCount returns the AttachmentsCount field value if set, zero value otherwise.
func (o *InlineResponse200115) GetAttachmentsCount() string {
	if o == nil || o.AttachmentsCount == nil {
		var ret string
		return ret
	}
	return *o.AttachmentsCount
}

// GetAttachmentsCountOk returns a tuple with the AttachmentsCount field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InlineResponse200115) GetAttachmentsCountOk() (*string, bool) {
	if o == nil || o.AttachmentsCount == nil {
		return nil, false
	}
	return o.AttachmentsCount, true
}

// HasAttachmentsCount returns a boolean if a field has been set.
func (o *InlineResponse200115) HasAttachmentsCount() bool {
	if o != nil && o.AttachmentsCount != nil {
		return true
	}

	return false
}

// SetAttachmentsCount gets a reference to the given string and assigns it to the AttachmentsCount field.
func (o *InlineResponse200115) SetAttachmentsCount(v string) {
	o.AttachmentsCount = &v
}

// GetAuthor returns the Author field value if set, zero value otherwise.
func (o *InlineResponse200115) GetAuthor() InlineResponse200115Author {
	if o == nil || o.Author == nil {
		var ret InlineResponse200115Author
		return ret
	}
	return *o.Author
}

// GetAuthorOk returns a tuple with the Author field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InlineResponse200115) GetAuthorOk() (*InlineResponse200115Author, bool) {
	if o == nil || o.Author == nil {
		return nil, false
	}
	return o.Author, true
}

// HasAuthor returns a boolean if a field has been set.
func (o *InlineResponse200115) HasAuthor() bool {
	if o != nil && o.Author != nil {
		return true
	}

	return false
}

// SetAuthor gets a reference to the given InlineResponse200115Author and assigns it to the Author field.
func (o *InlineResponse200115) SetAuthor(v InlineResponse200115Author) {
	o.Author = &v
}

// GetBody returns the Body field value if set, zero value otherwise.
func (o *InlineResponse200115) GetBody() string {
	if o == nil || o.Body == nil {
		var ret string
		return ret
	}
	return *o.Body
}

// GetBodyOk returns a tuple with the Body field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InlineResponse200115) GetBodyOk() (*string, bool) {
	if o == nil || o.Body == nil {
		return nil, false
	}
	return o.Body, true
}

// HasBody returns a boolean if a field has been set.
func (o *InlineResponse200115) HasBody() bool {
	if o != nil && o.Body != nil {
		return true
	}

	return false
}

// SetBody gets a reference to the given string and assigns it to the Body field.
func (o *InlineResponse200115) SetBody(v string) {
	o.Body = &v
}

// GetCanDelete returns the CanDelete field value if set, zero value otherwise.
func (o *InlineResponse200115) GetCanDelete() bool {
	if o == nil || o.CanDelete == nil {
		var ret bool
		return ret
	}
	return *o.CanDelete
}

// GetCanDeleteOk returns a tuple with the CanDelete field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InlineResponse200115) GetCanDeleteOk() (*bool, bool) {
	if o == nil || o.CanDelete == nil {
		return nil, false
	}
	return o.CanDelete, true
}

// HasCanDelete returns a boolean if a field has been set.
func (o *InlineResponse200115) HasCanDelete() bool {
	if o != nil && o.CanDelete != nil {
		return true
	}

	return false
}

// SetCanDelete gets a reference to the given bool and assigns it to the CanDelete field.
func (o *InlineResponse200115) SetCanDelete(v bool) {
	o.CanDelete = &v
}

// GetCanEditContents returns the CanEditContents field value if set, zero value otherwise.
func (o *InlineResponse200115) GetCanEditContents() bool {
	if o == nil || o.CanEditContents == nil {
		var ret bool
		return ret
	}
	return *o.CanEditContents
}

// GetCanEditContentsOk returns a tuple with the CanEditContents field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InlineResponse200115) GetCanEditContentsOk() (*bool, bool) {
	if o == nil || o.CanEditContents == nil {
		return nil, false
	}
	return o.CanEditContents, true
}

// HasCanEditContents returns a boolean if a field has been set.
func (o *InlineResponse200115) HasCanEditContents() bool {
	if o != nil && o.CanEditContents != nil {
		return true
	}

	return false
}

// SetCanEditContents gets a reference to the given bool and assigns it to the CanEditContents field.
func (o *InlineResponse200115) SetCanEditContents(v bool) {
	o.CanEditContents = &v
}

// GetCategory returns the Category field value if set, zero value otherwise.
func (o *InlineResponse200115) GetCategory() InlineResponse2002Column {
	if o == nil || o.Category == nil {
		var ret InlineResponse2002Column
		return ret
	}
	return *o.Category
}

// GetCategoryOk returns a tuple with the Category field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InlineResponse200115) GetCategoryOk() (*InlineResponse2002Column, bool) {
	if o == nil || o.Category == nil {
		return nil, false
	}
	return o.Category, true
}

// HasCategory returns a boolean if a field has been set.
func (o *InlineResponse200115) HasCategory() bool {
	if o != nil && o.Category != nil {
		return true
	}

	return false
}

// SetCategory gets a reference to the given InlineResponse2002Column and assigns it to the Category field.
func (o *InlineResponse200115) SetCategory(v InlineResponse2002Column) {
	o.Category = &v
}

// GetCommentsCount returns the CommentsCount field value if set, zero value otherwise.
func (o *InlineResponse200115) GetCommentsCount() string {
	if o == nil || o.CommentsCount == nil {
		var ret string
		return ret
	}
	return *o.CommentsCount
}

// GetCommentsCountOk returns a tuple with the CommentsCount field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InlineResponse200115) GetCommentsCountOk() (*string, bool) {
	if o == nil || o.CommentsCount == nil {
		return nil, false
	}
	return o.CommentsCount, true
}

// HasCommentsCount returns a boolean if a field has been set.
func (o *InlineResponse200115) HasCommentsCount() bool {
	if o != nil && o.CommentsCount != nil {
		return true
	}

	return false
}

// SetCommentsCount gets a reference to the given string and assigns it to the CommentsCount field.
func (o *InlineResponse200115) SetCommentsCount(v string) {
	o.CommentsCount = &v
}

// GetCompany returns the Company field value if set, zero value otherwise.
func (o *InlineResponse200115) GetCompany() InlineResponse200115Company {
	if o == nil || o.Company == nil {
		var ret InlineResponse200115Company
		return ret
	}
	return *o.Company
}

// GetCompanyOk returns a tuple with the Company field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InlineResponse200115) GetCompanyOk() (*InlineResponse200115Company, bool) {
	if o == nil || o.Company == nil {
		return nil, false
	}
	return o.Company, true
}

// HasCompany returns a boolean if a field has been set.
func (o *InlineResponse200115) HasCompany() bool {
	if o != nil && o.Company != nil {
		return true
	}

	return false
}

// SetCompany gets a reference to the given InlineResponse200115Company and assigns it to the Company field.
func (o *InlineResponse200115) SetCompany(v InlineResponse200115Company) {
	o.Company = &v
}

// GetContentType returns the ContentType field value if set, zero value otherwise.
func (o *InlineResponse200115) GetContentType() string {
	if o == nil || o.ContentType == nil {
		var ret string
		return ret
	}
	return *o.ContentType
}

// GetContentTypeOk returns a tuple with the ContentType field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InlineResponse200115) GetContentTypeOk() (*string, bool) {
	if o == nil || o.ContentType == nil {
		return nil, false
	}
	return o.ContentType, true
}

// HasContentType returns a boolean if a field has been set.
func (o *InlineResponse200115) HasContentType() bool {
	if o != nil && o.ContentType != nil {
		return true
	}

	return false
}

// SetContentType gets a reference to the given string and assigns it to the ContentType field.
func (o *InlineResponse200115) SetContentType(v string) {
	o.ContentType = &v
}

// GetContributingUsers returns the ContributingUsers field value if set, zero value otherwise.
func (o *InlineResponse200115) GetContributingUsers() []InlineResponse200115ContributingUsers {
	if o == nil || o.ContributingUsers == nil {
		var ret []InlineResponse200115ContributingUsers
		return ret
	}
	return *o.ContributingUsers
}

// GetContributingUsersOk returns a tuple with the ContributingUsers field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InlineResponse200115) GetContributingUsersOk() (*[]InlineResponse200115ContributingUsers, bool) {
	if o == nil || o.ContributingUsers == nil {
		return nil, false
	}
	return o.ContributingUsers, true
}

// HasContributingUsers returns a boolean if a field has been set.
func (o *InlineResponse200115) HasContributingUsers() bool {
	if o != nil && o.ContributingUsers != nil {
		return true
	}

	return false
}

// SetContributingUsers gets a reference to the given []InlineResponse200115ContributingUsers and assigns it to the ContributingUsers field.
func (o *InlineResponse200115) SetContributingUsers(v []InlineResponse200115ContributingUsers) {
	o.ContributingUsers = &v
}

// GetFollowerIds returns the FollowerIds field value if set, zero value otherwise.
func (o *InlineResponse200115) GetFollowerIds() string {
	if o == nil || o.FollowerIds == nil {
		var ret string
		return ret
	}
	return *o.FollowerIds
}

// GetFollowerIdsOk returns a tuple with the FollowerIds field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InlineResponse200115) GetFollowerIdsOk() (*string, bool) {
	if o == nil || o.FollowerIds == nil {
		return nil, false
	}
	return o.FollowerIds, true
}

// HasFollowerIds returns a boolean if a field has been set.
func (o *InlineResponse200115) HasFollowerIds() bool {
	if o != nil && o.FollowerIds != nil {
		return true
	}

	return false
}

// SetFollowerIds gets a reference to the given string and assigns it to the FollowerIds field.
func (o *InlineResponse200115) SetFollowerIds(v string) {
	o.FollowerIds = &v
}

// GetHasEditExpired returns the HasEditExpired field value if set, zero value otherwise.
func (o *InlineResponse200115) GetHasEditExpired() bool {
	if o == nil || o.HasEditExpired == nil {
		var ret bool
		return ret
	}
	return *o.HasEditExpired
}

// GetHasEditExpiredOk returns a tuple with the HasEditExpired field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InlineResponse200115) GetHasEditExpiredOk() (*bool, bool) {
	if o == nil || o.HasEditExpired == nil {
		return nil, false
	}
	return o.HasEditExpired, true
}

// HasHasEditExpired returns a boolean if a field has been set.
func (o *InlineResponse200115) HasHasEditExpired() bool {
	if o != nil && o.HasEditExpired != nil {
		return true
	}

	return false
}

// SetHasEditExpired gets a reference to the given bool and assigns it to the HasEditExpired field.
func (o *InlineResponse200115) SetHasEditExpired(v bool) {
	o.HasEditExpired = &v
}

// GetId returns the Id field value if set, zero value otherwise.
func (o *InlineResponse200115) GetId() string {
	if o == nil || o.Id == nil {
		var ret string
		return ret
	}
	return *o.Id
}

// GetIdOk returns a tuple with the Id field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InlineResponse200115) GetIdOk() (*string, bool) {
	if o == nil || o.Id == nil {
		return nil, false
	}
	return o.Id, true
}

// HasId returns a boolean if a field has been set.
func (o *InlineResponse200115) HasId() bool {
	if o != nil && o.Id != nil {
		return true
	}

	return false
}

// SetId gets a reference to the given string and assigns it to the Id field.
func (o *InlineResponse200115) SetId(v string) {
	o.Id = &v
}

// GetIsOriginal returns the IsOriginal field value if set, zero value otherwise.
func (o *InlineResponse200115) GetIsOriginal() string {
	if o == nil || o.IsOriginal == nil {
		var ret string
		return ret
	}
	return *o.IsOriginal
}

// GetIsOriginalOk returns a tuple with the IsOriginal field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InlineResponse200115) GetIsOriginalOk() (*string, bool) {
	if o == nil || o.IsOriginal == nil {
		return nil, false
	}
	return o.IsOriginal, true
}

// HasIsOriginal returns a boolean if a field has been set.
func (o *InlineResponse200115) HasIsOriginal() bool {
	if o != nil && o.IsOriginal != nil {
		return true
	}

	return false
}

// SetIsOriginal gets a reference to the given string and assigns it to the IsOriginal field.
func (o *InlineResponse200115) SetIsOriginal(v string) {
	o.IsOriginal = &v
}

// GetIsRead returns the IsRead field value if set, zero value otherwise.
func (o *InlineResponse200115) GetIsRead() string {
	if o == nil || o.IsRead == nil {
		var ret string
		return ret
	}
	return *o.IsRead
}

// GetIsReadOk returns a tuple with the IsRead field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InlineResponse200115) GetIsReadOk() (*string, bool) {
	if o == nil || o.IsRead == nil {
		return nil, false
	}
	return o.IsRead, true
}

// HasIsRead returns a boolean if a field has been set.
func (o *InlineResponse200115) HasIsRead() bool {
	if o != nil && o.IsRead != nil {
		return true
	}

	return false
}

// SetIsRead gets a reference to the given string and assigns it to the IsRead field.
func (o *InlineResponse200115) SetIsRead(v string) {
	o.IsRead = &v
}

// GetLastChangedOn returns the LastChangedOn field value if set, zero value otherwise.
func (o *InlineResponse200115) GetLastChangedOn() string {
	if o == nil || o.LastChangedOn == nil {
		var ret string
		return ret
	}
	return *o.LastChangedOn
}

// GetLastChangedOnOk returns a tuple with the LastChangedOn field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InlineResponse200115) GetLastChangedOnOk() (*string, bool) {
	if o == nil || o.LastChangedOn == nil {
		return nil, false
	}
	return o.LastChangedOn, true
}

// HasLastChangedOn returns a boolean if a field has been set.
func (o *InlineResponse200115) HasLastChangedOn() bool {
	if o != nil && o.LastChangedOn != nil {
		return true
	}

	return false
}

// SetLastChangedOn gets a reference to the given string and assigns it to the LastChangedOn field.
func (o *InlineResponse200115) SetLastChangedOn(v string) {
	o.LastChangedOn = &v
}

// GetLastCommentDate returns the LastCommentDate field value if set, zero value otherwise.
func (o *InlineResponse200115) GetLastCommentDate() string {
	if o == nil || o.LastCommentDate == nil {
		var ret string
		return ret
	}
	return *o.LastCommentDate
}

// GetLastCommentDateOk returns a tuple with the LastCommentDate field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InlineResponse200115) GetLastCommentDateOk() (*string, bool) {
	if o == nil || o.LastCommentDate == nil {
		return nil, false
	}
	return o.LastCommentDate, true
}

// HasLastCommentDate returns a boolean if a field has been set.
func (o *InlineResponse200115) HasLastCommentDate() bool {
	if o != nil && o.LastCommentDate != nil {
		return true
	}

	return false
}

// SetLastCommentDate gets a reference to the given string and assigns it to the LastCommentDate field.
func (o *InlineResponse200115) SetLastCommentDate(v string) {
	o.LastCommentDate = &v
}

// GetMessageStatus returns the MessageStatus field value if set, zero value otherwise.
func (o *InlineResponse200115) GetMessageStatus() string {
	if o == nil || o.MessageStatus == nil {
		var ret string
		return ret
	}
	return *o.MessageStatus
}

// GetMessageStatusOk returns a tuple with the MessageStatus field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InlineResponse200115) GetMessageStatusOk() (*string, bool) {
	if o == nil || o.MessageStatus == nil {
		return nil, false
	}
	return o.MessageStatus, true
}

// HasMessageStatus returns a boolean if a field has been set.
func (o *InlineResponse200115) HasMessageStatus() bool {
	if o != nil && o.MessageStatus != nil {
		return true
	}

	return false
}

// SetMessageStatus gets a reference to the given string and assigns it to the MessageStatus field.
func (o *InlineResponse200115) SetMessageStatus(v string) {
	o.MessageStatus = &v
}

// GetNumNotified returns the NumNotified field value if set, zero value otherwise.
func (o *InlineResponse200115) GetNumNotified() string {
	if o == nil || o.NumNotified == nil {
		var ret string
		return ret
	}
	return *o.NumNotified
}

// GetNumNotifiedOk returns a tuple with the NumNotified field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InlineResponse200115) GetNumNotifiedOk() (*string, bool) {
	if o == nil || o.NumNotified == nil {
		return nil, false
	}
	return o.NumNotified, true
}

// HasNumNotified returns a boolean if a field has been set.
func (o *InlineResponse200115) HasNumNotified() bool {
	if o != nil && o.NumNotified != nil {
		return true
	}

	return false
}

// SetNumNotified gets a reference to the given string and assigns it to the NumNotified field.
func (o *InlineResponse200115) SetNumNotified(v string) {
	o.NumNotified = &v
}

// GetPostId returns the PostId field value if set, zero value otherwise.
func (o *InlineResponse200115) GetPostId() string {
	if o == nil || o.PostId == nil {
		var ret string
		return ret
	}
	return *o.PostId
}

// GetPostIdOk returns a tuple with the PostId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InlineResponse200115) GetPostIdOk() (*string, bool) {
	if o == nil || o.PostId == nil {
		return nil, false
	}
	return o.PostId, true
}

// HasPostId returns a boolean if a field has been set.
func (o *InlineResponse200115) HasPostId() bool {
	if o != nil && o.PostId != nil {
		return true
	}

	return false
}

// SetPostId gets a reference to the given string and assigns it to the PostId field.
func (o *InlineResponse200115) SetPostId(v string) {
	o.PostId = &v
}

// GetPostStatus returns the PostStatus field value if set, zero value otherwise.
func (o *InlineResponse200115) GetPostStatus() string {
	if o == nil || o.PostStatus == nil {
		var ret string
		return ret
	}
	return *o.PostStatus
}

// GetPostStatusOk returns a tuple with the PostStatus field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InlineResponse200115) GetPostStatusOk() (*string, bool) {
	if o == nil || o.PostStatus == nil {
		return nil, false
	}
	return o.PostStatus, true
}

// HasPostStatus returns a boolean if a field has been set.
func (o *InlineResponse200115) HasPostStatus() bool {
	if o != nil && o.PostStatus != nil {
		return true
	}

	return false
}

// SetPostStatus gets a reference to the given string and assigns it to the PostStatus field.
func (o *InlineResponse200115) SetPostStatus(v string) {
	o.PostStatus = &v
}

// GetPostedOn returns the PostedOn field value if set, zero value otherwise.
func (o *InlineResponse200115) GetPostedOn() string {
	if o == nil || o.PostedOn == nil {
		var ret string
		return ret
	}
	return *o.PostedOn
}

// GetPostedOnOk returns a tuple with the PostedOn field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InlineResponse200115) GetPostedOnOk() (*string, bool) {
	if o == nil || o.PostedOn == nil {
		return nil, false
	}
	return o.PostedOn, true
}

// HasPostedOn returns a boolean if a field has been set.
func (o *InlineResponse200115) HasPostedOn() bool {
	if o != nil && o.PostedOn != nil {
		return true
	}

	return false
}

// SetPostedOn gets a reference to the given string and assigns it to the PostedOn field.
func (o *InlineResponse200115) SetPostedOn(v string) {
	o.PostedOn = &v
}

// GetPrivate returns the Private field value if set, zero value otherwise.
func (o *InlineResponse200115) GetPrivate() string {
	if o == nil || o.Private == nil {
		var ret string
		return ret
	}
	return *o.Private
}

// GetPrivateOk returns a tuple with the Private field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InlineResponse200115) GetPrivateOk() (*string, bool) {
	if o == nil || o.Private == nil {
		return nil, false
	}
	return o.Private, true
}

// HasPrivate returns a boolean if a field has been set.
func (o *InlineResponse200115) HasPrivate() bool {
	if o != nil && o.Private != nil {
		return true
	}

	return false
}

// SetPrivate gets a reference to the given string and assigns it to the Private field.
func (o *InlineResponse200115) SetPrivate(v string) {
	o.Private = &v
}

// GetProject returns the Project field value if set, zero value otherwise.
func (o *InlineResponse200115) GetProject() InlineResponse2002People12345Company {
	if o == nil || o.Project == nil {
		var ret InlineResponse2002People12345Company
		return ret
	}
	return *o.Project
}

// GetProjectOk returns a tuple with the Project field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InlineResponse200115) GetProjectOk() (*InlineResponse2002People12345Company, bool) {
	if o == nil || o.Project == nil {
		return nil, false
	}
	return o.Project, true
}

// HasProject returns a boolean if a field has been set.
func (o *InlineResponse200115) HasProject() bool {
	if o != nil && o.Project != nil {
		return true
	}

	return false
}

// SetProject gets a reference to the given InlineResponse2002People12345Company and assigns it to the Project field.
func (o *InlineResponse200115) SetProject(v InlineResponse2002People12345Company) {
	o.Project = &v
}

// GetReactions returns the Reactions field value if set, zero value otherwise.
func (o *InlineResponse200115) GetReactions() InlineResponse2008Reactions {
	if o == nil || o.Reactions == nil {
		var ret InlineResponse2008Reactions
		return ret
	}
	return *o.Reactions
}

// GetReactionsOk returns a tuple with the Reactions field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InlineResponse200115) GetReactionsOk() (*InlineResponse2008Reactions, bool) {
	if o == nil || o.Reactions == nil {
		return nil, false
	}
	return o.Reactions, true
}

// HasReactions returns a boolean if a field has been set.
func (o *InlineResponse200115) HasReactions() bool {
	if o != nil && o.Reactions != nil {
		return true
	}

	return false
}

// SetReactions gets a reference to the given InlineResponse2008Reactions and assigns it to the Reactions field.
func (o *InlineResponse200115) SetReactions(v InlineResponse2008Reactions) {
	o.Reactions = &v
}

// GetTags returns the Tags field value if set, zero value otherwise.
func (o *InlineResponse200115) GetTags() []map[string]interface{} {
	if o == nil || o.Tags == nil {
		var ret []map[string]interface{}
		return ret
	}
	return *o.Tags
}

// GetTagsOk returns a tuple with the Tags field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InlineResponse200115) GetTagsOk() (*[]map[string]interface{}, bool) {
	if o == nil || o.Tags == nil {
		return nil, false
	}
	return o.Tags, true
}

// HasTags returns a boolean if a field has been set.
func (o *InlineResponse200115) HasTags() bool {
	if o != nil && o.Tags != nil {
		return true
	}

	return false
}

// SetTags gets a reference to the given []map[string]interface{} and assigns it to the Tags field.
func (o *InlineResponse200115) SetTags(v []map[string]interface{}) {
	o.Tags = &v
}

// GetTextBody returns the TextBody field value if set, zero value otherwise.
func (o *InlineResponse200115) GetTextBody() string {
	if o == nil || o.TextBody == nil {
		var ret string
		return ret
	}
	return *o.TextBody
}

// GetTextBodyOk returns a tuple with the TextBody field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InlineResponse200115) GetTextBodyOk() (*string, bool) {
	if o == nil || o.TextBody == nil {
		return nil, false
	}
	return o.TextBody, true
}

// HasTextBody returns a boolean if a field has been set.
func (o *InlineResponse200115) HasTextBody() bool {
	if o != nil && o.TextBody != nil {
		return true
	}

	return false
}

// SetTextBody gets a reference to the given string and assigns it to the TextBody field.
func (o *InlineResponse200115) SetTextBody(v string) {
	o.TextBody = &v
}

// GetTitle returns the Title field value if set, zero value otherwise.
func (o *InlineResponse200115) GetTitle() string {
	if o == nil || o.Title == nil {
		var ret string
		return ret
	}
	return *o.Title
}

// GetTitleOk returns a tuple with the Title field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InlineResponse200115) GetTitleOk() (*string, bool) {
	if o == nil || o.Title == nil {
		return nil, false
	}
	return o.Title, true
}

// HasTitle returns a boolean if a field has been set.
func (o *InlineResponse200115) HasTitle() bool {
	if o != nil && o.Title != nil {
		return true
	}

	return false
}

// SetTitle gets a reference to the given string and assigns it to the Title field.
func (o *InlineResponse200115) SetTitle(v string) {
	o.Title = &v
}

// GetUserDisplayPostedDate returns the UserDisplayPostedDate field value if set, zero value otherwise.
func (o *InlineResponse200115) GetUserDisplayPostedDate() string {
	if o == nil || o.UserDisplayPostedDate == nil {
		var ret string
		return ret
	}
	return *o.UserDisplayPostedDate
}

// GetUserDisplayPostedDateOk returns a tuple with the UserDisplayPostedDate field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InlineResponse200115) GetUserDisplayPostedDateOk() (*string, bool) {
	if o == nil || o.UserDisplayPostedDate == nil {
		return nil, false
	}
	return o.UserDisplayPostedDate, true
}

// HasUserDisplayPostedDate returns a boolean if a field has been set.
func (o *InlineResponse200115) HasUserDisplayPostedDate() bool {
	if o != nil && o.UserDisplayPostedDate != nil {
		return true
	}

	return false
}

// SetUserDisplayPostedDate gets a reference to the given string and assigns it to the UserDisplayPostedDate field.
func (o *InlineResponse200115) SetUserDisplayPostedDate(v string) {
	o.UserDisplayPostedDate = &v
}

// GetUserDisplayPostedTime returns the UserDisplayPostedTime field value if set, zero value otherwise.
func (o *InlineResponse200115) GetUserDisplayPostedTime() string {
	if o == nil || o.UserDisplayPostedTime == nil {
		var ret string
		return ret
	}
	return *o.UserDisplayPostedTime
}

// GetUserDisplayPostedTimeOk returns a tuple with the UserDisplayPostedTime field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InlineResponse200115) GetUserDisplayPostedTimeOk() (*string, bool) {
	if o == nil || o.UserDisplayPostedTime == nil {
		return nil, false
	}
	return o.UserDisplayPostedTime, true
}

// HasUserDisplayPostedTime returns a boolean if a field has been set.
func (o *InlineResponse200115) HasUserDisplayPostedTime() bool {
	if o != nil && o.UserDisplayPostedTime != nil {
		return true
	}

	return false
}

// SetUserDisplayPostedTime gets a reference to the given string and assigns it to the UserDisplayPostedTime field.
func (o *InlineResponse200115) SetUserDisplayPostedTime(v string) {
	o.UserDisplayPostedTime = &v
}

// GetUserFollowing returns the UserFollowing field value if set, zero value otherwise.
func (o *InlineResponse200115) GetUserFollowing() bool {
	if o == nil || o.UserFollowing == nil {
		var ret bool
		return ret
	}
	return *o.UserFollowing
}

// GetUserFollowingOk returns a tuple with the UserFollowing field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InlineResponse200115) GetUserFollowingOk() (*bool, bool) {
	if o == nil || o.UserFollowing == nil {
		return nil, false
	}
	return o.UserFollowing, true
}

// HasUserFollowing returns a boolean if a field has been set.
func (o *InlineResponse200115) HasUserFollowing() bool {
	if o != nil && o.UserFollowing != nil {
		return true
	}

	return false
}

// SetUserFollowing gets a reference to the given bool and assigns it to the UserFollowing field.
func (o *InlineResponse200115) SetUserFollowing(v bool) {
	o.UserFollowing = &v
}

func (o InlineResponse200115) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.Attachments != nil {
		toSerialize["attachments"] = o.Attachments
	}
	if o.AttachmentsCount != nil {
		toSerialize["attachments-count"] = o.AttachmentsCount
	}
	if o.Author != nil {
		toSerialize["author"] = o.Author
	}
	if o.Body != nil {
		toSerialize["body"] = o.Body
	}
	if o.CanDelete != nil {
		toSerialize["canDelete"] = o.CanDelete
	}
	if o.CanEditContents != nil {
		toSerialize["canEditContents"] = o.CanEditContents
	}
	if o.Category != nil {
		toSerialize["category"] = o.Category
	}
	if o.CommentsCount != nil {
		toSerialize["commentsCount"] = o.CommentsCount
	}
	if o.Company != nil {
		toSerialize["company"] = o.Company
	}
	if o.ContentType != nil {
		toSerialize["contentType"] = o.ContentType
	}
	if o.ContributingUsers != nil {
		toSerialize["contributingUsers"] = o.ContributingUsers
	}
	if o.FollowerIds != nil {
		toSerialize["followerIds"] = o.FollowerIds
	}
	if o.HasEditExpired != nil {
		toSerialize["hasEditExpired"] = o.HasEditExpired
	}
	if o.Id != nil {
		toSerialize["id"] = o.Id
	}
	if o.IsOriginal != nil {
		toSerialize["isOriginal"] = o.IsOriginal
	}
	if o.IsRead != nil {
		toSerialize["isRead"] = o.IsRead
	}
	if o.LastChangedOn != nil {
		toSerialize["lastChangedOn"] = o.LastChangedOn
	}
	if o.LastCommentDate != nil {
		toSerialize["lastCommentDate"] = o.LastCommentDate
	}
	if o.MessageStatus != nil {
		toSerialize["messageStatus"] = o.MessageStatus
	}
	if o.NumNotified != nil {
		toSerialize["numNotified"] = o.NumNotified
	}
	if o.PostId != nil {
		toSerialize["postId"] = o.PostId
	}
	if o.PostStatus != nil {
		toSerialize["postStatus"] = o.PostStatus
	}
	if o.PostedOn != nil {
		toSerialize["postedOn"] = o.PostedOn
	}
	if o.Private != nil {
		toSerialize["private"] = o.Private
	}
	if o.Project != nil {
		toSerialize["project"] = o.Project
	}
	if o.Reactions != nil {
		toSerialize["reactions"] = o.Reactions
	}
	if o.Tags != nil {
		toSerialize["tags"] = o.Tags
	}
	if o.TextBody != nil {
		toSerialize["textBody"] = o.TextBody
	}
	if o.Title != nil {
		toSerialize["title"] = o.Title
	}
	if o.UserDisplayPostedDate != nil {
		toSerialize["userDisplayPostedDate"] = o.UserDisplayPostedDate
	}
	if o.UserDisplayPostedTime != nil {
		toSerialize["userDisplayPostedTime"] = o.UserDisplayPostedTime
	}
	if o.UserFollowing != nil {
		toSerialize["userFollowing"] = o.UserFollowing
	}
	return json.Marshal(toSerialize)
}

type NullableInlineResponse200115 struct {
	value *InlineResponse200115
	isSet bool
}

func (v NullableInlineResponse200115) Get() *InlineResponse200115 {
	return v.value
}

func (v *NullableInlineResponse200115) Set(val *InlineResponse200115) {
	v.value = val
	v.isSet = true
}

func (v NullableInlineResponse200115) IsSet() bool {
	return v.isSet
}

func (v *NullableInlineResponse200115) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableInlineResponse200115(val *InlineResponse200115) *NullableInlineResponse200115 {
	return &NullableInlineResponse200115{value: val, isSet: true}
}

func (v NullableInlineResponse200115) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableInlineResponse200115) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


