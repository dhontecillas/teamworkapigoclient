/*
 * Teamwork.com Projects API
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * API version: 3.0
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package projv3

import (
	"encoding/json"
)

// ViewWorkingHourEntry WorkingHourEntry stores weekday working hour data.
type ViewWorkingHourEntry struct {
	EndTime *string `json:"endTime,omitempty"`
	Id *int32 `json:"id,omitempty"`
	StartTime *string `json:"startTime,omitempty"`
	TaskHours *float32 `json:"taskHours,omitempty"`
	Timezone *string `json:"timezone,omitempty"`
	Weekday *string `json:"weekday,omitempty"`
	WorkingHour *ViewRelationship `json:"workingHour,omitempty"`
	WorkingHourId *int32 `json:"workingHourId,omitempty"`
}

// NewViewWorkingHourEntry instantiates a new ViewWorkingHourEntry object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewViewWorkingHourEntry() *ViewWorkingHourEntry {
	this := ViewWorkingHourEntry{}
	return &this
}

// NewViewWorkingHourEntryWithDefaults instantiates a new ViewWorkingHourEntry object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewViewWorkingHourEntryWithDefaults() *ViewWorkingHourEntry {
	this := ViewWorkingHourEntry{}
	return &this
}

// GetEndTime returns the EndTime field value if set, zero value otherwise.
func (o *ViewWorkingHourEntry) GetEndTime() string {
	if o == nil || o.EndTime == nil {
		var ret string
		return ret
	}
	return *o.EndTime
}

// GetEndTimeOk returns a tuple with the EndTime field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ViewWorkingHourEntry) GetEndTimeOk() (*string, bool) {
	if o == nil || o.EndTime == nil {
		return nil, false
	}
	return o.EndTime, true
}

// HasEndTime returns a boolean if a field has been set.
func (o *ViewWorkingHourEntry) HasEndTime() bool {
	if o != nil && o.EndTime != nil {
		return true
	}

	return false
}

// SetEndTime gets a reference to the given string and assigns it to the EndTime field.
func (o *ViewWorkingHourEntry) SetEndTime(v string) {
	o.EndTime = &v
}

// GetId returns the Id field value if set, zero value otherwise.
func (o *ViewWorkingHourEntry) GetId() int32 {
	if o == nil || o.Id == nil {
		var ret int32
		return ret
	}
	return *o.Id
}

// GetIdOk returns a tuple with the Id field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ViewWorkingHourEntry) GetIdOk() (*int32, bool) {
	if o == nil || o.Id == nil {
		return nil, false
	}
	return o.Id, true
}

// HasId returns a boolean if a field has been set.
func (o *ViewWorkingHourEntry) HasId() bool {
	if o != nil && o.Id != nil {
		return true
	}

	return false
}

// SetId gets a reference to the given int32 and assigns it to the Id field.
func (o *ViewWorkingHourEntry) SetId(v int32) {
	o.Id = &v
}

// GetStartTime returns the StartTime field value if set, zero value otherwise.
func (o *ViewWorkingHourEntry) GetStartTime() string {
	if o == nil || o.StartTime == nil {
		var ret string
		return ret
	}
	return *o.StartTime
}

// GetStartTimeOk returns a tuple with the StartTime field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ViewWorkingHourEntry) GetStartTimeOk() (*string, bool) {
	if o == nil || o.StartTime == nil {
		return nil, false
	}
	return o.StartTime, true
}

// HasStartTime returns a boolean if a field has been set.
func (o *ViewWorkingHourEntry) HasStartTime() bool {
	if o != nil && o.StartTime != nil {
		return true
	}

	return false
}

// SetStartTime gets a reference to the given string and assigns it to the StartTime field.
func (o *ViewWorkingHourEntry) SetStartTime(v string) {
	o.StartTime = &v
}

// GetTaskHours returns the TaskHours field value if set, zero value otherwise.
func (o *ViewWorkingHourEntry) GetTaskHours() float32 {
	if o == nil || o.TaskHours == nil {
		var ret float32
		return ret
	}
	return *o.TaskHours
}

// GetTaskHoursOk returns a tuple with the TaskHours field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ViewWorkingHourEntry) GetTaskHoursOk() (*float32, bool) {
	if o == nil || o.TaskHours == nil {
		return nil, false
	}
	return o.TaskHours, true
}

// HasTaskHours returns a boolean if a field has been set.
func (o *ViewWorkingHourEntry) HasTaskHours() bool {
	if o != nil && o.TaskHours != nil {
		return true
	}

	return false
}

// SetTaskHours gets a reference to the given float32 and assigns it to the TaskHours field.
func (o *ViewWorkingHourEntry) SetTaskHours(v float32) {
	o.TaskHours = &v
}

// GetTimezone returns the Timezone field value if set, zero value otherwise.
func (o *ViewWorkingHourEntry) GetTimezone() string {
	if o == nil || o.Timezone == nil {
		var ret string
		return ret
	}
	return *o.Timezone
}

// GetTimezoneOk returns a tuple with the Timezone field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ViewWorkingHourEntry) GetTimezoneOk() (*string, bool) {
	if o == nil || o.Timezone == nil {
		return nil, false
	}
	return o.Timezone, true
}

// HasTimezone returns a boolean if a field has been set.
func (o *ViewWorkingHourEntry) HasTimezone() bool {
	if o != nil && o.Timezone != nil {
		return true
	}

	return false
}

// SetTimezone gets a reference to the given string and assigns it to the Timezone field.
func (o *ViewWorkingHourEntry) SetTimezone(v string) {
	o.Timezone = &v
}

// GetWeekday returns the Weekday field value if set, zero value otherwise.
func (o *ViewWorkingHourEntry) GetWeekday() string {
	if o == nil || o.Weekday == nil {
		var ret string
		return ret
	}
	return *o.Weekday
}

// GetWeekdayOk returns a tuple with the Weekday field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ViewWorkingHourEntry) GetWeekdayOk() (*string, bool) {
	if o == nil || o.Weekday == nil {
		return nil, false
	}
	return o.Weekday, true
}

// HasWeekday returns a boolean if a field has been set.
func (o *ViewWorkingHourEntry) HasWeekday() bool {
	if o != nil && o.Weekday != nil {
		return true
	}

	return false
}

// SetWeekday gets a reference to the given string and assigns it to the Weekday field.
func (o *ViewWorkingHourEntry) SetWeekday(v string) {
	o.Weekday = &v
}

// GetWorkingHour returns the WorkingHour field value if set, zero value otherwise.
func (o *ViewWorkingHourEntry) GetWorkingHour() ViewRelationship {
	if o == nil || o.WorkingHour == nil {
		var ret ViewRelationship
		return ret
	}
	return *o.WorkingHour
}

// GetWorkingHourOk returns a tuple with the WorkingHour field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ViewWorkingHourEntry) GetWorkingHourOk() (*ViewRelationship, bool) {
	if o == nil || o.WorkingHour == nil {
		return nil, false
	}
	return o.WorkingHour, true
}

// HasWorkingHour returns a boolean if a field has been set.
func (o *ViewWorkingHourEntry) HasWorkingHour() bool {
	if o != nil && o.WorkingHour != nil {
		return true
	}

	return false
}

// SetWorkingHour gets a reference to the given ViewRelationship and assigns it to the WorkingHour field.
func (o *ViewWorkingHourEntry) SetWorkingHour(v ViewRelationship) {
	o.WorkingHour = &v
}

// GetWorkingHourId returns the WorkingHourId field value if set, zero value otherwise.
func (o *ViewWorkingHourEntry) GetWorkingHourId() int32 {
	if o == nil || o.WorkingHourId == nil {
		var ret int32
		return ret
	}
	return *o.WorkingHourId
}

// GetWorkingHourIdOk returns a tuple with the WorkingHourId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ViewWorkingHourEntry) GetWorkingHourIdOk() (*int32, bool) {
	if o == nil || o.WorkingHourId == nil {
		return nil, false
	}
	return o.WorkingHourId, true
}

// HasWorkingHourId returns a boolean if a field has been set.
func (o *ViewWorkingHourEntry) HasWorkingHourId() bool {
	if o != nil && o.WorkingHourId != nil {
		return true
	}

	return false
}

// SetWorkingHourId gets a reference to the given int32 and assigns it to the WorkingHourId field.
func (o *ViewWorkingHourEntry) SetWorkingHourId(v int32) {
	o.WorkingHourId = &v
}

func (o ViewWorkingHourEntry) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.EndTime != nil {
		toSerialize["endTime"] = o.EndTime
	}
	if o.Id != nil {
		toSerialize["id"] = o.Id
	}
	if o.StartTime != nil {
		toSerialize["startTime"] = o.StartTime
	}
	if o.TaskHours != nil {
		toSerialize["taskHours"] = o.TaskHours
	}
	if o.Timezone != nil {
		toSerialize["timezone"] = o.Timezone
	}
	if o.Weekday != nil {
		toSerialize["weekday"] = o.Weekday
	}
	if o.WorkingHour != nil {
		toSerialize["workingHour"] = o.WorkingHour
	}
	if o.WorkingHourId != nil {
		toSerialize["workingHourId"] = o.WorkingHourId
	}
	return json.Marshal(toSerialize)
}

type NullableViewWorkingHourEntry struct {
	value *ViewWorkingHourEntry
	isSet bool
}

func (v NullableViewWorkingHourEntry) Get() *ViewWorkingHourEntry {
	return v.value
}

func (v *NullableViewWorkingHourEntry) Set(val *ViewWorkingHourEntry) {
	v.value = val
	v.isSet = true
}

func (v NullableViewWorkingHourEntry) IsSet() bool {
	return v.isSet
}

func (v *NullableViewWorkingHourEntry) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableViewWorkingHourEntry(val *ViewWorkingHourEntry) *NullableViewWorkingHourEntry {
	return &NullableViewWorkingHourEntry{value: val, isSet: true}
}

func (v NullableViewWorkingHourEntry) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableViewWorkingHourEntry) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


