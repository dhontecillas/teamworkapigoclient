/*
 * Teamwork.com Projects API
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * API version: 3.0
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package projv3

import (
	"encoding/json"
)

// ActivityActivity Activity represents a view of activity.
type ActivityActivity struct {
	ActivityType *string `json:"activityType,omitempty"`
	Company *ViewRelationship `json:"company,omitempty"`
	CompanyId *int32 `json:"companyId,omitempty"`
	DateTime *string `json:"dateTime,omitempty"`
	Description *string `json:"description,omitempty"`
	DueDate *string `json:"dueDate,omitempty"`
	ExtraDescription *string `json:"extraDescription,omitempty"`
	ForUser *ViewRelationship `json:"forUser,omitempty"`
	ForUserId *int32 `json:"forUserId,omitempty"`
	ForUserName *string `json:"forUserName,omitempty"`
	Id *int32 `json:"id,omitempty"`
	IsPrivate *int32 `json:"isPrivate,omitempty"`
	Item *ViewRelationship `json:"item,omitempty"`
	ItemId *int32 `json:"itemId,omitempty"`
	ItemLink *string `json:"itemLink,omitempty"`
	LatestActivityType *string `json:"latestActivityType,omitempty"`
	Link *string `json:"link,omitempty"`
	Lockdown *ViewRelationship `json:"lockdown,omitempty"`
	LockdownId *int32 `json:"lockdownId,omitempty"`
	Project *ViewRelationship `json:"project,omitempty"`
	ProjectId *int32 `json:"projectId,omitempty"`
	PublicInfo *string `json:"publicInfo,omitempty"`
	Type *string `json:"type,omitempty"`
	User *ViewRelationship `json:"user,omitempty"`
	UserId *int32 `json:"userId,omitempty"`
}

// NewActivityActivity instantiates a new ActivityActivity object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewActivityActivity() *ActivityActivity {
	this := ActivityActivity{}
	return &this
}

// NewActivityActivityWithDefaults instantiates a new ActivityActivity object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewActivityActivityWithDefaults() *ActivityActivity {
	this := ActivityActivity{}
	return &this
}

// GetActivityType returns the ActivityType field value if set, zero value otherwise.
func (o *ActivityActivity) GetActivityType() string {
	if o == nil || o.ActivityType == nil {
		var ret string
		return ret
	}
	return *o.ActivityType
}

// GetActivityTypeOk returns a tuple with the ActivityType field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ActivityActivity) GetActivityTypeOk() (*string, bool) {
	if o == nil || o.ActivityType == nil {
		return nil, false
	}
	return o.ActivityType, true
}

// HasActivityType returns a boolean if a field has been set.
func (o *ActivityActivity) HasActivityType() bool {
	if o != nil && o.ActivityType != nil {
		return true
	}

	return false
}

// SetActivityType gets a reference to the given string and assigns it to the ActivityType field.
func (o *ActivityActivity) SetActivityType(v string) {
	o.ActivityType = &v
}

// GetCompany returns the Company field value if set, zero value otherwise.
func (o *ActivityActivity) GetCompany() ViewRelationship {
	if o == nil || o.Company == nil {
		var ret ViewRelationship
		return ret
	}
	return *o.Company
}

// GetCompanyOk returns a tuple with the Company field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ActivityActivity) GetCompanyOk() (*ViewRelationship, bool) {
	if o == nil || o.Company == nil {
		return nil, false
	}
	return o.Company, true
}

// HasCompany returns a boolean if a field has been set.
func (o *ActivityActivity) HasCompany() bool {
	if o != nil && o.Company != nil {
		return true
	}

	return false
}

// SetCompany gets a reference to the given ViewRelationship and assigns it to the Company field.
func (o *ActivityActivity) SetCompany(v ViewRelationship) {
	o.Company = &v
}

// GetCompanyId returns the CompanyId field value if set, zero value otherwise.
func (o *ActivityActivity) GetCompanyId() int32 {
	if o == nil || o.CompanyId == nil {
		var ret int32
		return ret
	}
	return *o.CompanyId
}

// GetCompanyIdOk returns a tuple with the CompanyId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ActivityActivity) GetCompanyIdOk() (*int32, bool) {
	if o == nil || o.CompanyId == nil {
		return nil, false
	}
	return o.CompanyId, true
}

// HasCompanyId returns a boolean if a field has been set.
func (o *ActivityActivity) HasCompanyId() bool {
	if o != nil && o.CompanyId != nil {
		return true
	}

	return false
}

// SetCompanyId gets a reference to the given int32 and assigns it to the CompanyId field.
func (o *ActivityActivity) SetCompanyId(v int32) {
	o.CompanyId = &v
}

// GetDateTime returns the DateTime field value if set, zero value otherwise.
func (o *ActivityActivity) GetDateTime() string {
	if o == nil || o.DateTime == nil {
		var ret string
		return ret
	}
	return *o.DateTime
}

// GetDateTimeOk returns a tuple with the DateTime field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ActivityActivity) GetDateTimeOk() (*string, bool) {
	if o == nil || o.DateTime == nil {
		return nil, false
	}
	return o.DateTime, true
}

// HasDateTime returns a boolean if a field has been set.
func (o *ActivityActivity) HasDateTime() bool {
	if o != nil && o.DateTime != nil {
		return true
	}

	return false
}

// SetDateTime gets a reference to the given string and assigns it to the DateTime field.
func (o *ActivityActivity) SetDateTime(v string) {
	o.DateTime = &v
}

// GetDescription returns the Description field value if set, zero value otherwise.
func (o *ActivityActivity) GetDescription() string {
	if o == nil || o.Description == nil {
		var ret string
		return ret
	}
	return *o.Description
}

// GetDescriptionOk returns a tuple with the Description field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ActivityActivity) GetDescriptionOk() (*string, bool) {
	if o == nil || o.Description == nil {
		return nil, false
	}
	return o.Description, true
}

// HasDescription returns a boolean if a field has been set.
func (o *ActivityActivity) HasDescription() bool {
	if o != nil && o.Description != nil {
		return true
	}

	return false
}

// SetDescription gets a reference to the given string and assigns it to the Description field.
func (o *ActivityActivity) SetDescription(v string) {
	o.Description = &v
}

// GetDueDate returns the DueDate field value if set, zero value otherwise.
func (o *ActivityActivity) GetDueDate() string {
	if o == nil || o.DueDate == nil {
		var ret string
		return ret
	}
	return *o.DueDate
}

// GetDueDateOk returns a tuple with the DueDate field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ActivityActivity) GetDueDateOk() (*string, bool) {
	if o == nil || o.DueDate == nil {
		return nil, false
	}
	return o.DueDate, true
}

// HasDueDate returns a boolean if a field has been set.
func (o *ActivityActivity) HasDueDate() bool {
	if o != nil && o.DueDate != nil {
		return true
	}

	return false
}

// SetDueDate gets a reference to the given string and assigns it to the DueDate field.
func (o *ActivityActivity) SetDueDate(v string) {
	o.DueDate = &v
}

// GetExtraDescription returns the ExtraDescription field value if set, zero value otherwise.
func (o *ActivityActivity) GetExtraDescription() string {
	if o == nil || o.ExtraDescription == nil {
		var ret string
		return ret
	}
	return *o.ExtraDescription
}

// GetExtraDescriptionOk returns a tuple with the ExtraDescription field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ActivityActivity) GetExtraDescriptionOk() (*string, bool) {
	if o == nil || o.ExtraDescription == nil {
		return nil, false
	}
	return o.ExtraDescription, true
}

// HasExtraDescription returns a boolean if a field has been set.
func (o *ActivityActivity) HasExtraDescription() bool {
	if o != nil && o.ExtraDescription != nil {
		return true
	}

	return false
}

// SetExtraDescription gets a reference to the given string and assigns it to the ExtraDescription field.
func (o *ActivityActivity) SetExtraDescription(v string) {
	o.ExtraDescription = &v
}

// GetForUser returns the ForUser field value if set, zero value otherwise.
func (o *ActivityActivity) GetForUser() ViewRelationship {
	if o == nil || o.ForUser == nil {
		var ret ViewRelationship
		return ret
	}
	return *o.ForUser
}

// GetForUserOk returns a tuple with the ForUser field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ActivityActivity) GetForUserOk() (*ViewRelationship, bool) {
	if o == nil || o.ForUser == nil {
		return nil, false
	}
	return o.ForUser, true
}

// HasForUser returns a boolean if a field has been set.
func (o *ActivityActivity) HasForUser() bool {
	if o != nil && o.ForUser != nil {
		return true
	}

	return false
}

// SetForUser gets a reference to the given ViewRelationship and assigns it to the ForUser field.
func (o *ActivityActivity) SetForUser(v ViewRelationship) {
	o.ForUser = &v
}

// GetForUserId returns the ForUserId field value if set, zero value otherwise.
func (o *ActivityActivity) GetForUserId() int32 {
	if o == nil || o.ForUserId == nil {
		var ret int32
		return ret
	}
	return *o.ForUserId
}

// GetForUserIdOk returns a tuple with the ForUserId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ActivityActivity) GetForUserIdOk() (*int32, bool) {
	if o == nil || o.ForUserId == nil {
		return nil, false
	}
	return o.ForUserId, true
}

// HasForUserId returns a boolean if a field has been set.
func (o *ActivityActivity) HasForUserId() bool {
	if o != nil && o.ForUserId != nil {
		return true
	}

	return false
}

// SetForUserId gets a reference to the given int32 and assigns it to the ForUserId field.
func (o *ActivityActivity) SetForUserId(v int32) {
	o.ForUserId = &v
}

// GetForUserName returns the ForUserName field value if set, zero value otherwise.
func (o *ActivityActivity) GetForUserName() string {
	if o == nil || o.ForUserName == nil {
		var ret string
		return ret
	}
	return *o.ForUserName
}

// GetForUserNameOk returns a tuple with the ForUserName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ActivityActivity) GetForUserNameOk() (*string, bool) {
	if o == nil || o.ForUserName == nil {
		return nil, false
	}
	return o.ForUserName, true
}

// HasForUserName returns a boolean if a field has been set.
func (o *ActivityActivity) HasForUserName() bool {
	if o != nil && o.ForUserName != nil {
		return true
	}

	return false
}

// SetForUserName gets a reference to the given string and assigns it to the ForUserName field.
func (o *ActivityActivity) SetForUserName(v string) {
	o.ForUserName = &v
}

// GetId returns the Id field value if set, zero value otherwise.
func (o *ActivityActivity) GetId() int32 {
	if o == nil || o.Id == nil {
		var ret int32
		return ret
	}
	return *o.Id
}

// GetIdOk returns a tuple with the Id field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ActivityActivity) GetIdOk() (*int32, bool) {
	if o == nil || o.Id == nil {
		return nil, false
	}
	return o.Id, true
}

// HasId returns a boolean if a field has been set.
func (o *ActivityActivity) HasId() bool {
	if o != nil && o.Id != nil {
		return true
	}

	return false
}

// SetId gets a reference to the given int32 and assigns it to the Id field.
func (o *ActivityActivity) SetId(v int32) {
	o.Id = &v
}

// GetIsPrivate returns the IsPrivate field value if set, zero value otherwise.
func (o *ActivityActivity) GetIsPrivate() int32 {
	if o == nil || o.IsPrivate == nil {
		var ret int32
		return ret
	}
	return *o.IsPrivate
}

// GetIsPrivateOk returns a tuple with the IsPrivate field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ActivityActivity) GetIsPrivateOk() (*int32, bool) {
	if o == nil || o.IsPrivate == nil {
		return nil, false
	}
	return o.IsPrivate, true
}

// HasIsPrivate returns a boolean if a field has been set.
func (o *ActivityActivity) HasIsPrivate() bool {
	if o != nil && o.IsPrivate != nil {
		return true
	}

	return false
}

// SetIsPrivate gets a reference to the given int32 and assigns it to the IsPrivate field.
func (o *ActivityActivity) SetIsPrivate(v int32) {
	o.IsPrivate = &v
}

// GetItem returns the Item field value if set, zero value otherwise.
func (o *ActivityActivity) GetItem() ViewRelationship {
	if o == nil || o.Item == nil {
		var ret ViewRelationship
		return ret
	}
	return *o.Item
}

// GetItemOk returns a tuple with the Item field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ActivityActivity) GetItemOk() (*ViewRelationship, bool) {
	if o == nil || o.Item == nil {
		return nil, false
	}
	return o.Item, true
}

// HasItem returns a boolean if a field has been set.
func (o *ActivityActivity) HasItem() bool {
	if o != nil && o.Item != nil {
		return true
	}

	return false
}

// SetItem gets a reference to the given ViewRelationship and assigns it to the Item field.
func (o *ActivityActivity) SetItem(v ViewRelationship) {
	o.Item = &v
}

// GetItemId returns the ItemId field value if set, zero value otherwise.
func (o *ActivityActivity) GetItemId() int32 {
	if o == nil || o.ItemId == nil {
		var ret int32
		return ret
	}
	return *o.ItemId
}

// GetItemIdOk returns a tuple with the ItemId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ActivityActivity) GetItemIdOk() (*int32, bool) {
	if o == nil || o.ItemId == nil {
		return nil, false
	}
	return o.ItemId, true
}

// HasItemId returns a boolean if a field has been set.
func (o *ActivityActivity) HasItemId() bool {
	if o != nil && o.ItemId != nil {
		return true
	}

	return false
}

// SetItemId gets a reference to the given int32 and assigns it to the ItemId field.
func (o *ActivityActivity) SetItemId(v int32) {
	o.ItemId = &v
}

// GetItemLink returns the ItemLink field value if set, zero value otherwise.
func (o *ActivityActivity) GetItemLink() string {
	if o == nil || o.ItemLink == nil {
		var ret string
		return ret
	}
	return *o.ItemLink
}

// GetItemLinkOk returns a tuple with the ItemLink field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ActivityActivity) GetItemLinkOk() (*string, bool) {
	if o == nil || o.ItemLink == nil {
		return nil, false
	}
	return o.ItemLink, true
}

// HasItemLink returns a boolean if a field has been set.
func (o *ActivityActivity) HasItemLink() bool {
	if o != nil && o.ItemLink != nil {
		return true
	}

	return false
}

// SetItemLink gets a reference to the given string and assigns it to the ItemLink field.
func (o *ActivityActivity) SetItemLink(v string) {
	o.ItemLink = &v
}

// GetLatestActivityType returns the LatestActivityType field value if set, zero value otherwise.
func (o *ActivityActivity) GetLatestActivityType() string {
	if o == nil || o.LatestActivityType == nil {
		var ret string
		return ret
	}
	return *o.LatestActivityType
}

// GetLatestActivityTypeOk returns a tuple with the LatestActivityType field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ActivityActivity) GetLatestActivityTypeOk() (*string, bool) {
	if o == nil || o.LatestActivityType == nil {
		return nil, false
	}
	return o.LatestActivityType, true
}

// HasLatestActivityType returns a boolean if a field has been set.
func (o *ActivityActivity) HasLatestActivityType() bool {
	if o != nil && o.LatestActivityType != nil {
		return true
	}

	return false
}

// SetLatestActivityType gets a reference to the given string and assigns it to the LatestActivityType field.
func (o *ActivityActivity) SetLatestActivityType(v string) {
	o.LatestActivityType = &v
}

// GetLink returns the Link field value if set, zero value otherwise.
func (o *ActivityActivity) GetLink() string {
	if o == nil || o.Link == nil {
		var ret string
		return ret
	}
	return *o.Link
}

// GetLinkOk returns a tuple with the Link field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ActivityActivity) GetLinkOk() (*string, bool) {
	if o == nil || o.Link == nil {
		return nil, false
	}
	return o.Link, true
}

// HasLink returns a boolean if a field has been set.
func (o *ActivityActivity) HasLink() bool {
	if o != nil && o.Link != nil {
		return true
	}

	return false
}

// SetLink gets a reference to the given string and assigns it to the Link field.
func (o *ActivityActivity) SetLink(v string) {
	o.Link = &v
}

// GetLockdown returns the Lockdown field value if set, zero value otherwise.
func (o *ActivityActivity) GetLockdown() ViewRelationship {
	if o == nil || o.Lockdown == nil {
		var ret ViewRelationship
		return ret
	}
	return *o.Lockdown
}

// GetLockdownOk returns a tuple with the Lockdown field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ActivityActivity) GetLockdownOk() (*ViewRelationship, bool) {
	if o == nil || o.Lockdown == nil {
		return nil, false
	}
	return o.Lockdown, true
}

// HasLockdown returns a boolean if a field has been set.
func (o *ActivityActivity) HasLockdown() bool {
	if o != nil && o.Lockdown != nil {
		return true
	}

	return false
}

// SetLockdown gets a reference to the given ViewRelationship and assigns it to the Lockdown field.
func (o *ActivityActivity) SetLockdown(v ViewRelationship) {
	o.Lockdown = &v
}

// GetLockdownId returns the LockdownId field value if set, zero value otherwise.
func (o *ActivityActivity) GetLockdownId() int32 {
	if o == nil || o.LockdownId == nil {
		var ret int32
		return ret
	}
	return *o.LockdownId
}

// GetLockdownIdOk returns a tuple with the LockdownId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ActivityActivity) GetLockdownIdOk() (*int32, bool) {
	if o == nil || o.LockdownId == nil {
		return nil, false
	}
	return o.LockdownId, true
}

// HasLockdownId returns a boolean if a field has been set.
func (o *ActivityActivity) HasLockdownId() bool {
	if o != nil && o.LockdownId != nil {
		return true
	}

	return false
}

// SetLockdownId gets a reference to the given int32 and assigns it to the LockdownId field.
func (o *ActivityActivity) SetLockdownId(v int32) {
	o.LockdownId = &v
}

// GetProject returns the Project field value if set, zero value otherwise.
func (o *ActivityActivity) GetProject() ViewRelationship {
	if o == nil || o.Project == nil {
		var ret ViewRelationship
		return ret
	}
	return *o.Project
}

// GetProjectOk returns a tuple with the Project field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ActivityActivity) GetProjectOk() (*ViewRelationship, bool) {
	if o == nil || o.Project == nil {
		return nil, false
	}
	return o.Project, true
}

// HasProject returns a boolean if a field has been set.
func (o *ActivityActivity) HasProject() bool {
	if o != nil && o.Project != nil {
		return true
	}

	return false
}

// SetProject gets a reference to the given ViewRelationship and assigns it to the Project field.
func (o *ActivityActivity) SetProject(v ViewRelationship) {
	o.Project = &v
}

// GetProjectId returns the ProjectId field value if set, zero value otherwise.
func (o *ActivityActivity) GetProjectId() int32 {
	if o == nil || o.ProjectId == nil {
		var ret int32
		return ret
	}
	return *o.ProjectId
}

// GetProjectIdOk returns a tuple with the ProjectId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ActivityActivity) GetProjectIdOk() (*int32, bool) {
	if o == nil || o.ProjectId == nil {
		return nil, false
	}
	return o.ProjectId, true
}

// HasProjectId returns a boolean if a field has been set.
func (o *ActivityActivity) HasProjectId() bool {
	if o != nil && o.ProjectId != nil {
		return true
	}

	return false
}

// SetProjectId gets a reference to the given int32 and assigns it to the ProjectId field.
func (o *ActivityActivity) SetProjectId(v int32) {
	o.ProjectId = &v
}

// GetPublicInfo returns the PublicInfo field value if set, zero value otherwise.
func (o *ActivityActivity) GetPublicInfo() string {
	if o == nil || o.PublicInfo == nil {
		var ret string
		return ret
	}
	return *o.PublicInfo
}

// GetPublicInfoOk returns a tuple with the PublicInfo field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ActivityActivity) GetPublicInfoOk() (*string, bool) {
	if o == nil || o.PublicInfo == nil {
		return nil, false
	}
	return o.PublicInfo, true
}

// HasPublicInfo returns a boolean if a field has been set.
func (o *ActivityActivity) HasPublicInfo() bool {
	if o != nil && o.PublicInfo != nil {
		return true
	}

	return false
}

// SetPublicInfo gets a reference to the given string and assigns it to the PublicInfo field.
func (o *ActivityActivity) SetPublicInfo(v string) {
	o.PublicInfo = &v
}

// GetType returns the Type field value if set, zero value otherwise.
func (o *ActivityActivity) GetType() string {
	if o == nil || o.Type == nil {
		var ret string
		return ret
	}
	return *o.Type
}

// GetTypeOk returns a tuple with the Type field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ActivityActivity) GetTypeOk() (*string, bool) {
	if o == nil || o.Type == nil {
		return nil, false
	}
	return o.Type, true
}

// HasType returns a boolean if a field has been set.
func (o *ActivityActivity) HasType() bool {
	if o != nil && o.Type != nil {
		return true
	}

	return false
}

// SetType gets a reference to the given string and assigns it to the Type field.
func (o *ActivityActivity) SetType(v string) {
	o.Type = &v
}

// GetUser returns the User field value if set, zero value otherwise.
func (o *ActivityActivity) GetUser() ViewRelationship {
	if o == nil || o.User == nil {
		var ret ViewRelationship
		return ret
	}
	return *o.User
}

// GetUserOk returns a tuple with the User field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ActivityActivity) GetUserOk() (*ViewRelationship, bool) {
	if o == nil || o.User == nil {
		return nil, false
	}
	return o.User, true
}

// HasUser returns a boolean if a field has been set.
func (o *ActivityActivity) HasUser() bool {
	if o != nil && o.User != nil {
		return true
	}

	return false
}

// SetUser gets a reference to the given ViewRelationship and assigns it to the User field.
func (o *ActivityActivity) SetUser(v ViewRelationship) {
	o.User = &v
}

// GetUserId returns the UserId field value if set, zero value otherwise.
func (o *ActivityActivity) GetUserId() int32 {
	if o == nil || o.UserId == nil {
		var ret int32
		return ret
	}
	return *o.UserId
}

// GetUserIdOk returns a tuple with the UserId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ActivityActivity) GetUserIdOk() (*int32, bool) {
	if o == nil || o.UserId == nil {
		return nil, false
	}
	return o.UserId, true
}

// HasUserId returns a boolean if a field has been set.
func (o *ActivityActivity) HasUserId() bool {
	if o != nil && o.UserId != nil {
		return true
	}

	return false
}

// SetUserId gets a reference to the given int32 and assigns it to the UserId field.
func (o *ActivityActivity) SetUserId(v int32) {
	o.UserId = &v
}

func (o ActivityActivity) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.ActivityType != nil {
		toSerialize["activityType"] = o.ActivityType
	}
	if o.Company != nil {
		toSerialize["company"] = o.Company
	}
	if o.CompanyId != nil {
		toSerialize["companyId"] = o.CompanyId
	}
	if o.DateTime != nil {
		toSerialize["dateTime"] = o.DateTime
	}
	if o.Description != nil {
		toSerialize["description"] = o.Description
	}
	if o.DueDate != nil {
		toSerialize["dueDate"] = o.DueDate
	}
	if o.ExtraDescription != nil {
		toSerialize["extraDescription"] = o.ExtraDescription
	}
	if o.ForUser != nil {
		toSerialize["forUser"] = o.ForUser
	}
	if o.ForUserId != nil {
		toSerialize["forUserId"] = o.ForUserId
	}
	if o.ForUserName != nil {
		toSerialize["forUserName"] = o.ForUserName
	}
	if o.Id != nil {
		toSerialize["id"] = o.Id
	}
	if o.IsPrivate != nil {
		toSerialize["isPrivate"] = o.IsPrivate
	}
	if o.Item != nil {
		toSerialize["item"] = o.Item
	}
	if o.ItemId != nil {
		toSerialize["itemId"] = o.ItemId
	}
	if o.ItemLink != nil {
		toSerialize["itemLink"] = o.ItemLink
	}
	if o.LatestActivityType != nil {
		toSerialize["latestActivityType"] = o.LatestActivityType
	}
	if o.Link != nil {
		toSerialize["link"] = o.Link
	}
	if o.Lockdown != nil {
		toSerialize["lockdown"] = o.Lockdown
	}
	if o.LockdownId != nil {
		toSerialize["lockdownId"] = o.LockdownId
	}
	if o.Project != nil {
		toSerialize["project"] = o.Project
	}
	if o.ProjectId != nil {
		toSerialize["projectId"] = o.ProjectId
	}
	if o.PublicInfo != nil {
		toSerialize["publicInfo"] = o.PublicInfo
	}
	if o.Type != nil {
		toSerialize["type"] = o.Type
	}
	if o.User != nil {
		toSerialize["user"] = o.User
	}
	if o.UserId != nil {
		toSerialize["userId"] = o.UserId
	}
	return json.Marshal(toSerialize)
}

type NullableActivityActivity struct {
	value *ActivityActivity
	isSet bool
}

func (v NullableActivityActivity) Get() *ActivityActivity {
	return v.value
}

func (v *NullableActivityActivity) Set(val *ActivityActivity) {
	v.value = val
	v.isSet = true
}

func (v NullableActivityActivity) IsSet() bool {
	return v.isSet
}

func (v *NullableActivityActivity) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableActivityActivity(val *ActivityActivity) *NullableActivityActivity {
	return &NullableActivityActivity{value: val, isSet: true}
}

func (v NullableActivityActivity) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableActivityActivity) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


