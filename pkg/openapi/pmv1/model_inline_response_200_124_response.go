/*
 * Teamwork Projects API
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * API version: 
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package pmv1

import (
	"encoding/json"
)

// InlineResponse200124Response struct for InlineResponse200124Response
type InlineResponse200124Response struct {
	Body *string `json:"body,omitempty"`
	Code *string `json:"code,omitempty"`
	Headers *string `json:"headers,omitempty"`
}

// NewInlineResponse200124Response instantiates a new InlineResponse200124Response object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewInlineResponse200124Response() *InlineResponse200124Response {
	this := InlineResponse200124Response{}
	return &this
}

// NewInlineResponse200124ResponseWithDefaults instantiates a new InlineResponse200124Response object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewInlineResponse200124ResponseWithDefaults() *InlineResponse200124Response {
	this := InlineResponse200124Response{}
	return &this
}

// GetBody returns the Body field value if set, zero value otherwise.
func (o *InlineResponse200124Response) GetBody() string {
	if o == nil || o.Body == nil {
		var ret string
		return ret
	}
	return *o.Body
}

// GetBodyOk returns a tuple with the Body field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InlineResponse200124Response) GetBodyOk() (*string, bool) {
	if o == nil || o.Body == nil {
		return nil, false
	}
	return o.Body, true
}

// HasBody returns a boolean if a field has been set.
func (o *InlineResponse200124Response) HasBody() bool {
	if o != nil && o.Body != nil {
		return true
	}

	return false
}

// SetBody gets a reference to the given string and assigns it to the Body field.
func (o *InlineResponse200124Response) SetBody(v string) {
	o.Body = &v
}

// GetCode returns the Code field value if set, zero value otherwise.
func (o *InlineResponse200124Response) GetCode() string {
	if o == nil || o.Code == nil {
		var ret string
		return ret
	}
	return *o.Code
}

// GetCodeOk returns a tuple with the Code field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InlineResponse200124Response) GetCodeOk() (*string, bool) {
	if o == nil || o.Code == nil {
		return nil, false
	}
	return o.Code, true
}

// HasCode returns a boolean if a field has been set.
func (o *InlineResponse200124Response) HasCode() bool {
	if o != nil && o.Code != nil {
		return true
	}

	return false
}

// SetCode gets a reference to the given string and assigns it to the Code field.
func (o *InlineResponse200124Response) SetCode(v string) {
	o.Code = &v
}

// GetHeaders returns the Headers field value if set, zero value otherwise.
func (o *InlineResponse200124Response) GetHeaders() string {
	if o == nil || o.Headers == nil {
		var ret string
		return ret
	}
	return *o.Headers
}

// GetHeadersOk returns a tuple with the Headers field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InlineResponse200124Response) GetHeadersOk() (*string, bool) {
	if o == nil || o.Headers == nil {
		return nil, false
	}
	return o.Headers, true
}

// HasHeaders returns a boolean if a field has been set.
func (o *InlineResponse200124Response) HasHeaders() bool {
	if o != nil && o.Headers != nil {
		return true
	}

	return false
}

// SetHeaders gets a reference to the given string and assigns it to the Headers field.
func (o *InlineResponse200124Response) SetHeaders(v string) {
	o.Headers = &v
}

func (o InlineResponse200124Response) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.Body != nil {
		toSerialize["body"] = o.Body
	}
	if o.Code != nil {
		toSerialize["code"] = o.Code
	}
	if o.Headers != nil {
		toSerialize["headers"] = o.Headers
	}
	return json.Marshal(toSerialize)
}

type NullableInlineResponse200124Response struct {
	value *InlineResponse200124Response
	isSet bool
}

func (v NullableInlineResponse200124Response) Get() *InlineResponse200124Response {
	return v.value
}

func (v *NullableInlineResponse200124Response) Set(val *InlineResponse200124Response) {
	v.value = val
	v.isSet = true
}

func (v NullableInlineResponse200124Response) IsSet() bool {
	return v.isSet
}

func (v *NullableInlineResponse200124Response) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableInlineResponse200124Response(val *InlineResponse200124Response) *NullableInlineResponse200124Response {
	return &NullableInlineResponse200124Response{value: val, isSet: true}
}

func (v NullableInlineResponse200124Response) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableInlineResponse200124Response) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


